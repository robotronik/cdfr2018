ARM GAS  /tmp/cc3uuGnG.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"fsm_position_abs.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.CHANNEL_OFFSET_TAB,"a",%progbits
  18              		.align	2
  21              	CHANNEL_OFFSET_TAB:
  22 0000 08       		.byte	8
  23 0001 1C       		.byte	28
  24 0002 30       		.byte	48
  25 0003 44       		.byte	68
  26 0004 58       		.byte	88
  27 0005 6C       		.byte	108
  28 0006 80       		.byte	-128
  29              		.section	.text.FSM_Pos_Init,"ax",%progbits
  30              		.align	1
  31              		.global	FSM_Pos_Init
  32              		.syntax unified
  33              		.thumb
  34              		.thumb_func
  35              		.fpu fpv4-sp-d16
  37              	FSM_Pos_Init:
  38              	.LFB728:
  39              		.file 1 "Src/fsm_position_abs.c"
   1:Src/fsm_position_abs.c **** #include "fsm_position_abs.h"
   2:Src/fsm_position_abs.c **** //http://manubatbat.free.fr/doc/positionning/node5.html
   3:Src/fsm_position_abs.c **** 
   4:Src/fsm_position_abs.c **** extern PID_DATA pid_sum;
   5:Src/fsm_position_abs.c **** extern PID_DATA pid_diff;
   6:Src/fsm_position_abs.c **** extern int sum_goal;
   7:Src/fsm_position_abs.c **** extern int diff_goal;
   8:Src/fsm_position_abs.c **** extern Odometry odometry;
   9:Src/fsm_position_abs.c **** 
  10:Src/fsm_position_abs.c **** extern volatile int ENCODER_DIST;//distance between encoders
  11:Src/fsm_position_abs.c **** extern volatile int ENCODER_STEP_DIST;//distance for 1 encoder step/2
  12:Src/fsm_position_abs.c **** extern volatile int deltaL;
  13:Src/fsm_position_abs.c **** 
  14:Src/fsm_position_abs.c **** void FSM_Pos_Init(FSM_Instance *fsm)
  15:Src/fsm_position_abs.c **** {
  40              		.loc 1 15 0
  41              		.cfi_startproc
  42              		@ args = 0, pretend = 0, frame = 16
  43              		@ frame_needed = 1, uses_anonymous_args = 0
  44              		@ link register save eliminated.
  45 0000 80B4     		push	{r7}
ARM GAS  /tmp/cc3uuGnG.s 			page 2


  46              	.LCFI0:
  47              		.cfi_def_cfa_offset 4
  48              		.cfi_offset 7, -4
  49 0002 85B0     		sub	sp, sp, #20
  50              	.LCFI1:
  51              		.cfi_def_cfa_offset 24
  52 0004 00AF     		add	r7, sp, #0
  53              	.LCFI2:
  54              		.cfi_def_cfa_register 7
  55 0006 7860     		str	r0, [r7, #4]
  16:Src/fsm_position_abs.c ****   FSM_Position_Abs *fsm_pos=(FSM_Position_Abs *) fsm;
  56              		.loc 1 16 0
  57 0008 7B68     		ldr	r3, [r7, #4]
  58 000a FB60     		str	r3, [r7, #12]
  17:Src/fsm_position_abs.c ****   fsm->status=FSM_RUNNING;
  59              		.loc 1 17 0
  60 000c 7B68     		ldr	r3, [r7, #4]
  61 000e 0022     		movs	r2, #0
  62 0010 1A71     		strb	r2, [r3, #4]
  18:Src/fsm_position_abs.c ****   fsm_pos->n=0;
  63              		.loc 1 18 0
  64 0012 FB68     		ldr	r3, [r7, #12]
  65 0014 0022     		movs	r2, #0
  66 0016 5A62     		str	r2, [r3, #36]
  19:Src/fsm_position_abs.c ****   fsm_pos->initial_sum=sum_goal;
  67              		.loc 1 19 0
  68 0018 064B     		ldr	r3, .L2
  69 001a 1A68     		ldr	r2, [r3]
  70 001c FB68     		ldr	r3, [r7, #12]
  71 001e 9A62     		str	r2, [r3, #40]
  20:Src/fsm_position_abs.c ****   fsm->run=FSM_Pos_Generator;
  72              		.loc 1 20 0
  73 0020 7B68     		ldr	r3, [r7, #4]
  74 0022 054A     		ldr	r2, .L2+4
  75 0024 1A60     		str	r2, [r3]
  21:Src/fsm_position_abs.c **** }
  76              		.loc 1 21 0
  77 0026 00BF     		nop
  78 0028 1437     		adds	r7, r7, #20
  79              	.LCFI3:
  80              		.cfi_def_cfa_offset 4
  81 002a BD46     		mov	sp, r7
  82              	.LCFI4:
  83              		.cfi_def_cfa_register 13
  84              		@ sp needed
  85 002c 5DF8047B 		ldr	r7, [sp], #4
  86              	.LCFI5:
  87              		.cfi_restore 7
  88              		.cfi_def_cfa_offset 0
  89 0030 7047     		bx	lr
  90              	.L3:
  91 0032 00BF     		.align	2
  92              	.L2:
  93 0034 00000000 		.word	sum_goal
  94 0038 00000000 		.word	FSM_Pos_Generator
  95              		.cfi_endproc
  96              	.LFE728:
ARM GAS  /tmp/cc3uuGnG.s 			page 3


  98              		.section	.text.FSM_Pos_Generator,"ax",%progbits
  99              		.align	1
 100              		.global	FSM_Pos_Generator
 101              		.syntax unified
 102              		.thumb
 103              		.thumb_func
 104              		.fpu fpv4-sp-d16
 106              	FSM_Pos_Generator:
 107              	.LFB729:
  22:Src/fsm_position_abs.c **** 
  23:Src/fsm_position_abs.c **** void FSM_Pos_Generator(FSM_Instance *fsm)
  24:Src/fsm_position_abs.c **** {
 108              		.loc 1 24 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 16
 111              		@ frame_needed = 1, uses_anonymous_args = 0
 112              		@ link register save eliminated.
 113 0000 80B4     		push	{r7}
 114              	.LCFI6:
 115              		.cfi_def_cfa_offset 4
 116              		.cfi_offset 7, -4
 117 0002 85B0     		sub	sp, sp, #20
 118              	.LCFI7:
 119              		.cfi_def_cfa_offset 24
 120 0004 00AF     		add	r7, sp, #0
 121              	.LCFI8:
 122              		.cfi_def_cfa_register 7
 123 0006 7860     		str	r0, [r7, #4]
  25:Src/fsm_position_abs.c ****   FSM_Position_Abs *fsm_pos=(FSM_Position_Abs *) fsm;
 124              		.loc 1 25 0
 125 0008 7B68     		ldr	r3, [r7, #4]
 126 000a FB60     		str	r3, [r7, #12]
  26:Src/fsm_position_abs.c ****   if(fsm_pos->pos/fsm_pos->linear_speed >fsm_pos->n*pid_sum.Te)
 127              		.loc 1 26 0
 128 000c FB68     		ldr	r3, [r7, #12]
 129 000e D3ED046A 		vldr.32	s13, [r3, #16]
 130 0012 FB68     		ldr	r3, [r7, #12]
 131 0014 D3ED057A 		vldr.32	s15, [r3, #20]
 132 0018 86EEA77A 		vdiv.f32	s14, s13, s15
 133 001c FB68     		ldr	r3, [r7, #12]
 134 001e 5B6A     		ldr	r3, [r3, #36]
 135 0020 07EE903A 		vmov	s15, r3	@ int
 136 0024 F8EEE76A 		vcvt.f32.s32	s13, s15
 137 0028 2B4B     		ldr	r3, .L11
 138 002a D3ED057A 		vldr.32	s15, [r3, #20]
 139 002e 66EEA77A 		vmul.f32	s15, s13, s15
 140 0032 B4EEE77A 		vcmpe.f32	s14, s15
 141 0036 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 142 003a 2BDD     		ble	.L9
  27:Src/fsm_position_abs.c ****   {
  28:Src/fsm_position_abs.c ****     sum_goal=fsm_pos->initial_sum+fsm_pos->n*fsm_pos->linear_speed*pid_sum.Te/ENCODER_STEP_DIST;
 143              		.loc 1 28 0
 144 003c FB68     		ldr	r3, [r7, #12]
 145 003e 9B6A     		ldr	r3, [r3, #40]
 146 0040 07EE903A 		vmov	s15, r3	@ int
 147 0044 B8EEE77A 		vcvt.f32.s32	s14, s15
 148 0048 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cc3uuGnG.s 			page 4


 149 004a 5B6A     		ldr	r3, [r3, #36]
 150 004c 07EE903A 		vmov	s15, r3	@ int
 151 0050 F8EEE76A 		vcvt.f32.s32	s13, s15
 152 0054 FB68     		ldr	r3, [r7, #12]
 153 0056 D3ED057A 		vldr.32	s15, [r3, #20]
 154 005a 66EEA76A 		vmul.f32	s13, s13, s15
 155 005e 1E4B     		ldr	r3, .L11
 156 0060 D3ED057A 		vldr.32	s15, [r3, #20]
 157 0064 26EEA76A 		vmul.f32	s12, s13, s15
 158 0068 1C4B     		ldr	r3, .L11+4
 159 006a 1B68     		ldr	r3, [r3]
 160 006c 07EE903A 		vmov	s15, r3	@ int
 161 0070 F8EEE76A 		vcvt.f32.s32	s13, s15
 162 0074 C6EE267A 		vdiv.f32	s15, s12, s13
 163 0078 77EE277A 		vadd.f32	s15, s14, s15
 164 007c FDEEE77A 		vcvt.s32.f32	s15, s15
 165 0080 17EE902A 		vmov	r2, s15	@ int
 166 0084 164B     		ldr	r3, .L11+8
 167 0086 1A60     		str	r2, [r3]
  29:Src/fsm_position_abs.c ****     fsm_pos->n++;
 168              		.loc 1 29 0
 169 0088 FB68     		ldr	r3, [r7, #12]
 170 008a 5B6A     		ldr	r3, [r3, #36]
 171 008c 5A1C     		adds	r2, r3, #1
 172 008e FB68     		ldr	r3, [r7, #12]
 173 0090 5A62     		str	r2, [r3, #36]
  30:Src/fsm_position_abs.c ****   }
  31:Src/fsm_position_abs.c ****   else
  32:Src/fsm_position_abs.c ****   {
  33:Src/fsm_position_abs.c ****     sum_goal=fsm_pos->initial_sum+fsm_pos->pos/ENCODER_STEP_DIST;
  34:Src/fsm_position_abs.c ****     fsm->run=FSM_Pos_Wait;
  35:Src/fsm_position_abs.c ****   }
  36:Src/fsm_position_abs.c **** }
 174              		.loc 1 36 0
 175 0092 1BE0     		b	.L10
 176              	.L9:
  33:Src/fsm_position_abs.c ****     fsm->run=FSM_Pos_Wait;
 177              		.loc 1 33 0
 178 0094 FB68     		ldr	r3, [r7, #12]
 179 0096 9B6A     		ldr	r3, [r3, #40]
 180 0098 07EE903A 		vmov	s15, r3	@ int
 181 009c B8EEE77A 		vcvt.f32.s32	s14, s15
 182 00a0 FB68     		ldr	r3, [r7, #12]
 183 00a2 93ED046A 		vldr.32	s12, [r3, #16]
 184 00a6 0D4B     		ldr	r3, .L11+4
 185 00a8 1B68     		ldr	r3, [r3]
 186 00aa 07EE903A 		vmov	s15, r3	@ int
 187 00ae F8EEE76A 		vcvt.f32.s32	s13, s15
 188 00b2 C6EE267A 		vdiv.f32	s15, s12, s13
 189 00b6 77EE277A 		vadd.f32	s15, s14, s15
 190 00ba FDEEE77A 		vcvt.s32.f32	s15, s15
 191 00be 17EE902A 		vmov	r2, s15	@ int
 192 00c2 074B     		ldr	r3, .L11+8
 193 00c4 1A60     		str	r2, [r3]
  34:Src/fsm_position_abs.c ****   }
 194              		.loc 1 34 0
 195 00c6 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc3uuGnG.s 			page 5


 196 00c8 064A     		ldr	r2, .L11+12
 197 00ca 1A60     		str	r2, [r3]
 198              	.L10:
 199              		.loc 1 36 0
 200 00cc 00BF     		nop
 201 00ce 1437     		adds	r7, r7, #20
 202              	.LCFI9:
 203              		.cfi_def_cfa_offset 4
 204 00d0 BD46     		mov	sp, r7
 205              	.LCFI10:
 206              		.cfi_def_cfa_register 13
 207              		@ sp needed
 208 00d2 5DF8047B 		ldr	r7, [sp], #4
 209              	.LCFI11:
 210              		.cfi_restore 7
 211              		.cfi_def_cfa_offset 0
 212 00d6 7047     		bx	lr
 213              	.L12:
 214              		.align	2
 215              	.L11:
 216 00d8 00000000 		.word	pid_sum
 217 00dc 00000000 		.word	ENCODER_STEP_DIST
 218 00e0 00000000 		.word	sum_goal
 219 00e4 00000000 		.word	FSM_Pos_Wait
 220              		.cfi_endproc
 221              	.LFE729:
 223              		.global	__aeabi_i2d
 224              		.global	__aeabi_dmul
 225              		.global	__aeabi_dsub
 226              		.global	__aeabi_d2iz
 227              		.section	.text.FSM_Pos_Wait,"ax",%progbits
 228              		.align	1
 229              		.global	FSM_Pos_Wait
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 233              		.fpu fpv4-sp-d16
 235              	FSM_Pos_Wait:
 236              	.LFB730:
  37:Src/fsm_position_abs.c **** 
  38:Src/fsm_position_abs.c **** void FSM_Pos_Wait(FSM_Instance *fsm)
  39:Src/fsm_position_abs.c **** {
 237              		.loc 1 39 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 8
 240              		@ frame_needed = 1, uses_anonymous_args = 0
 241 0000 B0B5     		push	{r4, r5, r7, lr}
 242              	.LCFI12:
 243              		.cfi_def_cfa_offset 16
 244              		.cfi_offset 4, -16
 245              		.cfi_offset 5, -12
 246              		.cfi_offset 7, -8
 247              		.cfi_offset 14, -4
 248 0002 82B0     		sub	sp, sp, #8
 249              	.LCFI13:
 250              		.cfi_def_cfa_offset 24
 251 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/cc3uuGnG.s 			page 6


 252              	.LCFI14:
 253              		.cfi_def_cfa_register 7
 254 0006 7860     		str	r0, [r7, #4]
  40:Src/fsm_position_abs.c ****   if(reached(&pid_sum,sum_goal- 0.5 * (odometry.encoder_l.steps + odometry.encoder_r.steps))) fsm->
 255              		.loc 1 40 0
 256 0008 174B     		ldr	r3, .L16
 257 000a 1B68     		ldr	r3, [r3]
 258 000c 1846     		mov	r0, r3
 259 000e FFF7FEFF 		bl	__aeabi_i2d
 260              	.LVL0:
 261 0012 0446     		mov	r4, r0
 262 0014 0D46     		mov	r5, r1
 263 0016 154B     		ldr	r3, .L16+4
 264 0018 5A68     		ldr	r2, [r3, #4]
 265 001a 144B     		ldr	r3, .L16+4
 266 001c 1B69     		ldr	r3, [r3, #16]
 267 001e 1344     		add	r3, r3, r2
 268 0020 1846     		mov	r0, r3
 269 0022 FFF7FEFF 		bl	__aeabi_i2d
 270              	.LVL1:
 271 0026 4FF00002 		mov	r2, #0
 272 002a 114B     		ldr	r3, .L16+8
 273 002c FFF7FEFF 		bl	__aeabi_dmul
 274              	.LVL2:
 275 0030 0246     		mov	r2, r0
 276 0032 0B46     		mov	r3, r1
 277 0034 2046     		mov	r0, r4
 278 0036 2946     		mov	r1, r5
 279 0038 FFF7FEFF 		bl	__aeabi_dsub
 280              	.LVL3:
 281 003c 0346     		mov	r3, r0
 282 003e 0C46     		mov	r4, r1
 283 0040 1846     		mov	r0, r3
 284 0042 2146     		mov	r1, r4
 285 0044 FFF7FEFF 		bl	__aeabi_d2iz
 286              	.LVL4:
 287 0048 0346     		mov	r3, r0
 288 004a 1946     		mov	r1, r3
 289 004c 0948     		ldr	r0, .L16+12
 290 004e FFF7FEFF 		bl	reached
 291 0052 0346     		mov	r3, r0
 292 0054 002B     		cmp	r3, #0
 293 0056 02D0     		beq	.L15
 294              		.loc 1 40 0 is_stmt 0 discriminator 1
 295 0058 7B68     		ldr	r3, [r7, #4]
 296 005a 074A     		ldr	r2, .L16+16
 297 005c 1A60     		str	r2, [r3]
 298              	.L15:
  41:Src/fsm_position_abs.c **** }
 299              		.loc 1 41 0 is_stmt 1
 300 005e 00BF     		nop
 301 0060 0837     		adds	r7, r7, #8
 302              	.LCFI15:
 303              		.cfi_def_cfa_offset 16
 304 0062 BD46     		mov	sp, r7
 305              	.LCFI16:
 306              		.cfi_def_cfa_register 13
ARM GAS  /tmp/cc3uuGnG.s 			page 7


 307              		@ sp needed
 308 0064 B0BD     		pop	{r4, r5, r7, pc}
 309              	.L17:
 310 0066 00BF     		.align	2
 311              	.L16:
 312 0068 00000000 		.word	sum_goal
 313 006c 00000000 		.word	odometry
 314 0070 0000E03F 		.word	1071644672
 315 0074 00000000 		.word	pid_sum
 316 0078 00000000 		.word	FSM_Abs_End
 317              		.cfi_endproc
 318              	.LFE730:
 320              		.section	.text.FSM_Abs_End,"ax",%progbits
 321              		.align	1
 322              		.global	FSM_Abs_End
 323              		.syntax unified
 324              		.thumb
 325              		.thumb_func
 326              		.fpu fpv4-sp-d16
 328              	FSM_Abs_End:
 329              	.LFB731:
  42:Src/fsm_position_abs.c **** 
  43:Src/fsm_position_abs.c **** void FSM_Abs_End(FSM_Instance *fsm)
  44:Src/fsm_position_abs.c **** {
 330              		.loc 1 44 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 8
 333              		@ frame_needed = 1, uses_anonymous_args = 0
 334              		@ link register save eliminated.
 335 0000 80B4     		push	{r7}
 336              	.LCFI17:
 337              		.cfi_def_cfa_offset 4
 338              		.cfi_offset 7, -4
 339 0002 83B0     		sub	sp, sp, #12
 340              	.LCFI18:
 341              		.cfi_def_cfa_offset 16
 342 0004 00AF     		add	r7, sp, #0
 343              	.LCFI19:
 344              		.cfi_def_cfa_register 7
 345 0006 7860     		str	r0, [r7, #4]
  45:Src/fsm_position_abs.c ****   fsm->status=FSM_SUCCESS;
 346              		.loc 1 45 0
 347 0008 7B68     		ldr	r3, [r7, #4]
 348 000a 0122     		movs	r2, #1
 349 000c 1A71     		strb	r2, [r3, #4]
  46:Src/fsm_position_abs.c **** }
 350              		.loc 1 46 0
 351 000e 00BF     		nop
 352 0010 0C37     		adds	r7, r7, #12
 353              	.LCFI20:
 354              		.cfi_def_cfa_offset 4
 355 0012 BD46     		mov	sp, r7
 356              	.LCFI21:
 357              		.cfi_def_cfa_register 13
 358              		@ sp needed
 359 0014 5DF8047B 		ldr	r7, [sp], #4
 360              	.LCFI22:
ARM GAS  /tmp/cc3uuGnG.s 			page 8


 361              		.cfi_restore 7
 362              		.cfi_def_cfa_offset 0
 363 0018 7047     		bx	lr
 364              		.cfi_endproc
 365              	.LFE731:
 367              		.section	.text.FSM_Angle_Init,"ax",%progbits
 368              		.align	1
 369              		.global	FSM_Angle_Init
 370              		.syntax unified
 371              		.thumb
 372              		.thumb_func
 373              		.fpu fpv4-sp-d16
 375              	FSM_Angle_Init:
 376              	.LFB732:
  47:Src/fsm_position_abs.c **** 
  48:Src/fsm_position_abs.c **** void FSM_Angle_Init(FSM_Instance *fsm)
  49:Src/fsm_position_abs.c **** {
 377              		.loc 1 49 0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 16
 380              		@ frame_needed = 1, uses_anonymous_args = 0
 381              		@ link register save eliminated.
 382 0000 80B4     		push	{r7}
 383              	.LCFI23:
 384              		.cfi_def_cfa_offset 4
 385              		.cfi_offset 7, -4
 386 0002 85B0     		sub	sp, sp, #20
 387              	.LCFI24:
 388              		.cfi_def_cfa_offset 24
 389 0004 00AF     		add	r7, sp, #0
 390              	.LCFI25:
 391              		.cfi_def_cfa_register 7
 392 0006 7860     		str	r0, [r7, #4]
  50:Src/fsm_position_abs.c ****   FSM_Position_Abs *fsm_pos=(FSM_Position_Abs *) fsm;
 393              		.loc 1 50 0
 394 0008 7B68     		ldr	r3, [r7, #4]
 395 000a FB60     		str	r3, [r7, #12]
  51:Src/fsm_position_abs.c ****   fsm->status=FSM_RUNNING;
 396              		.loc 1 51 0
 397 000c 7B68     		ldr	r3, [r7, #4]
 398 000e 0022     		movs	r2, #0
 399 0010 1A71     		strb	r2, [r3, #4]
  52:Src/fsm_position_abs.c ****   fsm_pos->n=0;
 400              		.loc 1 52 0
 401 0012 FB68     		ldr	r3, [r7, #12]
 402 0014 0022     		movs	r2, #0
 403 0016 5A62     		str	r2, [r3, #36]
  53:Src/fsm_position_abs.c ****   fsm_pos->angle+=odometry.theta;//no value limitation
 404              		.loc 1 53 0
 405 0018 094B     		ldr	r3, .L20
 406 001a 93ED087A 		vldr.32	s14, [r3, #32]
 407 001e FB68     		ldr	r3, [r7, #12]
 408 0020 D3ED037A 		vldr.32	s15, [r3, #12]
 409 0024 77EE277A 		vadd.f32	s15, s14, s15
 410 0028 FB68     		ldr	r3, [r7, #12]
 411 002a C3ED037A 		vstr.32	s15, [r3, #12]
  54:Src/fsm_position_abs.c ****   fsm->run=FSM_Angle_Generator;
ARM GAS  /tmp/cc3uuGnG.s 			page 9


 412              		.loc 1 54 0
 413 002e 7B68     		ldr	r3, [r7, #4]
 414 0030 044A     		ldr	r2, .L20+4
 415 0032 1A60     		str	r2, [r3]
  55:Src/fsm_position_abs.c **** }
 416              		.loc 1 55 0
 417 0034 00BF     		nop
 418 0036 1437     		adds	r7, r7, #20
 419              	.LCFI26:
 420              		.cfi_def_cfa_offset 4
 421 0038 BD46     		mov	sp, r7
 422              	.LCFI27:
 423              		.cfi_def_cfa_register 13
 424              		@ sp needed
 425 003a 5DF8047B 		ldr	r7, [sp], #4
 426              	.LCFI28:
 427              		.cfi_restore 7
 428              		.cfi_def_cfa_offset 0
 429 003e 7047     		bx	lr
 430              	.L21:
 431              		.align	2
 432              	.L20:
 433 0040 00000000 		.word	odometry
 434 0044 00000000 		.word	FSM_Angle_Generator
 435              		.cfi_endproc
 436              	.LFE732:
 438              		.section	.text.FSM_Angle_Generator,"ax",%progbits
 439              		.align	1
 440              		.global	FSM_Angle_Generator
 441              		.syntax unified
 442              		.thumb
 443              		.thumb_func
 444              		.fpu fpv4-sp-d16
 446              	FSM_Angle_Generator:
 447              	.LFB733:
  56:Src/fsm_position_abs.c **** 
  57:Src/fsm_position_abs.c **** void FSM_Angle_Generator(FSM_Instance *fsm)
  58:Src/fsm_position_abs.c **** {
 448              		.loc 1 58 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 16
 451              		@ frame_needed = 1, uses_anonymous_args = 0
 452              		@ link register save eliminated.
 453 0000 80B4     		push	{r7}
 454              	.LCFI29:
 455              		.cfi_def_cfa_offset 4
 456              		.cfi_offset 7, -4
 457 0002 85B0     		sub	sp, sp, #20
 458              	.LCFI30:
 459              		.cfi_def_cfa_offset 24
 460 0004 00AF     		add	r7, sp, #0
 461              	.LCFI31:
 462              		.cfi_def_cfa_register 7
 463 0006 7860     		str	r0, [r7, #4]
  59:Src/fsm_position_abs.c ****   FSM_Position_Abs *fsm_pos=(FSM_Position_Abs *) fsm;
 464              		.loc 1 59 0
 465 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc3uuGnG.s 			page 10


 466 000a FB60     		str	r3, [r7, #12]
  60:Src/fsm_position_abs.c ****   if(fsm_pos->angle/fsm_pos->angular_speed >fsm_pos->n*pid_diff.Te)
 467              		.loc 1 60 0
 468 000c FB68     		ldr	r3, [r7, #12]
 469 000e D3ED036A 		vldr.32	s13, [r3, #12]
 470 0012 FB68     		ldr	r3, [r7, #12]
 471 0014 D3ED067A 		vldr.32	s15, [r3, #24]
 472 0018 86EEA77A 		vdiv.f32	s14, s13, s15
 473 001c FB68     		ldr	r3, [r7, #12]
 474 001e 5B6A     		ldr	r3, [r3, #36]
 475 0020 07EE903A 		vmov	s15, r3	@ int
 476 0024 F8EEE76A 		vcvt.f32.s32	s13, s15
 477 0028 2B4B     		ldr	r3, .L29
 478 002a D3ED057A 		vldr.32	s15, [r3, #20]
 479 002e 66EEA77A 		vmul.f32	s15, s13, s15
 480 0032 B4EEE77A 		vcmpe.f32	s14, s15
 481 0036 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 482 003a 2BDD     		ble	.L27
  61:Src/fsm_position_abs.c ****   {
  62:Src/fsm_position_abs.c ****     diff_goal=fsm_pos->n*fsm_pos->angular_speed*pid_diff.Te*ENCODER_DIST/ENCODER_STEP_DIST;
 483              		.loc 1 62 0
 484 003c FB68     		ldr	r3, [r7, #12]
 485 003e 5B6A     		ldr	r3, [r3, #36]
 486 0040 07EE903A 		vmov	s15, r3	@ int
 487 0044 B8EEE77A 		vcvt.f32.s32	s14, s15
 488 0048 FB68     		ldr	r3, [r7, #12]
 489 004a D3ED067A 		vldr.32	s15, [r3, #24]
 490 004e 27EE277A 		vmul.f32	s14, s14, s15
 491 0052 214B     		ldr	r3, .L29
 492 0054 D3ED057A 		vldr.32	s15, [r3, #20]
 493 0058 27EE277A 		vmul.f32	s14, s14, s15
 494 005c 1F4B     		ldr	r3, .L29+4
 495 005e 1B68     		ldr	r3, [r3]
 496 0060 07EE903A 		vmov	s15, r3	@ int
 497 0064 F8EEE77A 		vcvt.f32.s32	s15, s15
 498 0068 67EE276A 		vmul.f32	s13, s14, s15
 499 006c 1C4B     		ldr	r3, .L29+8
 500 006e 1B68     		ldr	r3, [r3]
 501 0070 07EE903A 		vmov	s15, r3	@ int
 502 0074 B8EEE77A 		vcvt.f32.s32	s14, s15
 503 0078 C6EE877A 		vdiv.f32	s15, s13, s14
 504 007c FDEEE77A 		vcvt.s32.f32	s15, s15
 505 0080 17EE902A 		vmov	r2, s15	@ int
 506 0084 174B     		ldr	r3, .L29+12
 507 0086 1A60     		str	r2, [r3]
  63:Src/fsm_position_abs.c ****     fsm_pos->n++;
 508              		.loc 1 63 0
 509 0088 FB68     		ldr	r3, [r7, #12]
 510 008a 5B6A     		ldr	r3, [r3, #36]
 511 008c 5A1C     		adds	r2, r3, #1
 512 008e FB68     		ldr	r3, [r7, #12]
 513 0090 5A62     		str	r2, [r3, #36]
  64:Src/fsm_position_abs.c ****   }
  65:Src/fsm_position_abs.c ****   else
  66:Src/fsm_position_abs.c ****   {
  67:Src/fsm_position_abs.c ****     diff_goal=fsm_pos->angle*ENCODER_DIST/ENCODER_STEP_DIST;
  68:Src/fsm_position_abs.c ****     fsm->run=FSM_Angle_Wait;
ARM GAS  /tmp/cc3uuGnG.s 			page 11


  69:Src/fsm_position_abs.c ****   }
  70:Src/fsm_position_abs.c **** }
 514              		.loc 1 70 0
 515 0092 1BE0     		b	.L28
 516              	.L27:
  67:Src/fsm_position_abs.c ****     fsm->run=FSM_Angle_Wait;
 517              		.loc 1 67 0
 518 0094 FB68     		ldr	r3, [r7, #12]
 519 0096 93ED037A 		vldr.32	s14, [r3, #12]
 520 009a 104B     		ldr	r3, .L29+4
 521 009c 1B68     		ldr	r3, [r3]
 522 009e 07EE903A 		vmov	s15, r3	@ int
 523 00a2 F8EEE77A 		vcvt.f32.s32	s15, s15
 524 00a6 67EE276A 		vmul.f32	s13, s14, s15
 525 00aa 0D4B     		ldr	r3, .L29+8
 526 00ac 1B68     		ldr	r3, [r3]
 527 00ae 07EE903A 		vmov	s15, r3	@ int
 528 00b2 B8EEE77A 		vcvt.f32.s32	s14, s15
 529 00b6 C6EE877A 		vdiv.f32	s15, s13, s14
 530 00ba FDEEE77A 		vcvt.s32.f32	s15, s15
 531 00be 17EE902A 		vmov	r2, s15	@ int
 532 00c2 084B     		ldr	r3, .L29+12
 533 00c4 1A60     		str	r2, [r3]
  68:Src/fsm_position_abs.c ****   }
 534              		.loc 1 68 0
 535 00c6 7B68     		ldr	r3, [r7, #4]
 536 00c8 074A     		ldr	r2, .L29+16
 537 00ca 1A60     		str	r2, [r3]
 538              	.L28:
 539              		.loc 1 70 0
 540 00cc 00BF     		nop
 541 00ce 1437     		adds	r7, r7, #20
 542              	.LCFI32:
 543              		.cfi_def_cfa_offset 4
 544 00d0 BD46     		mov	sp, r7
 545              	.LCFI33:
 546              		.cfi_def_cfa_register 13
 547              		@ sp needed
 548 00d2 5DF8047B 		ldr	r7, [sp], #4
 549              	.LCFI34:
 550              		.cfi_restore 7
 551              		.cfi_def_cfa_offset 0
 552 00d6 7047     		bx	lr
 553              	.L30:
 554              		.align	2
 555              	.L29:
 556 00d8 00000000 		.word	pid_diff
 557 00dc 00000000 		.word	ENCODER_DIST
 558 00e0 00000000 		.word	ENCODER_STEP_DIST
 559 00e4 00000000 		.word	diff_goal
 560 00e8 00000000 		.word	FSM_Angle_Wait
 561              		.cfi_endproc
 562              	.LFE733:
 564              		.section	.text.FSM_Angle_Wait,"ax",%progbits
 565              		.align	1
 566              		.global	FSM_Angle_Wait
 567              		.syntax unified
ARM GAS  /tmp/cc3uuGnG.s 			page 12


 568              		.thumb
 569              		.thumb_func
 570              		.fpu fpv4-sp-d16
 572              	FSM_Angle_Wait:
 573              	.LFB734:
  71:Src/fsm_position_abs.c **** 
  72:Src/fsm_position_abs.c **** void FSM_Angle_Wait(FSM_Instance *fsm)
  73:Src/fsm_position_abs.c **** {
 574              		.loc 1 73 0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 8
 577              		@ frame_needed = 1, uses_anonymous_args = 0
 578 0000 80B5     		push	{r7, lr}
 579              	.LCFI35:
 580              		.cfi_def_cfa_offset 8
 581              		.cfi_offset 7, -8
 582              		.cfi_offset 14, -4
 583 0002 82B0     		sub	sp, sp, #8
 584              	.LCFI36:
 585              		.cfi_def_cfa_offset 16
 586 0004 00AF     		add	r7, sp, #0
 587              	.LCFI37:
 588              		.cfi_def_cfa_register 7
 589 0006 7860     		str	r0, [r7, #4]
  74:Src/fsm_position_abs.c ****   if(reached(&pid_diff,diff_goal - (odometry.encoder_r.steps - odometry.encoder_l.steps))) fsm->run
 590              		.loc 1 74 0
 591 0008 0A4B     		ldr	r3, .L34
 592 000a 1A68     		ldr	r2, [r3]
 593 000c 0A4B     		ldr	r3, .L34+4
 594 000e 1969     		ldr	r1, [r3, #16]
 595 0010 094B     		ldr	r3, .L34+4
 596 0012 5B68     		ldr	r3, [r3, #4]
 597 0014 CB1A     		subs	r3, r1, r3
 598 0016 D31A     		subs	r3, r2, r3
 599 0018 1946     		mov	r1, r3
 600 001a 0848     		ldr	r0, .L34+8
 601 001c FFF7FEFF 		bl	reached
 602 0020 0346     		mov	r3, r0
 603 0022 002B     		cmp	r3, #0
 604 0024 02D0     		beq	.L33
 605              		.loc 1 74 0 is_stmt 0 discriminator 1
 606 0026 7B68     		ldr	r3, [r7, #4]
 607 0028 054A     		ldr	r2, .L34+12
 608 002a 1A60     		str	r2, [r3]
 609              	.L33:
  75:Src/fsm_position_abs.c **** }
 610              		.loc 1 75 0 is_stmt 1
 611 002c 00BF     		nop
 612 002e 0837     		adds	r7, r7, #8
 613              	.LCFI38:
 614              		.cfi_def_cfa_offset 8
 615 0030 BD46     		mov	sp, r7
 616              	.LCFI39:
 617              		.cfi_def_cfa_register 13
 618              		@ sp needed
 619 0032 80BD     		pop	{r7, pc}
 620              	.L35:
ARM GAS  /tmp/cc3uuGnG.s 			page 13


 621              		.align	2
 622              	.L34:
 623 0034 00000000 		.word	diff_goal
 624 0038 00000000 		.word	odometry
 625 003c 00000000 		.word	pid_diff
 626 0040 00000000 		.word	FSM_Abs_End
 627              		.cfi_endproc
 628              	.LFE734:
 630              		.global	__aeabi_f2d
 631              		.global	__aeabi_dadd
 632              		.global	__aeabi_ddiv
 633              		.global	__aeabi_d2f
 634              		.section	.text.FSM_X_Y_Init,"ax",%progbits
 635              		.align	1
 636              		.global	FSM_X_Y_Init
 637              		.syntax unified
 638              		.thumb
 639              		.thumb_func
 640              		.fpu fpv4-sp-d16
 642              	FSM_X_Y_Init:
 643              	.LFB735:
  76:Src/fsm_position_abs.c **** 
  77:Src/fsm_position_abs.c **** 
  78:Src/fsm_position_abs.c **** 
  79:Src/fsm_position_abs.c **** 
  80:Src/fsm_position_abs.c **** 
  81:Src/fsm_position_abs.c **** /********************
  82:Src/fsm_position_abs.c **** ***   DIRTY ZONE  ***
  83:Src/fsm_position_abs.c **** ********************/
  84:Src/fsm_position_abs.c **** 
  85:Src/fsm_position_abs.c **** 
  86:Src/fsm_position_abs.c **** void FSM_X_Y_Init(FSM_Instance *fsm)
  87:Src/fsm_position_abs.c **** {
 644              		.loc 1 87 0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 16
 647              		@ frame_needed = 1, uses_anonymous_args = 0
 648 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 649              	.LCFI40:
 650              		.cfi_def_cfa_offset 32
 651              		.cfi_offset 4, -32
 652              		.cfi_offset 5, -28
 653              		.cfi_offset 7, -24
 654              		.cfi_offset 8, -20
 655              		.cfi_offset 9, -16
 656              		.cfi_offset 10, -12
 657              		.cfi_offset 11, -8
 658              		.cfi_offset 14, -4
 659 0004 84B0     		sub	sp, sp, #16
 660              	.LCFI41:
 661              		.cfi_def_cfa_offset 48
 662 0006 00AF     		add	r7, sp, #0
 663              	.LCFI42:
 664              		.cfi_def_cfa_register 7
 665 0008 7860     		str	r0, [r7, #4]
  88:Src/fsm_position_abs.c ****   FSM_Position_Abs *fsm_pos=(FSM_Position_Abs *) fsm;
 666              		.loc 1 88 0
ARM GAS  /tmp/cc3uuGnG.s 			page 14


 667 000a 7B68     		ldr	r3, [r7, #4]
 668 000c FB60     		str	r3, [r7, #12]
  89:Src/fsm_position_abs.c ****   fsm_pos->angle=acos(((odometry.x*fsm_pos->x)+(odometry.y*fsm_pos->y))/
 669              		.loc 1 89 0
 670 000e 6E4B     		ldr	r3, .L37+8
 671 0010 93ED067A 		vldr.32	s14, [r3, #24]
 672 0014 FB68     		ldr	r3, [r7, #12]
 673 0016 D3ED077A 		vldr.32	s15, [r3, #28]
 674 001a 27EE277A 		vmul.f32	s14, s14, s15
 675 001e 6A4B     		ldr	r3, .L37+8
 676 0020 D3ED076A 		vldr.32	s13, [r3, #28]
 677 0024 FB68     		ldr	r3, [r7, #12]
 678 0026 D3ED087A 		vldr.32	s15, [r3, #32]
 679 002a 66EEA77A 		vmul.f32	s15, s13, s15
 680 002e 77EE277A 		vadd.f32	s15, s14, s15
 681 0032 17EE900A 		vmov	r0, s15
 682 0036 FFF7FEFF 		bl	__aeabi_f2d
 683              	.LVL5:
 684 003a 0446     		mov	r4, r0
 685 003c 0D46     		mov	r5, r1
  90:Src/fsm_position_abs.c ****                   (sqrt(pow(odometry.x,2)+pow(odometry.y,2))+sqrt(pow(fsm_pos->x,2)+pow(fsm_pos->y,
 686              		.loc 1 90 0
 687 003e 624B     		ldr	r3, .L37+8
 688 0040 9B69     		ldr	r3, [r3, #24]	@ float
 689 0042 1846     		mov	r0, r3	@ float
 690 0044 FFF7FEFF 		bl	__aeabi_f2d
 691              	.LVL6:
 692 0048 0246     		mov	r2, r0
 693 004a 0B46     		mov	r3, r1
 694 004c 9FED5C1B 		vldr.64	d1, .L37
 695 0050 43EC102B 		vmov	d0, r2, r3
 696 0054 FFF7FEFF 		bl	pow
 697 0058 59EC108B 		vmov	r8, r9, d0
 698 005c 5A4B     		ldr	r3, .L37+8
 699 005e DB69     		ldr	r3, [r3, #28]	@ float
 700 0060 1846     		mov	r0, r3	@ float
 701 0062 FFF7FEFF 		bl	__aeabi_f2d
 702              	.LVL7:
 703 0066 0246     		mov	r2, r0
 704 0068 0B46     		mov	r3, r1
 705 006a 9FED551B 		vldr.64	d1, .L37
 706 006e 43EC102B 		vmov	d0, r2, r3
 707 0072 FFF7FEFF 		bl	pow
 708 0076 53EC102B 		vmov	r2, r3, d0
 709 007a 4046     		mov	r0, r8
 710 007c 4946     		mov	r1, r9
 711 007e FFF7FEFF 		bl	__aeabi_dadd
 712              	.LVL8:
 713 0082 0246     		mov	r2, r0
 714 0084 0B46     		mov	r3, r1
 715 0086 43EC172B 		vmov	d7, r2, r3
 716 008a B0EE470A 		vmov.f32	s0, s14
 717 008e F0EE670A 		vmov.f32	s1, s15
 718 0092 FFF7FEFF 		bl	sqrt
 719 0096 59EC108B 		vmov	r8, r9, d0
 720 009a FB68     		ldr	r3, [r7, #12]
 721 009c DB69     		ldr	r3, [r3, #28]	@ float
ARM GAS  /tmp/cc3uuGnG.s 			page 15


 722 009e 1846     		mov	r0, r3	@ float
 723 00a0 FFF7FEFF 		bl	__aeabi_f2d
 724              	.LVL9:
 725 00a4 0246     		mov	r2, r0
 726 00a6 0B46     		mov	r3, r1
 727 00a8 9FED451B 		vldr.64	d1, .L37
 728 00ac 43EC102B 		vmov	d0, r2, r3
 729 00b0 FFF7FEFF 		bl	pow
 730 00b4 5BEC10AB 		vmov	r10, fp, d0
 731 00b8 FB68     		ldr	r3, [r7, #12]
 732 00ba 1B6A     		ldr	r3, [r3, #32]	@ float
 733 00bc 1846     		mov	r0, r3	@ float
 734 00be FFF7FEFF 		bl	__aeabi_f2d
 735              	.LVL10:
 736 00c2 0246     		mov	r2, r0
 737 00c4 0B46     		mov	r3, r1
 738 00c6 9FED3E1B 		vldr.64	d1, .L37
 739 00ca 43EC102B 		vmov	d0, r2, r3
 740 00ce FFF7FEFF 		bl	pow
 741 00d2 53EC102B 		vmov	r2, r3, d0
 742 00d6 5046     		mov	r0, r10
 743 00d8 5946     		mov	r1, fp
 744 00da FFF7FEFF 		bl	__aeabi_dadd
 745              	.LVL11:
 746 00de 0246     		mov	r2, r0
 747 00e0 0B46     		mov	r3, r1
 748 00e2 43EC172B 		vmov	d7, r2, r3
 749 00e6 B0EE470A 		vmov.f32	s0, s14
 750 00ea F0EE670A 		vmov.f32	s1, s15
 751 00ee FFF7FEFF 		bl	sqrt
 752 00f2 53EC102B 		vmov	r2, r3, d0
 753 00f6 4046     		mov	r0, r8
 754 00f8 4946     		mov	r1, r9
 755 00fa FFF7FEFF 		bl	__aeabi_dadd
 756              	.LVL12:
 757 00fe 0246     		mov	r2, r0
 758 0100 0B46     		mov	r3, r1
  89:Src/fsm_position_abs.c ****   fsm_pos->angle=acos(((odometry.x*fsm_pos->x)+(odometry.y*fsm_pos->y))/
 759              		.loc 1 89 0
 760 0102 2046     		mov	r0, r4
 761 0104 2946     		mov	r1, r5
 762 0106 FFF7FEFF 		bl	__aeabi_ddiv
 763              	.LVL13:
 764 010a 0346     		mov	r3, r0
 765 010c 0C46     		mov	r4, r1
 766 010e 44EC173B 		vmov	d7, r3, r4
 767 0112 B0EE470A 		vmov.f32	s0, s14
 768 0116 F0EE670A 		vmov.f32	s1, s15
 769 011a FFF7FEFF 		bl	acos
 770 011e 54EC103B 		vmov	r3, r4, d0
 771 0122 1846     		mov	r0, r3
 772 0124 2146     		mov	r1, r4
 773 0126 FFF7FEFF 		bl	__aeabi_d2f
 774              	.LVL14:
 775 012a 0246     		mov	r2, r0	@ float
 776 012c FB68     		ldr	r3, [r7, #12]
 777 012e DA60     		str	r2, [r3, #12]	@ float
ARM GAS  /tmp/cc3uuGnG.s 			page 16


  91:Src/fsm_position_abs.c ****   fsm_pos->pos=sqrt(pow(odometry.x-fsm_pos->x,2)+pow(odometry.y-fsm_pos->y,2));
 778              		.loc 1 91 0
 779 0130 254B     		ldr	r3, .L37+8
 780 0132 93ED067A 		vldr.32	s14, [r3, #24]
 781 0136 FB68     		ldr	r3, [r7, #12]
 782 0138 D3ED077A 		vldr.32	s15, [r3, #28]
 783 013c 77EE677A 		vsub.f32	s15, s14, s15
 784 0140 17EE900A 		vmov	r0, s15
 785 0144 FFF7FEFF 		bl	__aeabi_f2d
 786              	.LVL15:
 787 0148 0346     		mov	r3, r0
 788 014a 0C46     		mov	r4, r1
 789 014c 9FED1C1B 		vldr.64	d1, .L37
 790 0150 44EC103B 		vmov	d0, r3, r4
 791 0154 FFF7FEFF 		bl	pow
 792 0158 55EC104B 		vmov	r4, r5, d0
 793 015c 1A4B     		ldr	r3, .L37+8
 794 015e 93ED077A 		vldr.32	s14, [r3, #28]
 795 0162 FB68     		ldr	r3, [r7, #12]
 796 0164 D3ED087A 		vldr.32	s15, [r3, #32]
 797 0168 77EE677A 		vsub.f32	s15, s14, s15
 798 016c 17EE900A 		vmov	r0, s15
 799 0170 FFF7FEFF 		bl	__aeabi_f2d
 800              	.LVL16:
 801 0174 0246     		mov	r2, r0
 802 0176 0B46     		mov	r3, r1
 803 0178 9FED111B 		vldr.64	d1, .L37
 804 017c 43EC102B 		vmov	d0, r2, r3
 805 0180 FFF7FEFF 		bl	pow
 806 0184 53EC102B 		vmov	r2, r3, d0
 807 0188 2046     		mov	r0, r4
 808 018a 2946     		mov	r1, r5
 809 018c FFF7FEFF 		bl	__aeabi_dadd
 810              	.LVL17:
 811 0190 0346     		mov	r3, r0
 812 0192 0C46     		mov	r4, r1
 813 0194 44EC173B 		vmov	d7, r3, r4
 814 0198 B0EE470A 		vmov.f32	s0, s14
 815 019c F0EE670A 		vmov.f32	s1, s15
 816 01a0 FFF7FEFF 		bl	sqrt
 817 01a4 54EC103B 		vmov	r3, r4, d0
 818 01a8 1846     		mov	r0, r3
 819 01aa 2146     		mov	r1, r4
 820 01ac FFF7FEFF 		bl	__aeabi_d2f
 821              	.LVL18:
 822 01b0 0246     		mov	r2, r0	@ float
 823 01b2 FB68     		ldr	r3, [r7, #12]
 824 01b4 1A61     		str	r2, [r3, #16]	@ float
  92:Src/fsm_position_abs.c **** }
 825              		.loc 1 92 0
 826 01b6 00BF     		nop
 827 01b8 1037     		adds	r7, r7, #16
 828              	.LCFI43:
 829              		.cfi_def_cfa_offset 32
 830 01ba BD46     		mov	sp, r7
 831              	.LCFI44:
 832              		.cfi_def_cfa_register 13
ARM GAS  /tmp/cc3uuGnG.s 			page 17


 833              		@ sp needed
 834 01bc BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 835              	.L38:
 836              		.align	3
 837              	.L37:
 838 01c0 00000000 		.word	0
 839 01c4 00000040 		.word	1073741824
 840 01c8 00000000 		.word	odometry
 841              		.cfi_endproc
 842              	.LFE735:
 844              		.section	.text.FSM_Angle_Init_X_Y,"ax",%progbits
 845              		.align	1
 846              		.global	FSM_Angle_Init_X_Y
 847              		.syntax unified
 848              		.thumb
 849              		.thumb_func
 850              		.fpu fpv4-sp-d16
 852              	FSM_Angle_Init_X_Y:
 853              	.LFB736:
  93:Src/fsm_position_abs.c **** 
  94:Src/fsm_position_abs.c **** void FSM_Angle_Init_X_Y(FSM_Instance *fsm)
  95:Src/fsm_position_abs.c **** {
 854              		.loc 1 95 0
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 16
 857              		@ frame_needed = 1, uses_anonymous_args = 0
 858              		@ link register save eliminated.
 859 0000 80B4     		push	{r7}
 860              	.LCFI45:
 861              		.cfi_def_cfa_offset 4
 862              		.cfi_offset 7, -4
 863 0002 85B0     		sub	sp, sp, #20
 864              	.LCFI46:
 865              		.cfi_def_cfa_offset 24
 866 0004 00AF     		add	r7, sp, #0
 867              	.LCFI47:
 868              		.cfi_def_cfa_register 7
 869 0006 7860     		str	r0, [r7, #4]
  96:Src/fsm_position_abs.c ****   FSM_Position_Abs *fsm_pos=(FSM_Position_Abs *) fsm;
 870              		.loc 1 96 0
 871 0008 7B68     		ldr	r3, [r7, #4]
 872 000a FB60     		str	r3, [r7, #12]
  97:Src/fsm_position_abs.c ****   fsm->status=FSM_RUNNING;
 873              		.loc 1 97 0
 874 000c 7B68     		ldr	r3, [r7, #4]
 875 000e 0022     		movs	r2, #0
 876 0010 1A71     		strb	r2, [r3, #4]
  98:Src/fsm_position_abs.c ****   fsm_pos->n=0;
 877              		.loc 1 98 0
 878 0012 FB68     		ldr	r3, [r7, #12]
 879 0014 0022     		movs	r2, #0
 880 0016 5A62     		str	r2, [r3, #36]
  99:Src/fsm_position_abs.c ****   fsm_pos->angle+=odometry.theta;//no value limitation
 881              		.loc 1 99 0
 882 0018 094B     		ldr	r3, .L40
 883 001a 93ED087A 		vldr.32	s14, [r3, #32]
 884 001e FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cc3uuGnG.s 			page 18


 885 0020 D3ED037A 		vldr.32	s15, [r3, #12]
 886 0024 77EE277A 		vadd.f32	s15, s14, s15
 887 0028 FB68     		ldr	r3, [r7, #12]
 888 002a C3ED037A 		vstr.32	s15, [r3, #12]
 100:Src/fsm_position_abs.c ****   fsm->run=FSM_Angle_Generator_X_Y;
 889              		.loc 1 100 0
 890 002e 7B68     		ldr	r3, [r7, #4]
 891 0030 044A     		ldr	r2, .L40+4
 892 0032 1A60     		str	r2, [r3]
 101:Src/fsm_position_abs.c **** }
 893              		.loc 1 101 0
 894 0034 00BF     		nop
 895 0036 1437     		adds	r7, r7, #20
 896              	.LCFI48:
 897              		.cfi_def_cfa_offset 4
 898 0038 BD46     		mov	sp, r7
 899              	.LCFI49:
 900              		.cfi_def_cfa_register 13
 901              		@ sp needed
 902 003a 5DF8047B 		ldr	r7, [sp], #4
 903              	.LCFI50:
 904              		.cfi_restore 7
 905              		.cfi_def_cfa_offset 0
 906 003e 7047     		bx	lr
 907              	.L41:
 908              		.align	2
 909              	.L40:
 910 0040 00000000 		.word	odometry
 911 0044 00000000 		.word	FSM_Angle_Generator_X_Y
 912              		.cfi_endproc
 913              	.LFE736:
 915              		.section	.text.FSM_Angle_Generator_X_Y,"ax",%progbits
 916              		.align	1
 917              		.global	FSM_Angle_Generator_X_Y
 918              		.syntax unified
 919              		.thumb
 920              		.thumb_func
 921              		.fpu fpv4-sp-d16
 923              	FSM_Angle_Generator_X_Y:
 924              	.LFB737:
 102:Src/fsm_position_abs.c **** 
 103:Src/fsm_position_abs.c **** void FSM_Angle_Generator_X_Y(FSM_Instance *fsm)
 104:Src/fsm_position_abs.c **** {
 925              		.loc 1 104 0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 16
 928              		@ frame_needed = 1, uses_anonymous_args = 0
 929              		@ link register save eliminated.
 930 0000 80B4     		push	{r7}
 931              	.LCFI51:
 932              		.cfi_def_cfa_offset 4
 933              		.cfi_offset 7, -4
 934 0002 85B0     		sub	sp, sp, #20
 935              	.LCFI52:
 936              		.cfi_def_cfa_offset 24
 937 0004 00AF     		add	r7, sp, #0
 938              	.LCFI53:
ARM GAS  /tmp/cc3uuGnG.s 			page 19


 939              		.cfi_def_cfa_register 7
 940 0006 7860     		str	r0, [r7, #4]
 105:Src/fsm_position_abs.c ****   FSM_Position_Abs *fsm_pos=(FSM_Position_Abs *) fsm;
 941              		.loc 1 105 0
 942 0008 7B68     		ldr	r3, [r7, #4]
 943 000a FB60     		str	r3, [r7, #12]
 106:Src/fsm_position_abs.c ****   if(fsm_pos->angle/fsm_pos->angular_speed >fsm_pos->n*pid_diff.Te)
 944              		.loc 1 106 0
 945 000c FB68     		ldr	r3, [r7, #12]
 946 000e D3ED036A 		vldr.32	s13, [r3, #12]
 947 0012 FB68     		ldr	r3, [r7, #12]
 948 0014 D3ED067A 		vldr.32	s15, [r3, #24]
 949 0018 86EEA77A 		vdiv.f32	s14, s13, s15
 950 001c FB68     		ldr	r3, [r7, #12]
 951 001e 5B6A     		ldr	r3, [r3, #36]
 952 0020 07EE903A 		vmov	s15, r3	@ int
 953 0024 F8EEE76A 		vcvt.f32.s32	s13, s15
 954 0028 2B4B     		ldr	r3, .L49
 955 002a D3ED057A 		vldr.32	s15, [r3, #20]
 956 002e 66EEA77A 		vmul.f32	s15, s13, s15
 957 0032 B4EEE77A 		vcmpe.f32	s14, s15
 958 0036 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 959 003a 2BDD     		ble	.L47
 107:Src/fsm_position_abs.c ****   {
 108:Src/fsm_position_abs.c ****     diff_goal=fsm_pos->n*fsm_pos->angular_speed*pid_diff.Te*ENCODER_DIST/ENCODER_STEP_DIST;
 960              		.loc 1 108 0
 961 003c FB68     		ldr	r3, [r7, #12]
 962 003e 5B6A     		ldr	r3, [r3, #36]
 963 0040 07EE903A 		vmov	s15, r3	@ int
 964 0044 B8EEE77A 		vcvt.f32.s32	s14, s15
 965 0048 FB68     		ldr	r3, [r7, #12]
 966 004a D3ED067A 		vldr.32	s15, [r3, #24]
 967 004e 27EE277A 		vmul.f32	s14, s14, s15
 968 0052 214B     		ldr	r3, .L49
 969 0054 D3ED057A 		vldr.32	s15, [r3, #20]
 970 0058 27EE277A 		vmul.f32	s14, s14, s15
 971 005c 1F4B     		ldr	r3, .L49+4
 972 005e 1B68     		ldr	r3, [r3]
 973 0060 07EE903A 		vmov	s15, r3	@ int
 974 0064 F8EEE77A 		vcvt.f32.s32	s15, s15
 975 0068 67EE276A 		vmul.f32	s13, s14, s15
 976 006c 1C4B     		ldr	r3, .L49+8
 977 006e 1B68     		ldr	r3, [r3]
 978 0070 07EE903A 		vmov	s15, r3	@ int
 979 0074 B8EEE77A 		vcvt.f32.s32	s14, s15
 980 0078 C6EE877A 		vdiv.f32	s15, s13, s14
 981 007c FDEEE77A 		vcvt.s32.f32	s15, s15
 982 0080 17EE902A 		vmov	r2, s15	@ int
 983 0084 174B     		ldr	r3, .L49+12
 984 0086 1A60     		str	r2, [r3]
 109:Src/fsm_position_abs.c ****     fsm_pos->n++;
 985              		.loc 1 109 0
 986 0088 FB68     		ldr	r3, [r7, #12]
 987 008a 5B6A     		ldr	r3, [r3, #36]
 988 008c 5A1C     		adds	r2, r3, #1
 989 008e FB68     		ldr	r3, [r7, #12]
 990 0090 5A62     		str	r2, [r3, #36]
ARM GAS  /tmp/cc3uuGnG.s 			page 20


 110:Src/fsm_position_abs.c ****   }
 111:Src/fsm_position_abs.c ****   else
 112:Src/fsm_position_abs.c ****   {
 113:Src/fsm_position_abs.c ****     diff_goal=fsm_pos->angle*ENCODER_DIST/ENCODER_STEP_DIST;
 114:Src/fsm_position_abs.c ****     fsm->run=FSM_Angle_Wait_X_Y;
 115:Src/fsm_position_abs.c ****   }
 116:Src/fsm_position_abs.c **** }
 991              		.loc 1 116 0
 992 0092 1BE0     		b	.L48
 993              	.L47:
 113:Src/fsm_position_abs.c ****     fsm->run=FSM_Angle_Wait_X_Y;
 994              		.loc 1 113 0
 995 0094 FB68     		ldr	r3, [r7, #12]
 996 0096 93ED037A 		vldr.32	s14, [r3, #12]
 997 009a 104B     		ldr	r3, .L49+4
 998 009c 1B68     		ldr	r3, [r3]
 999 009e 07EE903A 		vmov	s15, r3	@ int
 1000 00a2 F8EEE77A 		vcvt.f32.s32	s15, s15
 1001 00a6 67EE276A 		vmul.f32	s13, s14, s15
 1002 00aa 0D4B     		ldr	r3, .L49+8
 1003 00ac 1B68     		ldr	r3, [r3]
 1004 00ae 07EE903A 		vmov	s15, r3	@ int
 1005 00b2 B8EEE77A 		vcvt.f32.s32	s14, s15
 1006 00b6 C6EE877A 		vdiv.f32	s15, s13, s14
 1007 00ba FDEEE77A 		vcvt.s32.f32	s15, s15
 1008 00be 17EE902A 		vmov	r2, s15	@ int
 1009 00c2 084B     		ldr	r3, .L49+12
 1010 00c4 1A60     		str	r2, [r3]
 114:Src/fsm_position_abs.c ****   }
 1011              		.loc 1 114 0
 1012 00c6 7B68     		ldr	r3, [r7, #4]
 1013 00c8 074A     		ldr	r2, .L49+16
 1014 00ca 1A60     		str	r2, [r3]
 1015              	.L48:
 1016              		.loc 1 116 0
 1017 00cc 00BF     		nop
 1018 00ce 1437     		adds	r7, r7, #20
 1019              	.LCFI54:
 1020              		.cfi_def_cfa_offset 4
 1021 00d0 BD46     		mov	sp, r7
 1022              	.LCFI55:
 1023              		.cfi_def_cfa_register 13
 1024              		@ sp needed
 1025 00d2 5DF8047B 		ldr	r7, [sp], #4
 1026              	.LCFI56:
 1027              		.cfi_restore 7
 1028              		.cfi_def_cfa_offset 0
 1029 00d6 7047     		bx	lr
 1030              	.L50:
 1031              		.align	2
 1032              	.L49:
 1033 00d8 00000000 		.word	pid_diff
 1034 00dc 00000000 		.word	ENCODER_DIST
 1035 00e0 00000000 		.word	ENCODER_STEP_DIST
 1036 00e4 00000000 		.word	diff_goal
 1037 00e8 00000000 		.word	FSM_Angle_Wait_X_Y
 1038              		.cfi_endproc
ARM GAS  /tmp/cc3uuGnG.s 			page 21


 1039              	.LFE737:
 1041              		.section	.text.FSM_Angle_Wait_X_Y,"ax",%progbits
 1042              		.align	1
 1043              		.global	FSM_Angle_Wait_X_Y
 1044              		.syntax unified
 1045              		.thumb
 1046              		.thumb_func
 1047              		.fpu fpv4-sp-d16
 1049              	FSM_Angle_Wait_X_Y:
 1050              	.LFB738:
 117:Src/fsm_position_abs.c **** 
 118:Src/fsm_position_abs.c **** void FSM_Angle_Wait_X_Y(FSM_Instance *fsm)
 119:Src/fsm_position_abs.c **** {
 1051              		.loc 1 119 0
 1052              		.cfi_startproc
 1053              		@ args = 0, pretend = 0, frame = 8
 1054              		@ frame_needed = 1, uses_anonymous_args = 0
 1055 0000 80B5     		push	{r7, lr}
 1056              	.LCFI57:
 1057              		.cfi_def_cfa_offset 8
 1058              		.cfi_offset 7, -8
 1059              		.cfi_offset 14, -4
 1060 0002 82B0     		sub	sp, sp, #8
 1061              	.LCFI58:
 1062              		.cfi_def_cfa_offset 16
 1063 0004 00AF     		add	r7, sp, #0
 1064              	.LCFI59:
 1065              		.cfi_def_cfa_register 7
 1066 0006 7860     		str	r0, [r7, #4]
 120:Src/fsm_position_abs.c ****   if(reached(&pid_diff,diff_goal - (odometry.encoder_r.steps - odometry.encoder_l.steps))) fsm->run
 1067              		.loc 1 120 0
 1068 0008 0A4B     		ldr	r3, .L54
 1069 000a 1A68     		ldr	r2, [r3]
 1070 000c 0A4B     		ldr	r3, .L54+4
 1071 000e 1969     		ldr	r1, [r3, #16]
 1072 0010 094B     		ldr	r3, .L54+4
 1073 0012 5B68     		ldr	r3, [r3, #4]
 1074 0014 CB1A     		subs	r3, r1, r3
 1075 0016 D31A     		subs	r3, r2, r3
 1076 0018 1946     		mov	r1, r3
 1077 001a 0848     		ldr	r0, .L54+8
 1078 001c FFF7FEFF 		bl	reached
 1079 0020 0346     		mov	r3, r0
 1080 0022 002B     		cmp	r3, #0
 1081 0024 02D0     		beq	.L53
 1082              		.loc 1 120 0 is_stmt 0 discriminator 1
 1083 0026 7B68     		ldr	r3, [r7, #4]
 1084 0028 054A     		ldr	r2, .L54+12
 1085 002a 1A60     		str	r2, [r3]
 1086              	.L53:
 121:Src/fsm_position_abs.c **** }
 1087              		.loc 1 121 0 is_stmt 1
 1088 002c 00BF     		nop
 1089 002e 0837     		adds	r7, r7, #8
 1090              	.LCFI60:
 1091              		.cfi_def_cfa_offset 8
 1092 0030 BD46     		mov	sp, r7
ARM GAS  /tmp/cc3uuGnG.s 			page 22


 1093              	.LCFI61:
 1094              		.cfi_def_cfa_register 13
 1095              		@ sp needed
 1096 0032 80BD     		pop	{r7, pc}
 1097              	.L55:
 1098              		.align	2
 1099              	.L54:
 1100 0034 00000000 		.word	diff_goal
 1101 0038 00000000 		.word	odometry
 1102 003c 00000000 		.word	pid_diff
 1103 0040 00000000 		.word	FSM_Pos_Init_X_Y
 1104              		.cfi_endproc
 1105              	.LFE738:
 1107              		.section	.text.FSM_Pos_Init_X_Y,"ax",%progbits
 1108              		.align	1
 1109              		.global	FSM_Pos_Init_X_Y
 1110              		.syntax unified
 1111              		.thumb
 1112              		.thumb_func
 1113              		.fpu fpv4-sp-d16
 1115              	FSM_Pos_Init_X_Y:
 1116              	.LFB739:
 122:Src/fsm_position_abs.c **** 
 123:Src/fsm_position_abs.c **** void FSM_Pos_Init_X_Y(FSM_Instance *fsm)
 124:Src/fsm_position_abs.c **** {
 1117              		.loc 1 124 0
 1118              		.cfi_startproc
 1119              		@ args = 0, pretend = 0, frame = 16
 1120              		@ frame_needed = 1, uses_anonymous_args = 0
 1121              		@ link register save eliminated.
 1122 0000 80B4     		push	{r7}
 1123              	.LCFI62:
 1124              		.cfi_def_cfa_offset 4
 1125              		.cfi_offset 7, -4
 1126 0002 85B0     		sub	sp, sp, #20
 1127              	.LCFI63:
 1128              		.cfi_def_cfa_offset 24
 1129 0004 00AF     		add	r7, sp, #0
 1130              	.LCFI64:
 1131              		.cfi_def_cfa_register 7
 1132 0006 7860     		str	r0, [r7, #4]
 125:Src/fsm_position_abs.c ****   FSM_Position_Abs *fsm_pos=(FSM_Position_Abs *) fsm;
 1133              		.loc 1 125 0
 1134 0008 7B68     		ldr	r3, [r7, #4]
 1135 000a FB60     		str	r3, [r7, #12]
 126:Src/fsm_position_abs.c ****   fsm->status=FSM_RUNNING;
 1136              		.loc 1 126 0
 1137 000c 7B68     		ldr	r3, [r7, #4]
 1138 000e 0022     		movs	r2, #0
 1139 0010 1A71     		strb	r2, [r3, #4]
 127:Src/fsm_position_abs.c ****   fsm_pos->n=0;
 1140              		.loc 1 127 0
 1141 0012 FB68     		ldr	r3, [r7, #12]
 1142 0014 0022     		movs	r2, #0
 1143 0016 5A62     		str	r2, [r3, #36]
 128:Src/fsm_position_abs.c ****   fsm_pos->initial_sum=sum_goal;
 1144              		.loc 1 128 0
ARM GAS  /tmp/cc3uuGnG.s 			page 23


 1145 0018 064B     		ldr	r3, .L57
 1146 001a 1A68     		ldr	r2, [r3]
 1147 001c FB68     		ldr	r3, [r7, #12]
 1148 001e 9A62     		str	r2, [r3, #40]
 129:Src/fsm_position_abs.c ****   fsm->run=FSM_Pos_Generator_X_Y;
 1149              		.loc 1 129 0
 1150 0020 7B68     		ldr	r3, [r7, #4]
 1151 0022 054A     		ldr	r2, .L57+4
 1152 0024 1A60     		str	r2, [r3]
 130:Src/fsm_position_abs.c **** }
 1153              		.loc 1 130 0
 1154 0026 00BF     		nop
 1155 0028 1437     		adds	r7, r7, #20
 1156              	.LCFI65:
 1157              		.cfi_def_cfa_offset 4
 1158 002a BD46     		mov	sp, r7
 1159              	.LCFI66:
 1160              		.cfi_def_cfa_register 13
 1161              		@ sp needed
 1162 002c 5DF8047B 		ldr	r7, [sp], #4
 1163              	.LCFI67:
 1164              		.cfi_restore 7
 1165              		.cfi_def_cfa_offset 0
 1166 0030 7047     		bx	lr
 1167              	.L58:
 1168 0032 00BF     		.align	2
 1169              	.L57:
 1170 0034 00000000 		.word	sum_goal
 1171 0038 00000000 		.word	FSM_Pos_Generator_X_Y
 1172              		.cfi_endproc
 1173              	.LFE739:
 1175              		.section	.text.FSM_Pos_Generator_X_Y,"ax",%progbits
 1176              		.align	1
 1177              		.global	FSM_Pos_Generator_X_Y
 1178              		.syntax unified
 1179              		.thumb
 1180              		.thumb_func
 1181              		.fpu fpv4-sp-d16
 1183              	FSM_Pos_Generator_X_Y:
 1184              	.LFB740:
 131:Src/fsm_position_abs.c **** 
 132:Src/fsm_position_abs.c **** void FSM_Pos_Generator_X_Y(FSM_Instance *fsm)
 133:Src/fsm_position_abs.c **** {
 1185              		.loc 1 133 0
 1186              		.cfi_startproc
 1187              		@ args = 0, pretend = 0, frame = 16
 1188              		@ frame_needed = 1, uses_anonymous_args = 0
 1189              		@ link register save eliminated.
 1190 0000 80B4     		push	{r7}
 1191              	.LCFI68:
 1192              		.cfi_def_cfa_offset 4
 1193              		.cfi_offset 7, -4
 1194 0002 85B0     		sub	sp, sp, #20
 1195              	.LCFI69:
 1196              		.cfi_def_cfa_offset 24
 1197 0004 00AF     		add	r7, sp, #0
 1198              	.LCFI70:
ARM GAS  /tmp/cc3uuGnG.s 			page 24


 1199              		.cfi_def_cfa_register 7
 1200 0006 7860     		str	r0, [r7, #4]
 134:Src/fsm_position_abs.c ****   FSM_Position_Abs *fsm_pos=(FSM_Position_Abs *) fsm;
 1201              		.loc 1 134 0
 1202 0008 7B68     		ldr	r3, [r7, #4]
 1203 000a FB60     		str	r3, [r7, #12]
 135:Src/fsm_position_abs.c ****   if(fsm_pos->pos/fsm_pos->linear_speed >fsm_pos->n*pid_sum.Te)
 1204              		.loc 1 135 0
 1205 000c FB68     		ldr	r3, [r7, #12]
 1206 000e D3ED046A 		vldr.32	s13, [r3, #16]
 1207 0012 FB68     		ldr	r3, [r7, #12]
 1208 0014 D3ED057A 		vldr.32	s15, [r3, #20]
 1209 0018 86EEA77A 		vdiv.f32	s14, s13, s15
 1210 001c FB68     		ldr	r3, [r7, #12]
 1211 001e 5B6A     		ldr	r3, [r3, #36]
 1212 0020 07EE903A 		vmov	s15, r3	@ int
 1213 0024 F8EEE76A 		vcvt.f32.s32	s13, s15
 1214 0028 2B4B     		ldr	r3, .L66
 1215 002a D3ED057A 		vldr.32	s15, [r3, #20]
 1216 002e 66EEA77A 		vmul.f32	s15, s13, s15
 1217 0032 B4EEE77A 		vcmpe.f32	s14, s15
 1218 0036 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1219 003a 2BDD     		ble	.L64
 136:Src/fsm_position_abs.c ****   {
 137:Src/fsm_position_abs.c ****     sum_goal=fsm_pos->initial_sum+fsm_pos->n*fsm_pos->linear_speed*pid_sum.Te/ENCODER_STEP_DIST;
 1220              		.loc 1 137 0
 1221 003c FB68     		ldr	r3, [r7, #12]
 1222 003e 9B6A     		ldr	r3, [r3, #40]
 1223 0040 07EE903A 		vmov	s15, r3	@ int
 1224 0044 B8EEE77A 		vcvt.f32.s32	s14, s15
 1225 0048 FB68     		ldr	r3, [r7, #12]
 1226 004a 5B6A     		ldr	r3, [r3, #36]
 1227 004c 07EE903A 		vmov	s15, r3	@ int
 1228 0050 F8EEE76A 		vcvt.f32.s32	s13, s15
 1229 0054 FB68     		ldr	r3, [r7, #12]
 1230 0056 D3ED057A 		vldr.32	s15, [r3, #20]
 1231 005a 66EEA76A 		vmul.f32	s13, s13, s15
 1232 005e 1E4B     		ldr	r3, .L66
 1233 0060 D3ED057A 		vldr.32	s15, [r3, #20]
 1234 0064 26EEA76A 		vmul.f32	s12, s13, s15
 1235 0068 1C4B     		ldr	r3, .L66+4
 1236 006a 1B68     		ldr	r3, [r3]
 1237 006c 07EE903A 		vmov	s15, r3	@ int
 1238 0070 F8EEE76A 		vcvt.f32.s32	s13, s15
 1239 0074 C6EE267A 		vdiv.f32	s15, s12, s13
 1240 0078 77EE277A 		vadd.f32	s15, s14, s15
 1241 007c FDEEE77A 		vcvt.s32.f32	s15, s15
 1242 0080 17EE902A 		vmov	r2, s15	@ int
 1243 0084 164B     		ldr	r3, .L66+8
 1244 0086 1A60     		str	r2, [r3]
 138:Src/fsm_position_abs.c ****     fsm_pos->n++;
 1245              		.loc 1 138 0
 1246 0088 FB68     		ldr	r3, [r7, #12]
 1247 008a 5B6A     		ldr	r3, [r3, #36]
 1248 008c 5A1C     		adds	r2, r3, #1
 1249 008e FB68     		ldr	r3, [r7, #12]
 1250 0090 5A62     		str	r2, [r3, #36]
ARM GAS  /tmp/cc3uuGnG.s 			page 25


 139:Src/fsm_position_abs.c ****   }
 140:Src/fsm_position_abs.c ****   else
 141:Src/fsm_position_abs.c ****   {
 142:Src/fsm_position_abs.c ****     sum_goal=fsm_pos->initial_sum+fsm_pos->pos/ENCODER_STEP_DIST;
 143:Src/fsm_position_abs.c ****     fsm->run=FSM_Pos_Wait_X_Y;
 144:Src/fsm_position_abs.c ****   }
 145:Src/fsm_position_abs.c **** }
 1251              		.loc 1 145 0
 1252 0092 1BE0     		b	.L65
 1253              	.L64:
 142:Src/fsm_position_abs.c ****     fsm->run=FSM_Pos_Wait_X_Y;
 1254              		.loc 1 142 0
 1255 0094 FB68     		ldr	r3, [r7, #12]
 1256 0096 9B6A     		ldr	r3, [r3, #40]
 1257 0098 07EE903A 		vmov	s15, r3	@ int
 1258 009c B8EEE77A 		vcvt.f32.s32	s14, s15
 1259 00a0 FB68     		ldr	r3, [r7, #12]
 1260 00a2 93ED046A 		vldr.32	s12, [r3, #16]
 1261 00a6 0D4B     		ldr	r3, .L66+4
 1262 00a8 1B68     		ldr	r3, [r3]
 1263 00aa 07EE903A 		vmov	s15, r3	@ int
 1264 00ae F8EEE76A 		vcvt.f32.s32	s13, s15
 1265 00b2 C6EE267A 		vdiv.f32	s15, s12, s13
 1266 00b6 77EE277A 		vadd.f32	s15, s14, s15
 1267 00ba FDEEE77A 		vcvt.s32.f32	s15, s15
 1268 00be 17EE902A 		vmov	r2, s15	@ int
 1269 00c2 074B     		ldr	r3, .L66+8
 1270 00c4 1A60     		str	r2, [r3]
 143:Src/fsm_position_abs.c ****   }
 1271              		.loc 1 143 0
 1272 00c6 7B68     		ldr	r3, [r7, #4]
 1273 00c8 064A     		ldr	r2, .L66+12
 1274 00ca 1A60     		str	r2, [r3]
 1275              	.L65:
 1276              		.loc 1 145 0
 1277 00cc 00BF     		nop
 1278 00ce 1437     		adds	r7, r7, #20
 1279              	.LCFI71:
 1280              		.cfi_def_cfa_offset 4
 1281 00d0 BD46     		mov	sp, r7
 1282              	.LCFI72:
 1283              		.cfi_def_cfa_register 13
 1284              		@ sp needed
 1285 00d2 5DF8047B 		ldr	r7, [sp], #4
 1286              	.LCFI73:
 1287              		.cfi_restore 7
 1288              		.cfi_def_cfa_offset 0
 1289 00d6 7047     		bx	lr
 1290              	.L67:
 1291              		.align	2
 1292              	.L66:
 1293 00d8 00000000 		.word	pid_sum
 1294 00dc 00000000 		.word	ENCODER_STEP_DIST
 1295 00e0 00000000 		.word	sum_goal
 1296 00e4 00000000 		.word	FSM_Pos_Wait_X_Y
 1297              		.cfi_endproc
 1298              	.LFE740:
ARM GAS  /tmp/cc3uuGnG.s 			page 26


 1300              		.section	.text.FSM_Pos_Wait_X_Y,"ax",%progbits
 1301              		.align	1
 1302              		.global	FSM_Pos_Wait_X_Y
 1303              		.syntax unified
 1304              		.thumb
 1305              		.thumb_func
 1306              		.fpu fpv4-sp-d16
 1308              	FSM_Pos_Wait_X_Y:
 1309              	.LFB741:
 146:Src/fsm_position_abs.c **** 
 147:Src/fsm_position_abs.c **** void FSM_Pos_Wait_X_Y(FSM_Instance *fsm)
 148:Src/fsm_position_abs.c **** {
 1310              		.loc 1 148 0
 1311              		.cfi_startproc
 1312              		@ args = 0, pretend = 0, frame = 8
 1313              		@ frame_needed = 1, uses_anonymous_args = 0
 1314 0000 B0B5     		push	{r4, r5, r7, lr}
 1315              	.LCFI74:
 1316              		.cfi_def_cfa_offset 16
 1317              		.cfi_offset 4, -16
 1318              		.cfi_offset 5, -12
 1319              		.cfi_offset 7, -8
 1320              		.cfi_offset 14, -4
 1321 0002 82B0     		sub	sp, sp, #8
 1322              	.LCFI75:
 1323              		.cfi_def_cfa_offset 24
 1324 0004 00AF     		add	r7, sp, #0
 1325              	.LCFI76:
 1326              		.cfi_def_cfa_register 7
 1327 0006 7860     		str	r0, [r7, #4]
 149:Src/fsm_position_abs.c ****   if(reached(&pid_sum,sum_goal- 0.5 * (odometry.encoder_l.steps + odometry.encoder_r.steps))) fsm->
 1328              		.loc 1 149 0
 1329 0008 174B     		ldr	r3, .L71
 1330 000a 1B68     		ldr	r3, [r3]
 1331 000c 1846     		mov	r0, r3
 1332 000e FFF7FEFF 		bl	__aeabi_i2d
 1333              	.LVL19:
 1334 0012 0446     		mov	r4, r0
 1335 0014 0D46     		mov	r5, r1
 1336 0016 154B     		ldr	r3, .L71+4
 1337 0018 5A68     		ldr	r2, [r3, #4]
 1338 001a 144B     		ldr	r3, .L71+4
 1339 001c 1B69     		ldr	r3, [r3, #16]
 1340 001e 1344     		add	r3, r3, r2
 1341 0020 1846     		mov	r0, r3
 1342 0022 FFF7FEFF 		bl	__aeabi_i2d
 1343              	.LVL20:
 1344 0026 4FF00002 		mov	r2, #0
 1345 002a 114B     		ldr	r3, .L71+8
 1346 002c FFF7FEFF 		bl	__aeabi_dmul
 1347              	.LVL21:
 1348 0030 0246     		mov	r2, r0
 1349 0032 0B46     		mov	r3, r1
 1350 0034 2046     		mov	r0, r4
 1351 0036 2946     		mov	r1, r5
 1352 0038 FFF7FEFF 		bl	__aeabi_dsub
 1353              	.LVL22:
ARM GAS  /tmp/cc3uuGnG.s 			page 27


 1354 003c 0346     		mov	r3, r0
 1355 003e 0C46     		mov	r4, r1
 1356 0040 1846     		mov	r0, r3
 1357 0042 2146     		mov	r1, r4
 1358 0044 FFF7FEFF 		bl	__aeabi_d2iz
 1359              	.LVL23:
 1360 0048 0346     		mov	r3, r0
 1361 004a 1946     		mov	r1, r3
 1362 004c 0948     		ldr	r0, .L71+12
 1363 004e FFF7FEFF 		bl	reached
 1364 0052 0346     		mov	r3, r0
 1365 0054 002B     		cmp	r3, #0
 1366 0056 02D0     		beq	.L70
 1367              		.loc 1 149 0 is_stmt 0 discriminator 1
 1368 0058 7B68     		ldr	r3, [r7, #4]
 1369 005a 074A     		ldr	r2, .L71+16
 1370 005c 1A60     		str	r2, [r3]
 1371              	.L70:
 150:Src/fsm_position_abs.c **** }
 1372              		.loc 1 150 0 is_stmt 1
 1373 005e 00BF     		nop
 1374 0060 0837     		adds	r7, r7, #8
 1375              	.LCFI77:
 1376              		.cfi_def_cfa_offset 16
 1377 0062 BD46     		mov	sp, r7
 1378              	.LCFI78:
 1379              		.cfi_def_cfa_register 13
 1380              		@ sp needed
 1381 0064 B0BD     		pop	{r4, r5, r7, pc}
 1382              	.L72:
 1383 0066 00BF     		.align	2
 1384              	.L71:
 1385 0068 00000000 		.word	sum_goal
 1386 006c 00000000 		.word	odometry
 1387 0070 0000E03F 		.word	1071644672
 1388 0074 00000000 		.word	pid_sum
 1389 0078 00000000 		.word	FSM_Abs_End
 1390              		.cfi_endproc
 1391              	.LFE741:
 1393              		.text
 1394              	.Letext0:
 1395              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1396              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1397              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1398              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 1399              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 1400              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 1401              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 1402              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.3.0/include/stddef.h"
 1403              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 1404              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1405              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 1406              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 1407              		.file 14 "Inc/fsm_master.h"
 1408              		.file 15 "/usr/arm-none-eabi/include/stdlib.h"
 1409              		.file 16 "Inc/Robotronik_corp_pid.h"
 1410              		.file 17 "/usr/arm-none-eabi/include/math.h"
ARM GAS  /tmp/cc3uuGnG.s 			page 28


 1411              		.file 18 "Inc/encoder.h"
 1412              		.file 19 "Inc/odometry.h"
 1413              		.file 20 "Inc/fsm_position_abs.h"
 1414              		.file 21 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_ll_dma.h"
ARM GAS  /tmp/cc3uuGnG.s 			page 29


DEFINED SYMBOLS
                            *ABS*:0000000000000000 fsm_position_abs.c
     /tmp/cc3uuGnG.s:18     .rodata.CHANNEL_OFFSET_TAB:0000000000000000 $d
     /tmp/cc3uuGnG.s:21     .rodata.CHANNEL_OFFSET_TAB:0000000000000000 CHANNEL_OFFSET_TAB
     /tmp/cc3uuGnG.s:30     .text.FSM_Pos_Init:0000000000000000 $t
     /tmp/cc3uuGnG.s:37     .text.FSM_Pos_Init:0000000000000000 FSM_Pos_Init
     /tmp/cc3uuGnG.s:93     .text.FSM_Pos_Init:0000000000000034 $d
     /tmp/cc3uuGnG.s:106    .text.FSM_Pos_Generator:0000000000000000 FSM_Pos_Generator
     /tmp/cc3uuGnG.s:99     .text.FSM_Pos_Generator:0000000000000000 $t
     /tmp/cc3uuGnG.s:216    .text.FSM_Pos_Generator:00000000000000d8 $d
     /tmp/cc3uuGnG.s:235    .text.FSM_Pos_Wait:0000000000000000 FSM_Pos_Wait
     /tmp/cc3uuGnG.s:228    .text.FSM_Pos_Wait:0000000000000000 $t
     /tmp/cc3uuGnG.s:312    .text.FSM_Pos_Wait:0000000000000068 $d
     /tmp/cc3uuGnG.s:328    .text.FSM_Abs_End:0000000000000000 FSM_Abs_End
     /tmp/cc3uuGnG.s:321    .text.FSM_Abs_End:0000000000000000 $t
     /tmp/cc3uuGnG.s:368    .text.FSM_Angle_Init:0000000000000000 $t
     /tmp/cc3uuGnG.s:375    .text.FSM_Angle_Init:0000000000000000 FSM_Angle_Init
     /tmp/cc3uuGnG.s:433    .text.FSM_Angle_Init:0000000000000040 $d
     /tmp/cc3uuGnG.s:446    .text.FSM_Angle_Generator:0000000000000000 FSM_Angle_Generator
     /tmp/cc3uuGnG.s:439    .text.FSM_Angle_Generator:0000000000000000 $t
     /tmp/cc3uuGnG.s:556    .text.FSM_Angle_Generator:00000000000000d8 $d
     /tmp/cc3uuGnG.s:572    .text.FSM_Angle_Wait:0000000000000000 FSM_Angle_Wait
     /tmp/cc3uuGnG.s:565    .text.FSM_Angle_Wait:0000000000000000 $t
     /tmp/cc3uuGnG.s:623    .text.FSM_Angle_Wait:0000000000000034 $d
     /tmp/cc3uuGnG.s:635    .text.FSM_X_Y_Init:0000000000000000 $t
     /tmp/cc3uuGnG.s:642    .text.FSM_X_Y_Init:0000000000000000 FSM_X_Y_Init
     /tmp/cc3uuGnG.s:838    .text.FSM_X_Y_Init:00000000000001c0 $d
     /tmp/cc3uuGnG.s:845    .text.FSM_Angle_Init_X_Y:0000000000000000 $t
     /tmp/cc3uuGnG.s:852    .text.FSM_Angle_Init_X_Y:0000000000000000 FSM_Angle_Init_X_Y
     /tmp/cc3uuGnG.s:910    .text.FSM_Angle_Init_X_Y:0000000000000040 $d
     /tmp/cc3uuGnG.s:923    .text.FSM_Angle_Generator_X_Y:0000000000000000 FSM_Angle_Generator_X_Y
     /tmp/cc3uuGnG.s:916    .text.FSM_Angle_Generator_X_Y:0000000000000000 $t
     /tmp/cc3uuGnG.s:1033   .text.FSM_Angle_Generator_X_Y:00000000000000d8 $d
     /tmp/cc3uuGnG.s:1049   .text.FSM_Angle_Wait_X_Y:0000000000000000 FSM_Angle_Wait_X_Y
     /tmp/cc3uuGnG.s:1042   .text.FSM_Angle_Wait_X_Y:0000000000000000 $t
     /tmp/cc3uuGnG.s:1100   .text.FSM_Angle_Wait_X_Y:0000000000000034 $d
     /tmp/cc3uuGnG.s:1115   .text.FSM_Pos_Init_X_Y:0000000000000000 FSM_Pos_Init_X_Y
     /tmp/cc3uuGnG.s:1108   .text.FSM_Pos_Init_X_Y:0000000000000000 $t
     /tmp/cc3uuGnG.s:1170   .text.FSM_Pos_Init_X_Y:0000000000000034 $d
     /tmp/cc3uuGnG.s:1183   .text.FSM_Pos_Generator_X_Y:0000000000000000 FSM_Pos_Generator_X_Y
     /tmp/cc3uuGnG.s:1176   .text.FSM_Pos_Generator_X_Y:0000000000000000 $t
     /tmp/cc3uuGnG.s:1293   .text.FSM_Pos_Generator_X_Y:00000000000000d8 $d
     /tmp/cc3uuGnG.s:1308   .text.FSM_Pos_Wait_X_Y:0000000000000000 FSM_Pos_Wait_X_Y
     /tmp/cc3uuGnG.s:1301   .text.FSM_Pos_Wait_X_Y:0000000000000000 $t
     /tmp/cc3uuGnG.s:1385   .text.FSM_Pos_Wait_X_Y:0000000000000068 $d

UNDEFINED SYMBOLS
sum_goal
pid_sum
ENCODER_STEP_DIST
__aeabi_i2d
__aeabi_dmul
__aeabi_dsub
__aeabi_d2iz
reached
odometry
pid_diff
ARM GAS  /tmp/cc3uuGnG.s 			page 30


ENCODER_DIST
diff_goal
__aeabi_f2d
__aeabi_dadd
__aeabi_ddiv
__aeabi_d2f
pow
sqrt
acos
