ARM GAS  /tmp/ccoqfoGx.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.CHANNEL_OFFSET_TAB,"a",%progbits
  18              		.align	2
  21              	CHANNEL_OFFSET_TAB:
  22 0000 08       		.byte	8
  23 0001 1C       		.byte	28
  24 0002 30       		.byte	48
  25 0003 44       		.byte	68
  26 0004 58       		.byte	88
  27 0005 6C       		.byte	108
  28 0006 80       		.byte	-128
  29              		.comm	htim1,64,4
  30              		.comm	htim2,64,4
  31              		.comm	htim3,64,4
  32              		.comm	htim15,64,4
  33              		.section	.rodata
  34              		.align	2
  35              	.LC0:
  36 0000 5372632F 		.ascii	"Src/tim.c\000"
  36      74696D2E 
  36      6300
  37              		.section	.text.MX_TIM1_Init,"ax",%progbits
  38              		.align	1
  39              		.global	MX_TIM1_Init
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu fpv4-sp-d16
  45              	MX_TIM1_Init:
  46              	.LFB695:
  47              		.file 1 "Src/tim.c"
   1:Src/tim.c     **** /**
   2:Src/tim.c     ****   ******************************************************************************
   3:Src/tim.c     ****   * File Name          : TIM.c
   4:Src/tim.c     ****   * Description        : This file provides code for the configuration
   5:Src/tim.c     ****   *                      of the TIM instances.
   6:Src/tim.c     ****   ******************************************************************************
   7:Src/tim.c     ****   ** This notice applies to any and all portions of this file
   8:Src/tim.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/tim.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/tim.c     ****   * inserted by the user or by software development tools
  11:Src/tim.c     ****   * are owned by their respective copyright owners.
ARM GAS  /tmp/ccoqfoGx.s 			page 2


  12:Src/tim.c     ****   *
  13:Src/tim.c     ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/tim.c     ****   *
  15:Src/tim.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/tim.c     ****   * are permitted provided that the following conditions are met:
  17:Src/tim.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/tim.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/tim.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/tim.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/tim.c     ****   *      and/or other materials provided with the distribution.
  22:Src/tim.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/tim.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/tim.c     ****   *      without specific prior written permission.
  25:Src/tim.c     ****   *
  26:Src/tim.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/tim.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/tim.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/tim.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/tim.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/tim.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/tim.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/tim.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/tim.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/tim.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/tim.c     ****   *
  37:Src/tim.c     ****   ******************************************************************************
  38:Src/tim.c     ****   */
  39:Src/tim.c     **** 
  40:Src/tim.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/tim.c     **** #include "tim.h"
  42:Src/tim.c     **** 
  43:Src/tim.c     **** #include "gpio.h"
  44:Src/tim.c     **** 
  45:Src/tim.c     **** /* USER CODE BEGIN 0 */
  46:Src/tim.c     **** 
  47:Src/tim.c     **** /* USER CODE END 0 */
  48:Src/tim.c     **** 
  49:Src/tim.c     **** TIM_HandleTypeDef htim1;
  50:Src/tim.c     **** TIM_HandleTypeDef htim2;
  51:Src/tim.c     **** TIM_HandleTypeDef htim3;
  52:Src/tim.c     **** TIM_HandleTypeDef htim15;
  53:Src/tim.c     **** 
  54:Src/tim.c     **** /* TIM1 init function */
  55:Src/tim.c     **** void MX_TIM1_Init(void)
  56:Src/tim.c     **** {
  48              		.loc 1 56 0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 48
  51              		@ frame_needed = 1, uses_anonymous_args = 0
  52 0000 80B5     		push	{r7, lr}
  53              	.LCFI0:
  54              		.cfi_def_cfa_offset 8
  55              		.cfi_offset 7, -8
  56              		.cfi_offset 14, -4
  57 0002 8CB0     		sub	sp, sp, #48
  58              	.LCFI1:
  59              		.cfi_def_cfa_offset 56
ARM GAS  /tmp/ccoqfoGx.s 			page 3


  60 0004 00AF     		add	r7, sp, #0
  61              	.LCFI2:
  62              		.cfi_def_cfa_register 7
  57:Src/tim.c     ****   TIM_Encoder_InitTypeDef sConfig;
  58:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
  59:Src/tim.c     **** 
  60:Src/tim.c     ****   htim1.Instance = TIM1;
  63              		.loc 1 60 0
  64 0006 254B     		ldr	r3, .L5
  65 0008 254A     		ldr	r2, .L5+4
  66 000a 1A60     		str	r2, [r3]
  61:Src/tim.c     ****   htim1.Init.Prescaler = 0;
  67              		.loc 1 61 0
  68 000c 234B     		ldr	r3, .L5
  69 000e 0022     		movs	r2, #0
  70 0010 5A60     		str	r2, [r3, #4]
  62:Src/tim.c     ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
  71              		.loc 1 62 0
  72 0012 224B     		ldr	r3, .L5
  73 0014 0022     		movs	r2, #0
  74 0016 9A60     		str	r2, [r3, #8]
  63:Src/tim.c     ****   htim1.Init.Period = 1440-1;
  75              		.loc 1 63 0
  76 0018 204B     		ldr	r3, .L5
  77 001a 40F29F52 		movw	r2, #1439
  78 001e DA60     		str	r2, [r3, #12]
  64:Src/tim.c     ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  79              		.loc 1 64 0
  80 0020 1E4B     		ldr	r3, .L5
  81 0022 0022     		movs	r2, #0
  82 0024 1A61     		str	r2, [r3, #16]
  65:Src/tim.c     ****   htim1.Init.RepetitionCounter = 0;
  83              		.loc 1 65 0
  84 0026 1D4B     		ldr	r3, .L5
  85 0028 0022     		movs	r2, #0
  86 002a 5A61     		str	r2, [r3, #20]
  66:Src/tim.c     ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  87              		.loc 1 66 0
  88 002c 1B4B     		ldr	r3, .L5
  89 002e 0022     		movs	r2, #0
  90 0030 9A61     		str	r2, [r3, #24]
  67:Src/tim.c     ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
  91              		.loc 1 67 0
  92 0032 0323     		movs	r3, #3
  93 0034 FB60     		str	r3, [r7, #12]
  68:Src/tim.c     ****   sConfig.IC1Polarity = TIM_ICPOLARITY_FALLING;
  94              		.loc 1 68 0
  95 0036 0223     		movs	r3, #2
  96 0038 3B61     		str	r3, [r7, #16]
  69:Src/tim.c     ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
  97              		.loc 1 69 0
  98 003a 0123     		movs	r3, #1
  99 003c 7B61     		str	r3, [r7, #20]
  70:Src/tim.c     ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 100              		.loc 1 70 0
 101 003e 0023     		movs	r3, #0
 102 0040 BB61     		str	r3, [r7, #24]
ARM GAS  /tmp/ccoqfoGx.s 			page 4


  71:Src/tim.c     ****   sConfig.IC1Filter = 0;
 103              		.loc 1 71 0
 104 0042 0023     		movs	r3, #0
 105 0044 FB61     		str	r3, [r7, #28]
  72:Src/tim.c     ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 106              		.loc 1 72 0
 107 0046 0023     		movs	r3, #0
 108 0048 3B62     		str	r3, [r7, #32]
  73:Src/tim.c     ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 109              		.loc 1 73 0
 110 004a 0123     		movs	r3, #1
 111 004c 7B62     		str	r3, [r7, #36]
  74:Src/tim.c     ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 112              		.loc 1 74 0
 113 004e 0023     		movs	r3, #0
 114 0050 BB62     		str	r3, [r7, #40]
  75:Src/tim.c     ****   sConfig.IC2Filter = 0;
 115              		.loc 1 75 0
 116 0052 0023     		movs	r3, #0
 117 0054 FB62     		str	r3, [r7, #44]
  76:Src/tim.c     ****   if (HAL_TIM_Encoder_Init(&htim1, &sConfig) != HAL_OK)
 118              		.loc 1 76 0
 119 0056 07F10C03 		add	r3, r7, #12
 120 005a 1946     		mov	r1, r3
 121 005c 0F48     		ldr	r0, .L5
 122 005e FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 123 0062 0346     		mov	r3, r0
 124 0064 002B     		cmp	r3, #0
 125 0066 03D0     		beq	.L2
  77:Src/tim.c     ****   {
  78:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 126              		.loc 1 78 0
 127 0068 4E21     		movs	r1, #78
 128 006a 0E48     		ldr	r0, .L5+8
 129 006c FFF7FEFF 		bl	_Error_Handler
 130              	.L2:
  79:Src/tim.c     ****   }
  80:Src/tim.c     **** 
  81:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 131              		.loc 1 81 0
 132 0070 0023     		movs	r3, #0
 133 0072 3B60     		str	r3, [r7]
  82:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 134              		.loc 1 82 0
 135 0074 0023     		movs	r3, #0
 136 0076 7B60     		str	r3, [r7, #4]
  83:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 137              		.loc 1 83 0
 138 0078 0023     		movs	r3, #0
 139 007a BB60     		str	r3, [r7, #8]
  84:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 140              		.loc 1 84 0
 141 007c 3B46     		mov	r3, r7
 142 007e 1946     		mov	r1, r3
 143 0080 0648     		ldr	r0, .L5
 144 0082 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 145 0086 0346     		mov	r3, r0
ARM GAS  /tmp/ccoqfoGx.s 			page 5


 146 0088 002B     		cmp	r3, #0
 147 008a 03D0     		beq	.L4
  85:Src/tim.c     ****   {
  86:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 148              		.loc 1 86 0
 149 008c 5621     		movs	r1, #86
 150 008e 0548     		ldr	r0, .L5+8
 151 0090 FFF7FEFF 		bl	_Error_Handler
 152              	.L4:
  87:Src/tim.c     ****   }
  88:Src/tim.c     **** 
  89:Src/tim.c     **** }
 153              		.loc 1 89 0
 154 0094 00BF     		nop
 155 0096 3037     		adds	r7, r7, #48
 156              	.LCFI3:
 157              		.cfi_def_cfa_offset 8
 158 0098 BD46     		mov	sp, r7
 159              	.LCFI4:
 160              		.cfi_def_cfa_register 13
 161              		@ sp needed
 162 009a 80BD     		pop	{r7, pc}
 163              	.L6:
 164              		.align	2
 165              	.L5:
 166 009c 00000000 		.word	htim1
 167 00a0 002C0140 		.word	1073818624
 168 00a4 00000000 		.word	.LC0
 169              		.cfi_endproc
 170              	.LFE695:
 172              		.section	.text.MX_TIM2_Init,"ax",%progbits
 173              		.align	1
 174              		.global	MX_TIM2_Init
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
 178              		.fpu fpv4-sp-d16
 180              	MX_TIM2_Init:
 181              	.LFB696:
  90:Src/tim.c     **** /* TIM2 init function */
  91:Src/tim.c     **** void MX_TIM2_Init(void)
  92:Src/tim.c     **** {
 182              		.loc 1 92 0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 48
 185              		@ frame_needed = 1, uses_anonymous_args = 0
 186 0000 80B5     		push	{r7, lr}
 187              	.LCFI5:
 188              		.cfi_def_cfa_offset 8
 189              		.cfi_offset 7, -8
 190              		.cfi_offset 14, -4
 191 0002 8CB0     		sub	sp, sp, #48
 192              	.LCFI6:
 193              		.cfi_def_cfa_offset 56
 194 0004 00AF     		add	r7, sp, #0
 195              	.LCFI7:
 196              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccoqfoGx.s 			page 6


  93:Src/tim.c     ****   TIM_Encoder_InitTypeDef sConfig;
  94:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
  95:Src/tim.c     **** 
  96:Src/tim.c     ****   htim2.Instance = TIM2;
 197              		.loc 1 96 0
 198 0006 234B     		ldr	r3, .L11
 199 0008 4FF08042 		mov	r2, #1073741824
 200 000c 1A60     		str	r2, [r3]
  97:Src/tim.c     ****   htim2.Init.Prescaler = 0;
 201              		.loc 1 97 0
 202 000e 214B     		ldr	r3, .L11
 203 0010 0022     		movs	r2, #0
 204 0012 5A60     		str	r2, [r3, #4]
  98:Src/tim.c     ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 205              		.loc 1 98 0
 206 0014 1F4B     		ldr	r3, .L11
 207 0016 0022     		movs	r2, #0
 208 0018 9A60     		str	r2, [r3, #8]
  99:Src/tim.c     ****   htim2.Init.Period = 1440-1;
 209              		.loc 1 99 0
 210 001a 1E4B     		ldr	r3, .L11
 211 001c 40F29F52 		movw	r2, #1439
 212 0020 DA60     		str	r2, [r3, #12]
 100:Src/tim.c     ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 213              		.loc 1 100 0
 214 0022 1C4B     		ldr	r3, .L11
 215 0024 0022     		movs	r2, #0
 216 0026 1A61     		str	r2, [r3, #16]
 101:Src/tim.c     ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 217              		.loc 1 101 0
 218 0028 1A4B     		ldr	r3, .L11
 219 002a 0022     		movs	r2, #0
 220 002c 9A61     		str	r2, [r3, #24]
 102:Src/tim.c     ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 221              		.loc 1 102 0
 222 002e 0323     		movs	r3, #3
 223 0030 FB60     		str	r3, [r7, #12]
 103:Src/tim.c     ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 224              		.loc 1 103 0
 225 0032 0023     		movs	r3, #0
 226 0034 3B61     		str	r3, [r7, #16]
 104:Src/tim.c     ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 227              		.loc 1 104 0
 228 0036 0123     		movs	r3, #1
 229 0038 7B61     		str	r3, [r7, #20]
 105:Src/tim.c     ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 230              		.loc 1 105 0
 231 003a 0023     		movs	r3, #0
 232 003c BB61     		str	r3, [r7, #24]
 106:Src/tim.c     ****   sConfig.IC1Filter = 0;
 233              		.loc 1 106 0
 234 003e 0023     		movs	r3, #0
 235 0040 FB61     		str	r3, [r7, #28]
 107:Src/tim.c     ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 236              		.loc 1 107 0
 237 0042 0023     		movs	r3, #0
 238 0044 3B62     		str	r3, [r7, #32]
ARM GAS  /tmp/ccoqfoGx.s 			page 7


 108:Src/tim.c     ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 239              		.loc 1 108 0
 240 0046 0123     		movs	r3, #1
 241 0048 7B62     		str	r3, [r7, #36]
 109:Src/tim.c     ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 242              		.loc 1 109 0
 243 004a 0023     		movs	r3, #0
 244 004c BB62     		str	r3, [r7, #40]
 110:Src/tim.c     ****   sConfig.IC2Filter = 0;
 245              		.loc 1 110 0
 246 004e 0023     		movs	r3, #0
 247 0050 FB62     		str	r3, [r7, #44]
 111:Src/tim.c     ****   if (HAL_TIM_Encoder_Init(&htim2, &sConfig) != HAL_OK)
 248              		.loc 1 111 0
 249 0052 07F10C03 		add	r3, r7, #12
 250 0056 1946     		mov	r1, r3
 251 0058 0E48     		ldr	r0, .L11
 252 005a FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 253 005e 0346     		mov	r3, r0
 254 0060 002B     		cmp	r3, #0
 255 0062 03D0     		beq	.L8
 112:Src/tim.c     ****   {
 113:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 256              		.loc 1 113 0
 257 0064 7121     		movs	r1, #113
 258 0066 0C48     		ldr	r0, .L11+4
 259 0068 FFF7FEFF 		bl	_Error_Handler
 260              	.L8:
 114:Src/tim.c     ****   }
 115:Src/tim.c     **** 
 116:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 261              		.loc 1 116 0
 262 006c 0023     		movs	r3, #0
 263 006e 3B60     		str	r3, [r7]
 117:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 264              		.loc 1 117 0
 265 0070 0023     		movs	r3, #0
 266 0072 BB60     		str	r3, [r7, #8]
 118:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 267              		.loc 1 118 0
 268 0074 3B46     		mov	r3, r7
 269 0076 1946     		mov	r1, r3
 270 0078 0648     		ldr	r0, .L11
 271 007a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 272 007e 0346     		mov	r3, r0
 273 0080 002B     		cmp	r3, #0
 274 0082 03D0     		beq	.L10
 119:Src/tim.c     ****   {
 120:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 275              		.loc 1 120 0
 276 0084 7821     		movs	r1, #120
 277 0086 0448     		ldr	r0, .L11+4
 278 0088 FFF7FEFF 		bl	_Error_Handler
 279              	.L10:
 121:Src/tim.c     ****   }
 122:Src/tim.c     **** 
 123:Src/tim.c     **** }
ARM GAS  /tmp/ccoqfoGx.s 			page 8


 280              		.loc 1 123 0
 281 008c 00BF     		nop
 282 008e 3037     		adds	r7, r7, #48
 283              	.LCFI8:
 284              		.cfi_def_cfa_offset 8
 285 0090 BD46     		mov	sp, r7
 286              	.LCFI9:
 287              		.cfi_def_cfa_register 13
 288              		@ sp needed
 289 0092 80BD     		pop	{r7, pc}
 290              	.L12:
 291              		.align	2
 292              	.L11:
 293 0094 00000000 		.word	htim2
 294 0098 00000000 		.word	.LC0
 295              		.cfi_endproc
 296              	.LFE696:
 298              		.section	.text.MX_TIM3_Init,"ax",%progbits
 299              		.align	1
 300              		.global	MX_TIM3_Init
 301              		.syntax unified
 302              		.thumb
 303              		.thumb_func
 304              		.fpu fpv4-sp-d16
 306              	MX_TIM3_Init:
 307              	.LFB697:
 124:Src/tim.c     **** /* TIM3 init function */
 125:Src/tim.c     **** void MX_TIM3_Init(void)
 126:Src/tim.c     **** {
 308              		.loc 1 126 0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 56
 311              		@ frame_needed = 1, uses_anonymous_args = 0
 312 0000 80B5     		push	{r7, lr}
 313              	.LCFI10:
 314              		.cfi_def_cfa_offset 8
 315              		.cfi_offset 7, -8
 316              		.cfi_offset 14, -4
 317 0002 8EB0     		sub	sp, sp, #56
 318              	.LCFI11:
 319              		.cfi_def_cfa_offset 64
 320 0004 00AF     		add	r7, sp, #0
 321              	.LCFI12:
 322              		.cfi_def_cfa_register 7
 127:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 128:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 129:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
 130:Src/tim.c     **** 
 131:Src/tim.c     ****   htim3.Instance = TIM3;
 323              		.loc 1 131 0
 324 0006 384B     		ldr	r3, .L20
 325 0008 384A     		ldr	r2, .L20+4
 326 000a 1A60     		str	r2, [r3]
 132:Src/tim.c     ****   htim3.Init.Prescaler = 1250-1;
 327              		.loc 1 132 0
 328 000c 364B     		ldr	r3, .L20
 329 000e 40F2E142 		movw	r2, #1249
ARM GAS  /tmp/ccoqfoGx.s 			page 9


 330 0012 5A60     		str	r2, [r3, #4]
 133:Src/tim.c     ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 331              		.loc 1 133 0
 332 0014 344B     		ldr	r3, .L20
 333 0016 0022     		movs	r2, #0
 334 0018 9A60     		str	r2, [r3, #8]
 134:Src/tim.c     ****   htim3.Init.Period = 255-1;
 335              		.loc 1 134 0
 336 001a 334B     		ldr	r3, .L20
 337 001c FE22     		movs	r2, #254
 338 001e DA60     		str	r2, [r3, #12]
 135:Src/tim.c     ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 339              		.loc 1 135 0
 340 0020 314B     		ldr	r3, .L20
 341 0022 0022     		movs	r2, #0
 342 0024 1A61     		str	r2, [r3, #16]
 136:Src/tim.c     ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 343              		.loc 1 136 0
 344 0026 304B     		ldr	r3, .L20
 345 0028 0022     		movs	r2, #0
 346 002a 9A61     		str	r2, [r3, #24]
 137:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 347              		.loc 1 137 0
 348 002c 2E48     		ldr	r0, .L20
 349 002e FFF7FEFF 		bl	HAL_TIM_Base_Init
 350 0032 0346     		mov	r3, r0
 351 0034 002B     		cmp	r3, #0
 352 0036 03D0     		beq	.L14
 138:Src/tim.c     ****   {
 139:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 353              		.loc 1 139 0
 354 0038 8B21     		movs	r1, #139
 355 003a 2D48     		ldr	r0, .L20+8
 356 003c FFF7FEFF 		bl	_Error_Handler
 357              	.L14:
 140:Src/tim.c     ****   }
 141:Src/tim.c     **** 
 142:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 358              		.loc 1 142 0
 359 0040 4FF48053 		mov	r3, #4096
 360 0044 BB62     		str	r3, [r7, #40]
 143:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 361              		.loc 1 143 0
 362 0046 07F12803 		add	r3, r7, #40
 363 004a 1946     		mov	r1, r3
 364 004c 2648     		ldr	r0, .L20
 365 004e FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 366 0052 0346     		mov	r3, r0
 367 0054 002B     		cmp	r3, #0
 368 0056 03D0     		beq	.L15
 144:Src/tim.c     ****   {
 145:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 369              		.loc 1 145 0
 370 0058 9121     		movs	r1, #145
 371 005a 2548     		ldr	r0, .L20+8
 372 005c FFF7FEFF 		bl	_Error_Handler
 373              	.L15:
ARM GAS  /tmp/ccoqfoGx.s 			page 10


 146:Src/tim.c     ****   }
 147:Src/tim.c     **** 
 148:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 374              		.loc 1 148 0
 375 0060 2148     		ldr	r0, .L20
 376 0062 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 377 0066 0346     		mov	r3, r0
 378 0068 002B     		cmp	r3, #0
 379 006a 03D0     		beq	.L16
 149:Src/tim.c     ****   {
 150:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 380              		.loc 1 150 0
 381 006c 9621     		movs	r1, #150
 382 006e 2048     		ldr	r0, .L20+8
 383 0070 FFF7FEFF 		bl	_Error_Handler
 384              	.L16:
 151:Src/tim.c     ****   }
 152:Src/tim.c     **** 
 153:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 385              		.loc 1 153 0
 386 0074 0023     		movs	r3, #0
 387 0076 FB61     		str	r3, [r7, #28]
 154:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 388              		.loc 1 154 0
 389 0078 0023     		movs	r3, #0
 390 007a 7B62     		str	r3, [r7, #36]
 155:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 391              		.loc 1 155 0
 392 007c 07F11C03 		add	r3, r7, #28
 393 0080 1946     		mov	r1, r3
 394 0082 1948     		ldr	r0, .L20
 395 0084 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 396 0088 0346     		mov	r3, r0
 397 008a 002B     		cmp	r3, #0
 398 008c 03D0     		beq	.L17
 156:Src/tim.c     ****   {
 157:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 399              		.loc 1 157 0
 400 008e 9D21     		movs	r1, #157
 401 0090 1748     		ldr	r0, .L20+8
 402 0092 FFF7FEFF 		bl	_Error_Handler
 403              	.L17:
 158:Src/tim.c     ****   }
 159:Src/tim.c     **** 
 160:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 404              		.loc 1 160 0
 405 0096 6023     		movs	r3, #96
 406 0098 3B60     		str	r3, [r7]
 161:Src/tim.c     ****   sConfigOC.Pulse = 0;
 407              		.loc 1 161 0
 408 009a 0023     		movs	r3, #0
 409 009c 7B60     		str	r3, [r7, #4]
 162:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 410              		.loc 1 162 0
 411 009e 0023     		movs	r3, #0
 412 00a0 BB60     		str	r3, [r7, #8]
 163:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
ARM GAS  /tmp/ccoqfoGx.s 			page 11


 413              		.loc 1 163 0
 414 00a2 0023     		movs	r3, #0
 415 00a4 3B61     		str	r3, [r7, #16]
 164:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 416              		.loc 1 164 0
 417 00a6 3B46     		mov	r3, r7
 418 00a8 0022     		movs	r2, #0
 419 00aa 1946     		mov	r1, r3
 420 00ac 0E48     		ldr	r0, .L20
 421 00ae FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 422 00b2 0346     		mov	r3, r0
 423 00b4 002B     		cmp	r3, #0
 424 00b6 03D0     		beq	.L18
 165:Src/tim.c     ****   {
 166:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 425              		.loc 1 166 0
 426 00b8 A621     		movs	r1, #166
 427 00ba 0D48     		ldr	r0, .L20+8
 428 00bc FFF7FEFF 		bl	_Error_Handler
 429              	.L18:
 167:Src/tim.c     ****   }
 168:Src/tim.c     **** 
 169:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 430              		.loc 1 169 0
 431 00c0 3B46     		mov	r3, r7
 432 00c2 0422     		movs	r2, #4
 433 00c4 1946     		mov	r1, r3
 434 00c6 0848     		ldr	r0, .L20
 435 00c8 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 436 00cc 0346     		mov	r3, r0
 437 00ce 002B     		cmp	r3, #0
 438 00d0 03D0     		beq	.L19
 170:Src/tim.c     ****   {
 171:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 439              		.loc 1 171 0
 440 00d2 AB21     		movs	r1, #171
 441 00d4 0648     		ldr	r0, .L20+8
 442 00d6 FFF7FEFF 		bl	_Error_Handler
 443              	.L19:
 172:Src/tim.c     ****   }
 173:Src/tim.c     **** 
 174:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim3);
 444              		.loc 1 174 0
 445 00da 0348     		ldr	r0, .L20
 446 00dc FFF7FEFF 		bl	HAL_TIM_MspPostInit
 175:Src/tim.c     **** 
 176:Src/tim.c     **** }
 447              		.loc 1 176 0
 448 00e0 00BF     		nop
 449 00e2 3837     		adds	r7, r7, #56
 450              	.LCFI13:
 451              		.cfi_def_cfa_offset 8
 452 00e4 BD46     		mov	sp, r7
 453              	.LCFI14:
 454              		.cfi_def_cfa_register 13
 455              		@ sp needed
 456 00e6 80BD     		pop	{r7, pc}
ARM GAS  /tmp/ccoqfoGx.s 			page 12


 457              	.L21:
 458              		.align	2
 459              	.L20:
 460 00e8 00000000 		.word	htim3
 461 00ec 00040040 		.word	1073742848
 462 00f0 00000000 		.word	.LC0
 463              		.cfi_endproc
 464              	.LFE697:
 466              		.section	.text.MX_TIM15_Init,"ax",%progbits
 467              		.align	1
 468              		.global	MX_TIM15_Init
 469              		.syntax unified
 470              		.thumb
 471              		.thumb_func
 472              		.fpu fpv4-sp-d16
 474              	MX_TIM15_Init:
 475              	.LFB698:
 177:Src/tim.c     **** /* TIM15 init function */
 178:Src/tim.c     **** void MX_TIM15_Init(void)
 179:Src/tim.c     **** {
 476              		.loc 1 179 0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 32
 479              		@ frame_needed = 1, uses_anonymous_args = 0
 480 0000 80B5     		push	{r7, lr}
 481              	.LCFI15:
 482              		.cfi_def_cfa_offset 8
 483              		.cfi_offset 7, -8
 484              		.cfi_offset 14, -4
 485 0002 88B0     		sub	sp, sp, #32
 486              	.LCFI16:
 487              		.cfi_def_cfa_offset 40
 488 0004 00AF     		add	r7, sp, #0
 489              	.LCFI17:
 490              		.cfi_def_cfa_register 7
 180:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 181:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 182:Src/tim.c     **** 
 183:Src/tim.c     ****   htim15.Instance = TIM15;
 491              		.loc 1 183 0
 492 0006 224B     		ldr	r3, .L27
 493 0008 224A     		ldr	r2, .L27+4
 494 000a 1A60     		str	r2, [r3]
 184:Src/tim.c     ****   htim15.Init.Prescaler = 1000-1;
 495              		.loc 1 184 0
 496 000c 204B     		ldr	r3, .L27
 497 000e 40F2E732 		movw	r2, #999
 498 0012 5A60     		str	r2, [r3, #4]
 185:Src/tim.c     ****   htim15.Init.CounterMode = TIM_COUNTERMODE_UP;
 499              		.loc 1 185 0
 500 0014 1E4B     		ldr	r3, .L27
 501 0016 0022     		movs	r2, #0
 502 0018 9A60     		str	r2, [r3, #8]
 186:Src/tim.c     ****   htim15.Init.Period = 10-1;
 503              		.loc 1 186 0
 504 001a 1D4B     		ldr	r3, .L27
 505 001c 0922     		movs	r2, #9
ARM GAS  /tmp/ccoqfoGx.s 			page 13


 506 001e DA60     		str	r2, [r3, #12]
 187:Src/tim.c     ****   htim15.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 507              		.loc 1 187 0
 508 0020 1B4B     		ldr	r3, .L27
 509 0022 0022     		movs	r2, #0
 510 0024 1A61     		str	r2, [r3, #16]
 188:Src/tim.c     ****   htim15.Init.RepetitionCounter = 0;
 511              		.loc 1 188 0
 512 0026 1A4B     		ldr	r3, .L27
 513 0028 0022     		movs	r2, #0
 514 002a 5A61     		str	r2, [r3, #20]
 189:Src/tim.c     ****   htim15.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 515              		.loc 1 189 0
 516 002c 184B     		ldr	r3, .L27
 517 002e 0022     		movs	r2, #0
 518 0030 9A61     		str	r2, [r3, #24]
 190:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim15) != HAL_OK)
 519              		.loc 1 190 0
 520 0032 1748     		ldr	r0, .L27
 521 0034 FFF7FEFF 		bl	HAL_TIM_Base_Init
 522 0038 0346     		mov	r3, r0
 523 003a 002B     		cmp	r3, #0
 524 003c 03D0     		beq	.L23
 191:Src/tim.c     ****   {
 192:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 525              		.loc 1 192 0
 526 003e C021     		movs	r1, #192
 527 0040 1548     		ldr	r0, .L27+8
 528 0042 FFF7FEFF 		bl	_Error_Handler
 529              	.L23:
 193:Src/tim.c     ****   }
 194:Src/tim.c     **** 
 195:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 530              		.loc 1 195 0
 531 0046 4FF48053 		mov	r3, #4096
 532 004a 3B61     		str	r3, [r7, #16]
 196:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim15, &sClockSourceConfig) != HAL_OK)
 533              		.loc 1 196 0
 534 004c 07F11003 		add	r3, r7, #16
 535 0050 1946     		mov	r1, r3
 536 0052 0F48     		ldr	r0, .L27
 537 0054 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 538 0058 0346     		mov	r3, r0
 539 005a 002B     		cmp	r3, #0
 540 005c 03D0     		beq	.L24
 197:Src/tim.c     ****   {
 198:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 541              		.loc 1 198 0
 542 005e C621     		movs	r1, #198
 543 0060 0D48     		ldr	r0, .L27+8
 544 0062 FFF7FEFF 		bl	_Error_Handler
 545              	.L24:
 199:Src/tim.c     ****   }
 200:Src/tim.c     **** 
 201:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 546              		.loc 1 201 0
 547 0066 0023     		movs	r3, #0
ARM GAS  /tmp/ccoqfoGx.s 			page 14


 548 0068 7B60     		str	r3, [r7, #4]
 202:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 549              		.loc 1 202 0
 550 006a 0023     		movs	r3, #0
 551 006c FB60     		str	r3, [r7, #12]
 203:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim15, &sMasterConfig) != HAL_OK)
 552              		.loc 1 203 0
 553 006e 3B1D     		adds	r3, r7, #4
 554 0070 1946     		mov	r1, r3
 555 0072 0748     		ldr	r0, .L27
 556 0074 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 557 0078 0346     		mov	r3, r0
 558 007a 002B     		cmp	r3, #0
 559 007c 03D0     		beq	.L26
 204:Src/tim.c     ****   {
 205:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 560              		.loc 1 205 0
 561 007e CD21     		movs	r1, #205
 562 0080 0548     		ldr	r0, .L27+8
 563 0082 FFF7FEFF 		bl	_Error_Handler
 564              	.L26:
 206:Src/tim.c     ****   }
 207:Src/tim.c     **** 
 208:Src/tim.c     **** }
 565              		.loc 1 208 0
 566 0086 00BF     		nop
 567 0088 2037     		adds	r7, r7, #32
 568              	.LCFI18:
 569              		.cfi_def_cfa_offset 8
 570 008a BD46     		mov	sp, r7
 571              	.LCFI19:
 572              		.cfi_def_cfa_register 13
 573              		@ sp needed
 574 008c 80BD     		pop	{r7, pc}
 575              	.L28:
 576 008e 00BF     		.align	2
 577              	.L27:
 578 0090 00000000 		.word	htim15
 579 0094 00400140 		.word	1073823744
 580 0098 00000000 		.word	.LC0
 581              		.cfi_endproc
 582              	.LFE698:
 584              		.section	.text.HAL_TIM_Encoder_MspInit,"ax",%progbits
 585              		.align	1
 586              		.global	HAL_TIM_Encoder_MspInit
 587              		.syntax unified
 588              		.thumb
 589              		.thumb_func
 590              		.fpu fpv4-sp-d16
 592              	HAL_TIM_Encoder_MspInit:
 593              	.LFB699:
 209:Src/tim.c     **** 
 210:Src/tim.c     **** void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* tim_encoderHandle)
 211:Src/tim.c     **** {
 594              		.loc 1 211 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 40
ARM GAS  /tmp/ccoqfoGx.s 			page 15


 597              		@ frame_needed = 1, uses_anonymous_args = 0
 598 0000 80B5     		push	{r7, lr}
 599              	.LCFI20:
 600              		.cfi_def_cfa_offset 8
 601              		.cfi_offset 7, -8
 602              		.cfi_offset 14, -4
 603 0002 8AB0     		sub	sp, sp, #40
 604              	.LCFI21:
 605              		.cfi_def_cfa_offset 48
 606 0004 00AF     		add	r7, sp, #0
 607              	.LCFI22:
 608              		.cfi_def_cfa_register 7
 609 0006 7860     		str	r0, [r7, #4]
 212:Src/tim.c     **** 
 213:Src/tim.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 214:Src/tim.c     ****   if(tim_encoderHandle->Instance==TIM1)
 610              		.loc 1 214 0
 611 0008 7B68     		ldr	r3, [r7, #4]
 612 000a 1B68     		ldr	r3, [r3]
 613 000c 274A     		ldr	r2, .L33
 614 000e 9342     		cmp	r3, r2
 615 0010 26D1     		bne	.L30
 616              	.LBB2:
 215:Src/tim.c     ****   {
 216:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 0 */
 217:Src/tim.c     **** 
 218:Src/tim.c     ****   /* USER CODE END TIM1_MspInit 0 */
 219:Src/tim.c     ****     /* TIM1 clock enable */
 220:Src/tim.c     ****     __HAL_RCC_TIM1_CLK_ENABLE();
 617              		.loc 1 220 0
 618 0012 274B     		ldr	r3, .L33+4
 619 0014 9B69     		ldr	r3, [r3, #24]
 620 0016 264A     		ldr	r2, .L33+4
 621 0018 43F40063 		orr	r3, r3, #2048
 622 001c 9361     		str	r3, [r2, #24]
 623 001e 244B     		ldr	r3, .L33+4
 624 0020 9B69     		ldr	r3, [r3, #24]
 625 0022 03F40063 		and	r3, r3, #2048
 626 0026 3B61     		str	r3, [r7, #16]
 627 0028 3B69     		ldr	r3, [r7, #16]
 628              	.LBE2:
 221:Src/tim.c     ****   
 222:Src/tim.c     ****     /**TIM1 GPIO Configuration    
 223:Src/tim.c     ****     PA8     ------> TIM1_CH1
 224:Src/tim.c     ****     PA9     ------> TIM1_CH2 
 225:Src/tim.c     ****     */
 226:Src/tim.c     ****     GPIO_InitStruct.Pin = TIM1_CH1_Pin|TIM1_CH2_Pin;
 629              		.loc 1 226 0
 630 002a 4FF44073 		mov	r3, #768
 631 002e 7B61     		str	r3, [r7, #20]
 227:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 632              		.loc 1 227 0
 633 0030 0223     		movs	r3, #2
 634 0032 BB61     		str	r3, [r7, #24]
 228:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 635              		.loc 1 228 0
 636 0034 0123     		movs	r3, #1
ARM GAS  /tmp/ccoqfoGx.s 			page 16


 637 0036 FB61     		str	r3, [r7, #28]
 229:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 638              		.loc 1 229 0
 639 0038 0023     		movs	r3, #0
 640 003a 3B62     		str	r3, [r7, #32]
 230:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF6_TIM1;
 641              		.loc 1 230 0
 642 003c 0623     		movs	r3, #6
 643 003e 7B62     		str	r3, [r7, #36]
 231:Src/tim.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 644              		.loc 1 231 0
 645 0040 07F11403 		add	r3, r7, #20
 646 0044 1946     		mov	r1, r3
 647 0046 4FF09040 		mov	r0, #1207959552
 648 004a FFF7FEFF 		bl	HAL_GPIO_Init
 232:Src/tim.c     **** 
 233:Src/tim.c     ****     /* TIM1 interrupt Init */
 234:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM1_BRK_TIM15_IRQn, 0, 0);
 649              		.loc 1 234 0
 650 004e 0022     		movs	r2, #0
 651 0050 0021     		movs	r1, #0
 652 0052 1820     		movs	r0, #24
 653 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 235:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM1_BRK_TIM15_IRQn);
 654              		.loc 1 235 0
 655 0058 1820     		movs	r0, #24
 656 005a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 236:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 237:Src/tim.c     **** 
 238:Src/tim.c     ****   /* USER CODE END TIM1_MspInit 1 */
 239:Src/tim.c     ****   }
 240:Src/tim.c     ****   else if(tim_encoderHandle->Instance==TIM2)
 241:Src/tim.c     ****   {
 242:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 0 */
 243:Src/tim.c     **** 
 244:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 0 */
 245:Src/tim.c     ****     /* TIM2 clock enable */
 246:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_ENABLE();
 247:Src/tim.c     ****   
 248:Src/tim.c     ****     /**TIM2 GPIO Configuration    
 249:Src/tim.c     ****     PA0     ------> TIM2_CH1
 250:Src/tim.c     ****     PA1     ------> TIM2_CH2 
 251:Src/tim.c     ****     */
 252:Src/tim.c     ****     GPIO_InitStruct.Pin = TIM2_CH1_Pin|TIM2_CH2_Pin;
 253:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 254:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 255:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 256:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 257:Src/tim.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 258:Src/tim.c     **** 
 259:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 260:Src/tim.c     **** 
 261:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 1 */
 262:Src/tim.c     ****   }
 263:Src/tim.c     **** }
 657              		.loc 1 263 0
 658 005e 21E0     		b	.L32
ARM GAS  /tmp/ccoqfoGx.s 			page 17


 659              	.L30:
 240:Src/tim.c     ****   {
 660              		.loc 1 240 0
 661 0060 7B68     		ldr	r3, [r7, #4]
 662 0062 1B68     		ldr	r3, [r3]
 663 0064 B3F1804F 		cmp	r3, #1073741824
 664 0068 1CD1     		bne	.L32
 665              	.LBB3:
 246:Src/tim.c     ****   
 666              		.loc 1 246 0
 667 006a 114B     		ldr	r3, .L33+4
 668 006c DB69     		ldr	r3, [r3, #28]
 669 006e 104A     		ldr	r2, .L33+4
 670 0070 43F00103 		orr	r3, r3, #1
 671 0074 D361     		str	r3, [r2, #28]
 672 0076 0E4B     		ldr	r3, .L33+4
 673 0078 DB69     		ldr	r3, [r3, #28]
 674 007a 03F00103 		and	r3, r3, #1
 675 007e FB60     		str	r3, [r7, #12]
 676 0080 FB68     		ldr	r3, [r7, #12]
 677              	.LBE3:
 252:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 678              		.loc 1 252 0
 679 0082 0323     		movs	r3, #3
 680 0084 7B61     		str	r3, [r7, #20]
 253:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 681              		.loc 1 253 0
 682 0086 0223     		movs	r3, #2
 683 0088 BB61     		str	r3, [r7, #24]
 254:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 684              		.loc 1 254 0
 685 008a 0123     		movs	r3, #1
 686 008c FB61     		str	r3, [r7, #28]
 255:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 687              		.loc 1 255 0
 688 008e 0023     		movs	r3, #0
 689 0090 3B62     		str	r3, [r7, #32]
 256:Src/tim.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 690              		.loc 1 256 0
 691 0092 0123     		movs	r3, #1
 692 0094 7B62     		str	r3, [r7, #36]
 257:Src/tim.c     **** 
 693              		.loc 1 257 0
 694 0096 07F11403 		add	r3, r7, #20
 695 009a 1946     		mov	r1, r3
 696 009c 4FF09040 		mov	r0, #1207959552
 697 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 698              	.L32:
 699              		.loc 1 263 0
 700 00a4 00BF     		nop
 701 00a6 2837     		adds	r7, r7, #40
 702              	.LCFI23:
 703              		.cfi_def_cfa_offset 8
 704 00a8 BD46     		mov	sp, r7
 705              	.LCFI24:
 706              		.cfi_def_cfa_register 13
 707              		@ sp needed
ARM GAS  /tmp/ccoqfoGx.s 			page 18


 708 00aa 80BD     		pop	{r7, pc}
 709              	.L34:
 710              		.align	2
 711              	.L33:
 712 00ac 002C0140 		.word	1073818624
 713 00b0 00100240 		.word	1073876992
 714              		.cfi_endproc
 715              	.LFE699:
 717              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 718              		.align	1
 719              		.global	HAL_TIM_Base_MspInit
 720              		.syntax unified
 721              		.thumb
 722              		.thumb_func
 723              		.fpu fpv4-sp-d16
 725              	HAL_TIM_Base_MspInit:
 726              	.LFB700:
 264:Src/tim.c     **** 
 265:Src/tim.c     **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 266:Src/tim.c     **** {
 727              		.loc 1 266 0
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 16
 730              		@ frame_needed = 1, uses_anonymous_args = 0
 731 0000 80B5     		push	{r7, lr}
 732              	.LCFI25:
 733              		.cfi_def_cfa_offset 8
 734              		.cfi_offset 7, -8
 735              		.cfi_offset 14, -4
 736 0002 84B0     		sub	sp, sp, #16
 737              	.LCFI26:
 738              		.cfi_def_cfa_offset 24
 739 0004 00AF     		add	r7, sp, #0
 740              	.LCFI27:
 741              		.cfi_def_cfa_register 7
 742 0006 7860     		str	r0, [r7, #4]
 267:Src/tim.c     **** 
 268:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM3)
 743              		.loc 1 268 0
 744 0008 7B68     		ldr	r3, [r7, #4]
 745 000a 1B68     		ldr	r3, [r3]
 746 000c 164A     		ldr	r2, .L39
 747 000e 9342     		cmp	r3, r2
 748 0010 0CD1     		bne	.L36
 749              	.LBB4:
 269:Src/tim.c     ****   {
 270:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 0 */
 271:Src/tim.c     **** 
 272:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 0 */
 273:Src/tim.c     ****     /* TIM3 clock enable */
 274:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_ENABLE();
 750              		.loc 1 274 0
 751 0012 164B     		ldr	r3, .L39+4
 752 0014 DB69     		ldr	r3, [r3, #28]
 753 0016 154A     		ldr	r2, .L39+4
 754 0018 43F00203 		orr	r3, r3, #2
 755 001c D361     		str	r3, [r2, #28]
ARM GAS  /tmp/ccoqfoGx.s 			page 19


 756 001e 134B     		ldr	r3, .L39+4
 757 0020 DB69     		ldr	r3, [r3, #28]
 758 0022 03F00203 		and	r3, r3, #2
 759 0026 FB60     		str	r3, [r7, #12]
 760 0028 FB68     		ldr	r3, [r7, #12]
 761              	.LBE4:
 275:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 276:Src/tim.c     **** 
 277:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 1 */
 278:Src/tim.c     ****   }
 279:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM15)
 280:Src/tim.c     ****   {
 281:Src/tim.c     ****   /* USER CODE BEGIN TIM15_MspInit 0 */
 282:Src/tim.c     **** 
 283:Src/tim.c     ****   /* USER CODE END TIM15_MspInit 0 */
 284:Src/tim.c     ****     /* TIM15 clock enable */
 285:Src/tim.c     ****     __HAL_RCC_TIM15_CLK_ENABLE();
 286:Src/tim.c     **** 
 287:Src/tim.c     ****     /* TIM15 interrupt Init */
 288:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM1_BRK_TIM15_IRQn, 0, 0);
 289:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM1_BRK_TIM15_IRQn);
 290:Src/tim.c     ****   /* USER CODE BEGIN TIM15_MspInit 1 */
 291:Src/tim.c     **** 
 292:Src/tim.c     ****   /* USER CODE END TIM15_MspInit 1 */
 293:Src/tim.c     ****   }
 294:Src/tim.c     **** }
 762              		.loc 1 294 0
 763 002a 18E0     		b	.L38
 764              	.L36:
 279:Src/tim.c     ****   {
 765              		.loc 1 279 0
 766 002c 7B68     		ldr	r3, [r7, #4]
 767 002e 1B68     		ldr	r3, [r3]
 768 0030 0F4A     		ldr	r2, .L39+8
 769 0032 9342     		cmp	r3, r2
 770 0034 13D1     		bne	.L38
 771              	.LBB5:
 285:Src/tim.c     **** 
 772              		.loc 1 285 0
 773 0036 0D4B     		ldr	r3, .L39+4
 774 0038 9B69     		ldr	r3, [r3, #24]
 775 003a 0C4A     		ldr	r2, .L39+4
 776 003c 43F48033 		orr	r3, r3, #65536
 777 0040 9361     		str	r3, [r2, #24]
 778 0042 0A4B     		ldr	r3, .L39+4
 779 0044 9B69     		ldr	r3, [r3, #24]
 780 0046 03F48033 		and	r3, r3, #65536
 781 004a BB60     		str	r3, [r7, #8]
 782 004c BB68     		ldr	r3, [r7, #8]
 783              	.LBE5:
 288:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM1_BRK_TIM15_IRQn);
 784              		.loc 1 288 0
 785 004e 0022     		movs	r2, #0
 786 0050 0021     		movs	r1, #0
 787 0052 1820     		movs	r0, #24
 788 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 289:Src/tim.c     ****   /* USER CODE BEGIN TIM15_MspInit 1 */
ARM GAS  /tmp/ccoqfoGx.s 			page 20


 789              		.loc 1 289 0
 790 0058 1820     		movs	r0, #24
 791 005a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 792              	.L38:
 793              		.loc 1 294 0
 794 005e 00BF     		nop
 795 0060 1037     		adds	r7, r7, #16
 796              	.LCFI28:
 797              		.cfi_def_cfa_offset 8
 798 0062 BD46     		mov	sp, r7
 799              	.LCFI29:
 800              		.cfi_def_cfa_register 13
 801              		@ sp needed
 802 0064 80BD     		pop	{r7, pc}
 803              	.L40:
 804 0066 00BF     		.align	2
 805              	.L39:
 806 0068 00040040 		.word	1073742848
 807 006c 00100240 		.word	1073876992
 808 0070 00400140 		.word	1073823744
 809              		.cfi_endproc
 810              	.LFE700:
 812              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
 813              		.align	1
 814              		.global	HAL_TIM_MspPostInit
 815              		.syntax unified
 816              		.thumb
 817              		.thumb_func
 818              		.fpu fpv4-sp-d16
 820              	HAL_TIM_MspPostInit:
 821              	.LFB701:
 295:Src/tim.c     **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 296:Src/tim.c     **** {
 822              		.loc 1 296 0
 823              		.cfi_startproc
 824              		@ args = 0, pretend = 0, frame = 32
 825              		@ frame_needed = 1, uses_anonymous_args = 0
 826 0000 80B5     		push	{r7, lr}
 827              	.LCFI30:
 828              		.cfi_def_cfa_offset 8
 829              		.cfi_offset 7, -8
 830              		.cfi_offset 14, -4
 831 0002 88B0     		sub	sp, sp, #32
 832              	.LCFI31:
 833              		.cfi_def_cfa_offset 40
 834 0004 00AF     		add	r7, sp, #0
 835              	.LCFI32:
 836              		.cfi_def_cfa_register 7
 837 0006 7860     		str	r0, [r7, #4]
 297:Src/tim.c     **** 
 298:Src/tim.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 299:Src/tim.c     ****   if(timHandle->Instance==TIM3)
 838              		.loc 1 299 0
 839 0008 7B68     		ldr	r3, [r7, #4]
 840 000a 1B68     		ldr	r3, [r3]
 841 000c 134A     		ldr	r2, .L44
 842 000e 9342     		cmp	r3, r2
ARM GAS  /tmp/ccoqfoGx.s 			page 21


 843 0010 20D1     		bne	.L43
 300:Src/tim.c     ****   {
 301:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspPostInit 0 */
 302:Src/tim.c     **** 
 303:Src/tim.c     ****   /* USER CODE END TIM3_MspPostInit 0 */
 304:Src/tim.c     ****   
 305:Src/tim.c     ****     /**TIM3 GPIO Configuration    
 306:Src/tim.c     ****     PA6     ------> TIM3_CH1
 307:Src/tim.c     ****     PB5     ------> TIM3_CH2 
 308:Src/tim.c     ****     */
 309:Src/tim.c     ****     GPIO_InitStruct.Pin = EN_R_Pin;
 844              		.loc 1 309 0
 845 0012 4023     		movs	r3, #64
 846 0014 FB60     		str	r3, [r7, #12]
 310:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 847              		.loc 1 310 0
 848 0016 0223     		movs	r3, #2
 849 0018 3B61     		str	r3, [r7, #16]
 311:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 850              		.loc 1 311 0
 851 001a 0023     		movs	r3, #0
 852 001c 7B61     		str	r3, [r7, #20]
 312:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 853              		.loc 1 312 0
 854 001e 0023     		movs	r3, #0
 855 0020 BB61     		str	r3, [r7, #24]
 313:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 856              		.loc 1 313 0
 857 0022 0223     		movs	r3, #2
 858 0024 FB61     		str	r3, [r7, #28]
 314:Src/tim.c     ****     HAL_GPIO_Init(EN_R_GPIO_Port, &GPIO_InitStruct);
 859              		.loc 1 314 0
 860 0026 07F10C03 		add	r3, r7, #12
 861 002a 1946     		mov	r1, r3
 862 002c 4FF09040 		mov	r0, #1207959552
 863 0030 FFF7FEFF 		bl	HAL_GPIO_Init
 315:Src/tim.c     **** 
 316:Src/tim.c     ****     GPIO_InitStruct.Pin = EN_L_Pin;
 864              		.loc 1 316 0
 865 0034 2023     		movs	r3, #32
 866 0036 FB60     		str	r3, [r7, #12]
 317:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 867              		.loc 1 317 0
 868 0038 0223     		movs	r3, #2
 869 003a 3B61     		str	r3, [r7, #16]
 318:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 870              		.loc 1 318 0
 871 003c 0023     		movs	r3, #0
 872 003e 7B61     		str	r3, [r7, #20]
 319:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 873              		.loc 1 319 0
 874 0040 0023     		movs	r3, #0
 875 0042 BB61     		str	r3, [r7, #24]
 320:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 876              		.loc 1 320 0
 877 0044 0223     		movs	r3, #2
 878 0046 FB61     		str	r3, [r7, #28]
ARM GAS  /tmp/ccoqfoGx.s 			page 22


 321:Src/tim.c     ****     HAL_GPIO_Init(EN_L_GPIO_Port, &GPIO_InitStruct);
 879              		.loc 1 321 0
 880 0048 07F10C03 		add	r3, r7, #12
 881 004c 1946     		mov	r1, r3
 882 004e 0448     		ldr	r0, .L44+4
 883 0050 FFF7FEFF 		bl	HAL_GPIO_Init
 884              	.L43:
 322:Src/tim.c     **** 
 323:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspPostInit 1 */
 324:Src/tim.c     **** 
 325:Src/tim.c     ****   /* USER CODE END TIM3_MspPostInit 1 */
 326:Src/tim.c     ****   }
 327:Src/tim.c     **** 
 328:Src/tim.c     **** }
 885              		.loc 1 328 0
 886 0054 00BF     		nop
 887 0056 2037     		adds	r7, r7, #32
 888              	.LCFI33:
 889              		.cfi_def_cfa_offset 8
 890 0058 BD46     		mov	sp, r7
 891              	.LCFI34:
 892              		.cfi_def_cfa_register 13
 893              		@ sp needed
 894 005a 80BD     		pop	{r7, pc}
 895              	.L45:
 896              		.align	2
 897              	.L44:
 898 005c 00040040 		.word	1073742848
 899 0060 00040048 		.word	1207960576
 900              		.cfi_endproc
 901              	.LFE701:
 903              		.section	.text.HAL_TIM_Encoder_MspDeInit,"ax",%progbits
 904              		.align	1
 905              		.global	HAL_TIM_Encoder_MspDeInit
 906              		.syntax unified
 907              		.thumb
 908              		.thumb_func
 909              		.fpu fpv4-sp-d16
 911              	HAL_TIM_Encoder_MspDeInit:
 912              	.LFB702:
 329:Src/tim.c     **** 
 330:Src/tim.c     **** void HAL_TIM_Encoder_MspDeInit(TIM_HandleTypeDef* tim_encoderHandle)
 331:Src/tim.c     **** {
 913              		.loc 1 331 0
 914              		.cfi_startproc
 915              		@ args = 0, pretend = 0, frame = 8
 916              		@ frame_needed = 1, uses_anonymous_args = 0
 917 0000 80B5     		push	{r7, lr}
 918              	.LCFI35:
 919              		.cfi_def_cfa_offset 8
 920              		.cfi_offset 7, -8
 921              		.cfi_offset 14, -4
 922 0002 82B0     		sub	sp, sp, #8
 923              	.LCFI36:
 924              		.cfi_def_cfa_offset 16
 925 0004 00AF     		add	r7, sp, #0
 926              	.LCFI37:
ARM GAS  /tmp/ccoqfoGx.s 			page 23


 927              		.cfi_def_cfa_register 7
 928 0006 7860     		str	r0, [r7, #4]
 332:Src/tim.c     **** 
 333:Src/tim.c     ****   if(tim_encoderHandle->Instance==TIM1)
 929              		.loc 1 333 0
 930 0008 7B68     		ldr	r3, [r7, #4]
 931 000a 1B68     		ldr	r3, [r3]
 932 000c 114A     		ldr	r2, .L50
 933 000e 9342     		cmp	r3, r2
 934 0010 0CD1     		bne	.L47
 334:Src/tim.c     ****   {
 335:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
 336:Src/tim.c     **** 
 337:Src/tim.c     ****   /* USER CODE END TIM1_MspDeInit 0 */
 338:Src/tim.c     ****     /* Peripheral clock disable */
 339:Src/tim.c     ****     __HAL_RCC_TIM1_CLK_DISABLE();
 935              		.loc 1 339 0
 936 0012 114B     		ldr	r3, .L50+4
 937 0014 9B69     		ldr	r3, [r3, #24]
 938 0016 104A     		ldr	r2, .L50+4
 939 0018 23F40063 		bic	r3, r3, #2048
 940 001c 9361     		str	r3, [r2, #24]
 340:Src/tim.c     ****   
 341:Src/tim.c     ****     /**TIM1 GPIO Configuration    
 342:Src/tim.c     ****     PA8     ------> TIM1_CH1
 343:Src/tim.c     ****     PA9     ------> TIM1_CH2 
 344:Src/tim.c     ****     */
 345:Src/tim.c     ****     HAL_GPIO_DeInit(GPIOA, TIM1_CH1_Pin|TIM1_CH2_Pin);
 941              		.loc 1 345 0
 942 001e 4FF44071 		mov	r1, #768
 943 0022 4FF09040 		mov	r0, #1207959552
 944 0026 FFF7FEFF 		bl	HAL_GPIO_DeInit
 346:Src/tim.c     **** 
 347:Src/tim.c     ****     /* TIM1 interrupt Deinit */
 348:Src/tim.c     ****   /* USER CODE BEGIN TIM1:TIM1_BRK_TIM15_IRQn disable */
 349:Src/tim.c     ****     /**
 350:Src/tim.c     ****     * Uncomment the line below to disable the "TIM1_BRK_TIM15_IRQn" interrupt
 351:Src/tim.c     ****     * Be aware, disabling shared interrupt may affect other IPs
 352:Src/tim.c     ****     */
 353:Src/tim.c     ****     /* HAL_NVIC_DisableIRQ(TIM1_BRK_TIM15_IRQn); */
 354:Src/tim.c     ****   /* USER CODE END TIM1:TIM1_BRK_TIM15_IRQn disable */
 355:Src/tim.c     **** 
 356:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 357:Src/tim.c     **** 
 358:Src/tim.c     ****   /* USER CODE END TIM1_MspDeInit 1 */
 359:Src/tim.c     ****   }
 360:Src/tim.c     ****   else if(tim_encoderHandle->Instance==TIM2)
 361:Src/tim.c     ****   {
 362:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
 363:Src/tim.c     **** 
 364:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 0 */
 365:Src/tim.c     ****     /* Peripheral clock disable */
 366:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_DISABLE();
 367:Src/tim.c     ****   
 368:Src/tim.c     ****     /**TIM2 GPIO Configuration    
 369:Src/tim.c     ****     PA0     ------> TIM2_CH1
 370:Src/tim.c     ****     PA1     ------> TIM2_CH2 
ARM GAS  /tmp/ccoqfoGx.s 			page 24


 371:Src/tim.c     ****     */
 372:Src/tim.c     ****     HAL_GPIO_DeInit(GPIOA, TIM2_CH1_Pin|TIM2_CH2_Pin);
 373:Src/tim.c     **** 
 374:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 375:Src/tim.c     **** 
 376:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 1 */
 377:Src/tim.c     ****   }
 378:Src/tim.c     **** }
 945              		.loc 1 378 0
 946 002a 0FE0     		b	.L49
 947              	.L47:
 360:Src/tim.c     ****   {
 948              		.loc 1 360 0
 949 002c 7B68     		ldr	r3, [r7, #4]
 950 002e 1B68     		ldr	r3, [r3]
 951 0030 B3F1804F 		cmp	r3, #1073741824
 952 0034 0AD1     		bne	.L49
 366:Src/tim.c     ****   
 953              		.loc 1 366 0
 954 0036 084B     		ldr	r3, .L50+4
 955 0038 DB69     		ldr	r3, [r3, #28]
 956 003a 074A     		ldr	r2, .L50+4
 957 003c 23F00103 		bic	r3, r3, #1
 958 0040 D361     		str	r3, [r2, #28]
 372:Src/tim.c     **** 
 959              		.loc 1 372 0
 960 0042 0321     		movs	r1, #3
 961 0044 4FF09040 		mov	r0, #1207959552
 962 0048 FFF7FEFF 		bl	HAL_GPIO_DeInit
 963              	.L49:
 964              		.loc 1 378 0
 965 004c 00BF     		nop
 966 004e 0837     		adds	r7, r7, #8
 967              	.LCFI38:
 968              		.cfi_def_cfa_offset 8
 969 0050 BD46     		mov	sp, r7
 970              	.LCFI39:
 971              		.cfi_def_cfa_register 13
 972              		@ sp needed
 973 0052 80BD     		pop	{r7, pc}
 974              	.L51:
 975              		.align	2
 976              	.L50:
 977 0054 002C0140 		.word	1073818624
 978 0058 00100240 		.word	1073876992
 979              		.cfi_endproc
 980              	.LFE702:
 982              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 983              		.align	1
 984              		.global	HAL_TIM_Base_MspDeInit
 985              		.syntax unified
 986              		.thumb
 987              		.thumb_func
 988              		.fpu fpv4-sp-d16
 990              	HAL_TIM_Base_MspDeInit:
 991              	.LFB703:
 379:Src/tim.c     **** 
ARM GAS  /tmp/ccoqfoGx.s 			page 25


 380:Src/tim.c     **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 381:Src/tim.c     **** {
 992              		.loc 1 381 0
 993              		.cfi_startproc
 994              		@ args = 0, pretend = 0, frame = 8
 995              		@ frame_needed = 1, uses_anonymous_args = 0
 996              		@ link register save eliminated.
 997 0000 80B4     		push	{r7}
 998              	.LCFI40:
 999              		.cfi_def_cfa_offset 4
 1000              		.cfi_offset 7, -4
 1001 0002 83B0     		sub	sp, sp, #12
 1002              	.LCFI41:
 1003              		.cfi_def_cfa_offset 16
 1004 0004 00AF     		add	r7, sp, #0
 1005              	.LCFI42:
 1006              		.cfi_def_cfa_register 7
 1007 0006 7860     		str	r0, [r7, #4]
 382:Src/tim.c     **** 
 383:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM3)
 1008              		.loc 1 383 0
 1009 0008 7B68     		ldr	r3, [r7, #4]
 1010 000a 1B68     		ldr	r3, [r3]
 1011 000c 0D4A     		ldr	r2, .L56
 1012 000e 9342     		cmp	r3, r2
 1013 0010 06D1     		bne	.L53
 384:Src/tim.c     ****   {
 385:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 0 */
 386:Src/tim.c     **** 
 387:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 0 */
 388:Src/tim.c     ****     /* Peripheral clock disable */
 389:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_DISABLE();
 1014              		.loc 1 389 0
 1015 0012 0D4B     		ldr	r3, .L56+4
 1016 0014 DB69     		ldr	r3, [r3, #28]
 1017 0016 0C4A     		ldr	r2, .L56+4
 1018 0018 23F00203 		bic	r3, r3, #2
 1019 001c D361     		str	r3, [r2, #28]
 390:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 391:Src/tim.c     **** 
 392:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 1 */
 393:Src/tim.c     ****   }
 394:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM15)
 395:Src/tim.c     ****   {
 396:Src/tim.c     ****   /* USER CODE BEGIN TIM15_MspDeInit 0 */
 397:Src/tim.c     **** 
 398:Src/tim.c     ****   /* USER CODE END TIM15_MspDeInit 0 */
 399:Src/tim.c     ****     /* Peripheral clock disable */
 400:Src/tim.c     ****     __HAL_RCC_TIM15_CLK_DISABLE();
 401:Src/tim.c     **** 
 402:Src/tim.c     ****     /* TIM15 interrupt Deinit */
 403:Src/tim.c     ****   /* USER CODE BEGIN TIM15:TIM1_BRK_TIM15_IRQn disable */
 404:Src/tim.c     ****     /**
 405:Src/tim.c     ****     * Uncomment the line below to disable the "TIM1_BRK_TIM15_IRQn" interrupt
 406:Src/tim.c     ****     * Be aware, disabling shared interrupt may affect other IPs
 407:Src/tim.c     ****     */
 408:Src/tim.c     ****     /* HAL_NVIC_DisableIRQ(TIM1_BRK_TIM15_IRQn); */
ARM GAS  /tmp/ccoqfoGx.s 			page 26


 409:Src/tim.c     ****   /* USER CODE END TIM15:TIM1_BRK_TIM15_IRQn disable */
 410:Src/tim.c     **** 
 411:Src/tim.c     ****   /* USER CODE BEGIN TIM15_MspDeInit 1 */
 412:Src/tim.c     **** 
 413:Src/tim.c     ****   /* USER CODE END TIM15_MspDeInit 1 */
 414:Src/tim.c     ****   }
 415:Src/tim.c     **** } 
 1020              		.loc 1 415 0
 1021 001e 0AE0     		b	.L55
 1022              	.L53:
 394:Src/tim.c     ****   {
 1023              		.loc 1 394 0
 1024 0020 7B68     		ldr	r3, [r7, #4]
 1025 0022 1B68     		ldr	r3, [r3]
 1026 0024 094A     		ldr	r2, .L56+8
 1027 0026 9342     		cmp	r3, r2
 1028 0028 05D1     		bne	.L55
 400:Src/tim.c     **** 
 1029              		.loc 1 400 0
 1030 002a 074B     		ldr	r3, .L56+4
 1031 002c 9B69     		ldr	r3, [r3, #24]
 1032 002e 064A     		ldr	r2, .L56+4
 1033 0030 23F48033 		bic	r3, r3, #65536
 1034 0034 9361     		str	r3, [r2, #24]
 1035              	.L55:
 1036              		.loc 1 415 0
 1037 0036 00BF     		nop
 1038 0038 0C37     		adds	r7, r7, #12
 1039              	.LCFI43:
 1040              		.cfi_def_cfa_offset 4
 1041 003a BD46     		mov	sp, r7
 1042              	.LCFI44:
 1043              		.cfi_def_cfa_register 13
 1044              		@ sp needed
 1045 003c 5DF8047B 		ldr	r7, [sp], #4
 1046              	.LCFI45:
 1047              		.cfi_restore 7
 1048              		.cfi_def_cfa_offset 0
 1049 0040 7047     		bx	lr
 1050              	.L57:
 1051 0042 00BF     		.align	2
 1052              	.L56:
 1053 0044 00040040 		.word	1073742848
 1054 0048 00100240 		.word	1073876992
 1055 004c 00400140 		.word	1073823744
 1056              		.cfi_endproc
 1057              	.LFE703:
 1059              		.text
 1060              	.Letext0:
 1061              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1062              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1063              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1064              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 1065              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 1066              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 1067              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 1068              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.3.0/include/stddef.h"
ARM GAS  /tmp/ccoqfoGx.s 			page 27


 1069              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 1070              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1071              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 1072              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 1073              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 1074              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim_ex.h"
 1075              		.file 16 "Inc/tim.h"
 1076              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_ll_dma.h"
ARM GAS  /tmp/ccoqfoGx.s 			page 28


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
     /tmp/ccoqfoGx.s:18     .rodata.CHANNEL_OFFSET_TAB:0000000000000000 $d
     /tmp/ccoqfoGx.s:21     .rodata.CHANNEL_OFFSET_TAB:0000000000000000 CHANNEL_OFFSET_TAB
                            *COM*:0000000000000040 htim1
                            *COM*:0000000000000040 htim2
                            *COM*:0000000000000040 htim3
                            *COM*:0000000000000040 htim15
     /tmp/ccoqfoGx.s:34     .rodata:0000000000000000 $d
     /tmp/ccoqfoGx.s:38     .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccoqfoGx.s:45     .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccoqfoGx.s:166    .text.MX_TIM1_Init:000000000000009c $d
     /tmp/ccoqfoGx.s:173    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccoqfoGx.s:180    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccoqfoGx.s:293    .text.MX_TIM2_Init:0000000000000094 $d
     /tmp/ccoqfoGx.s:299    .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/ccoqfoGx.s:306    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/ccoqfoGx.s:820    .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
     /tmp/ccoqfoGx.s:460    .text.MX_TIM3_Init:00000000000000e8 $d
     /tmp/ccoqfoGx.s:467    .text.MX_TIM15_Init:0000000000000000 $t
     /tmp/ccoqfoGx.s:474    .text.MX_TIM15_Init:0000000000000000 MX_TIM15_Init
     /tmp/ccoqfoGx.s:578    .text.MX_TIM15_Init:0000000000000090 $d
     /tmp/ccoqfoGx.s:585    .text.HAL_TIM_Encoder_MspInit:0000000000000000 $t
     /tmp/ccoqfoGx.s:592    .text.HAL_TIM_Encoder_MspInit:0000000000000000 HAL_TIM_Encoder_MspInit
     /tmp/ccoqfoGx.s:712    .text.HAL_TIM_Encoder_MspInit:00000000000000ac $d
     /tmp/ccoqfoGx.s:718    .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/ccoqfoGx.s:725    .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/ccoqfoGx.s:806    .text.HAL_TIM_Base_MspInit:0000000000000068 $d
     /tmp/ccoqfoGx.s:813    .text.HAL_TIM_MspPostInit:0000000000000000 $t
     /tmp/ccoqfoGx.s:898    .text.HAL_TIM_MspPostInit:000000000000005c $d
     /tmp/ccoqfoGx.s:904    .text.HAL_TIM_Encoder_MspDeInit:0000000000000000 $t
     /tmp/ccoqfoGx.s:911    .text.HAL_TIM_Encoder_MspDeInit:0000000000000000 HAL_TIM_Encoder_MspDeInit
     /tmp/ccoqfoGx.s:977    .text.HAL_TIM_Encoder_MspDeInit:0000000000000054 $d
     /tmp/ccoqfoGx.s:983    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/ccoqfoGx.s:990    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/ccoqfoGx.s:1053   .text.HAL_TIM_Base_MspDeInit:0000000000000044 $d

UNDEFINED SYMBOLS
HAL_TIM_Encoder_Init
_Error_Handler
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
