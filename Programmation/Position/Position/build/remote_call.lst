ARM GAS  /tmp/cc6tUiew.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"remote_call.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.bss.err,"aw",%nobits
  18              		.align	2
  21              	err:
  22 0000 00000000 		.space	4
  23              		.section	.text.RC_Copy_Format,"ax",%progbits
  24              		.align	1
  25              		.syntax unified
  26              		.thumb
  27              		.thumb_func
  28              		.fpu fpv4-sp-d16
  30              	RC_Copy_Format:
  31              	.LFB0:
  32              		.file 1 "Src/remote_call.c"
   1:Src/remote_call.c **** /**
   2:Src/remote_call.c ****  * Library Remote Call Client/Server @Robotronik
   3:Src/remote_call.c ****  * remote_call.c
   4:Src/remote_call.c ****  * This library is meant to run a remote call server between ÂµC. 
   5:Src/remote_call.c ****  *
   6:Src/remote_call.c ****  * Copyright 2018 Antonin Hirschy
   7:Src/remote_call.c ****  *
   8:Src/remote_call.c ****  * This program is free software: you can redistribute it and/or modify
   9:Src/remote_call.c ****  * it under the terms of the GNU General Public License as published by
  10:Src/remote_call.c ****  * the Free Software Foundation, either version 3 of the License, or
  11:Src/remote_call.c ****  * (at your option) any later version.
  12:Src/remote_call.c ****  * 
  13:Src/remote_call.c ****  * This program is distributed in the hope that it will be useful,
  14:Src/remote_call.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  15:Src/remote_call.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  16:Src/remote_call.c ****  * GNU General Public License for more details.
  17:Src/remote_call.c ****  *
  18:Src/remote_call.c ****  * You should have received a copy of the GNU General Public License
  19:Src/remote_call.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  20:Src/remote_call.c ****  */
  21:Src/remote_call.c **** #include "remote_call.h"
  22:Src/remote_call.c **** 
  23:Src/remote_call.c **** //Error code
  24:Src/remote_call.c **** static int err = 0;
  25:Src/remote_call.c **** 
  26:Src/remote_call.c **** //Private functions
  27:Src/remote_call.c **** static int RC_Copy_Format(char *dst, const char fmt[]);
  28:Src/remote_call.c **** static int RC_Pack_Vars(const char *fmt, uint8_t *out, int out_len,  va_list *args);
ARM GAS  /tmp/cc6tUiew.s 			page 2


  29:Src/remote_call.c **** static int RC_Unpack_Vars(const char *fmt, uint8_t *in, int in_len,  va_list *args);
  30:Src/remote_call.c **** 
  31:Src/remote_call.c **** //Macros
  32:Src/remote_call.c **** #define CHECK_ID(id) ((id >= 0) && (id < RC_NB_FUNCTIONS))
  33:Src/remote_call.c **** 
  34:Src/remote_call.c **** #define RC_CHECK_TYPE(type, count)					\
  35:Src/remote_call.c ****   ({									\
  36:Src/remote_call.c ****     int valid = 1;							\
  37:Src/remote_call.c ****     switch(type){							\
  38:Src/remote_call.c ****     case RC_UINT8_T: count += sizeof(uint8_t); break;			\
  39:Src/remote_call.c ****     case RC_UINT16_T: count += sizeof(uint16_t); break;			\
  40:Src/remote_call.c ****     case RC_UINT32_T: count += sizeof(uint32_t); break;			\
  41:Src/remote_call.c ****     case RC_INT: count += sizeof(int); break;				\
  42:Src/remote_call.c ****     case RC_FLOAT: count += sizeof(float); break;			\
  43:Src/remote_call.c ****     case RC_DOUBLE: count += sizeof(double); break;			\
  44:Src/remote_call.c ****     case RC_STRING: count += RC_STR_SIZE; break;			\
  45:Src/remote_call.c ****     default: valid = 0; break;						\
  46:Src/remote_call.c ****     }									\
  47:Src/remote_call.c ****     valid;								\
  48:Src/remote_call.c ****   })
  49:Src/remote_call.c **** 
  50:Src/remote_call.c **** #ifdef RC_LITTLE_ENDIAN
  51:Src/remote_call.c **** #define RC_PACK_VAR_START(var) ((uint8_t*) (&var))
  52:Src/remote_call.c **** #define RC_UNPACK_VAR_START(args, type, promoted) ((uint8_t*) va_arg(args, promoted))
  53:Src/remote_call.c **** #define RC_VAR_GET_BYTE(ptr) *(ptr++)
  54:Src/remote_call.c **** #else
  55:Src/remote_call.c **** #define RC_PACK_VAR_START(var) ((uint8_t*) (&var) + (sizeof(var) - 1))
  56:Src/remote_call.c **** #define RC_UNPACK_VAR_START(args, type, promoted) (((uint8_t*) va_arg(args, promoted)) + (sizeof(ty
  57:Src/remote_call.c **** #define RC_VAR_GET_BYTE(ptr) *(ptr--)
  58:Src/remote_call.c **** #endif
  59:Src/remote_call.c **** 
  60:Src/remote_call.c **** #define RC_PACK_VAR(args, type, promoted, out, out_len, success)	\
  61:Src/remote_call.c ****   {									\
  62:Src/remote_call.c ****     type var = (type) va_arg(args, promoted);				\
  63:Src/remote_call.c ****     uint8_t *byte  = RC_PACK_VAR_START(var);				\
  64:Src/remote_call.c ****     int _end = out_len - sizeof(var);					\
  65:Src/remote_call.c ****     success = (_end >= 0);						\
  66:Src/remote_call.c ****     									\
  67:Src/remote_call.c ****     if(success){							\
  68:Src/remote_call.c ****       for(; out_len > _end; out_len--){					\
  69:Src/remote_call.c **** 	*(out++) = RC_VAR_GET_BYTE(byte);				\
  70:Src/remote_call.c ****       }									\
  71:Src/remote_call.c ****     }									\
  72:Src/remote_call.c ****   }								
  73:Src/remote_call.c **** 
  74:Src/remote_call.c **** #define RC_PACK_STRING(args, out, out_len, success)			\
  75:Src/remote_call.c ****   {									\
  76:Src/remote_call.c ****     char *str = va_arg(args, char*);					\
  77:Src/remote_call.c ****     char c = '*';							\
  78:Src/remote_call.c ****     int count = RC_STR_SIZE;						\
  79:Src/remote_call.c ****     /* Copy a character from str to out until the end of str or out is reached */ \
  80:Src/remote_call.c ****     while(out_len != 0 && (c = *(out++) = *(str++)) != '\0' && (--count)){ \
  81:Src/remote_call.c ****       out_len--;							\
  82:Src/remote_call.c ****     }									\
  83:Src/remote_call.c ****     /* if the last character was '\0', out_len must be decremented */	\
  84:Src/remote_call.c ****     (c == '\0')?(out_len--, success = 1):(success = 0);			\
  85:Src/remote_call.c ****   }						
ARM GAS  /tmp/cc6tUiew.s 			page 3


  86:Src/remote_call.c **** 
  87:Src/remote_call.c **** #define RC_UNPACK_VAR(args, type, promoted, in, in_len, success)	\
  88:Src/remote_call.c ****   {									\
  89:Src/remote_call.c ****     uint8_t *w_ptr = RC_UNPACK_VAR_START(args, type, promoted);		\
  90:Src/remote_call.c ****     int _end = in_len - sizeof(type);					\
  91:Src/remote_call.c ****     success = (_end >= 0);						\
  92:Src/remote_call.c **** 									\
  93:Src/remote_call.c ****     if(success){							\
  94:Src/remote_call.c ****       for(; in_len > _end; in_len--){					\
  95:Src/remote_call.c **** 	RC_VAR_GET_BYTE(w_ptr) = *(in++);				\
  96:Src/remote_call.c ****       }									\
  97:Src/remote_call.c ****     }									\
  98:Src/remote_call.c ****   }
  99:Src/remote_call.c **** 
 100:Src/remote_call.c **** #define RC_UNPACK_STRING(args, in, in_len, success)			\
 101:Src/remote_call.c ****   {									\
 102:Src/remote_call.c ****     char *w_ptr = va_arg(args, char*);					\
 103:Src/remote_call.c ****     char c = '*';							\
 104:Src/remote_call.c ****     int count = RC_STR_SIZE;						\
 105:Src/remote_call.c ****     while(in_len != 0 && (c = *(w_ptr++) = *(in++)) != '\0' && (--count)){ \
 106:Src/remote_call.c ****       in_len--;								\
 107:Src/remote_call.c ****     }									\
 108:Src/remote_call.c ****     (c == '\0')?(in_len--, success = 1):(success = 0);			\
 109:Src/remote_call.c ****   }								
 110:Src/remote_call.c **** 
 111:Src/remote_call.c **** static int RC_Copy_Format(char *dst, const char fmt[]){
  33              		.loc 1 111 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 24
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37              		@ link register save eliminated.
  38 0000 80B4     		push	{r7}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 4
  41              		.cfi_offset 7, -4
  42 0002 87B0     		sub	sp, sp, #28
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 32
  45 0004 00AF     		add	r7, sp, #0
  46              	.LCFI2:
  47              		.cfi_def_cfa_register 7
  48 0006 7860     		str	r0, [r7, #4]
  49 0008 3960     		str	r1, [r7]
 112:Src/remote_call.c ****   int i;
 113:Src/remote_call.c ****   char c;
 114:Src/remote_call.c ****   int max_size = 0;
  50              		.loc 1 114 0
  51 000a 0023     		movs	r3, #0
  52 000c FB60     		str	r3, [r7, #12]
 115:Src/remote_call.c ****   
 116:Src/remote_call.c ****   for(i = 0; i < RC_FMT_SIZE && (c = dst[i] = fmt[i]) != '\0' && RC_CHECK_TYPE(c, max_size); i++);
  53              		.loc 1 116 0
  54 000e 0023     		movs	r3, #0
  55 0010 7B61     		str	r3, [r7, #20]
  56 0012 02E0     		b	.L2
  57              	.L14:
  58              		.loc 1 116 0 is_stmt 0 discriminator 21
ARM GAS  /tmp/cc6tUiew.s 			page 4


  59 0014 7B69     		ldr	r3, [r7, #20]
  60 0016 0133     		adds	r3, r3, #1
  61 0018 7B61     		str	r3, [r7, #20]
  62              	.L2:
  63              		.loc 1 116 0 discriminator 1
  64 001a 7B69     		ldr	r3, [r7, #20]
  65 001c 072B     		cmp	r3, #7
  66 001e 00F3A480 		bgt	.L3
  67              		.loc 1 116 0 discriminator 3
  68 0022 7B69     		ldr	r3, [r7, #20]
  69 0024 3A68     		ldr	r2, [r7]
  70 0026 1A44     		add	r2, r2, r3
  71 0028 7B69     		ldr	r3, [r7, #20]
  72 002a 7968     		ldr	r1, [r7, #4]
  73 002c 0B44     		add	r3, r3, r1
  74 002e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
  75 0030 1A70     		strb	r2, [r3]
  76 0032 1B78     		ldrb	r3, [r3]
  77 0034 FB74     		strb	r3, [r7, #19]
  78 0036 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
  79 0038 002B     		cmp	r3, #0
  80 003a 00F09680 		beq	.L3
  81              	.LBB2:
  82              		.loc 1 116 0 discriminator 4
  83 003e 0123     		movs	r3, #1
  84 0040 BB60     		str	r3, [r7, #8]
  85 0042 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
  86 0044 423B     		subs	r3, r3, #66
  87 0046 332B     		cmp	r3, #51
  88 0048 00F28880 		bhi	.L4
  89 004c 01A2     		adr	r2, .L6
  90 004e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  91 0052 00BF     		.p2align 2
  92              	.L6:
  93 0054 2D010000 		.word	.L5+1
  94 0058 5D010000 		.word	.L4+1
  95 005c 5D010000 		.word	.L4+1
  96 0060 5D010000 		.word	.L4+1
  97 0064 4D010000 		.word	.L7+1
  98 0068 5D010000 		.word	.L4+1
  99 006c 5D010000 		.word	.L4+1
 100 0070 5D010000 		.word	.L4+1
 101 0074 5D010000 		.word	.L4+1
 102 0078 5D010000 		.word	.L4+1
 103 007c 5D010000 		.word	.L4+1
 104 0080 5D010000 		.word	.L4+1
 105 0084 5D010000 		.word	.L4+1
 106 0088 5D010000 		.word	.L4+1
 107 008c 5D010000 		.word	.L4+1
 108 0090 5D010000 		.word	.L4+1
 109 0094 5D010000 		.word	.L4+1
 110 0098 5D010000 		.word	.L4+1
 111 009c 5D010000 		.word	.L4+1
 112 00a0 5D010000 		.word	.L4+1
 113 00a4 5D010000 		.word	.L4+1
 114 00a8 5D010000 		.word	.L4+1
 115 00ac 5D010000 		.word	.L4+1
ARM GAS  /tmp/cc6tUiew.s 			page 5


 116 00b0 5D010000 		.word	.L4+1
 117 00b4 5D010000 		.word	.L4+1
 118 00b8 5D010000 		.word	.L4+1
 119 00bc 5D010000 		.word	.L4+1
 120 00c0 5D010000 		.word	.L4+1
 121 00c4 5D010000 		.word	.L4+1
 122 00c8 5D010000 		.word	.L4+1
 123 00cc 5D010000 		.word	.L4+1
 124 00d0 5D010000 		.word	.L4+1
 125 00d4 25010000 		.word	.L8+1
 126 00d8 5D010000 		.word	.L4+1
 127 00dc 5D010000 		.word	.L4+1
 128 00e0 5D010000 		.word	.L4+1
 129 00e4 45010000 		.word	.L9+1
 130 00e8 5D010000 		.word	.L4+1
 131 00ec 5D010000 		.word	.L4+1
 132 00f0 3D010000 		.word	.L10+1
 133 00f4 5D010000 		.word	.L4+1
 134 00f8 5D010000 		.word	.L4+1
 135 00fc 5D010000 		.word	.L4+1
 136 0100 5D010000 		.word	.L4+1
 137 0104 5D010000 		.word	.L4+1
 138 0108 5D010000 		.word	.L4+1
 139 010c 5D010000 		.word	.L4+1
 140 0110 5D010000 		.word	.L4+1
 141 0114 5D010000 		.word	.L4+1
 142 0118 55010000 		.word	.L11+1
 143 011c 5D010000 		.word	.L4+1
 144 0120 35010000 		.word	.L12+1
 145              		.p2align 1
 146              	.L8:
 147              		.loc 1 116 0 discriminator 8
 148 0124 FB68     		ldr	r3, [r7, #12]
 149 0126 0133     		adds	r3, r3, #1
 150 0128 FB60     		str	r3, [r7, #12]
 151 012a 19E0     		b	.L18
 152              	.L5:
 153              		.loc 1 116 0 discriminator 6
 154 012c FB68     		ldr	r3, [r7, #12]
 155 012e 0233     		adds	r3, r3, #2
 156 0130 FB60     		str	r3, [r7, #12]
 157 0132 15E0     		b	.L18
 158              	.L12:
 159              		.loc 1 116 0 discriminator 12
 160 0134 FB68     		ldr	r3, [r7, #12]
 161 0136 0433     		adds	r3, r3, #4
 162 0138 FB60     		str	r3, [r7, #12]
 163 013a 11E0     		b	.L18
 164              	.L10:
 165              		.loc 1 116 0 discriminator 10
 166 013c FB68     		ldr	r3, [r7, #12]
 167 013e 0433     		adds	r3, r3, #4
 168 0140 FB60     		str	r3, [r7, #12]
 169 0142 0DE0     		b	.L18
 170              	.L9:
 171              		.loc 1 116 0 discriminator 9
 172 0144 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cc6tUiew.s 			page 6


 173 0146 0433     		adds	r3, r3, #4
 174 0148 FB60     		str	r3, [r7, #12]
 175 014a 09E0     		b	.L18
 176              	.L7:
 177              		.loc 1 116 0 discriminator 7
 178 014c FB68     		ldr	r3, [r7, #12]
 179 014e 0833     		adds	r3, r3, #8
 180 0150 FB60     		str	r3, [r7, #12]
 181 0152 05E0     		b	.L18
 182              	.L11:
 183              		.loc 1 116 0 discriminator 11
 184 0154 FB68     		ldr	r3, [r7, #12]
 185 0156 4033     		adds	r3, r3, #64
 186 0158 FB60     		str	r3, [r7, #12]
 187 015a 01E0     		b	.L18
 188              	.L4:
 189              		.loc 1 116 0 discriminator 5
 190 015c 0023     		movs	r3, #0
 191 015e BB60     		str	r3, [r7, #8]
 192              	.L18:
 193              		.loc 1 116 0
 194 0160 00BF     		nop
 195 0162 BB68     		ldr	r3, [r7, #8]
 196              	.LBE2:
 197 0164 002B     		cmp	r3, #0
 198 0166 7FF455AF 		bne	.L14
 199              	.L3:
 117:Src/remote_call.c ****   
 118:Src/remote_call.c ****   if(c != '\0' || max_size > RC_MAX_DATA){
 200              		.loc 1 118 0 is_stmt 1
 201 016a FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 202 016c 002B     		cmp	r3, #0
 203 016e 02D1     		bne	.L15
 204              		.loc 1 118 0 is_stmt 0 discriminator 1
 205 0170 FB68     		ldr	r3, [r7, #12]
 206 0172 F92B     		cmp	r3, #249
 207 0174 05DD     		ble	.L16
 208              	.L15:
 119:Src/remote_call.c ****     err = RC_WRONG_FORMAT;
 209              		.loc 1 119 0 is_stmt 1
 210 0176 064B     		ldr	r3, .L19
 211 0178 0122     		movs	r2, #1
 212 017a 1A60     		str	r2, [r3]
 120:Src/remote_call.c ****     return -1;
 213              		.loc 1 120 0
 214 017c 4FF0FF33 		mov	r3, #-1
 215 0180 00E0     		b	.L17
 216              	.L16:
 121:Src/remote_call.c ****   }
 122:Src/remote_call.c **** 
 123:Src/remote_call.c ****   return 0;
 217              		.loc 1 123 0
 218 0182 0023     		movs	r3, #0
 219              	.L17:
 124:Src/remote_call.c **** }
 220              		.loc 1 124 0
 221 0184 1846     		mov	r0, r3
ARM GAS  /tmp/cc6tUiew.s 			page 7


 222 0186 1C37     		adds	r7, r7, #28
 223              	.LCFI3:
 224              		.cfi_def_cfa_offset 4
 225 0188 BD46     		mov	sp, r7
 226              	.LCFI4:
 227              		.cfi_def_cfa_register 13
 228              		@ sp needed
 229 018a 5DF8047B 		ldr	r7, [sp], #4
 230              	.LCFI5:
 231              		.cfi_restore 7
 232              		.cfi_def_cfa_offset 0
 233 018e 7047     		bx	lr
 234              	.L20:
 235              		.align	2
 236              	.L19:
 237 0190 00000000 		.word	err
 238              		.cfi_endproc
 239              	.LFE0:
 241              		.global	__aeabi_d2f
 242              		.section	.text.RC_Pack_Vars,"ax",%progbits
 243              		.align	1
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 247              		.fpu fpv4-sp-d16
 249              	RC_Pack_Vars:
 250              	.LFB1:
 125:Src/remote_call.c **** 
 126:Src/remote_call.c **** static int RC_Pack_Vars(const char *fmt, uint8_t *out, int out_len,  va_list *args){
 251              		.loc 1 126 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 112
 254              		@ frame_needed = 1, uses_anonymous_args = 0
 255 0000 90B5     		push	{r4, r7, lr}
 256              	.LCFI6:
 257              		.cfi_def_cfa_offset 12
 258              		.cfi_offset 4, -12
 259              		.cfi_offset 7, -8
 260              		.cfi_offset 14, -4
 261 0002 9DB0     		sub	sp, sp, #116
 262              	.LCFI7:
 263              		.cfi_def_cfa_offset 128
 264 0004 00AF     		add	r7, sp, #0
 265              	.LCFI8:
 266              		.cfi_def_cfa_register 7
 267 0006 F860     		str	r0, [r7, #12]
 268 0008 B960     		str	r1, [r7, #8]
 269 000a 7A60     		str	r2, [r7, #4]
 270 000c 3B60     		str	r3, [r7]
 127:Src/remote_call.c ****   int out_len_tmp = out_len;
 271              		.loc 1 127 0
 272 000e 7B68     		ldr	r3, [r7, #4]
 273 0010 7B64     		str	r3, [r7, #68]
 128:Src/remote_call.c **** 
 129:Src/remote_call.c ****   char c;
 130:Src/remote_call.c ****   int success = 1;
 274              		.loc 1 130 0
ARM GAS  /tmp/cc6tUiew.s 			page 8


 275 0012 0123     		movs	r3, #1
 276 0014 FB66     		str	r3, [r7, #108]
 131:Src/remote_call.c ****   while((c = *(fmt++)) != '\0' && success){
 277              		.loc 1 131 0
 278 0016 51E1     		b	.L22
 279              	.L55:
 132:Src/remote_call.c ****     if(c == RC_UINT8_T){
 280              		.loc 1 132 0
 281 0018 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 282 001c 622B     		cmp	r3, #98
 283 001e 28D1     		bne	.L23
 284              	.LBB3:
 133:Src/remote_call.c ****       RC_PACK_VAR(*args, uint8_t, int, out, out_len, success);
 285              		.loc 1 133 0
 286 0020 3B68     		ldr	r3, [r7]
 287 0022 1B68     		ldr	r3, [r3]
 288 0024 191D     		adds	r1, r3, #4
 289 0026 3A68     		ldr	r2, [r7]
 290 0028 1160     		str	r1, [r2]
 291 002a 1B68     		ldr	r3, [r3]
 292 002c DBB2     		uxtb	r3, r3
 293 002e 87F82730 		strb	r3, [r7, #39]
 294 0032 07F12703 		add	r3, r7, #39
 295 0036 BB66     		str	r3, [r7, #104]
 296 0038 7B68     		ldr	r3, [r7, #4]
 297 003a 013B     		subs	r3, r3, #1
 298 003c BB62     		str	r3, [r7, #40]
 299 003e BB6A     		ldr	r3, [r7, #40]
 300 0040 DB43     		mvns	r3, r3
 301 0042 DB0F     		lsrs	r3, r3, #31
 302 0044 DBB2     		uxtb	r3, r3
 303 0046 FB66     		str	r3, [r7, #108]
 304 0048 FB6E     		ldr	r3, [r7, #108]
 305 004a 002B     		cmp	r3, #0
 306 004c 00F03681 		beq	.L22
 307 0050 0AE0     		b	.L25
 308              	.L26:
 309              		.loc 1 133 0 is_stmt 0 discriminator 2
 310 0052 BA6E     		ldr	r2, [r7, #104]
 311 0054 531C     		adds	r3, r2, #1
 312 0056 BB66     		str	r3, [r7, #104]
 313 0058 BB68     		ldr	r3, [r7, #8]
 314 005a 591C     		adds	r1, r3, #1
 315 005c B960     		str	r1, [r7, #8]
 316 005e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 317 0060 1A70     		strb	r2, [r3]
 318 0062 7B68     		ldr	r3, [r7, #4]
 319 0064 013B     		subs	r3, r3, #1
 320 0066 7B60     		str	r3, [r7, #4]
 321              	.L25:
 322              		.loc 1 133 0 discriminator 1
 323 0068 7A68     		ldr	r2, [r7, #4]
 324 006a BB6A     		ldr	r3, [r7, #40]
 325 006c 9A42     		cmp	r2, r3
 326 006e F0DC     		bgt	.L26
 327              	.LBE3:
 328 0070 24E1     		b	.L22
ARM GAS  /tmp/cc6tUiew.s 			page 9


 329              	.L23:
 134:Src/remote_call.c ****     }
 135:Src/remote_call.c ****     else if(c == RC_UINT16_T){
 330              		.loc 1 135 0 is_stmt 1
 331 0072 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 332 0076 422B     		cmp	r3, #66
 333 0078 27D1     		bne	.L27
 334              	.LBB4:
 136:Src/remote_call.c ****       RC_PACK_VAR(*args, uint16_t, int, out, out_len, success);
 335              		.loc 1 136 0
 336 007a 3B68     		ldr	r3, [r7]
 337 007c 1B68     		ldr	r3, [r3]
 338 007e 191D     		adds	r1, r3, #4
 339 0080 3A68     		ldr	r2, [r7]
 340 0082 1160     		str	r1, [r2]
 341 0084 1B68     		ldr	r3, [r3]
 342 0086 9BB2     		uxth	r3, r3
 343 0088 BB84     		strh	r3, [r7, #36]	@ movhi
 344 008a 07F12403 		add	r3, r7, #36
 345 008e 7B66     		str	r3, [r7, #100]
 346 0090 7B68     		ldr	r3, [r7, #4]
 347 0092 023B     		subs	r3, r3, #2
 348 0094 FB62     		str	r3, [r7, #44]
 349 0096 FB6A     		ldr	r3, [r7, #44]
 350 0098 DB43     		mvns	r3, r3
 351 009a DB0F     		lsrs	r3, r3, #31
 352 009c DBB2     		uxtb	r3, r3
 353 009e FB66     		str	r3, [r7, #108]
 354 00a0 FB6E     		ldr	r3, [r7, #108]
 355 00a2 002B     		cmp	r3, #0
 356 00a4 00F00A81 		beq	.L22
 357 00a8 0AE0     		b	.L29
 358              	.L30:
 359              		.loc 1 136 0 is_stmt 0 discriminator 2
 360 00aa 7A6E     		ldr	r2, [r7, #100]
 361 00ac 531C     		adds	r3, r2, #1
 362 00ae 7B66     		str	r3, [r7, #100]
 363 00b0 BB68     		ldr	r3, [r7, #8]
 364 00b2 591C     		adds	r1, r3, #1
 365 00b4 B960     		str	r1, [r7, #8]
 366 00b6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 367 00b8 1A70     		strb	r2, [r3]
 368 00ba 7B68     		ldr	r3, [r7, #4]
 369 00bc 013B     		subs	r3, r3, #1
 370 00be 7B60     		str	r3, [r7, #4]
 371              	.L29:
 372              		.loc 1 136 0 discriminator 1
 373 00c0 7A68     		ldr	r2, [r7, #4]
 374 00c2 FB6A     		ldr	r3, [r7, #44]
 375 00c4 9A42     		cmp	r2, r3
 376 00c6 F0DC     		bgt	.L30
 377              	.LBE4:
 378 00c8 F8E0     		b	.L22
 379              	.L27:
 137:Src/remote_call.c ****     }
 138:Src/remote_call.c ****     else if(c == RC_UINT32_T){
 380              		.loc 1 138 0 is_stmt 1
ARM GAS  /tmp/cc6tUiew.s 			page 10


 381 00ca 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 382 00ce 752B     		cmp	r3, #117
 383 00d0 26D1     		bne	.L31
 384              	.LBB5:
 139:Src/remote_call.c ****       RC_PACK_VAR(*args, uint32_t, int, out, out_len, success);      
 385              		.loc 1 139 0
 386 00d2 3B68     		ldr	r3, [r7]
 387 00d4 1B68     		ldr	r3, [r3]
 388 00d6 191D     		adds	r1, r3, #4
 389 00d8 3A68     		ldr	r2, [r7]
 390 00da 1160     		str	r1, [r2]
 391 00dc 1B68     		ldr	r3, [r3]
 392 00de 3B62     		str	r3, [r7, #32]
 393 00e0 07F12003 		add	r3, r7, #32
 394 00e4 3B66     		str	r3, [r7, #96]
 395 00e6 7B68     		ldr	r3, [r7, #4]
 396 00e8 043B     		subs	r3, r3, #4
 397 00ea 3B63     		str	r3, [r7, #48]
 398 00ec 3B6B     		ldr	r3, [r7, #48]
 399 00ee DB43     		mvns	r3, r3
 400 00f0 DB0F     		lsrs	r3, r3, #31
 401 00f2 DBB2     		uxtb	r3, r3
 402 00f4 FB66     		str	r3, [r7, #108]
 403 00f6 FB6E     		ldr	r3, [r7, #108]
 404 00f8 002B     		cmp	r3, #0
 405 00fa 00F0DF80 		beq	.L22
 406 00fe 0AE0     		b	.L33
 407              	.L34:
 408              		.loc 1 139 0 is_stmt 0 discriminator 2
 409 0100 3A6E     		ldr	r2, [r7, #96]
 410 0102 531C     		adds	r3, r2, #1
 411 0104 3B66     		str	r3, [r7, #96]
 412 0106 BB68     		ldr	r3, [r7, #8]
 413 0108 591C     		adds	r1, r3, #1
 414 010a B960     		str	r1, [r7, #8]
 415 010c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 416 010e 1A70     		strb	r2, [r3]
 417 0110 7B68     		ldr	r3, [r7, #4]
 418 0112 013B     		subs	r3, r3, #1
 419 0114 7B60     		str	r3, [r7, #4]
 420              	.L33:
 421              		.loc 1 139 0 discriminator 1
 422 0116 7A68     		ldr	r2, [r7, #4]
 423 0118 3B6B     		ldr	r3, [r7, #48]
 424 011a 9A42     		cmp	r2, r3
 425 011c F0DC     		bgt	.L34
 426              	.LBE5:
 427 011e CDE0     		b	.L22
 428              	.L31:
 140:Src/remote_call.c ****     }
 141:Src/remote_call.c ****     else if(c == RC_INT){
 429              		.loc 1 141 0 is_stmt 1
 430 0120 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 431 0124 692B     		cmp	r3, #105
 432 0126 26D1     		bne	.L35
 433              	.LBB6:
 142:Src/remote_call.c ****       RC_PACK_VAR(*args, int, int, out, out_len, success);
ARM GAS  /tmp/cc6tUiew.s 			page 11


 434              		.loc 1 142 0
 435 0128 3B68     		ldr	r3, [r7]
 436 012a 1B68     		ldr	r3, [r3]
 437 012c 191D     		adds	r1, r3, #4
 438 012e 3A68     		ldr	r2, [r7]
 439 0130 1160     		str	r1, [r2]
 440 0132 1B68     		ldr	r3, [r3]
 441 0134 FB61     		str	r3, [r7, #28]
 442 0136 07F11C03 		add	r3, r7, #28
 443 013a FB65     		str	r3, [r7, #92]
 444 013c 7B68     		ldr	r3, [r7, #4]
 445 013e 043B     		subs	r3, r3, #4
 446 0140 7B63     		str	r3, [r7, #52]
 447 0142 7B6B     		ldr	r3, [r7, #52]
 448 0144 DB43     		mvns	r3, r3
 449 0146 DB0F     		lsrs	r3, r3, #31
 450 0148 DBB2     		uxtb	r3, r3
 451 014a FB66     		str	r3, [r7, #108]
 452 014c FB6E     		ldr	r3, [r7, #108]
 453 014e 002B     		cmp	r3, #0
 454 0150 00F0B480 		beq	.L22
 455 0154 0AE0     		b	.L37
 456              	.L38:
 457              		.loc 1 142 0 is_stmt 0 discriminator 2
 458 0156 FA6D     		ldr	r2, [r7, #92]
 459 0158 531C     		adds	r3, r2, #1
 460 015a FB65     		str	r3, [r7, #92]
 461 015c BB68     		ldr	r3, [r7, #8]
 462 015e 591C     		adds	r1, r3, #1
 463 0160 B960     		str	r1, [r7, #8]
 464 0162 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 465 0164 1A70     		strb	r2, [r3]
 466 0166 7B68     		ldr	r3, [r7, #4]
 467 0168 013B     		subs	r3, r3, #1
 468 016a 7B60     		str	r3, [r7, #4]
 469              	.L37:
 470              		.loc 1 142 0 discriminator 1
 471 016c 7A68     		ldr	r2, [r7, #4]
 472 016e 7B6B     		ldr	r3, [r7, #52]
 473 0170 9A42     		cmp	r2, r3
 474 0172 F0DC     		bgt	.L38
 475              	.LBE6:
 476 0174 A2E0     		b	.L22
 477              	.L35:
 143:Src/remote_call.c ****     }
 144:Src/remote_call.c ****     else if(c == RC_FLOAT){
 478              		.loc 1 144 0 is_stmt 1
 479 0176 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 480 017a 662B     		cmp	r3, #102
 481 017c 2FD1     		bne	.L39
 482              	.LBB7:
 145:Src/remote_call.c ****       RC_PACK_VAR(*args, float, double, out, out_len, success);
 483              		.loc 1 145 0
 484 017e 3B68     		ldr	r3, [r7]
 485 0180 1B68     		ldr	r3, [r3]
 486 0182 0733     		adds	r3, r3, #7
 487 0184 23F00703 		bic	r3, r3, #7
ARM GAS  /tmp/cc6tUiew.s 			page 12


 488 0188 03F10801 		add	r1, r3, #8
 489 018c 3A68     		ldr	r2, [r7]
 490 018e 1160     		str	r1, [r2]
 491 0190 D3E90034 		ldrd	r3, [r3]
 492 0194 1846     		mov	r0, r3
 493 0196 2146     		mov	r1, r4
 494 0198 FFF7FEFF 		bl	__aeabi_d2f
 495              	.LVL0:
 496 019c 0346     		mov	r3, r0	@ float
 497 019e BB61     		str	r3, [r7, #24]	@ float
 498 01a0 07F11803 		add	r3, r7, #24
 499 01a4 BB65     		str	r3, [r7, #88]
 500 01a6 7B68     		ldr	r3, [r7, #4]
 501 01a8 043B     		subs	r3, r3, #4
 502 01aa BB63     		str	r3, [r7, #56]
 503 01ac BB6B     		ldr	r3, [r7, #56]
 504 01ae DB43     		mvns	r3, r3
 505 01b0 DB0F     		lsrs	r3, r3, #31
 506 01b2 DBB2     		uxtb	r3, r3
 507 01b4 FB66     		str	r3, [r7, #108]
 508 01b6 FB6E     		ldr	r3, [r7, #108]
 509 01b8 002B     		cmp	r3, #0
 510 01ba 7FD0     		beq	.L22
 511 01bc 0AE0     		b	.L41
 512              	.L42:
 513              		.loc 1 145 0 is_stmt 0 discriminator 2
 514 01be BA6D     		ldr	r2, [r7, #88]
 515 01c0 531C     		adds	r3, r2, #1
 516 01c2 BB65     		str	r3, [r7, #88]
 517 01c4 BB68     		ldr	r3, [r7, #8]
 518 01c6 591C     		adds	r1, r3, #1
 519 01c8 B960     		str	r1, [r7, #8]
 520 01ca 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 521 01cc 1A70     		strb	r2, [r3]
 522 01ce 7B68     		ldr	r3, [r7, #4]
 523 01d0 013B     		subs	r3, r3, #1
 524 01d2 7B60     		str	r3, [r7, #4]
 525              	.L41:
 526              		.loc 1 145 0 discriminator 1
 527 01d4 7A68     		ldr	r2, [r7, #4]
 528 01d6 BB6B     		ldr	r3, [r7, #56]
 529 01d8 9A42     		cmp	r2, r3
 530 01da F0DC     		bgt	.L42
 531              	.LBE7:
 532 01dc 6EE0     		b	.L22
 533              	.L39:
 146:Src/remote_call.c ****     }
 147:Src/remote_call.c ****     else if(c == RC_DOUBLE){
 534              		.loc 1 147 0 is_stmt 1
 535 01de 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 536 01e2 462B     		cmp	r3, #70
 537 01e4 2BD1     		bne	.L43
 538              	.LBB8:
 148:Src/remote_call.c ****       RC_PACK_VAR(*args, double, double, out, out_len, success);      
 539              		.loc 1 148 0
 540 01e6 3B68     		ldr	r3, [r7]
 541 01e8 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc6tUiew.s 			page 13


 542 01ea 0733     		adds	r3, r3, #7
 543 01ec 23F00703 		bic	r3, r3, #7
 544 01f0 03F10801 		add	r1, r3, #8
 545 01f4 3A68     		ldr	r2, [r7]
 546 01f6 1160     		str	r1, [r2]
 547 01f8 D3E90034 		ldrd	r3, [r3]
 548 01fc C7E90434 		strd	r3, [r7, #16]
 549 0200 07F11003 		add	r3, r7, #16
 550 0204 7B65     		str	r3, [r7, #84]
 551 0206 7B68     		ldr	r3, [r7, #4]
 552 0208 083B     		subs	r3, r3, #8
 553 020a FB63     		str	r3, [r7, #60]
 554 020c FB6B     		ldr	r3, [r7, #60]
 555 020e DB43     		mvns	r3, r3
 556 0210 DB0F     		lsrs	r3, r3, #31
 557 0212 DBB2     		uxtb	r3, r3
 558 0214 FB66     		str	r3, [r7, #108]
 559 0216 FB6E     		ldr	r3, [r7, #108]
 560 0218 002B     		cmp	r3, #0
 561 021a 4FD0     		beq	.L22
 562 021c 0AE0     		b	.L45
 563              	.L46:
 564              		.loc 1 148 0 is_stmt 0 discriminator 2
 565 021e 7A6D     		ldr	r2, [r7, #84]
 566 0220 531C     		adds	r3, r2, #1
 567 0222 7B65     		str	r3, [r7, #84]
 568 0224 BB68     		ldr	r3, [r7, #8]
 569 0226 591C     		adds	r1, r3, #1
 570 0228 B960     		str	r1, [r7, #8]
 571 022a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 572 022c 1A70     		strb	r2, [r3]
 573 022e 7B68     		ldr	r3, [r7, #4]
 574 0230 013B     		subs	r3, r3, #1
 575 0232 7B60     		str	r3, [r7, #4]
 576              	.L45:
 577              		.loc 1 148 0 discriminator 1
 578 0234 7A68     		ldr	r2, [r7, #4]
 579 0236 FB6B     		ldr	r3, [r7, #60]
 580 0238 9A42     		cmp	r2, r3
 581 023a F0DC     		bgt	.L46
 582              	.LBE8:
 583 023c 3EE0     		b	.L22
 584              	.L43:
 149:Src/remote_call.c ****     }
 150:Src/remote_call.c ****     else if(c == RC_STRING){
 585              		.loc 1 150 0 is_stmt 1
 586 023e 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 587 0242 732B     		cmp	r3, #115
 588 0244 34D1     		bne	.L47
 589              	.LBB9:
 151:Src/remote_call.c ****       RC_PACK_STRING(*args, out, out_len, success);
 590              		.loc 1 151 0
 591 0246 3B68     		ldr	r3, [r7]
 592 0248 1B68     		ldr	r3, [r3]
 593 024a 191D     		adds	r1, r3, #4
 594 024c 3A68     		ldr	r2, [r7]
 595 024e 1160     		str	r1, [r2]
ARM GAS  /tmp/cc6tUiew.s 			page 14


 596 0250 1B68     		ldr	r3, [r3]
 597 0252 3B65     		str	r3, [r7, #80]
 598 0254 2A23     		movs	r3, #42
 599 0256 87F84F30 		strb	r3, [r7, #79]
 600 025a 4023     		movs	r3, #64
 601 025c BB64     		str	r3, [r7, #72]
 602 025e 02E0     		b	.L48
 603              	.L50:
 604              		.loc 1 151 0 is_stmt 0 discriminator 7
 605 0260 7B68     		ldr	r3, [r7, #4]
 606 0262 013B     		subs	r3, r3, #1
 607 0264 7B60     		str	r3, [r7, #4]
 608              	.L48:
 609              		.loc 1 151 0 discriminator 1
 610 0266 7B68     		ldr	r3, [r7, #4]
 611 0268 002B     		cmp	r3, #0
 612 026a 14D0     		beq	.L49
 613              		.loc 1 151 0 discriminator 3
 614 026c 3A6D     		ldr	r2, [r7, #80]
 615 026e 531C     		adds	r3, r2, #1
 616 0270 3B65     		str	r3, [r7, #80]
 617 0272 BB68     		ldr	r3, [r7, #8]
 618 0274 591C     		adds	r1, r3, #1
 619 0276 B960     		str	r1, [r7, #8]
 620 0278 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 621 027a 1A70     		strb	r2, [r3]
 622 027c 1B78     		ldrb	r3, [r3]
 623 027e 87F84F30 		strb	r3, [r7, #79]
 624 0282 97F84F30 		ldrb	r3, [r7, #79]	@ zero_extendqisi2
 625 0286 002B     		cmp	r3, #0
 626 0288 05D0     		beq	.L49
 627              		.loc 1 151 0 discriminator 5
 628 028a BB6C     		ldr	r3, [r7, #72]
 629 028c 013B     		subs	r3, r3, #1
 630 028e BB64     		str	r3, [r7, #72]
 631 0290 BB6C     		ldr	r3, [r7, #72]
 632 0292 002B     		cmp	r3, #0
 633 0294 E4D1     		bne	.L50
 634              	.L49:
 635              		.loc 1 151 0 discriminator 8
 636 0296 97F84F30 		ldrb	r3, [r7, #79]	@ zero_extendqisi2
 637 029a 002B     		cmp	r3, #0
 638 029c 05D1     		bne	.L51
 639              		.loc 1 151 0 discriminator 9
 640 029e 7B68     		ldr	r3, [r7, #4]
 641 02a0 013B     		subs	r3, r3, #1
 642 02a2 7B60     		str	r3, [r7, #4]
 643 02a4 0123     		movs	r3, #1
 644 02a6 FB66     		str	r3, [r7, #108]
 645 02a8 08E0     		b	.L22
 646              	.L51:
 647              		.loc 1 151 0 discriminator 10
 648 02aa 0023     		movs	r3, #0
 649 02ac FB66     		str	r3, [r7, #108]
 650              	.LBE9:
 651 02ae 05E0     		b	.L22
 652              	.L47:
ARM GAS  /tmp/cc6tUiew.s 			page 15


 152:Src/remote_call.c ****     }else{
 153:Src/remote_call.c ****       //Should not happen because format is checked when the function
 154:Src/remote_call.c ****       //is initialized.
 155:Src/remote_call.c ****       err = RC_WRONG_FORMAT;
 653              		.loc 1 155 0 is_stmt 1
 654 02b0 104B     		ldr	r3, .L58
 655 02b2 0122     		movs	r2, #1
 656 02b4 1A60     		str	r2, [r3]
 156:Src/remote_call.c ****       return -1;
 657              		.loc 1 156 0
 658 02b6 4FF0FF33 		mov	r3, #-1
 659 02ba 16E0     		b	.L53
 660              	.L22:
 131:Src/remote_call.c ****     if(c == RC_UINT8_T){
 661              		.loc 1 131 0
 662 02bc FB68     		ldr	r3, [r7, #12]
 663 02be 5A1C     		adds	r2, r3, #1
 664 02c0 FA60     		str	r2, [r7, #12]
 665 02c2 1B78     		ldrb	r3, [r3]
 666 02c4 87F84330 		strb	r3, [r7, #67]
 667 02c8 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 668 02cc 002B     		cmp	r3, #0
 669 02ce 03D0     		beq	.L54
 131:Src/remote_call.c ****     if(c == RC_UINT8_T){
 670              		.loc 1 131 0 is_stmt 0 discriminator 1
 671 02d0 FB6E     		ldr	r3, [r7, #108]
 672 02d2 002B     		cmp	r3, #0
 673 02d4 7FF4A0AE 		bne	.L55
 674              	.L54:
 157:Src/remote_call.c ****     }
 158:Src/remote_call.c ****   }
 159:Src/remote_call.c ****   
 160:Src/remote_call.c ****   return (success)?(out_len_tmp - out_len):-1;
 675              		.loc 1 160 0 is_stmt 1
 676 02d8 FB6E     		ldr	r3, [r7, #108]
 677 02da 002B     		cmp	r3, #0
 678 02dc 03D0     		beq	.L56
 679              		.loc 1 160 0 is_stmt 0 discriminator 1
 680 02de 7A6C     		ldr	r2, [r7, #68]
 681 02e0 7B68     		ldr	r3, [r7, #4]
 682 02e2 D31A     		subs	r3, r2, r3
 683 02e4 01E0     		b	.L53
 684              	.L56:
 685              		.loc 1 160 0 discriminator 2
 686 02e6 4FF0FF33 		mov	r3, #-1
 687              	.L53:
 161:Src/remote_call.c **** }								
 688              		.loc 1 161 0 is_stmt 1
 689 02ea 1846     		mov	r0, r3
 690 02ec 7437     		adds	r7, r7, #116
 691              	.LCFI9:
 692              		.cfi_def_cfa_offset 12
 693 02ee BD46     		mov	sp, r7
 694              	.LCFI10:
 695              		.cfi_def_cfa_register 13
 696              		@ sp needed
 697 02f0 90BD     		pop	{r4, r7, pc}
ARM GAS  /tmp/cc6tUiew.s 			page 16


 698              	.L59:
 699 02f2 00BF     		.align	2
 700              	.L58:
 701 02f4 00000000 		.word	err
 702              		.cfi_endproc
 703              	.LFE1:
 705              		.section	.text.RC_Unpack_Vars,"ax",%progbits
 706              		.align	1
 707              		.syntax unified
 708              		.thumb
 709              		.thumb_func
 710              		.fpu fpv4-sp-d16
 712              	RC_Unpack_Vars:
 713              	.LFB2:
 162:Src/remote_call.c **** 
 163:Src/remote_call.c **** static int RC_Unpack_Vars(const char *fmt, uint8_t *in, int in_len,  va_list *args){
 714              		.loc 1 163 0
 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 88
 717              		@ frame_needed = 1, uses_anonymous_args = 0
 718              		@ link register save eliminated.
 719 0000 80B4     		push	{r7}
 720              	.LCFI11:
 721              		.cfi_def_cfa_offset 4
 722              		.cfi_offset 7, -4
 723 0002 97B0     		sub	sp, sp, #92
 724              	.LCFI12:
 725              		.cfi_def_cfa_offset 96
 726 0004 00AF     		add	r7, sp, #0
 727              	.LCFI13:
 728              		.cfi_def_cfa_register 7
 729 0006 F860     		str	r0, [r7, #12]
 730 0008 B960     		str	r1, [r7, #8]
 731 000a 7A60     		str	r2, [r7, #4]
 732 000c 3B60     		str	r3, [r7]
 164:Src/remote_call.c ****   char c;
 165:Src/remote_call.c ****   int success = 1;
 733              		.loc 1 165 0
 734 000e 0123     		movs	r3, #1
 735 0010 7B65     		str	r3, [r7, #84]
 166:Src/remote_call.c ****   
 167:Src/remote_call.c ****   while((c = *(fmt++)) != '\0' && success){
 736              		.loc 1 167 0
 737 0012 2CE1     		b	.L61
 738              	.L94:
 168:Src/remote_call.c ****     if(c == RC_UINT8_T){
 739              		.loc 1 168 0
 740 0014 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 741 0018 622B     		cmp	r3, #98
 742 001a 23D1     		bne	.L62
 743              	.LBB10:
 169:Src/remote_call.c ****       RC_UNPACK_VAR(*args, uint8_t, uint8_t*, in, in_len, success);
 744              		.loc 1 169 0
 745 001c 3B68     		ldr	r3, [r7]
 746 001e 1B68     		ldr	r3, [r3]
 747 0020 191D     		adds	r1, r3, #4
 748 0022 3A68     		ldr	r2, [r7]
ARM GAS  /tmp/cc6tUiew.s 			page 17


 749 0024 1160     		str	r1, [r2]
 750 0026 1B68     		ldr	r3, [r3]
 751 0028 3B65     		str	r3, [r7, #80]
 752 002a 7B68     		ldr	r3, [r7, #4]
 753 002c 013B     		subs	r3, r3, #1
 754 002e 7B61     		str	r3, [r7, #20]
 755 0030 7B69     		ldr	r3, [r7, #20]
 756 0032 DB43     		mvns	r3, r3
 757 0034 DB0F     		lsrs	r3, r3, #31
 758 0036 DBB2     		uxtb	r3, r3
 759 0038 7B65     		str	r3, [r7, #84]
 760 003a 7B6D     		ldr	r3, [r7, #84]
 761 003c 002B     		cmp	r3, #0
 762 003e 00F01681 		beq	.L61
 763 0042 0AE0     		b	.L64
 764              	.L65:
 765              		.loc 1 169 0 is_stmt 0 discriminator 2
 766 0044 BA68     		ldr	r2, [r7, #8]
 767 0046 531C     		adds	r3, r2, #1
 768 0048 BB60     		str	r3, [r7, #8]
 769 004a 3B6D     		ldr	r3, [r7, #80]
 770 004c 591C     		adds	r1, r3, #1
 771 004e 3965     		str	r1, [r7, #80]
 772 0050 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 773 0052 1A70     		strb	r2, [r3]
 774 0054 7B68     		ldr	r3, [r7, #4]
 775 0056 013B     		subs	r3, r3, #1
 776 0058 7B60     		str	r3, [r7, #4]
 777              	.L64:
 778              		.loc 1 169 0 discriminator 1
 779 005a 7A68     		ldr	r2, [r7, #4]
 780 005c 7B69     		ldr	r3, [r7, #20]
 781 005e 9A42     		cmp	r2, r3
 782 0060 F0DC     		bgt	.L65
 783              	.LBE10:
 784 0062 04E1     		b	.L61
 785              	.L62:
 170:Src/remote_call.c ****     }
 171:Src/remote_call.c ****     else if(c == RC_UINT16_T){
 786              		.loc 1 171 0 is_stmt 1
 787 0064 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 788 0068 422B     		cmp	r3, #66
 789 006a 23D1     		bne	.L66
 790              	.LBB11:
 172:Src/remote_call.c ****       RC_UNPACK_VAR(*args, uint16_t, uint16_t*, in, in_len, success);
 791              		.loc 1 172 0
 792 006c 3B68     		ldr	r3, [r7]
 793 006e 1B68     		ldr	r3, [r3]
 794 0070 191D     		adds	r1, r3, #4
 795 0072 3A68     		ldr	r2, [r7]
 796 0074 1160     		str	r1, [r2]
 797 0076 1B68     		ldr	r3, [r3]
 798 0078 FB64     		str	r3, [r7, #76]
 799 007a 7B68     		ldr	r3, [r7, #4]
 800 007c 023B     		subs	r3, r3, #2
 801 007e BB61     		str	r3, [r7, #24]
 802 0080 BB69     		ldr	r3, [r7, #24]
ARM GAS  /tmp/cc6tUiew.s 			page 18


 803 0082 DB43     		mvns	r3, r3
 804 0084 DB0F     		lsrs	r3, r3, #31
 805 0086 DBB2     		uxtb	r3, r3
 806 0088 7B65     		str	r3, [r7, #84]
 807 008a 7B6D     		ldr	r3, [r7, #84]
 808 008c 002B     		cmp	r3, #0
 809 008e 00F0EE80 		beq	.L61
 810 0092 0AE0     		b	.L68
 811              	.L69:
 812              		.loc 1 172 0 is_stmt 0 discriminator 2
 813 0094 BA68     		ldr	r2, [r7, #8]
 814 0096 531C     		adds	r3, r2, #1
 815 0098 BB60     		str	r3, [r7, #8]
 816 009a FB6C     		ldr	r3, [r7, #76]
 817 009c 591C     		adds	r1, r3, #1
 818 009e F964     		str	r1, [r7, #76]
 819 00a0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 820 00a2 1A70     		strb	r2, [r3]
 821 00a4 7B68     		ldr	r3, [r7, #4]
 822 00a6 013B     		subs	r3, r3, #1
 823 00a8 7B60     		str	r3, [r7, #4]
 824              	.L68:
 825              		.loc 1 172 0 discriminator 1
 826 00aa 7A68     		ldr	r2, [r7, #4]
 827 00ac BB69     		ldr	r3, [r7, #24]
 828 00ae 9A42     		cmp	r2, r3
 829 00b0 F0DC     		bgt	.L69
 830              	.LBE11:
 831 00b2 DCE0     		b	.L61
 832              	.L66:
 173:Src/remote_call.c ****     }
 174:Src/remote_call.c ****     else if(c == RC_UINT32_T){
 833              		.loc 1 174 0 is_stmt 1
 834 00b4 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 835 00b8 752B     		cmp	r3, #117
 836 00ba 23D1     		bne	.L70
 837              	.LBB12:
 175:Src/remote_call.c ****       RC_UNPACK_VAR(*args, uint32_t, uint32_t*, in, in_len, success);
 838              		.loc 1 175 0
 839 00bc 3B68     		ldr	r3, [r7]
 840 00be 1B68     		ldr	r3, [r3]
 841 00c0 191D     		adds	r1, r3, #4
 842 00c2 3A68     		ldr	r2, [r7]
 843 00c4 1160     		str	r1, [r2]
 844 00c6 1B68     		ldr	r3, [r3]
 845 00c8 BB64     		str	r3, [r7, #72]
 846 00ca 7B68     		ldr	r3, [r7, #4]
 847 00cc 043B     		subs	r3, r3, #4
 848 00ce FB61     		str	r3, [r7, #28]
 849 00d0 FB69     		ldr	r3, [r7, #28]
 850 00d2 DB43     		mvns	r3, r3
 851 00d4 DB0F     		lsrs	r3, r3, #31
 852 00d6 DBB2     		uxtb	r3, r3
 853 00d8 7B65     		str	r3, [r7, #84]
 854 00da 7B6D     		ldr	r3, [r7, #84]
 855 00dc 002B     		cmp	r3, #0
 856 00de 00F0C680 		beq	.L61
ARM GAS  /tmp/cc6tUiew.s 			page 19


 857 00e2 0AE0     		b	.L72
 858              	.L73:
 859              		.loc 1 175 0 is_stmt 0 discriminator 2
 860 00e4 BA68     		ldr	r2, [r7, #8]
 861 00e6 531C     		adds	r3, r2, #1
 862 00e8 BB60     		str	r3, [r7, #8]
 863 00ea BB6C     		ldr	r3, [r7, #72]
 864 00ec 591C     		adds	r1, r3, #1
 865 00ee B964     		str	r1, [r7, #72]
 866 00f0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 867 00f2 1A70     		strb	r2, [r3]
 868 00f4 7B68     		ldr	r3, [r7, #4]
 869 00f6 013B     		subs	r3, r3, #1
 870 00f8 7B60     		str	r3, [r7, #4]
 871              	.L72:
 872              		.loc 1 175 0 discriminator 1
 873 00fa 7A68     		ldr	r2, [r7, #4]
 874 00fc FB69     		ldr	r3, [r7, #28]
 875 00fe 9A42     		cmp	r2, r3
 876 0100 F0DC     		bgt	.L73
 877              	.LBE12:
 878 0102 B4E0     		b	.L61
 879              	.L70:
 176:Src/remote_call.c ****     }
 177:Src/remote_call.c ****     else if(c == RC_INT){
 880              		.loc 1 177 0 is_stmt 1
 881 0104 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 882 0108 692B     		cmp	r3, #105
 883 010a 23D1     		bne	.L74
 884              	.LBB13:
 178:Src/remote_call.c ****       RC_UNPACK_VAR(*args, int, int*, in, in_len, success);
 885              		.loc 1 178 0
 886 010c 3B68     		ldr	r3, [r7]
 887 010e 1B68     		ldr	r3, [r3]
 888 0110 191D     		adds	r1, r3, #4
 889 0112 3A68     		ldr	r2, [r7]
 890 0114 1160     		str	r1, [r2]
 891 0116 1B68     		ldr	r3, [r3]
 892 0118 7B64     		str	r3, [r7, #68]
 893 011a 7B68     		ldr	r3, [r7, #4]
 894 011c 043B     		subs	r3, r3, #4
 895 011e 3B62     		str	r3, [r7, #32]
 896 0120 3B6A     		ldr	r3, [r7, #32]
 897 0122 DB43     		mvns	r3, r3
 898 0124 DB0F     		lsrs	r3, r3, #31
 899 0126 DBB2     		uxtb	r3, r3
 900 0128 7B65     		str	r3, [r7, #84]
 901 012a 7B6D     		ldr	r3, [r7, #84]
 902 012c 002B     		cmp	r3, #0
 903 012e 00F09E80 		beq	.L61
 904 0132 0AE0     		b	.L76
 905              	.L77:
 906              		.loc 1 178 0 is_stmt 0 discriminator 2
 907 0134 BA68     		ldr	r2, [r7, #8]
 908 0136 531C     		adds	r3, r2, #1
 909 0138 BB60     		str	r3, [r7, #8]
 910 013a 7B6C     		ldr	r3, [r7, #68]
ARM GAS  /tmp/cc6tUiew.s 			page 20


 911 013c 591C     		adds	r1, r3, #1
 912 013e 7964     		str	r1, [r7, #68]
 913 0140 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 914 0142 1A70     		strb	r2, [r3]
 915 0144 7B68     		ldr	r3, [r7, #4]
 916 0146 013B     		subs	r3, r3, #1
 917 0148 7B60     		str	r3, [r7, #4]
 918              	.L76:
 919              		.loc 1 178 0 discriminator 1
 920 014a 7A68     		ldr	r2, [r7, #4]
 921 014c 3B6A     		ldr	r3, [r7, #32]
 922 014e 9A42     		cmp	r2, r3
 923 0150 F0DC     		bgt	.L77
 924              	.LBE13:
 925 0152 8CE0     		b	.L61
 926              	.L74:
 179:Src/remote_call.c ****     }
 180:Src/remote_call.c ****     else if(c == RC_FLOAT){
 927              		.loc 1 180 0 is_stmt 1
 928 0154 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 929 0158 662B     		cmp	r3, #102
 930 015a 22D1     		bne	.L78
 931              	.LBB14:
 181:Src/remote_call.c ****       RC_UNPACK_VAR(*args, float, float*, in, in_len, success);
 932              		.loc 1 181 0
 933 015c 3B68     		ldr	r3, [r7]
 934 015e 1B68     		ldr	r3, [r3]
 935 0160 191D     		adds	r1, r3, #4
 936 0162 3A68     		ldr	r2, [r7]
 937 0164 1160     		str	r1, [r2]
 938 0166 1B68     		ldr	r3, [r3]
 939 0168 3B64     		str	r3, [r7, #64]
 940 016a 7B68     		ldr	r3, [r7, #4]
 941 016c 043B     		subs	r3, r3, #4
 942 016e 7B62     		str	r3, [r7, #36]
 943 0170 7B6A     		ldr	r3, [r7, #36]
 944 0172 DB43     		mvns	r3, r3
 945 0174 DB0F     		lsrs	r3, r3, #31
 946 0176 DBB2     		uxtb	r3, r3
 947 0178 7B65     		str	r3, [r7, #84]
 948 017a 7B6D     		ldr	r3, [r7, #84]
 949 017c 002B     		cmp	r3, #0
 950 017e 76D0     		beq	.L61
 951 0180 0AE0     		b	.L80
 952              	.L81:
 953              		.loc 1 181 0 is_stmt 0 discriminator 2
 954 0182 BA68     		ldr	r2, [r7, #8]
 955 0184 531C     		adds	r3, r2, #1
 956 0186 BB60     		str	r3, [r7, #8]
 957 0188 3B6C     		ldr	r3, [r7, #64]
 958 018a 591C     		adds	r1, r3, #1
 959 018c 3964     		str	r1, [r7, #64]
 960 018e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 961 0190 1A70     		strb	r2, [r3]
 962 0192 7B68     		ldr	r3, [r7, #4]
 963 0194 013B     		subs	r3, r3, #1
 964 0196 7B60     		str	r3, [r7, #4]
ARM GAS  /tmp/cc6tUiew.s 			page 21


 965              	.L80:
 966              		.loc 1 181 0 discriminator 1
 967 0198 7A68     		ldr	r2, [r7, #4]
 968 019a 7B6A     		ldr	r3, [r7, #36]
 969 019c 9A42     		cmp	r2, r3
 970 019e F0DC     		bgt	.L81
 971              	.LBE14:
 972 01a0 65E0     		b	.L61
 973              	.L78:
 182:Src/remote_call.c ****     }
 183:Src/remote_call.c ****     else if(c == RC_DOUBLE){
 974              		.loc 1 183 0 is_stmt 1
 975 01a2 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 976 01a6 462B     		cmp	r3, #70
 977 01a8 22D1     		bne	.L82
 978              	.LBB15:
 184:Src/remote_call.c ****       RC_UNPACK_VAR(*args, double, double*, in, in_len, success);
 979              		.loc 1 184 0
 980 01aa 3B68     		ldr	r3, [r7]
 981 01ac 1B68     		ldr	r3, [r3]
 982 01ae 191D     		adds	r1, r3, #4
 983 01b0 3A68     		ldr	r2, [r7]
 984 01b2 1160     		str	r1, [r2]
 985 01b4 1B68     		ldr	r3, [r3]
 986 01b6 FB63     		str	r3, [r7, #60]
 987 01b8 7B68     		ldr	r3, [r7, #4]
 988 01ba 083B     		subs	r3, r3, #8
 989 01bc BB62     		str	r3, [r7, #40]
 990 01be BB6A     		ldr	r3, [r7, #40]
 991 01c0 DB43     		mvns	r3, r3
 992 01c2 DB0F     		lsrs	r3, r3, #31
 993 01c4 DBB2     		uxtb	r3, r3
 994 01c6 7B65     		str	r3, [r7, #84]
 995 01c8 7B6D     		ldr	r3, [r7, #84]
 996 01ca 002B     		cmp	r3, #0
 997 01cc 4FD0     		beq	.L61
 998 01ce 0AE0     		b	.L84
 999              	.L85:
 1000              		.loc 1 184 0 is_stmt 0 discriminator 2
 1001 01d0 BA68     		ldr	r2, [r7, #8]
 1002 01d2 531C     		adds	r3, r2, #1
 1003 01d4 BB60     		str	r3, [r7, #8]
 1004 01d6 FB6B     		ldr	r3, [r7, #60]
 1005 01d8 591C     		adds	r1, r3, #1
 1006 01da F963     		str	r1, [r7, #60]
 1007 01dc 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1008 01de 1A70     		strb	r2, [r3]
 1009 01e0 7B68     		ldr	r3, [r7, #4]
 1010 01e2 013B     		subs	r3, r3, #1
 1011 01e4 7B60     		str	r3, [r7, #4]
 1012              	.L84:
 1013              		.loc 1 184 0 discriminator 1
 1014 01e6 7A68     		ldr	r2, [r7, #4]
 1015 01e8 BB6A     		ldr	r3, [r7, #40]
 1016 01ea 9A42     		cmp	r2, r3
 1017 01ec F0DC     		bgt	.L85
 1018              	.LBE15:
ARM GAS  /tmp/cc6tUiew.s 			page 22


 1019 01ee 3EE0     		b	.L61
 1020              	.L82:
 185:Src/remote_call.c ****     }
 186:Src/remote_call.c ****     else if(c == RC_STRING){
 1021              		.loc 1 186 0 is_stmt 1
 1022 01f0 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 1023 01f4 732B     		cmp	r3, #115
 1024 01f6 34D1     		bne	.L86
 1025              	.LBB16:
 187:Src/remote_call.c ****       RC_UNPACK_STRING(*args, in, in_len, success);
 1026              		.loc 1 187 0
 1027 01f8 3B68     		ldr	r3, [r7]
 1028 01fa 1B68     		ldr	r3, [r3]
 1029 01fc 191D     		adds	r1, r3, #4
 1030 01fe 3A68     		ldr	r2, [r7]
 1031 0200 1160     		str	r1, [r2]
 1032 0202 1B68     		ldr	r3, [r3]
 1033 0204 BB63     		str	r3, [r7, #56]
 1034 0206 2A23     		movs	r3, #42
 1035 0208 87F83730 		strb	r3, [r7, #55]
 1036 020c 4023     		movs	r3, #64
 1037 020e 3B63     		str	r3, [r7, #48]
 1038 0210 02E0     		b	.L87
 1039              	.L89:
 1040              		.loc 1 187 0 is_stmt 0 discriminator 7
 1041 0212 7B68     		ldr	r3, [r7, #4]
 1042 0214 013B     		subs	r3, r3, #1
 1043 0216 7B60     		str	r3, [r7, #4]
 1044              	.L87:
 1045              		.loc 1 187 0 discriminator 1
 1046 0218 7B68     		ldr	r3, [r7, #4]
 1047 021a 002B     		cmp	r3, #0
 1048 021c 14D0     		beq	.L88
 1049              		.loc 1 187 0 discriminator 3
 1050 021e BA68     		ldr	r2, [r7, #8]
 1051 0220 531C     		adds	r3, r2, #1
 1052 0222 BB60     		str	r3, [r7, #8]
 1053 0224 BB6B     		ldr	r3, [r7, #56]
 1054 0226 591C     		adds	r1, r3, #1
 1055 0228 B963     		str	r1, [r7, #56]
 1056 022a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1057 022c 1A70     		strb	r2, [r3]
 1058 022e 1B78     		ldrb	r3, [r3]
 1059 0230 87F83730 		strb	r3, [r7, #55]
 1060 0234 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 1061 0238 002B     		cmp	r3, #0
 1062 023a 05D0     		beq	.L88
 1063              		.loc 1 187 0 discriminator 5
 1064 023c 3B6B     		ldr	r3, [r7, #48]
 1065 023e 013B     		subs	r3, r3, #1
 1066 0240 3B63     		str	r3, [r7, #48]
 1067 0242 3B6B     		ldr	r3, [r7, #48]
 1068 0244 002B     		cmp	r3, #0
 1069 0246 E4D1     		bne	.L89
 1070              	.L88:
 1071              		.loc 1 187 0 discriminator 8
 1072 0248 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
ARM GAS  /tmp/cc6tUiew.s 			page 23


 1073 024c 002B     		cmp	r3, #0
 1074 024e 05D1     		bne	.L90
 1075              		.loc 1 187 0 discriminator 9
 1076 0250 7B68     		ldr	r3, [r7, #4]
 1077 0252 013B     		subs	r3, r3, #1
 1078 0254 7B60     		str	r3, [r7, #4]
 1079 0256 0123     		movs	r3, #1
 1080 0258 7B65     		str	r3, [r7, #84]
 1081 025a 08E0     		b	.L61
 1082              	.L90:
 1083              		.loc 1 187 0 discriminator 10
 1084 025c 0023     		movs	r3, #0
 1085 025e 7B65     		str	r3, [r7, #84]
 1086              	.LBE16:
 1087 0260 05E0     		b	.L61
 1088              	.L86:
 188:Src/remote_call.c ****     }else{
 189:Src/remote_call.c ****       //Should not happen because format is checked when the function
 190:Src/remote_call.c ****       //is initialized.
 191:Src/remote_call.c ****       err = RC_WRONG_FORMAT;
 1089              		.loc 1 191 0 is_stmt 1
 1090 0262 124B     		ldr	r3, .L97
 1091 0264 0122     		movs	r2, #1
 1092 0266 1A60     		str	r2, [r3]
 192:Src/remote_call.c ****       return -1;
 1093              		.loc 1 192 0
 1094 0268 4FF0FF33 		mov	r3, #-1
 1095 026c 17E0     		b	.L92
 1096              	.L61:
 167:Src/remote_call.c ****     if(c == RC_UINT8_T){
 1097              		.loc 1 167 0
 1098 026e FB68     		ldr	r3, [r7, #12]
 1099 0270 5A1C     		adds	r2, r3, #1
 1100 0272 FA60     		str	r2, [r7, #12]
 1101 0274 1B78     		ldrb	r3, [r3]
 1102 0276 87F82F30 		strb	r3, [r7, #47]
 1103 027a 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 1104 027e 002B     		cmp	r3, #0
 1105 0280 03D0     		beq	.L93
 167:Src/remote_call.c ****     if(c == RC_UINT8_T){
 1106              		.loc 1 167 0 is_stmt 0 discriminator 1
 1107 0282 7B6D     		ldr	r3, [r7, #84]
 1108 0284 002B     		cmp	r3, #0
 1109 0286 7FF4C5AE 		bne	.L94
 1110              	.L93:
 193:Src/remote_call.c ****     }
 194:Src/remote_call.c ****   }
 195:Src/remote_call.c ****   
 196:Src/remote_call.c ****   return (success && in_len == 0)?0:-1;
 1111              		.loc 1 196 0 is_stmt 1
 1112 028a 7B6D     		ldr	r3, [r7, #84]
 1113 028c 002B     		cmp	r3, #0
 1114 028e 04D0     		beq	.L95
 1115              		.loc 1 196 0 is_stmt 0 discriminator 1
 1116 0290 7B68     		ldr	r3, [r7, #4]
 1117 0292 002B     		cmp	r3, #0
 1118 0294 01D1     		bne	.L95
ARM GAS  /tmp/cc6tUiew.s 			page 24


 1119              		.loc 1 196 0 discriminator 3
 1120 0296 0023     		movs	r3, #0
 1121 0298 01E0     		b	.L92
 1122              	.L95:
 1123              		.loc 1 196 0 discriminator 4
 1124 029a 4FF0FF33 		mov	r3, #-1
 1125              	.L92:
 197:Src/remote_call.c **** }
 1126              		.loc 1 197 0 is_stmt 1
 1127 029e 1846     		mov	r0, r3
 1128 02a0 5C37     		adds	r7, r7, #92
 1129              	.LCFI14:
 1130              		.cfi_def_cfa_offset 4
 1131 02a2 BD46     		mov	sp, r7
 1132              	.LCFI15:
 1133              		.cfi_def_cfa_register 13
 1134              		@ sp needed
 1135 02a4 5DF8047B 		ldr	r7, [sp], #4
 1136              	.LCFI16:
 1137              		.cfi_restore 7
 1138              		.cfi_def_cfa_offset 0
 1139 02a8 7047     		bx	lr
 1140              	.L98:
 1141 02aa 00BF     		.align	2
 1142              	.L97:
 1143 02ac 00000000 		.word	err
 1144              		.cfi_endproc
 1145              	.LFE2:
 1147              		.section	.text.RC_Get_Error,"ax",%progbits
 1148              		.align	1
 1149              		.global	RC_Get_Error
 1150              		.syntax unified
 1151              		.thumb
 1152              		.thumb_func
 1153              		.fpu fpv4-sp-d16
 1155              	RC_Get_Error:
 1156              	.LFB3:
 198:Src/remote_call.c **** 
 199:Src/remote_call.c **** //==================================================//
 200:Src/remote_call.c **** //               ERROR ACCESSOR                     //
 201:Src/remote_call.c **** //==================================================//
 202:Src/remote_call.c **** int RC_Get_Error(){
 1157              		.loc 1 202 0
 1158              		.cfi_startproc
 1159              		@ args = 0, pretend = 0, frame = 0
 1160              		@ frame_needed = 1, uses_anonymous_args = 0
 1161              		@ link register save eliminated.
 1162 0000 80B4     		push	{r7}
 1163              	.LCFI17:
 1164              		.cfi_def_cfa_offset 4
 1165              		.cfi_offset 7, -4
 1166 0002 00AF     		add	r7, sp, #0
 1167              	.LCFI18:
 1168              		.cfi_def_cfa_register 7
 203:Src/remote_call.c ****   return err;
 1169              		.loc 1 203 0
 1170 0004 034B     		ldr	r3, .L101
ARM GAS  /tmp/cc6tUiew.s 			page 25


 1171 0006 1B68     		ldr	r3, [r3]
 204:Src/remote_call.c **** }
 1172              		.loc 1 204 0
 1173 0008 1846     		mov	r0, r3
 1174 000a BD46     		mov	sp, r7
 1175              	.LCFI19:
 1176              		.cfi_def_cfa_register 13
 1177              		@ sp needed
 1178 000c 5DF8047B 		ldr	r7, [sp], #4
 1179              	.LCFI20:
 1180              		.cfi_restore 7
 1181              		.cfi_def_cfa_offset 0
 1182 0010 7047     		bx	lr
 1183              	.L102:
 1184 0012 00BF     		.align	2
 1185              	.L101:
 1186 0014 00000000 		.word	err
 1187              		.cfi_endproc
 1188              	.LFE3:
 1190              		.section	.text.RC_Server_Init,"ax",%progbits
 1191              		.align	1
 1192              		.global	RC_Server_Init
 1193              		.syntax unified
 1194              		.thumb
 1195              		.thumb_func
 1196              		.fpu fpv4-sp-d16
 1198              	RC_Server_Init:
 1199              	.LFB4:
 205:Src/remote_call.c **** 
 206:Src/remote_call.c **** //==================================================//
 207:Src/remote_call.c **** //                  RC SERVER                       //
 208:Src/remote_call.c **** //==================================================//
 209:Src/remote_call.c **** 
 210:Src/remote_call.c **** void RC_Server_Init(RC_Server *server, RP_Interface *interface){
 1200              		.loc 1 210 0
 1201              		.cfi_startproc
 1202              		@ args = 0, pretend = 0, frame = 16
 1203              		@ frame_needed = 1, uses_anonymous_args = 0
 1204              		@ link register save eliminated.
 1205 0000 80B4     		push	{r7}
 1206              	.LCFI21:
 1207              		.cfi_def_cfa_offset 4
 1208              		.cfi_offset 7, -4
 1209 0002 85B0     		sub	sp, sp, #20
 1210              	.LCFI22:
 1211              		.cfi_def_cfa_offset 24
 1212 0004 00AF     		add	r7, sp, #0
 1213              	.LCFI23:
 1214              		.cfi_def_cfa_register 7
 1215 0006 7860     		str	r0, [r7, #4]
 1216 0008 3960     		str	r1, [r7]
 211:Src/remote_call.c ****   int i;
 212:Src/remote_call.c **** 
 213:Src/remote_call.c ****   server->interface = interface;
 1217              		.loc 1 213 0
 1218 000a 7B68     		ldr	r3, [r7, #4]
 1219 000c 3A68     		ldr	r2, [r7]
ARM GAS  /tmp/cc6tUiew.s 			page 26


 1220 000e 1A60     		str	r2, [r3]
 214:Src/remote_call.c ****   for(i = 0; i < RC_NB_FUNCTIONS; i++){
 1221              		.loc 1 214 0
 1222 0010 0023     		movs	r3, #0
 1223 0012 FB60     		str	r3, [r7, #12]
 1224 0014 0CE0     		b	.L104
 1225              	.L105:
 215:Src/remote_call.c ****     server->functions[i].call = 0;
 1226              		.loc 1 215 0 discriminator 3
 1227 0016 7968     		ldr	r1, [r7, #4]
 1228 0018 FA68     		ldr	r2, [r7, #12]
 1229 001a 1346     		mov	r3, r2
 1230 001c 5B00     		lsls	r3, r3, #1
 1231 001e 1344     		add	r3, r3, r2
 1232 0020 DB00     		lsls	r3, r3, #3
 1233 0022 0B44     		add	r3, r3, r1
 1234 0024 0433     		adds	r3, r3, #4
 1235 0026 0022     		movs	r2, #0
 1236 0028 1A60     		str	r2, [r3]
 214:Src/remote_call.c ****   for(i = 0; i < RC_NB_FUNCTIONS; i++){
 1237              		.loc 1 214 0 discriminator 3
 1238 002a FB68     		ldr	r3, [r7, #12]
 1239 002c 0133     		adds	r3, r3, #1
 1240 002e FB60     		str	r3, [r7, #12]
 1241              	.L104:
 214:Src/remote_call.c ****   for(i = 0; i < RC_NB_FUNCTIONS; i++){
 1242              		.loc 1 214 0 is_stmt 0 discriminator 1
 1243 0030 FB68     		ldr	r3, [r7, #12]
 1244 0032 1F2B     		cmp	r3, #31
 1245 0034 EFDD     		ble	.L105
 216:Src/remote_call.c ****   }  
 217:Src/remote_call.c **** }
 1246              		.loc 1 217 0 is_stmt 1
 1247 0036 00BF     		nop
 1248 0038 1437     		adds	r7, r7, #20
 1249              	.LCFI24:
 1250              		.cfi_def_cfa_offset 4
 1251 003a BD46     		mov	sp, r7
 1252              	.LCFI25:
 1253              		.cfi_def_cfa_register 13
 1254              		@ sp needed
 1255 003c 5DF8047B 		ldr	r7, [sp], #4
 1256              	.LCFI26:
 1257              		.cfi_restore 7
 1258              		.cfi_def_cfa_offset 0
 1259 0040 7047     		bx	lr
 1260              		.cfi_endproc
 1261              	.LFE4:
 1263              		.section	.text.RC_Server_Add_Function,"ax",%progbits
 1264              		.align	1
 1265              		.global	RC_Server_Add_Function
 1266              		.syntax unified
 1267              		.thumb
 1268              		.thumb_func
 1269              		.fpu fpv4-sp-d16
 1271              	RC_Server_Add_Function:
 1272              	.LFB5:
ARM GAS  /tmp/cc6tUiew.s 			page 27


 218:Src/remote_call.c **** 
 219:Src/remote_call.c **** int RC_Server_Add_Function(RC_Server *server,
 220:Src/remote_call.c **** 			   int id,
 221:Src/remote_call.c **** 			   void (*function)(RC_Server *server),
 222:Src/remote_call.c **** 			   const char params_fmt[],
 223:Src/remote_call.c **** 			   const char return_fmt[],
 224:Src/remote_call.c **** 			   RC_Call_Type call_type){
 1273              		.loc 1 224 0
 1274              		.cfi_startproc
 1275              		@ args = 8, pretend = 0, frame = 24
 1276              		@ frame_needed = 1, uses_anonymous_args = 0
 1277 0000 80B5     		push	{r7, lr}
 1278              	.LCFI27:
 1279              		.cfi_def_cfa_offset 8
 1280              		.cfi_offset 7, -8
 1281              		.cfi_offset 14, -4
 1282 0002 86B0     		sub	sp, sp, #24
 1283              	.LCFI28:
 1284              		.cfi_def_cfa_offset 32
 1285 0004 00AF     		add	r7, sp, #0
 1286              	.LCFI29:
 1287              		.cfi_def_cfa_register 7
 1288 0006 F860     		str	r0, [r7, #12]
 1289 0008 B960     		str	r1, [r7, #8]
 1290 000a 7A60     		str	r2, [r7, #4]
 1291 000c 3B60     		str	r3, [r7]
 225:Src/remote_call.c ****   //Check ID range
 226:Src/remote_call.c ****   if(!CHECK_ID(id)){
 1292              		.loc 1 226 0
 1293 000e BB68     		ldr	r3, [r7, #8]
 1294 0010 002B     		cmp	r3, #0
 1295 0012 02DB     		blt	.L107
 1296              		.loc 1 226 0 is_stmt 0 discriminator 1
 1297 0014 BB68     		ldr	r3, [r7, #8]
 1298 0016 1F2B     		cmp	r3, #31
 1299 0018 05DD     		ble	.L108
 1300              	.L107:
 227:Src/remote_call.c ****     err = RC_BAD_ID;
 1301              		.loc 1 227 0 is_stmt 1
 1302 001a 1A4B     		ldr	r3, .L112
 1303 001c 0022     		movs	r2, #0
 1304 001e 1A60     		str	r2, [r3]
 228:Src/remote_call.c ****     return -1;
 1305              		.loc 1 228 0
 1306 0020 4FF0FF33 		mov	r3, #-1
 1307 0024 2AE0     		b	.L109
 1308              	.L108:
 229:Src/remote_call.c ****   }
 230:Src/remote_call.c **** 
 231:Src/remote_call.c ****   //Get function struct by id
 232:Src/remote_call.c ****   RC_Server_Function *fun = &server->functions[id];
 1309              		.loc 1 232 0
 1310 0026 BA68     		ldr	r2, [r7, #8]
 1311 0028 1346     		mov	r3, r2
 1312 002a 5B00     		lsls	r3, r3, #1
 1313 002c 1344     		add	r3, r3, r2
 1314 002e DB00     		lsls	r3, r3, #3
ARM GAS  /tmp/cc6tUiew.s 			page 28


 1315 0030 FA68     		ldr	r2, [r7, #12]
 1316 0032 1344     		add	r3, r3, r2
 1317 0034 0433     		adds	r3, r3, #4
 1318 0036 7B61     		str	r3, [r7, #20]
 233:Src/remote_call.c **** 
 234:Src/remote_call.c ****   //Params format
 235:Src/remote_call.c ****   if(RC_Copy_Format(fun->params_fmt, params_fmt) == -1){
 1319              		.loc 1 235 0
 1320 0038 7B69     		ldr	r3, [r7, #20]
 1321 003a 0433     		adds	r3, r3, #4
 1322 003c 3968     		ldr	r1, [r7]
 1323 003e 1846     		mov	r0, r3
 1324 0040 FFF7FEFF 		bl	RC_Copy_Format
 1325 0044 0346     		mov	r3, r0
 1326 0046 B3F1FF3F 		cmp	r3, #-1
 1327 004a 02D1     		bne	.L110
 236:Src/remote_call.c ****     return -1;
 1328              		.loc 1 236 0
 1329 004c 4FF0FF33 		mov	r3, #-1
 1330 0050 14E0     		b	.L109
 1331              	.L110:
 237:Src/remote_call.c ****   }
 238:Src/remote_call.c **** 
 239:Src/remote_call.c ****   //Return format
 240:Src/remote_call.c ****   if(RC_Copy_Format(fun->return_fmt, return_fmt) == -1){
 1332              		.loc 1 240 0
 1333 0052 7B69     		ldr	r3, [r7, #20]
 1334 0054 0C33     		adds	r3, r3, #12
 1335 0056 396A     		ldr	r1, [r7, #32]
 1336 0058 1846     		mov	r0, r3
 1337 005a FFF7FEFF 		bl	RC_Copy_Format
 1338 005e 0346     		mov	r3, r0
 1339 0060 B3F1FF3F 		cmp	r3, #-1
 1340 0064 02D1     		bne	.L111
 241:Src/remote_call.c ****     return -1;
 1341              		.loc 1 241 0
 1342 0066 4FF0FF33 		mov	r3, #-1
 1343 006a 07E0     		b	.L109
 1344              	.L111:
 242:Src/remote_call.c ****   }
 243:Src/remote_call.c **** 
 244:Src/remote_call.c ****   //Function pointer
 245:Src/remote_call.c ****   fun->call = function;
 1345              		.loc 1 245 0
 1346 006c 7B69     		ldr	r3, [r7, #20]
 1347 006e 7A68     		ldr	r2, [r7, #4]
 1348 0070 1A60     		str	r2, [r3]
 246:Src/remote_call.c ****   
 247:Src/remote_call.c ****   //Call type
 248:Src/remote_call.c ****   fun->call_type = call_type;
 1349              		.loc 1 248 0
 1350 0072 7B69     		ldr	r3, [r7, #20]
 1351 0074 97F82420 		ldrb	r2, [r7, #36]
 1352 0078 1A75     		strb	r2, [r3, #20]
 249:Src/remote_call.c **** 
 250:Src/remote_call.c ****   return 0;
 1353              		.loc 1 250 0
ARM GAS  /tmp/cc6tUiew.s 			page 29


 1354 007a 0023     		movs	r3, #0
 1355              	.L109:
 251:Src/remote_call.c **** }
 1356              		.loc 1 251 0
 1357 007c 1846     		mov	r0, r3
 1358 007e 1837     		adds	r7, r7, #24
 1359              	.LCFI30:
 1360              		.cfi_def_cfa_offset 8
 1361 0080 BD46     		mov	sp, r7
 1362              	.LCFI31:
 1363              		.cfi_def_cfa_register 13
 1364              		@ sp needed
 1365 0082 80BD     		pop	{r7, pc}
 1366              	.L113:
 1367              		.align	2
 1368              	.L112:
 1369 0084 00000000 		.word	err
 1370              		.cfi_endproc
 1371              	.LFE5:
 1373              		.section	.text.RC_Server_Get_Request,"ax",%progbits
 1374              		.align	1
 1375              		.global	RC_Server_Get_Request
 1376              		.syntax unified
 1377              		.thumb
 1378              		.thumb_func
 1379              		.fpu fpv4-sp-d16
 1381              	RC_Server_Get_Request:
 1382              	.LFB6:
 252:Src/remote_call.c **** 
 253:Src/remote_call.c **** int RC_Server_Get_Request(RC_Server *server, RP_Packet *packet){
 1383              		.loc 1 253 0
 1384              		.cfi_startproc
 1385              		@ args = 0, pretend = 0, frame = 32
 1386              		@ frame_needed = 1, uses_anonymous_args = 0
 1387 0000 80B5     		push	{r7, lr}
 1388              	.LCFI32:
 1389              		.cfi_def_cfa_offset 8
 1390              		.cfi_offset 7, -8
 1391              		.cfi_offset 14, -4
 1392 0002 88B0     		sub	sp, sp, #32
 1393              	.LCFI33:
 1394              		.cfi_def_cfa_offset 40
 1395 0004 00AF     		add	r7, sp, #0
 1396              	.LCFI34:
 1397              		.cfi_def_cfa_register 7
 1398 0006 7860     		str	r0, [r7, #4]
 1399 0008 3960     		str	r1, [r7]
 254:Src/remote_call.c ****   if(packet->len < 1){
 1400              		.loc 1 254 0
 1401 000a 3B68     		ldr	r3, [r7]
 1402 000c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1403 000e 002B     		cmp	r3, #0
 1404 0010 05D1     		bne	.L115
 255:Src/remote_call.c ****     err = RC_LINK_ERROR;
 1405              		.loc 1 255 0
 1406 0012 2E4B     		ldr	r3, .L124
 1407 0014 0322     		movs	r2, #3
ARM GAS  /tmp/cc6tUiew.s 			page 30


 1408 0016 1A60     		str	r2, [r3]
 256:Src/remote_call.c ****     return -1;
 1409              		.loc 1 256 0
 1410 0018 4FF0FF33 		mov	r3, #-1
 1411 001c 51E0     		b	.L116
 1412              	.L115:
 257:Src/remote_call.c ****   }
 258:Src/remote_call.c ****   
 259:Src/remote_call.c ****   //Extracting packet informations
 260:Src/remote_call.c ****   const int id_client = packet->id;
 1413              		.loc 1 260 0
 1414 001e 3B68     		ldr	r3, [r7]
 1415 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1416 0022 FB61     		str	r3, [r7, #28]
 261:Src/remote_call.c ****   const int id = packet->data[0];
 1417              		.loc 1 261 0
 1418 0024 3B68     		ldr	r3, [r7]
 1419 0026 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1420 0028 BB61     		str	r3, [r7, #24]
 262:Src/remote_call.c ****   const int len = packet->len - 1;
 1421              		.loc 1 262 0
 1422 002a 3B68     		ldr	r3, [r7]
 1423 002c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1424 002e 013B     		subs	r3, r3, #1
 1425 0030 7B61     		str	r3, [r7, #20]
 263:Src/remote_call.c ****   uint8_t *const data = &packet->data[1];
 1426              		.loc 1 263 0
 1427 0032 3B68     		ldr	r3, [r7]
 1428 0034 0333     		adds	r3, r3, #3
 1429 0036 3B61     		str	r3, [r7, #16]
 264:Src/remote_call.c **** 
 265:Src/remote_call.c **** 
 266:Src/remote_call.c ****   //Checking basic informations
 267:Src/remote_call.c ****   if(!CHECK_ID(id)){
 1430              		.loc 1 267 0
 1431 0038 BB69     		ldr	r3, [r7, #24]
 1432 003a 002B     		cmp	r3, #0
 1433 003c 02DB     		blt	.L117
 1434              		.loc 1 267 0 is_stmt 0 discriminator 1
 1435 003e BB69     		ldr	r3, [r7, #24]
 1436 0040 1F2B     		cmp	r3, #31
 1437 0042 05DD     		ble	.L118
 1438              	.L117:
 268:Src/remote_call.c ****     err = RC_BAD_ID;
 1439              		.loc 1 268 0 is_stmt 1
 1440 0044 214B     		ldr	r3, .L124
 1441 0046 0022     		movs	r2, #0
 1442 0048 1A60     		str	r2, [r3]
 269:Src/remote_call.c ****     return -1;
 1443              		.loc 1 269 0
 1444 004a 4FF0FF33 		mov	r3, #-1
 1445 004e 38E0     		b	.L116
 1446              	.L118:
 270:Src/remote_call.c ****   }
 271:Src/remote_call.c **** 
 272:Src/remote_call.c ****   RC_Server_Function *const fun = &server->functions[id];
 1447              		.loc 1 272 0
ARM GAS  /tmp/cc6tUiew.s 			page 31


 1448 0050 BA69     		ldr	r2, [r7, #24]
 1449 0052 1346     		mov	r3, r2
 1450 0054 5B00     		lsls	r3, r3, #1
 1451 0056 1344     		add	r3, r3, r2
 1452 0058 DB00     		lsls	r3, r3, #3
 1453 005a 7A68     		ldr	r2, [r7, #4]
 1454 005c 1344     		add	r3, r3, r2
 1455 005e 0433     		adds	r3, r3, #4
 1456 0060 FB60     		str	r3, [r7, #12]
 273:Src/remote_call.c ****   if(fun->call == 0){
 1457              		.loc 1 273 0
 1458 0062 FB68     		ldr	r3, [r7, #12]
 1459 0064 1B68     		ldr	r3, [r3]
 1460 0066 002B     		cmp	r3, #0
 1461 0068 05D1     		bne	.L119
 274:Src/remote_call.c ****     err = RC_UNDEFINED_FUNCTION;
 1462              		.loc 1 274 0
 1463 006a 184B     		ldr	r3, .L124
 1464 006c 0222     		movs	r2, #2
 1465 006e 1A60     		str	r2, [r3]
 275:Src/remote_call.c ****     return -1;
 1466              		.loc 1 275 0
 1467 0070 4FF0FF33 		mov	r3, #-1
 1468 0074 25E0     		b	.L116
 1469              	.L119:
 276:Src/remote_call.c ****   }
 277:Src/remote_call.c ****   
 278:Src/remote_call.c ****   //Filling request informations
 279:Src/remote_call.c ****   server->request.id_client = id_client;
 1470              		.loc 1 279 0
 1471 0076 7B68     		ldr	r3, [r7, #4]
 1472 0078 FA69     		ldr	r2, [r7, #28]
 1473 007a C3F80423 		str	r2, [r3, #772]
 280:Src/remote_call.c ****   server->request.id = id;
 1474              		.loc 1 280 0
 1475 007e 7B68     		ldr	r3, [r7, #4]
 1476 0080 BA69     		ldr	r2, [r7, #24]
 1477 0082 C3F80823 		str	r2, [r3, #776]
 281:Src/remote_call.c ****   server->request.data = data;
 1478              		.loc 1 281 0
 1479 0086 7B68     		ldr	r3, [r7, #4]
 1480 0088 3A69     		ldr	r2, [r7, #16]
 1481 008a C3F80C23 		str	r2, [r3, #780]
 282:Src/remote_call.c ****   server->request.len = len;
 1482              		.loc 1 282 0
 1483 008e 7B68     		ldr	r3, [r7, #4]
 1484 0090 7A69     		ldr	r2, [r7, #20]
 1485 0092 C3F81023 		str	r2, [r3, #784]
 283:Src/remote_call.c **** 
 284:Src/remote_call.c ****   switch(fun->call_type){
 1486              		.loc 1 284 0
 1487 0096 FB68     		ldr	r3, [r7, #12]
 1488 0098 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1489 009a 002B     		cmp	r3, #0
 1490 009c 02D0     		beq	.L121
 1491 009e 012B     		cmp	r3, #1
 1492 00a0 09D0     		beq	.L122
ARM GAS  /tmp/cc6tUiew.s 			page 32


 285:Src/remote_call.c ****   case RC_IMMEDIATE:
 286:Src/remote_call.c ****     server->pending = 0;
 287:Src/remote_call.c ****     fun->call(server);
 288:Src/remote_call.c ****     break;
 289:Src/remote_call.c ****   case RC_DELAYED:
 290:Src/remote_call.c ****     server->pending = 1;
 291:Src/remote_call.c ****     break;
 292:Src/remote_call.c ****   default:
 293:Src/remote_call.c ****     break;
 1493              		.loc 1 293 0
 1494 00a2 0DE0     		b	.L123
 1495              	.L121:
 286:Src/remote_call.c ****     fun->call(server);
 1496              		.loc 1 286 0
 1497 00a4 7B68     		ldr	r3, [r7, #4]
 1498 00a6 0022     		movs	r2, #0
 1499 00a8 83F81423 		strb	r2, [r3, #788]
 287:Src/remote_call.c ****     break;
 1500              		.loc 1 287 0
 1501 00ac FB68     		ldr	r3, [r7, #12]
 1502 00ae 1B68     		ldr	r3, [r3]
 1503 00b0 7868     		ldr	r0, [r7, #4]
 1504 00b2 9847     		blx	r3
 1505              	.LVL1:
 288:Src/remote_call.c ****   case RC_DELAYED:
 1506              		.loc 1 288 0
 1507 00b4 04E0     		b	.L123
 1508              	.L122:
 290:Src/remote_call.c ****     break;
 1509              		.loc 1 290 0
 1510 00b6 7B68     		ldr	r3, [r7, #4]
 1511 00b8 0122     		movs	r2, #1
 1512 00ba 83F81423 		strb	r2, [r3, #788]
 291:Src/remote_call.c ****   default:
 1513              		.loc 1 291 0
 1514 00be 00BF     		nop
 1515              	.L123:
 294:Src/remote_call.c ****   }
 295:Src/remote_call.c **** 
 296:Src/remote_call.c ****   return 0;
 1516              		.loc 1 296 0
 1517 00c0 0023     		movs	r3, #0
 1518              	.L116:
 297:Src/remote_call.c **** }
 1519              		.loc 1 297 0
 1520 00c2 1846     		mov	r0, r3
 1521 00c4 2037     		adds	r7, r7, #32
 1522              	.LCFI35:
 1523              		.cfi_def_cfa_offset 8
 1524 00c6 BD46     		mov	sp, r7
 1525              	.LCFI36:
 1526              		.cfi_def_cfa_register 13
 1527              		@ sp needed
 1528 00c8 80BD     		pop	{r7, pc}
 1529              	.L125:
 1530 00ca 00BF     		.align	2
 1531              	.L124:
ARM GAS  /tmp/cc6tUiew.s 			page 33


 1532 00cc 00000000 		.word	err
 1533              		.cfi_endproc
 1534              	.LFE6:
 1536              		.section	.text.RC_Server_Poll,"ax",%progbits
 1537              		.align	1
 1538              		.global	RC_Server_Poll
 1539              		.syntax unified
 1540              		.thumb
 1541              		.thumb_func
 1542              		.fpu fpv4-sp-d16
 1544              	RC_Server_Poll:
 1545              	.LFB7:
 298:Src/remote_call.c **** 
 299:Src/remote_call.c **** int RC_Server_Poll(RC_Server *server){
 1546              		.loc 1 299 0
 1547              		.cfi_startproc
 1548              		@ args = 0, pretend = 0, frame = 8
 1549              		@ frame_needed = 1, uses_anonymous_args = 0
 1550 0000 80B5     		push	{r7, lr}
 1551              	.LCFI37:
 1552              		.cfi_def_cfa_offset 8
 1553              		.cfi_offset 7, -8
 1554              		.cfi_offset 14, -4
 1555 0002 82B0     		sub	sp, sp, #8
 1556              	.LCFI38:
 1557              		.cfi_def_cfa_offset 16
 1558 0004 00AF     		add	r7, sp, #0
 1559              	.LCFI39:
 1560              		.cfi_def_cfa_register 7
 1561 0006 7860     		str	r0, [r7, #4]
 300:Src/remote_call.c ****   if(!server->pending){
 1562              		.loc 1 300 0
 1563 0008 7B68     		ldr	r3, [r7, #4]
 1564 000a 93F81433 		ldrb	r3, [r3, #788]	@ zero_extendqisi2
 1565 000e 002B     		cmp	r3, #0
 1566 0010 01D1     		bne	.L127
 301:Src/remote_call.c ****     return 0;
 1567              		.loc 1 301 0
 1568 0012 0023     		movs	r3, #0
 1569 0014 11E0     		b	.L128
 1570              	.L127:
 302:Src/remote_call.c ****   }
 303:Src/remote_call.c **** 
 304:Src/remote_call.c ****   server->pending = 0;
 1571              		.loc 1 304 0
 1572 0016 7B68     		ldr	r3, [r7, #4]
 1573 0018 0022     		movs	r2, #0
 1574 001a 83F81423 		strb	r2, [r3, #788]
 305:Src/remote_call.c ****   server->functions[server->request.id].call(server);
 1575              		.loc 1 305 0
 1576 001e 7B68     		ldr	r3, [r7, #4]
 1577 0020 D3F80823 		ldr	r2, [r3, #776]
 1578 0024 7968     		ldr	r1, [r7, #4]
 1579 0026 1346     		mov	r3, r2
 1580 0028 5B00     		lsls	r3, r3, #1
 1581 002a 1344     		add	r3, r3, r2
 1582 002c DB00     		lsls	r3, r3, #3
ARM GAS  /tmp/cc6tUiew.s 			page 34


 1583 002e 0B44     		add	r3, r3, r1
 1584 0030 0433     		adds	r3, r3, #4
 1585 0032 1B68     		ldr	r3, [r3]
 1586 0034 7868     		ldr	r0, [r7, #4]
 1587 0036 9847     		blx	r3
 1588              	.LVL2:
 306:Src/remote_call.c ****   
 307:Src/remote_call.c ****   return 1;
 1589              		.loc 1 307 0
 1590 0038 0123     		movs	r3, #1
 1591              	.L128:
 308:Src/remote_call.c **** }
 1592              		.loc 1 308 0
 1593 003a 1846     		mov	r0, r3
 1594 003c 0837     		adds	r7, r7, #8
 1595              	.LCFI40:
 1596              		.cfi_def_cfa_offset 8
 1597 003e BD46     		mov	sp, r7
 1598              	.LCFI41:
 1599              		.cfi_def_cfa_register 13
 1600              		@ sp needed
 1601 0040 80BD     		pop	{r7, pc}
 1602              		.cfi_endproc
 1603              	.LFE7:
 1605              		.section	.text.RC_Server_Get_Args,"ax",%progbits
 1606              		.align	1
 1607              		.global	RC_Server_Get_Args
 1608              		.syntax unified
 1609              		.thumb
 1610              		.thumb_func
 1611              		.fpu fpv4-sp-d16
 1613              	RC_Server_Get_Args:
 1614              	.LFB8:
 309:Src/remote_call.c **** 
 310:Src/remote_call.c **** int RC_Server_Get_Args(RC_Server *server, ...){
 1615              		.loc 1 310 0
 1616              		.cfi_startproc
 1617              		@ args = 4, pretend = 16, frame = 16
 1618              		@ frame_needed = 1, uses_anonymous_args = 1
 1619 0000 0FB4     		push	{r0, r1, r2, r3}
 1620              	.LCFI42:
 1621              		.cfi_def_cfa_offset 16
 1622              		.cfi_offset 0, -16
 1623              		.cfi_offset 1, -12
 1624              		.cfi_offset 2, -8
 1625              		.cfi_offset 3, -4
 1626 0002 80B5     		push	{r7, lr}
 1627              	.LCFI43:
 1628              		.cfi_def_cfa_offset 24
 1629              		.cfi_offset 7, -24
 1630              		.cfi_offset 14, -20
 1631 0004 84B0     		sub	sp, sp, #16
 1632              	.LCFI44:
 1633              		.cfi_def_cfa_offset 40
 1634 0006 00AF     		add	r7, sp, #0
 1635              	.LCFI45:
 1636              		.cfi_def_cfa_register 7
ARM GAS  /tmp/cc6tUiew.s 			page 35


 311:Src/remote_call.c ****   va_list args;
 312:Src/remote_call.c ****   va_start(args, server);
 1637              		.loc 1 312 0
 1638 0008 07F11C03 		add	r3, r7, #28
 1639 000c 7B60     		str	r3, [r7, #4]
 313:Src/remote_call.c **** 
 314:Src/remote_call.c ****   RC_Server_Function *const fun = &server->functions[server->request.id];
 1640              		.loc 1 314 0
 1641 000e BB69     		ldr	r3, [r7, #24]
 1642 0010 D3F80823 		ldr	r2, [r3, #776]
 1643 0014 1346     		mov	r3, r2
 1644 0016 5B00     		lsls	r3, r3, #1
 1645 0018 1344     		add	r3, r3, r2
 1646 001a DB00     		lsls	r3, r3, #3
 1647 001c BA69     		ldr	r2, [r7, #24]
 1648 001e 1344     		add	r3, r3, r2
 1649 0020 0433     		adds	r3, r3, #4
 1650 0022 FB60     		str	r3, [r7, #12]
 315:Src/remote_call.c ****   
 316:Src/remote_call.c ****   int r = RC_Unpack_Vars(fun->params_fmt, server->request.data, server->request.len, &args);
 1651              		.loc 1 316 0
 1652 0024 FB68     		ldr	r3, [r7, #12]
 1653 0026 181D     		adds	r0, r3, #4
 1654 0028 BB69     		ldr	r3, [r7, #24]
 1655 002a D3F80C13 		ldr	r1, [r3, #780]
 1656 002e BB69     		ldr	r3, [r7, #24]
 1657 0030 D3F81023 		ldr	r2, [r3, #784]
 1658 0034 3B1D     		adds	r3, r7, #4
 1659 0036 FFF7FEFF 		bl	RC_Unpack_Vars
 1660 003a B860     		str	r0, [r7, #8]
 317:Src/remote_call.c **** 
 318:Src/remote_call.c ****   va_end(args);
 319:Src/remote_call.c **** 
 320:Src/remote_call.c ****   return r;
 1661              		.loc 1 320 0
 1662 003c BB68     		ldr	r3, [r7, #8]
 321:Src/remote_call.c **** }
 1663              		.loc 1 321 0
 1664 003e 1846     		mov	r0, r3
 1665 0040 1037     		adds	r7, r7, #16
 1666              	.LCFI46:
 1667              		.cfi_def_cfa_offset 24
 1668 0042 BD46     		mov	sp, r7
 1669              	.LCFI47:
 1670              		.cfi_def_cfa_register 13
 1671              		@ sp needed
 1672 0044 BDE88040 		pop	{r7, lr}
 1673              	.LCFI48:
 1674              		.cfi_restore 14
 1675              		.cfi_restore 7
 1676              		.cfi_def_cfa_offset 16
 1677 0048 04B0     		add	sp, sp, #16
 1678              	.LCFI49:
 1679              		.cfi_restore 3
 1680              		.cfi_restore 2
 1681              		.cfi_restore 1
 1682              		.cfi_restore 0
ARM GAS  /tmp/cc6tUiew.s 			page 36


 1683              		.cfi_def_cfa_offset 0
 1684 004a 7047     		bx	lr
 1685              		.cfi_endproc
 1686              	.LFE8:
 1688              		.section	.text.RC_Server_Return,"ax",%progbits
 1689              		.align	1
 1690              		.global	RC_Server_Return
 1691              		.syntax unified
 1692              		.thumb
 1693              		.thumb_func
 1694              		.fpu fpv4-sp-d16
 1696              	RC_Server_Return:
 1697              	.LFB9:
 322:Src/remote_call.c **** 
 323:Src/remote_call.c **** 
 324:Src/remote_call.c **** int RC_Server_Return(RC_Server *server, ...){
 1698              		.loc 1 324 0
 1699              		.cfi_startproc
 1700              		@ args = 4, pretend = 16, frame = 8
 1701              		@ frame_needed = 1, uses_anonymous_args = 1
 1702 0000 0FB4     		push	{r0, r1, r2, r3}
 1703              	.LCFI50:
 1704              		.cfi_def_cfa_offset 16
 1705              		.cfi_offset 0, -16
 1706              		.cfi_offset 1, -12
 1707              		.cfi_offset 2, -8
 1708              		.cfi_offset 3, -4
 1709 0002 80B5     		push	{r7, lr}
 1710              	.LCFI51:
 1711              		.cfi_def_cfa_offset 24
 1712              		.cfi_offset 7, -24
 1713              		.cfi_offset 14, -20
 1714 0004 82B0     		sub	sp, sp, #8
 1715              	.LCFI52:
 1716              		.cfi_def_cfa_offset 32
 1717 0006 00AF     		add	r7, sp, #0
 1718              	.LCFI53:
 1719              		.cfi_def_cfa_register 7
 325:Src/remote_call.c ****   va_list args;
 326:Src/remote_call.c ****   va_start(args, server);
 1720              		.loc 1 326 0
 1721 0008 07F11403 		add	r3, r7, #20
 1722 000c 3B60     		str	r3, [r7]
 327:Src/remote_call.c **** 
 328:Src/remote_call.c ****   RP_Packet *packet = &server->interface->s_packet;
 1723              		.loc 1 328 0
 1724 000e 3B69     		ldr	r3, [r7, #16]
 1725 0010 1B68     		ldr	r3, [r3]
 1726 0012 03F50173 		add	r3, r3, #516
 1727 0016 7B60     		str	r3, [r7, #4]
 329:Src/remote_call.c **** 
 330:Src/remote_call.c ****   packet->data[0] = server->request.id;
 1728              		.loc 1 330 0
 1729 0018 3B69     		ldr	r3, [r7, #16]
 1730 001a D3F80833 		ldr	r3, [r3, #776]
 1731 001e DAB2     		uxtb	r2, r3
 1732 0020 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc6tUiew.s 			page 37


 1733 0022 9A70     		strb	r2, [r3, #2]
 331:Src/remote_call.c ****   packet->id = server->request.id_client;
 1734              		.loc 1 331 0
 1735 0024 3B69     		ldr	r3, [r7, #16]
 1736 0026 D3F80433 		ldr	r3, [r3, #772]
 1737 002a DAB2     		uxtb	r2, r3
 1738 002c 7B68     		ldr	r3, [r7, #4]
 1739 002e 1A70     		strb	r2, [r3]
 332:Src/remote_call.c ****   packet->len = 1 + RC_Pack_Vars(server->functions[server->request.id].return_fmt,
 1740              		.loc 1 332 0
 1741 0030 3B69     		ldr	r3, [r7, #16]
 1742 0032 D3F80823 		ldr	r2, [r3, #776]
 1743 0036 1346     		mov	r3, r2
 1744 0038 5B00     		lsls	r3, r3, #1
 1745 003a 1344     		add	r3, r3, r2
 1746 003c DB00     		lsls	r3, r3, #3
 1747 003e 0833     		adds	r3, r3, #8
 1748 0040 3A69     		ldr	r2, [r7, #16]
 1749 0042 1344     		add	r3, r3, r2
 1750 0044 03F10800 		add	r0, r3, #8
 1751 0048 7B68     		ldr	r3, [r7, #4]
 1752 004a D91C     		adds	r1, r3, #3
 1753 004c 3B46     		mov	r3, r7
 1754 004e F922     		movs	r2, #249
 1755 0050 FFF7FEFF 		bl	RC_Pack_Vars
 1756 0054 0346     		mov	r3, r0
 1757 0056 DBB2     		uxtb	r3, r3
 1758 0058 0133     		adds	r3, r3, #1
 1759 005a DAB2     		uxtb	r2, r3
 1760 005c 7B68     		ldr	r3, [r7, #4]
 1761 005e 5A70     		strb	r2, [r3, #1]
 333:Src/remote_call.c **** 			       &packet->data[1],
 334:Src/remote_call.c **** 			       RC_MAX_DATA,
 335:Src/remote_call.c **** 			       &args);
 336:Src/remote_call.c **** 
 337:Src/remote_call.c ****   if(packet->len == 0){
 1762              		.loc 1 337 0
 1763 0060 7B68     		ldr	r3, [r7, #4]
 1764 0062 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1765 0064 002B     		cmp	r3, #0
 1766 0066 05D1     		bne	.L132
 338:Src/remote_call.c ****     err = RC_INVALID_RETURN;
 1767              		.loc 1 338 0
 1768 0068 0A4B     		ldr	r3, .L135
 1769 006a 0522     		movs	r2, #5
 1770 006c 1A60     		str	r2, [r3]
 339:Src/remote_call.c ****     return -1;
 1771              		.loc 1 339 0
 1772 006e 4FF0FF33 		mov	r3, #-1
 1773 0072 07E0     		b	.L134
 1774              	.L132:
 340:Src/remote_call.c ****   }
 341:Src/remote_call.c ****   
 342:Src/remote_call.c ****   va_end(args);
 343:Src/remote_call.c ****   return RP_Send(server->interface, packet, RC_TRANSFERT_TIMEOUT);
 1775              		.loc 1 343 0
 1776 0074 3B69     		ldr	r3, [r7, #16]
ARM GAS  /tmp/cc6tUiew.s 			page 38


 1777 0076 1B68     		ldr	r3, [r3]
 1778 0078 0122     		movs	r2, #1
 1779 007a 7968     		ldr	r1, [r7, #4]
 1780 007c 1846     		mov	r0, r3
 1781 007e FFF7FEFF 		bl	RP_Send
 1782 0082 0346     		mov	r3, r0
 1783              	.L134:
 344:Src/remote_call.c **** }
 1784              		.loc 1 344 0 discriminator 1
 1785 0084 1846     		mov	r0, r3
 1786 0086 0837     		adds	r7, r7, #8
 1787              	.LCFI54:
 1788              		.cfi_def_cfa_offset 24
 1789 0088 BD46     		mov	sp, r7
 1790              	.LCFI55:
 1791              		.cfi_def_cfa_register 13
 1792              		@ sp needed
 1793 008a BDE88040 		pop	{r7, lr}
 1794              	.LCFI56:
 1795              		.cfi_restore 14
 1796              		.cfi_restore 7
 1797              		.cfi_def_cfa_offset 16
 1798 008e 04B0     		add	sp, sp, #16
 1799              	.LCFI57:
 1800              		.cfi_restore 3
 1801              		.cfi_restore 2
 1802              		.cfi_restore 1
 1803              		.cfi_restore 0
 1804              		.cfi_def_cfa_offset 0
 1805 0090 7047     		bx	lr
 1806              	.L136:
 1807 0092 00BF     		.align	2
 1808              	.L135:
 1809 0094 00000000 		.word	err
 1810              		.cfi_endproc
 1811              	.LFE9:
 1813              		.section	.text.RC_Client_Init,"ax",%progbits
 1814              		.align	1
 1815              		.global	RC_Client_Init
 1816              		.syntax unified
 1817              		.thumb
 1818              		.thumb_func
 1819              		.fpu fpv4-sp-d16
 1821              	RC_Client_Init:
 1822              	.LFB10:
 345:Src/remote_call.c **** 
 346:Src/remote_call.c **** //==================================================//
 347:Src/remote_call.c **** //                  RC CLIENT                       //
 348:Src/remote_call.c **** //==================================================//
 349:Src/remote_call.c **** void RC_Client_Init(RC_Client *client, RP_Interface *interface, int id_server){
 1823              		.loc 1 349 0
 1824              		.cfi_startproc
 1825              		@ args = 0, pretend = 0, frame = 24
 1826              		@ frame_needed = 1, uses_anonymous_args = 0
 1827              		@ link register save eliminated.
 1828 0000 80B4     		push	{r7}
 1829              	.LCFI58:
ARM GAS  /tmp/cc6tUiew.s 			page 39


 1830              		.cfi_def_cfa_offset 4
 1831              		.cfi_offset 7, -4
 1832 0002 87B0     		sub	sp, sp, #28
 1833              	.LCFI59:
 1834              		.cfi_def_cfa_offset 32
 1835 0004 00AF     		add	r7, sp, #0
 1836              	.LCFI60:
 1837              		.cfi_def_cfa_register 7
 1838 0006 F860     		str	r0, [r7, #12]
 1839 0008 B960     		str	r1, [r7, #8]
 1840 000a 7A60     		str	r2, [r7, #4]
 350:Src/remote_call.c ****   int i;
 351:Src/remote_call.c **** 
 352:Src/remote_call.c ****   client->interface = interface;
 1841              		.loc 1 352 0
 1842 000c FB68     		ldr	r3, [r7, #12]
 1843 000e BA68     		ldr	r2, [r7, #8]
 1844 0010 1A60     		str	r2, [r3]
 353:Src/remote_call.c ****   client->id_server = id_server;
 1845              		.loc 1 353 0
 1846 0012 FB68     		ldr	r3, [r7, #12]
 1847 0014 7A68     		ldr	r2, [r7, #4]
 1848 0016 C3F82422 		str	r2, [r3, #548]
 354:Src/remote_call.c ****   for(i = 0; i < RC_NB_FUNCTIONS; i++){
 1849              		.loc 1 354 0
 1850 001a 0023     		movs	r3, #0
 1851 001c 7B61     		str	r3, [r7, #20]
 1852 001e 0BE0     		b	.L138
 1853              	.L139:
 355:Src/remote_call.c ****     client->functions[i].used = false;
 1854              		.loc 1 355 0 discriminator 3
 1855 0020 F968     		ldr	r1, [r7, #12]
 1856 0022 7A69     		ldr	r2, [r7, #20]
 1857 0024 1346     		mov	r3, r2
 1858 0026 1B01     		lsls	r3, r3, #4
 1859 0028 1344     		add	r3, r3, r2
 1860 002a 0B44     		add	r3, r3, r1
 1861 002c 0433     		adds	r3, r3, #4
 1862 002e 0022     		movs	r2, #0
 1863 0030 1A70     		strb	r2, [r3]
 354:Src/remote_call.c ****   for(i = 0; i < RC_NB_FUNCTIONS; i++){
 1864              		.loc 1 354 0 discriminator 3
 1865 0032 7B69     		ldr	r3, [r7, #20]
 1866 0034 0133     		adds	r3, r3, #1
 1867 0036 7B61     		str	r3, [r7, #20]
 1868              	.L138:
 354:Src/remote_call.c ****   for(i = 0; i < RC_NB_FUNCTIONS; i++){
 1869              		.loc 1 354 0 is_stmt 0 discriminator 1
 1870 0038 7B69     		ldr	r3, [r7, #20]
 1871 003a 1F2B     		cmp	r3, #31
 1872 003c F0DD     		ble	.L139
 356:Src/remote_call.c ****   }  
 357:Src/remote_call.c **** }
 1873              		.loc 1 357 0 is_stmt 1
 1874 003e 00BF     		nop
 1875 0040 1C37     		adds	r7, r7, #28
 1876              	.LCFI61:
ARM GAS  /tmp/cc6tUiew.s 			page 40


 1877              		.cfi_def_cfa_offset 4
 1878 0042 BD46     		mov	sp, r7
 1879              	.LCFI62:
 1880              		.cfi_def_cfa_register 13
 1881              		@ sp needed
 1882 0044 5DF8047B 		ldr	r7, [sp], #4
 1883              	.LCFI63:
 1884              		.cfi_restore 7
 1885              		.cfi_def_cfa_offset 0
 1886 0048 7047     		bx	lr
 1887              		.cfi_endproc
 1888              	.LFE10:
 1890              		.section	.text.RC_Client_Add_Function,"ax",%progbits
 1891              		.align	1
 1892              		.global	RC_Client_Add_Function
 1893              		.syntax unified
 1894              		.thumb
 1895              		.thumb_func
 1896              		.fpu fpv4-sp-d16
 1898              	RC_Client_Add_Function:
 1899              	.LFB11:
 358:Src/remote_call.c **** 
 359:Src/remote_call.c **** int RC_Client_Add_Function(RC_Client *client,
 360:Src/remote_call.c **** 			   int id,
 361:Src/remote_call.c **** 			   const char params_fmt[],
 362:Src/remote_call.c **** 			   const char return_fmt[]){
 1900              		.loc 1 362 0
 1901              		.cfi_startproc
 1902              		@ args = 0, pretend = 0, frame = 24
 1903              		@ frame_needed = 1, uses_anonymous_args = 0
 1904 0000 80B5     		push	{r7, lr}
 1905              	.LCFI64:
 1906              		.cfi_def_cfa_offset 8
 1907              		.cfi_offset 7, -8
 1908              		.cfi_offset 14, -4
 1909 0002 86B0     		sub	sp, sp, #24
 1910              	.LCFI65:
 1911              		.cfi_def_cfa_offset 32
 1912 0004 00AF     		add	r7, sp, #0
 1913              	.LCFI66:
 1914              		.cfi_def_cfa_register 7
 1915 0006 F860     		str	r0, [r7, #12]
 1916 0008 B960     		str	r1, [r7, #8]
 1917 000a 7A60     		str	r2, [r7, #4]
 1918 000c 3B60     		str	r3, [r7]
 363:Src/remote_call.c ****    //Check ID range
 364:Src/remote_call.c ****   if(!CHECK_ID(id)){
 1919              		.loc 1 364 0
 1920 000e BB68     		ldr	r3, [r7, #8]
 1921 0010 002B     		cmp	r3, #0
 1922 0012 02DB     		blt	.L141
 1923              		.loc 1 364 0 is_stmt 0 discriminator 1
 1924 0014 BB68     		ldr	r3, [r7, #8]
 1925 0016 1F2B     		cmp	r3, #31
 1926 0018 05DD     		ble	.L142
 1927              	.L141:
 365:Src/remote_call.c ****     err = RC_BAD_ID;
ARM GAS  /tmp/cc6tUiew.s 			page 41


 1928              		.loc 1 365 0 is_stmt 1
 1929 001a 184B     		ldr	r3, .L146
 1930 001c 0022     		movs	r2, #0
 1931 001e 1A60     		str	r2, [r3]
 366:Src/remote_call.c ****     return -1;
 1932              		.loc 1 366 0
 1933 0020 4FF0FF33 		mov	r3, #-1
 1934 0024 25E0     		b	.L143
 1935              	.L142:
 367:Src/remote_call.c ****   }
 368:Src/remote_call.c **** 
 369:Src/remote_call.c ****   //Get function struct by id
 370:Src/remote_call.c ****   RC_Client_Function *fun = &client->functions[id];
 1936              		.loc 1 370 0
 1937 0026 BA68     		ldr	r2, [r7, #8]
 1938 0028 1346     		mov	r3, r2
 1939 002a 1B01     		lsls	r3, r3, #4
 1940 002c 1344     		add	r3, r3, r2
 1941 002e FA68     		ldr	r2, [r7, #12]
 1942 0030 1344     		add	r3, r3, r2
 1943 0032 0433     		adds	r3, r3, #4
 1944 0034 7B61     		str	r3, [r7, #20]
 371:Src/remote_call.c **** 
 372:Src/remote_call.c ****   //Params format
 373:Src/remote_call.c ****   if(RC_Copy_Format(fun->params_fmt, params_fmt) == -1){
 1945              		.loc 1 373 0
 1946 0036 7B69     		ldr	r3, [r7, #20]
 1947 0038 0133     		adds	r3, r3, #1
 1948 003a 7968     		ldr	r1, [r7, #4]
 1949 003c 1846     		mov	r0, r3
 1950 003e FFF7FEFF 		bl	RC_Copy_Format
 1951 0042 0346     		mov	r3, r0
 1952 0044 B3F1FF3F 		cmp	r3, #-1
 1953 0048 02D1     		bne	.L144
 374:Src/remote_call.c ****     return -1;
 1954              		.loc 1 374 0
 1955 004a 4FF0FF33 		mov	r3, #-1
 1956 004e 10E0     		b	.L143
 1957              	.L144:
 375:Src/remote_call.c ****   }
 376:Src/remote_call.c **** 
 377:Src/remote_call.c ****   //Return format
 378:Src/remote_call.c ****   if(RC_Copy_Format(fun->return_fmt, return_fmt) == -1){
 1958              		.loc 1 378 0
 1959 0050 7B69     		ldr	r3, [r7, #20]
 1960 0052 0933     		adds	r3, r3, #9
 1961 0054 3968     		ldr	r1, [r7]
 1962 0056 1846     		mov	r0, r3
 1963 0058 FFF7FEFF 		bl	RC_Copy_Format
 1964 005c 0346     		mov	r3, r0
 1965 005e B3F1FF3F 		cmp	r3, #-1
 1966 0062 02D1     		bne	.L145
 379:Src/remote_call.c ****     return -1;
 1967              		.loc 1 379 0
 1968 0064 4FF0FF33 		mov	r3, #-1
 1969 0068 03E0     		b	.L143
 1970              	.L145:
ARM GAS  /tmp/cc6tUiew.s 			page 42


 380:Src/remote_call.c ****   }
 381:Src/remote_call.c **** 
 382:Src/remote_call.c ****   //Used flag
 383:Src/remote_call.c ****   fun->used = true;
 1971              		.loc 1 383 0
 1972 006a 7B69     		ldr	r3, [r7, #20]
 1973 006c 0122     		movs	r2, #1
 1974 006e 1A70     		strb	r2, [r3]
 384:Src/remote_call.c **** 
 385:Src/remote_call.c ****   return 0;
 1975              		.loc 1 385 0
 1976 0070 0023     		movs	r3, #0
 1977              	.L143:
 386:Src/remote_call.c **** }
 1978              		.loc 1 386 0
 1979 0072 1846     		mov	r0, r3
 1980 0074 1837     		adds	r7, r7, #24
 1981              	.LCFI67:
 1982              		.cfi_def_cfa_offset 8
 1983 0076 BD46     		mov	sp, r7
 1984              	.LCFI68:
 1985              		.cfi_def_cfa_register 13
 1986              		@ sp needed
 1987 0078 80BD     		pop	{r7, pc}
 1988              	.L147:
 1989 007a 00BF     		.align	2
 1990              	.L146:
 1991 007c 00000000 		.word	err
 1992              		.cfi_endproc
 1993              	.LFE11:
 1995              		.section	.text.RC_Call,"ax",%progbits
 1996              		.align	1
 1997              		.global	RC_Call
 1998              		.syntax unified
 1999              		.thumb
 2000              		.thumb_func
 2001              		.fpu fpv4-sp-d16
 2003              	RC_Call:
 2004              	.LFB12:
 387:Src/remote_call.c **** 
 388:Src/remote_call.c **** int RC_Call(RC_Client *client, int id, ...){
 2005              		.loc 1 388 0
 2006              		.cfi_startproc
 2007              		@ args = 4, pretend = 12, frame = 32
 2008              		@ frame_needed = 1, uses_anonymous_args = 1
 2009 0000 0EB4     		push	{r1, r2, r3}
 2010              	.LCFI69:
 2011              		.cfi_def_cfa_offset 12
 2012              		.cfi_offset 1, -12
 2013              		.cfi_offset 2, -8
 2014              		.cfi_offset 3, -4
 2015 0002 80B5     		push	{r7, lr}
 2016              	.LCFI70:
 2017              		.cfi_def_cfa_offset 20
 2018              		.cfi_offset 7, -20
 2019              		.cfi_offset 14, -16
 2020 0004 89B0     		sub	sp, sp, #36
ARM GAS  /tmp/cc6tUiew.s 			page 43


 2021              	.LCFI71:
 2022              		.cfi_def_cfa_offset 56
 2023 0006 00AF     		add	r7, sp, #0
 2024              	.LCFI72:
 2025              		.cfi_def_cfa_register 7
 2026 0008 7860     		str	r0, [r7, #4]
 389:Src/remote_call.c ****   va_list args;
 390:Src/remote_call.c ****   va_start(args, id);
 2027              		.loc 1 390 0
 2028 000a 07F13003 		add	r3, r7, #48
 2029 000e FB60     		str	r3, [r7, #12]
 391:Src/remote_call.c **** 
 392:Src/remote_call.c ****   //Check ID
 393:Src/remote_call.c ****   if(!CHECK_ID(id)){
 2030              		.loc 1 393 0
 2031 0010 FB6A     		ldr	r3, [r7, #44]
 2032 0012 002B     		cmp	r3, #0
 2033 0014 02DB     		blt	.L149
 2034              		.loc 1 393 0 is_stmt 0 discriminator 1
 2035 0016 FB6A     		ldr	r3, [r7, #44]
 2036 0018 1F2B     		cmp	r3, #31
 2037 001a 05DD     		ble	.L150
 2038              	.L149:
 394:Src/remote_call.c ****     err = RC_BAD_ID;
 2039              		.loc 1 394 0 is_stmt 1
 2040 001c 4E4B     		ldr	r3, .L159
 2041 001e 0022     		movs	r2, #0
 2042 0020 1A60     		str	r2, [r3]
 395:Src/remote_call.c ****     return -1;
 2043              		.loc 1 395 0
 2044 0022 4FF0FF33 		mov	r3, #-1
 2045 0026 90E0     		b	.L158
 2046              	.L150:
 396:Src/remote_call.c ****   }
 397:Src/remote_call.c **** 
 398:Src/remote_call.c ****   RC_Client_Function *const fun = &client->functions[id];
 2047              		.loc 1 398 0
 2048 0028 FA6A     		ldr	r2, [r7, #44]
 2049 002a 1346     		mov	r3, r2
 2050 002c 1B01     		lsls	r3, r3, #4
 2051 002e 1344     		add	r3, r3, r2
 2052 0030 7A68     		ldr	r2, [r7, #4]
 2053 0032 1344     		add	r3, r3, r2
 2054 0034 0433     		adds	r3, r3, #4
 2055 0036 FB61     		str	r3, [r7, #28]
 399:Src/remote_call.c **** 
 400:Src/remote_call.c ****   if(fun->used == false){
 2056              		.loc 1 400 0
 2057 0038 FB69     		ldr	r3, [r7, #28]
 2058 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2059 003c 83F00103 		eor	r3, r3, #1
 2060 0040 DBB2     		uxtb	r3, r3
 2061 0042 002B     		cmp	r3, #0
 2062 0044 05D0     		beq	.L152
 401:Src/remote_call.c ****     err = RC_UNDEFINED_FUNCTION;
 2063              		.loc 1 401 0
 2064 0046 444B     		ldr	r3, .L159
ARM GAS  /tmp/cc6tUiew.s 			page 44


 2065 0048 0222     		movs	r2, #2
 2066 004a 1A60     		str	r2, [r3]
 402:Src/remote_call.c ****     return -1;
 2067              		.loc 1 402 0
 2068 004c 4FF0FF33 		mov	r3, #-1
 2069 0050 7BE0     		b	.L158
 2070              	.L152:
 403:Src/remote_call.c ****   }
 404:Src/remote_call.c **** 
 405:Src/remote_call.c ****   //Build the packet
 406:Src/remote_call.c ****   RP_Packet *packet = &client->interface->s_packet;
 2071              		.loc 1 406 0
 2072 0052 7B68     		ldr	r3, [r7, #4]
 2073 0054 1B68     		ldr	r3, [r3]
 2074 0056 03F50173 		add	r3, r3, #516
 2075 005a BB61     		str	r3, [r7, #24]
 407:Src/remote_call.c ****   packet->data[0] = id;
 2076              		.loc 1 407 0
 2077 005c FB6A     		ldr	r3, [r7, #44]
 2078 005e DAB2     		uxtb	r2, r3
 2079 0060 BB69     		ldr	r3, [r7, #24]
 2080 0062 9A70     		strb	r2, [r3, #2]
 408:Src/remote_call.c ****   packet->id = client->id_server;
 2081              		.loc 1 408 0
 2082 0064 7B68     		ldr	r3, [r7, #4]
 2083 0066 D3F82432 		ldr	r3, [r3, #548]
 2084 006a DAB2     		uxtb	r2, r3
 2085 006c BB69     		ldr	r3, [r7, #24]
 2086 006e 1A70     		strb	r2, [r3]
 409:Src/remote_call.c ****   packet->len = 1 + RC_Pack_Vars(client->functions[id].params_fmt,
 2087              		.loc 1 409 0
 2088 0070 FA6A     		ldr	r2, [r7, #44]
 2089 0072 1346     		mov	r3, r2
 2090 0074 1B01     		lsls	r3, r3, #4
 2091 0076 1344     		add	r3, r3, r2
 2092 0078 7A68     		ldr	r2, [r7, #4]
 2093 007a 1344     		add	r3, r3, r2
 2094 007c 581D     		adds	r0, r3, #5
 2095 007e BB69     		ldr	r3, [r7, #24]
 2096 0080 D91C     		adds	r1, r3, #3
 2097 0082 07F10C03 		add	r3, r7, #12
 2098 0086 F922     		movs	r2, #249
 2099 0088 FFF7FEFF 		bl	RC_Pack_Vars
 2100 008c 0346     		mov	r3, r0
 2101 008e DBB2     		uxtb	r3, r3
 2102 0090 0133     		adds	r3, r3, #1
 2103 0092 DAB2     		uxtb	r2, r3
 2104 0094 BB69     		ldr	r3, [r7, #24]
 2105 0096 5A70     		strb	r2, [r3, #1]
 410:Src/remote_call.c **** 				 &packet->data[1],
 411:Src/remote_call.c **** 				 RC_MAX_DATA,
 412:Src/remote_call.c **** 				 &args);
 413:Src/remote_call.c ****   if(packet->len == 0){
 2106              		.loc 1 413 0
 2107 0098 BB69     		ldr	r3, [r7, #24]
 2108 009a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2109 009c 002B     		cmp	r3, #0
ARM GAS  /tmp/cc6tUiew.s 			page 45


 2110 009e 05D1     		bne	.L153
 414:Src/remote_call.c ****     err = RC_WRONG_FORMAT;
 2111              		.loc 1 414 0
 2112 00a0 2D4B     		ldr	r3, .L159
 2113 00a2 0122     		movs	r2, #1
 2114 00a4 1A60     		str	r2, [r3]
 415:Src/remote_call.c ****     return -1;
 2115              		.loc 1 415 0
 2116 00a6 4FF0FF33 		mov	r3, #-1
 2117 00aa 4EE0     		b	.L158
 2118              	.L153:
 416:Src/remote_call.c ****   }
 417:Src/remote_call.c **** 
 418:Src/remote_call.c ****   //Send the request
 419:Src/remote_call.c ****   if(RP_Send(client->interface, packet, RC_TRANSFERT_TIMEOUT)){
 2119              		.loc 1 419 0
 2120 00ac 7B68     		ldr	r3, [r7, #4]
 2121 00ae 1B68     		ldr	r3, [r3]
 2122 00b0 0122     		movs	r2, #1
 2123 00b2 B969     		ldr	r1, [r7, #24]
 2124 00b4 1846     		mov	r0, r3
 2125 00b6 FFF7FEFF 		bl	RP_Send
 2126 00ba 0346     		mov	r3, r0
 2127 00bc 002B     		cmp	r3, #0
 2128 00be 05D0     		beq	.L154
 420:Src/remote_call.c ****     err = RC_LINK_ERROR;
 2129              		.loc 1 420 0
 2130 00c0 254B     		ldr	r3, .L159
 2131 00c2 0322     		movs	r2, #3
 2132 00c4 1A60     		str	r2, [r3]
 421:Src/remote_call.c ****     return -1;
 2133              		.loc 1 421 0
 2134 00c6 4FF0FF33 		mov	r3, #-1
 2135 00ca 3EE0     		b	.L158
 2136              	.L154:
 422:Src/remote_call.c ****   }
 423:Src/remote_call.c **** 
 424:Src/remote_call.c ****   //Wait for return
 425:Src/remote_call.c ****   if(RP_Wait_Packet(client->interface, RC_CALL_TIMEOUT)){
 2137              		.loc 1 425 0
 2138 00cc 7B68     		ldr	r3, [r7, #4]
 2139 00ce 1B68     		ldr	r3, [r3]
 2140 00d0 0A21     		movs	r1, #10
 2141 00d2 1846     		mov	r0, r3
 2142 00d4 FFF7FEFF 		bl	RP_Wait_Packet
 2143 00d8 0346     		mov	r3, r0
 2144 00da 002B     		cmp	r3, #0
 2145 00dc 05D0     		beq	.L155
 426:Src/remote_call.c ****     err = RC_ERR_CALL_TIMEOUT;
 2146              		.loc 1 426 0
 2147 00de 1E4B     		ldr	r3, .L159
 2148 00e0 0422     		movs	r2, #4
 2149 00e2 1A60     		str	r2, [r3]
 427:Src/remote_call.c ****     return -1;
 2150              		.loc 1 427 0
 2151 00e4 4FF0FF33 		mov	r3, #-1
 2152 00e8 2FE0     		b	.L158
ARM GAS  /tmp/cc6tUiew.s 			page 46


 2153              	.L155:
 428:Src/remote_call.c ****   }
 429:Src/remote_call.c **** 
 430:Src/remote_call.c ****   //Check return packet
 431:Src/remote_call.c ****   RP_Packet *const r_packet = &client->interface->r_packet;
 2154              		.loc 1 431 0
 2155 00ea 7B68     		ldr	r3, [r7, #4]
 2156 00ec 1B68     		ldr	r3, [r3]
 2157 00ee 03F58473 		add	r3, r3, #264
 2158 00f2 7B61     		str	r3, [r7, #20]
 432:Src/remote_call.c ****   if(r_packet->len < 1 || r_packet->data[0] != id || r_packet->id != client->id_server){
 2159              		.loc 1 432 0
 2160 00f4 7B69     		ldr	r3, [r7, #20]
 2161 00f6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2162 00f8 002B     		cmp	r3, #0
 2163 00fa 0DD0     		beq	.L156
 2164              		.loc 1 432 0 is_stmt 0 discriminator 1
 2165 00fc 7B69     		ldr	r3, [r7, #20]
 2166 00fe 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 2167 0100 1A46     		mov	r2, r3
 2168 0102 FB6A     		ldr	r3, [r7, #44]
 2169 0104 9342     		cmp	r3, r2
 2170 0106 07D1     		bne	.L156
 2171              		.loc 1 432 0 discriminator 2
 2172 0108 7B69     		ldr	r3, [r7, #20]
 2173 010a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2174 010c 1A46     		mov	r2, r3
 2175 010e 7B68     		ldr	r3, [r7, #4]
 2176 0110 D3F82432 		ldr	r3, [r3, #548]
 2177 0114 9A42     		cmp	r2, r3
 2178 0116 05D0     		beq	.L157
 2179              	.L156:
 433:Src/remote_call.c ****     err = RC_INVALID_RETURN;
 2180              		.loc 1 433 0 is_stmt 1
 2181 0118 0F4B     		ldr	r3, .L159
 2182 011a 0522     		movs	r2, #5
 2183 011c 1A60     		str	r2, [r3]
 434:Src/remote_call.c ****     return -1;
 2184              		.loc 1 434 0
 2185 011e 4FF0FF33 		mov	r3, #-1
 2186 0122 12E0     		b	.L158
 2187              	.L157:
 435:Src/remote_call.c ****   }
 436:Src/remote_call.c **** 
 437:Src/remote_call.c ****   //Extract return informations
 438:Src/remote_call.c ****   int r = RC_Unpack_Vars(client->functions[id].return_fmt,
 2188              		.loc 1 438 0
 2189 0124 FA6A     		ldr	r2, [r7, #44]
 2190 0126 1346     		mov	r3, r2
 2191 0128 1B01     		lsls	r3, r3, #4
 2192 012a 1344     		add	r3, r3, r2
 2193 012c 0833     		adds	r3, r3, #8
 2194 012e 7A68     		ldr	r2, [r7, #4]
 2195 0130 1344     		add	r3, r3, r2
 2196 0132 581D     		adds	r0, r3, #5
 2197 0134 7B69     		ldr	r3, [r7, #20]
 2198 0136 D91C     		adds	r1, r3, #3
ARM GAS  /tmp/cc6tUiew.s 			page 47


 439:Src/remote_call.c **** 			 &r_packet->data[1],
 440:Src/remote_call.c **** 			 r_packet->len - 1,
 2199              		.loc 1 440 0
 2200 0138 7B69     		ldr	r3, [r7, #20]
 2201 013a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 438:Src/remote_call.c **** 			 &r_packet->data[1],
 2202              		.loc 1 438 0
 2203 013c 5A1E     		subs	r2, r3, #1
 2204 013e 07F10C03 		add	r3, r7, #12
 2205 0142 FFF7FEFF 		bl	RC_Unpack_Vars
 2206 0146 3861     		str	r0, [r7, #16]
 441:Src/remote_call.c **** 			 &args);
 442:Src/remote_call.c ****   va_end(args);
 443:Src/remote_call.c **** 
 444:Src/remote_call.c ****   return r;
 2207              		.loc 1 444 0
 2208 0148 3B69     		ldr	r3, [r7, #16]
 2209              	.L158:
 445:Src/remote_call.c **** }
 2210              		.loc 1 445 0 discriminator 1
 2211 014a 1846     		mov	r0, r3
 2212 014c 2437     		adds	r7, r7, #36
 2213              	.LCFI73:
 2214              		.cfi_def_cfa_offset 20
 2215 014e BD46     		mov	sp, r7
 2216              	.LCFI74:
 2217              		.cfi_def_cfa_register 13
 2218              		@ sp needed
 2219 0150 BDE88040 		pop	{r7, lr}
 2220              	.LCFI75:
 2221              		.cfi_restore 14
 2222              		.cfi_restore 7
 2223              		.cfi_def_cfa_offset 12
 2224 0154 03B0     		add	sp, sp, #12
 2225              	.LCFI76:
 2226              		.cfi_restore 3
 2227              		.cfi_restore 2
 2228              		.cfi_restore 1
 2229              		.cfi_def_cfa_offset 0
 2230 0156 7047     		bx	lr
 2231              	.L160:
 2232              		.align	2
 2233              	.L159:
 2234 0158 00000000 		.word	err
 2235              		.cfi_endproc
 2236              	.LFE12:
 2238              		.text
 2239              	.Letext0:
 2240              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2241              		.file 3 "/usr/arm-none-eabi/include/sys/lock.h"
 2242              		.file 4 "/usr/arm-none-eabi/include/sys/_types.h"
 2243              		.file 5 "/usr/lib/gcc/arm-none-eabi/7.3.0/include/stddef.h"
 2244              		.file 6 "/usr/arm-none-eabi/include/sys/reent.h"
 2245              		.file 7 "/usr/arm-none-eabi/include/stdlib.h"
 2246              		.file 8 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2247              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.3.0/include/stdarg.h"
 2248              		.file 10 "<built-in>"
ARM GAS  /tmp/cc6tUiew.s 			page 48


 2249              		.file 11 "Inc/crc_16.h"
 2250              		.file 12 "Inc/robotronik_protocol.h"
 2251              		.file 13 "Inc/remote_call.h"
ARM GAS  /tmp/cc6tUiew.s 			page 49


DEFINED SYMBOLS
                            *ABS*:0000000000000000 remote_call.c
     /tmp/cc6tUiew.s:18     .bss.err:0000000000000000 $d
     /tmp/cc6tUiew.s:21     .bss.err:0000000000000000 err
     /tmp/cc6tUiew.s:24     .text.RC_Copy_Format:0000000000000000 $t
     /tmp/cc6tUiew.s:30     .text.RC_Copy_Format:0000000000000000 RC_Copy_Format
     /tmp/cc6tUiew.s:93     .text.RC_Copy_Format:0000000000000054 $d
     /tmp/cc6tUiew.s:145    .text.RC_Copy_Format:0000000000000124 $t
     /tmp/cc6tUiew.s:237    .text.RC_Copy_Format:0000000000000190 $d
     /tmp/cc6tUiew.s:243    .text.RC_Pack_Vars:0000000000000000 $t
     /tmp/cc6tUiew.s:249    .text.RC_Pack_Vars:0000000000000000 RC_Pack_Vars
     /tmp/cc6tUiew.s:701    .text.RC_Pack_Vars:00000000000002f4 $d
     /tmp/cc6tUiew.s:706    .text.RC_Unpack_Vars:0000000000000000 $t
     /tmp/cc6tUiew.s:712    .text.RC_Unpack_Vars:0000000000000000 RC_Unpack_Vars
     /tmp/cc6tUiew.s:1143   .text.RC_Unpack_Vars:00000000000002ac $d
     /tmp/cc6tUiew.s:1148   .text.RC_Get_Error:0000000000000000 $t
     /tmp/cc6tUiew.s:1155   .text.RC_Get_Error:0000000000000000 RC_Get_Error
     /tmp/cc6tUiew.s:1186   .text.RC_Get_Error:0000000000000014 $d
     /tmp/cc6tUiew.s:1191   .text.RC_Server_Init:0000000000000000 $t
     /tmp/cc6tUiew.s:1198   .text.RC_Server_Init:0000000000000000 RC_Server_Init
     /tmp/cc6tUiew.s:1264   .text.RC_Server_Add_Function:0000000000000000 $t
     /tmp/cc6tUiew.s:1271   .text.RC_Server_Add_Function:0000000000000000 RC_Server_Add_Function
     /tmp/cc6tUiew.s:1369   .text.RC_Server_Add_Function:0000000000000084 $d
     /tmp/cc6tUiew.s:1374   .text.RC_Server_Get_Request:0000000000000000 $t
     /tmp/cc6tUiew.s:1381   .text.RC_Server_Get_Request:0000000000000000 RC_Server_Get_Request
     /tmp/cc6tUiew.s:1532   .text.RC_Server_Get_Request:00000000000000cc $d
     /tmp/cc6tUiew.s:1537   .text.RC_Server_Poll:0000000000000000 $t
     /tmp/cc6tUiew.s:1544   .text.RC_Server_Poll:0000000000000000 RC_Server_Poll
     /tmp/cc6tUiew.s:1606   .text.RC_Server_Get_Args:0000000000000000 $t
     /tmp/cc6tUiew.s:1613   .text.RC_Server_Get_Args:0000000000000000 RC_Server_Get_Args
     /tmp/cc6tUiew.s:1689   .text.RC_Server_Return:0000000000000000 $t
     /tmp/cc6tUiew.s:1696   .text.RC_Server_Return:0000000000000000 RC_Server_Return
     /tmp/cc6tUiew.s:1809   .text.RC_Server_Return:0000000000000094 $d
     /tmp/cc6tUiew.s:1814   .text.RC_Client_Init:0000000000000000 $t
     /tmp/cc6tUiew.s:1821   .text.RC_Client_Init:0000000000000000 RC_Client_Init
     /tmp/cc6tUiew.s:1891   .text.RC_Client_Add_Function:0000000000000000 $t
     /tmp/cc6tUiew.s:1898   .text.RC_Client_Add_Function:0000000000000000 RC_Client_Add_Function
     /tmp/cc6tUiew.s:1991   .text.RC_Client_Add_Function:000000000000007c $d
     /tmp/cc6tUiew.s:1996   .text.RC_Call:0000000000000000 $t
     /tmp/cc6tUiew.s:2003   .text.RC_Call:0000000000000000 RC_Call
     /tmp/cc6tUiew.s:2234   .text.RC_Call:0000000000000158 $d

UNDEFINED SYMBOLS
__aeabi_d2f
RP_Send
RP_Wait_Packet
