ARM GAS  /tmp/ccdXFzX9.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"odometry.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.CHANNEL_OFFSET_TAB,"a",%progbits
  18              		.align	2
  21              	CHANNEL_OFFSET_TAB:
  22 0000 08       		.byte	8
  23 0001 1C       		.byte	28
  24 0002 30       		.byte	48
  25 0003 44       		.byte	68
  26 0004 58       		.byte	88
  27 0005 6C       		.byte	108
  28 0006 80       		.byte	-128
  29              		.global	ENCODER_DIST
  30              		.section	.data.ENCODER_DIST,"aw",%progbits
  31              		.align	2
  34              	ENCODER_DIST:
  35 0000 F6A84743 		.word	1128769782
  36              		.global	ENCODER_STEP_DIST
  37              		.section	.data.ENCODER_STEP_DIST,"aw",%progbits
  38              		.align	2
  41              	ENCODER_STEP_DIST:
  42 0000 B987B83D 		.word	1035503545
  43              		.global	deltaL
  44              		.section	.bss.deltaL,"aw",%nobits
  45              		.align	2
  48              	deltaL:
  49 0000 00000000 		.space	4
  50              		.global	x0_
  51              		.section	.bss.x0_,"aw",%nobits
  52              		.align	2
  55              	x0_:
  56 0000 00000000 		.space	4
  57              		.global	y0_
  58              		.section	.bss.y0_,"aw",%nobits
  59              		.align	2
  62              	y0_:
  63 0000 00000000 		.space	4
  64              		.global	__aeabi_f2d
  65              		.global	__aeabi_dmul
  66              		.global	__aeabi_i2d
  67              		.global	__aeabi_dadd
  68              		.global	__aeabi_d2f
  69              		.section	.text.update_odometry,"ax",%progbits
ARM GAS  /tmp/ccdXFzX9.s 			page 2


  70              		.align	1
  71              		.global	update_odometry
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  75              		.fpu fpv4-sp-d16
  77              	update_odometry:
  78              	.LFB728:
  79              		.file 1 "Src/odometry.c"
   1:Src/odometry.c **** #include "odometry.h"
   2:Src/odometry.c **** 
   3:Src/odometry.c **** volatile float ENCODER_DIST=199.66;//distance between encoders
   4:Src/odometry.c **** volatile float ENCODER_STEP_DIST=20.65*2*M_PI/1440.0;//distance for 1 encoder step
   5:Src/odometry.c **** volatile int deltaL=(20.65*2*M_PI/1440.0)/199.66;//ENCODER_STEP_DIST/ENCODER_DIST
   6:Src/odometry.c **** volatile float x0_ = 0, y0_ = 0;
   7:Src/odometry.c **** 
   8:Src/odometry.c **** void update_odometry(Odometry *odometry){
  80              		.loc 1 8 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 16
  83              		@ frame_needed = 1, uses_anonymous_args = 0
  84 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
  85              	.LCFI0:
  86              		.cfi_def_cfa_offset 24
  87              		.cfi_offset 4, -24
  88              		.cfi_offset 5, -20
  89              		.cfi_offset 7, -16
  90              		.cfi_offset 8, -12
  91              		.cfi_offset 9, -8
  92              		.cfi_offset 14, -4
  93 0004 84B0     		sub	sp, sp, #16
  94              	.LCFI1:
  95              		.cfi_def_cfa_offset 40
  96 0006 00AF     		add	r7, sp, #0
  97              	.LCFI2:
  98              		.cfi_def_cfa_register 7
  99 0008 7860     		str	r0, [r7, #4]
   9:Src/odometry.c ****   int dl_l = update_encoder(&odometry->encoder_l);
 100              		.loc 1 9 0
 101 000a 7B68     		ldr	r3, [r7, #4]
 102 000c 1846     		mov	r0, r3
 103 000e FFF7FEFF 		bl	update_encoder
 104 0012 F860     		str	r0, [r7, #12]
  10:Src/odometry.c ****   int dl_r = update_encoder(&odometry->encoder_r);
 105              		.loc 1 10 0
 106 0014 7B68     		ldr	r3, [r7, #4]
 107 0016 0C33     		adds	r3, r3, #12
 108 0018 1846     		mov	r0, r3
 109 001a FFF7FEFF 		bl	update_encoder
 110 001e B860     		str	r0, [r7, #8]
  11:Src/odometry.c **** 
  12:Src/odometry.c **** #if TEST_ENCODER==1
  13:Src/odometry.c ****   led_level = (int) (((float) odometry->encoder_l.htim->Instance->CNT / ENCODER_MAX)*255);
  14:Src/odometry.c **** #endif
  15:Src/odometry.c **** 
  16:Src/odometry.c **** #if TEST_ENCODER==2
  17:Src/odometry.c ****   led_level = (int) (((float) odometry->encoder_r.htim->Instance->CNT / ENCODER_MAX)*255);
ARM GAS  /tmp/ccdXFzX9.s 			page 3


  18:Src/odometry.c **** #endif
  19:Src/odometry.c **** 
  20:Src/odometry.c **** 
  21:Src/odometry.c ****   odometry->x = odometry->x
 111              		.loc 1 21 0
 112 0020 7B68     		ldr	r3, [r7, #4]
 113 0022 9B69     		ldr	r3, [r3, #24]	@ float
 114 0024 1846     		mov	r0, r3	@ float
 115 0026 FFF7FEFF 		bl	__aeabi_f2d
 116              	.LVL0:
 117 002a 0446     		mov	r4, r0
 118 002c 0D46     		mov	r5, r1
  22:Src/odometry.c ****     + cos(odometry->theta)*ENCODER_STEP_DIST*(dl_l + dl_r);
 119              		.loc 1 22 0
 120 002e 7B68     		ldr	r3, [r7, #4]
 121 0030 1B6A     		ldr	r3, [r3, #32]	@ float
 122 0032 1846     		mov	r0, r3	@ float
 123 0034 FFF7FEFF 		bl	__aeabi_f2d
 124              	.LVL1:
 125 0038 0246     		mov	r2, r0
 126 003a 0B46     		mov	r3, r1
 127 003c 43EC102B 		vmov	d0, r2, r3
 128 0040 FFF7FEFF 		bl	cos
 129 0044 59EC108B 		vmov	r8, r9, d0
 130 0048 544B     		ldr	r3, .L10
 131 004a 1B68     		ldr	r3, [r3]	@ float
 132 004c 1846     		mov	r0, r3	@ float
 133 004e FFF7FEFF 		bl	__aeabi_f2d
 134              	.LVL2:
 135 0052 0246     		mov	r2, r0
 136 0054 0B46     		mov	r3, r1
 137 0056 4046     		mov	r0, r8
 138 0058 4946     		mov	r1, r9
 139 005a FFF7FEFF 		bl	__aeabi_dmul
 140              	.LVL3:
 141 005e 0246     		mov	r2, r0
 142 0060 0B46     		mov	r3, r1
 143 0062 9046     		mov	r8, r2
 144 0064 9946     		mov	r9, r3
 145 0066 FA68     		ldr	r2, [r7, #12]
 146 0068 BB68     		ldr	r3, [r7, #8]
 147 006a 1344     		add	r3, r3, r2
 148 006c 1846     		mov	r0, r3
 149 006e FFF7FEFF 		bl	__aeabi_i2d
 150              	.LVL4:
 151 0072 0246     		mov	r2, r0
 152 0074 0B46     		mov	r3, r1
 153 0076 4046     		mov	r0, r8
 154 0078 4946     		mov	r1, r9
 155 007a FFF7FEFF 		bl	__aeabi_dmul
 156              	.LVL5:
 157 007e 0246     		mov	r2, r0
 158 0080 0B46     		mov	r3, r1
 159 0082 2046     		mov	r0, r4
 160 0084 2946     		mov	r1, r5
 161 0086 FFF7FEFF 		bl	__aeabi_dadd
 162              	.LVL6:
ARM GAS  /tmp/ccdXFzX9.s 			page 4


 163 008a 0346     		mov	r3, r0
 164 008c 0C46     		mov	r4, r1
 165 008e 1846     		mov	r0, r3
 166 0090 2146     		mov	r1, r4
 167 0092 FFF7FEFF 		bl	__aeabi_d2f
 168              	.LVL7:
 169 0096 0246     		mov	r2, r0	@ float
  21:Src/odometry.c ****     + cos(odometry->theta)*ENCODER_STEP_DIST*(dl_l + dl_r);
 170              		.loc 1 21 0
 171 0098 7B68     		ldr	r3, [r7, #4]
 172 009a 9A61     		str	r2, [r3, #24]	@ float
  23:Src/odometry.c **** 
  24:Src/odometry.c ****   odometry->y = odometry->y
 173              		.loc 1 24 0
 174 009c 7B68     		ldr	r3, [r7, #4]
 175 009e DB69     		ldr	r3, [r3, #28]	@ float
 176 00a0 1846     		mov	r0, r3	@ float
 177 00a2 FFF7FEFF 		bl	__aeabi_f2d
 178              	.LVL8:
 179 00a6 0446     		mov	r4, r0
 180 00a8 0D46     		mov	r5, r1
  25:Src/odometry.c ****     + sin(odometry->theta)*ENCODER_STEP_DIST*(dl_l + dl_r);
 181              		.loc 1 25 0
 182 00aa 7B68     		ldr	r3, [r7, #4]
 183 00ac 1B6A     		ldr	r3, [r3, #32]	@ float
 184 00ae 1846     		mov	r0, r3	@ float
 185 00b0 FFF7FEFF 		bl	__aeabi_f2d
 186              	.LVL9:
 187 00b4 0246     		mov	r2, r0
 188 00b6 0B46     		mov	r3, r1
 189 00b8 43EC102B 		vmov	d0, r2, r3
 190 00bc FFF7FEFF 		bl	sin
 191 00c0 59EC108B 		vmov	r8, r9, d0
 192 00c4 354B     		ldr	r3, .L10
 193 00c6 1B68     		ldr	r3, [r3]	@ float
 194 00c8 1846     		mov	r0, r3	@ float
 195 00ca FFF7FEFF 		bl	__aeabi_f2d
 196              	.LVL10:
 197 00ce 0246     		mov	r2, r0
 198 00d0 0B46     		mov	r3, r1
 199 00d2 4046     		mov	r0, r8
 200 00d4 4946     		mov	r1, r9
 201 00d6 FFF7FEFF 		bl	__aeabi_dmul
 202              	.LVL11:
 203 00da 0246     		mov	r2, r0
 204 00dc 0B46     		mov	r3, r1
 205 00de 9046     		mov	r8, r2
 206 00e0 9946     		mov	r9, r3
 207 00e2 FA68     		ldr	r2, [r7, #12]
 208 00e4 BB68     		ldr	r3, [r7, #8]
 209 00e6 1344     		add	r3, r3, r2
 210 00e8 1846     		mov	r0, r3
 211 00ea FFF7FEFF 		bl	__aeabi_i2d
 212              	.LVL12:
 213 00ee 0246     		mov	r2, r0
 214 00f0 0B46     		mov	r3, r1
 215 00f2 4046     		mov	r0, r8
ARM GAS  /tmp/ccdXFzX9.s 			page 5


 216 00f4 4946     		mov	r1, r9
 217 00f6 FFF7FEFF 		bl	__aeabi_dmul
 218              	.LVL13:
 219 00fa 0246     		mov	r2, r0
 220 00fc 0B46     		mov	r3, r1
 221 00fe 2046     		mov	r0, r4
 222 0100 2946     		mov	r1, r5
 223 0102 FFF7FEFF 		bl	__aeabi_dadd
 224              	.LVL14:
 225 0106 0346     		mov	r3, r0
 226 0108 0C46     		mov	r4, r1
 227 010a 1846     		mov	r0, r3
 228 010c 2146     		mov	r1, r4
 229 010e FFF7FEFF 		bl	__aeabi_d2f
 230              	.LVL15:
 231 0112 0246     		mov	r2, r0	@ float
  24:Src/odometry.c ****     + sin(odometry->theta)*ENCODER_STEP_DIST*(dl_l + dl_r);
 232              		.loc 1 24 0
 233 0114 7B68     		ldr	r3, [r7, #4]
 234 0116 DA61     		str	r2, [r3, #28]	@ float
  26:Src/odometry.c **** 
  27:Src/odometry.c ****   odometry->theta = odometry->theta+deltaL*(dl_l - dl_r);
 235              		.loc 1 27 0
 236 0118 7B68     		ldr	r3, [r7, #4]
 237 011a 93ED087A 		vldr.32	s14, [r3, #32]
 238 011e FA68     		ldr	r2, [r7, #12]
 239 0120 BB68     		ldr	r3, [r7, #8]
 240 0122 D31A     		subs	r3, r2, r3
 241 0124 1E4A     		ldr	r2, .L10+4
 242 0126 1268     		ldr	r2, [r2]
 243 0128 02FB03F3 		mul	r3, r2, r3
 244 012c 07EE903A 		vmov	s15, r3	@ int
 245 0130 F8EEE77A 		vcvt.f32.s32	s15, s15
 246 0134 77EE277A 		vadd.f32	s15, s14, s15
 247 0138 7B68     		ldr	r3, [r7, #4]
 248 013a C3ED087A 		vstr.32	s15, [r3, #32]
  28:Src/odometry.c **** 
  29:Src/odometry.c ****   if(odometry->theta>PI)//angle limitation to -PI +PI
 249              		.loc 1 29 0
 250 013e 7B68     		ldr	r3, [r7, #4]
 251 0140 D3ED087A 		vldr.32	s15, [r3, #32]
 252 0144 9FED177A 		vldr.32	s14, .L10+8
 253 0148 F4EEC77A 		vcmpe.f32	s15, s14
 254 014c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 255 0150 0ADD     		ble	.L8
  30:Src/odometry.c ****   {
  31:Src/odometry.c ****     odometry->theta=odometry->theta-2*PI;
 256              		.loc 1 31 0
 257 0152 7B68     		ldr	r3, [r7, #4]
 258 0154 D3ED087A 		vldr.32	s15, [r3, #32]
 259 0158 9FED137A 		vldr.32	s14, .L10+12
 260 015c 77EEC77A 		vsub.f32	s15, s15, s14
 261 0160 7B68     		ldr	r3, [r7, #4]
 262 0162 C3ED087A 		vstr.32	s15, [r3, #32]
  32:Src/odometry.c ****   }
  33:Src/odometry.c ****   else if(odometry->theta<=-PI)
  34:Src/odometry.c ****   {
ARM GAS  /tmp/ccdXFzX9.s 			page 6


  35:Src/odometry.c ****     odometry->theta=odometry->theta+2*PI;
  36:Src/odometry.c ****   }
  37:Src/odometry.c **** }
 263              		.loc 1 37 0
 264 0166 14E0     		b	.L9
 265              	.L8:
  33:Src/odometry.c ****   {
 266              		.loc 1 33 0
 267 0168 7B68     		ldr	r3, [r7, #4]
 268 016a D3ED087A 		vldr.32	s15, [r3, #32]
 269 016e 9FED0F7A 		vldr.32	s14, .L10+16
 270 0172 F4EEC77A 		vcmpe.f32	s15, s14
 271 0176 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 272 017a 00D9     		bls	.L7
 273              		.loc 1 37 0
 274 017c 09E0     		b	.L9
 275              	.L7:
  35:Src/odometry.c ****   }
 276              		.loc 1 35 0
 277 017e 7B68     		ldr	r3, [r7, #4]
 278 0180 D3ED087A 		vldr.32	s15, [r3, #32]
 279 0184 9FED087A 		vldr.32	s14, .L10+12
 280 0188 77EE877A 		vadd.f32	s15, s15, s14
 281 018c 7B68     		ldr	r3, [r7, #4]
 282 018e C3ED087A 		vstr.32	s15, [r3, #32]
 283              	.L9:
 284              		.loc 1 37 0
 285 0192 00BF     		nop
 286 0194 1037     		adds	r7, r7, #16
 287              	.LCFI3:
 288              		.cfi_def_cfa_offset 24
 289 0196 BD46     		mov	sp, r7
 290              	.LCFI4:
 291              		.cfi_def_cfa_register 13
 292              		@ sp needed
 293 0198 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 294              	.L11:
 295              		.align	2
 296              	.L10:
 297 019c 00000000 		.word	ENCODER_STEP_DIST
 298 01a0 00000000 		.word	deltaL
 299 01a4 DB0F4940 		.word	1078530011
 300 01a8 DB0FC940 		.word	1086918619
 301 01ac DB0F49C0 		.word	3226013659
 302              		.cfi_endproc
 303              	.LFE728:
 305              		.section	.text.init_odometry,"ax",%progbits
 306              		.align	1
 307              		.global	init_odometry
 308              		.syntax unified
 309              		.thumb
 310              		.thumb_func
 311              		.fpu fpv4-sp-d16
 313              	init_odometry:
 314              	.LFB729:
  38:Src/odometry.c **** 
  39:Src/odometry.c **** void init_odometry(Odometry *odometry, TIM_HandleTypeDef *htim_l, TIM_HandleTypeDef *htim_r, TIM_Ha
ARM GAS  /tmp/ccdXFzX9.s 			page 7


 315              		.loc 1 39 0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 16
 318              		@ frame_needed = 1, uses_anonymous_args = 0
 319 0000 80B5     		push	{r7, lr}
 320              	.LCFI5:
 321              		.cfi_def_cfa_offset 8
 322              		.cfi_offset 7, -8
 323              		.cfi_offset 14, -4
 324 0002 84B0     		sub	sp, sp, #16
 325              	.LCFI6:
 326              		.cfi_def_cfa_offset 24
 327 0004 00AF     		add	r7, sp, #0
 328              	.LCFI7:
 329              		.cfi_def_cfa_register 7
 330 0006 F860     		str	r0, [r7, #12]
 331 0008 B960     		str	r1, [r7, #8]
 332 000a 7A60     		str	r2, [r7, #4]
 333 000c 3B60     		str	r3, [r7]
  40:Src/odometry.c ****   odometry->x = odometry->y = 0;
 334              		.loc 1 40 0
 335 000e 4FF00003 		mov	r3, #0
 336 0012 FA68     		ldr	r2, [r7, #12]
 337 0014 D361     		str	r3, [r2, #28]	@ float
 338 0016 FA68     		ldr	r2, [r7, #12]
 339 0018 9361     		str	r3, [r2, #24]	@ float
  41:Src/odometry.c ****   odometry->theta = 0;
 340              		.loc 1 41 0
 341 001a FB68     		ldr	r3, [r7, #12]
 342 001c 4FF00002 		mov	r2, #0
 343 0020 1A62     		str	r2, [r3, #32]	@ float
  42:Src/odometry.c **** 
  43:Src/odometry.c ****   init_encoder(&odometry->encoder_l, htim_l);
 344              		.loc 1 43 0
 345 0022 FB68     		ldr	r3, [r7, #12]
 346 0024 B968     		ldr	r1, [r7, #8]
 347 0026 1846     		mov	r0, r3
 348 0028 FFF7FEFF 		bl	init_encoder
  44:Src/odometry.c ****   init_encoder(&odometry->encoder_r, htim_r);
 349              		.loc 1 44 0
 350 002c FB68     		ldr	r3, [r7, #12]
 351 002e 0C33     		adds	r3, r3, #12
 352 0030 7968     		ldr	r1, [r7, #4]
 353 0032 1846     		mov	r0, r3
 354 0034 FFF7FEFF 		bl	init_encoder
  45:Src/odometry.c **** 
  46:Src/odometry.c ****   start_encoder(&odometry->encoder_l);
 355              		.loc 1 46 0
 356 0038 FB68     		ldr	r3, [r7, #12]
 357 003a 1846     		mov	r0, r3
 358 003c FFF7FEFF 		bl	start_encoder
  47:Src/odometry.c ****   start_encoder(&odometry->encoder_r);
 359              		.loc 1 47 0
 360 0040 FB68     		ldr	r3, [r7, #12]
 361 0042 0C33     		adds	r3, r3, #12
 362 0044 1846     		mov	r0, r3
 363 0046 FFF7FEFF 		bl	start_encoder
ARM GAS  /tmp/ccdXFzX9.s 			page 8


  48:Src/odometry.c **** 
  49:Src/odometry.c ****   HAL_TIM_Base_Start_IT(htim_poll);
 364              		.loc 1 49 0
 365 004a 3868     		ldr	r0, [r7]
 366 004c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
  50:Src/odometry.c **** }
 367              		.loc 1 50 0
 368 0050 00BF     		nop
 369 0052 1037     		adds	r7, r7, #16
 370              	.LCFI8:
 371              		.cfi_def_cfa_offset 8
 372 0054 BD46     		mov	sp, r7
 373              	.LCFI9:
 374              		.cfi_def_cfa_register 13
 375              		@ sp needed
 376 0056 80BD     		pop	{r7, pc}
 377              		.cfi_endproc
 378              	.LFE729:
 380              		.text
 381              	.Letext0:
 382              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 383              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 384              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 385              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 386              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 387              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 388              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 389              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.3.0/include/stddef.h"
 390              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 391              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 392              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 393              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 394              		.file 14 "/usr/arm-none-eabi/include/math.h"
 395              		.file 15 "Inc/encoder.h"
 396              		.file 16 "Inc/odometry.h"
 397              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_ll_dma.h"
ARM GAS  /tmp/ccdXFzX9.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 odometry.c
     /tmp/ccdXFzX9.s:18     .rodata.CHANNEL_OFFSET_TAB:0000000000000000 $d
     /tmp/ccdXFzX9.s:21     .rodata.CHANNEL_OFFSET_TAB:0000000000000000 CHANNEL_OFFSET_TAB
     /tmp/ccdXFzX9.s:34     .data.ENCODER_DIST:0000000000000000 ENCODER_DIST
     /tmp/ccdXFzX9.s:31     .data.ENCODER_DIST:0000000000000000 $d
     /tmp/ccdXFzX9.s:41     .data.ENCODER_STEP_DIST:0000000000000000 ENCODER_STEP_DIST
     /tmp/ccdXFzX9.s:38     .data.ENCODER_STEP_DIST:0000000000000000 $d
     /tmp/ccdXFzX9.s:48     .bss.deltaL:0000000000000000 deltaL
     /tmp/ccdXFzX9.s:45     .bss.deltaL:0000000000000000 $d
     /tmp/ccdXFzX9.s:55     .bss.x0_:0000000000000000 x0_
     /tmp/ccdXFzX9.s:52     .bss.x0_:0000000000000000 $d
     /tmp/ccdXFzX9.s:62     .bss.y0_:0000000000000000 y0_
     /tmp/ccdXFzX9.s:59     .bss.y0_:0000000000000000 $d
     /tmp/ccdXFzX9.s:70     .text.update_odometry:0000000000000000 $t
     /tmp/ccdXFzX9.s:77     .text.update_odometry:0000000000000000 update_odometry
     /tmp/ccdXFzX9.s:297    .text.update_odometry:000000000000019c $d
     /tmp/ccdXFzX9.s:306    .text.init_odometry:0000000000000000 $t
     /tmp/ccdXFzX9.s:313    .text.init_odometry:0000000000000000 init_odometry

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_dmul
__aeabi_i2d
__aeabi_dadd
__aeabi_d2f
update_encoder
cos
sin
init_encoder
start_encoder
HAL_TIM_Base_Start_IT
