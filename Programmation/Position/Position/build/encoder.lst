ARM GAS  /tmp/ccakdnb8.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"encoder.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.CHANNEL_OFFSET_TAB,"a",%progbits
  18              		.align	2
  21              	CHANNEL_OFFSET_TAB:
  22 0000 08       		.byte	8
  23 0001 1C       		.byte	28
  24 0002 30       		.byte	48
  25 0003 44       		.byte	68
  26 0004 58       		.byte	88
  27 0005 6C       		.byte	108
  28 0006 80       		.byte	-128
  29              		.section	.text.init_encoder,"ax",%progbits
  30              		.align	1
  31              		.global	init_encoder
  32              		.syntax unified
  33              		.thumb
  34              		.thumb_func
  35              		.fpu fpv4-sp-d16
  37              	init_encoder:
  38              	.LFB695:
  39              		.file 1 "Src/encoder.c"
   1:Src/encoder.c **** #include "encoder.h"
   2:Src/encoder.c **** 
   3:Src/encoder.c **** #if TEST_ENCODER != 0
   4:Src/encoder.c **** uint8_t led_level;
   5:Src/encoder.c **** #endif
   6:Src/encoder.c **** 
   7:Src/encoder.c **** void init_encoder(Encoder *encoder, TIM_HandleTypeDef *htim){
  40              		.loc 1 7 0
  41              		.cfi_startproc
  42              		@ args = 0, pretend = 0, frame = 8
  43              		@ frame_needed = 1, uses_anonymous_args = 0
  44              		@ link register save eliminated.
  45 0000 80B4     		push	{r7}
  46              	.LCFI0:
  47              		.cfi_def_cfa_offset 4
  48              		.cfi_offset 7, -4
  49 0002 83B0     		sub	sp, sp, #12
  50              	.LCFI1:
  51              		.cfi_def_cfa_offset 16
  52 0004 00AF     		add	r7, sp, #0
  53              	.LCFI2:
ARM GAS  /tmp/ccakdnb8.s 			page 2


  54              		.cfi_def_cfa_register 7
  55 0006 7860     		str	r0, [r7, #4]
  56 0008 3960     		str	r1, [r7]
   8:Src/encoder.c ****   encoder->last_pos = encoder->steps = 0;
  57              		.loc 1 8 0
  58 000a 0023     		movs	r3, #0
  59 000c 7A68     		ldr	r2, [r7, #4]
  60 000e 5360     		str	r3, [r2, #4]
  61 0010 7A68     		ldr	r2, [r7, #4]
  62 0012 1360     		str	r3, [r2]
   9:Src/encoder.c ****   encoder->htim = htim;
  63              		.loc 1 9 0
  64 0014 7B68     		ldr	r3, [r7, #4]
  65 0016 3A68     		ldr	r2, [r7]
  66 0018 9A60     		str	r2, [r3, #8]
  10:Src/encoder.c **** }
  67              		.loc 1 10 0
  68 001a 00BF     		nop
  69 001c 0C37     		adds	r7, r7, #12
  70              	.LCFI3:
  71              		.cfi_def_cfa_offset 4
  72 001e BD46     		mov	sp, r7
  73              	.LCFI4:
  74              		.cfi_def_cfa_register 13
  75              		@ sp needed
  76 0020 5DF8047B 		ldr	r7, [sp], #4
  77              	.LCFI5:
  78              		.cfi_restore 7
  79              		.cfi_def_cfa_offset 0
  80 0024 7047     		bx	lr
  81              		.cfi_endproc
  82              	.LFE695:
  84              		.section	.text.update_encoder,"ax",%progbits
  85              		.align	1
  86              		.global	update_encoder
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
  90              		.fpu fpv4-sp-d16
  92              	update_encoder:
  93              	.LFB696:
  11:Src/encoder.c **** 
  12:Src/encoder.c **** int update_encoder(Encoder *encoder){
  94              		.loc 1 12 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 16
  97              		@ frame_needed = 1, uses_anonymous_args = 0
  98              		@ link register save eliminated.
  99 0000 80B4     		push	{r7}
 100              	.LCFI6:
 101              		.cfi_def_cfa_offset 4
 102              		.cfi_offset 7, -4
 103 0002 85B0     		sub	sp, sp, #20
 104              	.LCFI7:
 105              		.cfi_def_cfa_offset 24
 106 0004 00AF     		add	r7, sp, #0
 107              	.LCFI8:
ARM GAS  /tmp/ccakdnb8.s 			page 3


 108              		.cfi_def_cfa_register 7
 109 0006 7860     		str	r0, [r7, #4]
  13:Src/encoder.c ****   const int cnt = encoder->htim->Instance->CNT;
 110              		.loc 1 13 0
 111 0008 7B68     		ldr	r3, [r7, #4]
 112 000a 9B68     		ldr	r3, [r3, #8]
 113 000c 1B68     		ldr	r3, [r3]
 114 000e 5B6A     		ldr	r3, [r3, #36]
 115 0010 BB60     		str	r3, [r7, #8]
  14:Src/encoder.c **** 
  15:Src/encoder.c ****   int dl = cnt - encoder->last_pos;
 116              		.loc 1 15 0
 117 0012 7B68     		ldr	r3, [r7, #4]
 118 0014 1B68     		ldr	r3, [r3]
 119 0016 BA68     		ldr	r2, [r7, #8]
 120 0018 D31A     		subs	r3, r2, r3
 121 001a FB60     		str	r3, [r7, #12]
  16:Src/encoder.c ****   encoder->last_pos = cnt;
 122              		.loc 1 16 0
 123 001c 7B68     		ldr	r3, [r7, #4]
 124 001e BA68     		ldr	r2, [r7, #8]
 125 0020 1A60     		str	r2, [r3]
  17:Src/encoder.c ****   if(dl > 1){
 126              		.loc 1 17 0
 127 0022 FB68     		ldr	r3, [r7, #12]
 128 0024 012B     		cmp	r3, #1
 129 0026 03DD     		ble	.L3
  18:Src/encoder.c ****     dl = -1;
 130              		.loc 1 18 0
 131 0028 4FF0FF33 		mov	r3, #-1
 132 002c FB60     		str	r3, [r7, #12]
 133 002e 05E0     		b	.L4
 134              	.L3:
  19:Src/encoder.c ****   }else if(dl < -1){
 135              		.loc 1 19 0
 136 0030 FB68     		ldr	r3, [r7, #12]
 137 0032 B3F1FF3F 		cmp	r3, #-1
 138 0036 01DA     		bge	.L4
  20:Src/encoder.c ****     dl = +1;
 139              		.loc 1 20 0
 140 0038 0123     		movs	r3, #1
 141 003a FB60     		str	r3, [r7, #12]
 142              	.L4:
  21:Src/encoder.c ****   }
  22:Src/encoder.c ****   
  23:Src/encoder.c ****   encoder->steps += dl;
 143              		.loc 1 23 0
 144 003c 7B68     		ldr	r3, [r7, #4]
 145 003e 5A68     		ldr	r2, [r3, #4]
 146 0040 FB68     		ldr	r3, [r7, #12]
 147 0042 1A44     		add	r2, r2, r3
 148 0044 7B68     		ldr	r3, [r7, #4]
 149 0046 5A60     		str	r2, [r3, #4]
  24:Src/encoder.c **** 
  25:Src/encoder.c ****   return dl;
 150              		.loc 1 25 0
 151 0048 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccakdnb8.s 			page 4


  26:Src/encoder.c **** }
 152              		.loc 1 26 0
 153 004a 1846     		mov	r0, r3
 154 004c 1437     		adds	r7, r7, #20
 155              	.LCFI9:
 156              		.cfi_def_cfa_offset 4
 157 004e BD46     		mov	sp, r7
 158              	.LCFI10:
 159              		.cfi_def_cfa_register 13
 160              		@ sp needed
 161 0050 5DF8047B 		ldr	r7, [sp], #4
 162              	.LCFI11:
 163              		.cfi_restore 7
 164              		.cfi_def_cfa_offset 0
 165 0054 7047     		bx	lr
 166              		.cfi_endproc
 167              	.LFE696:
 169              		.section	.text.start_encoder,"ax",%progbits
 170              		.align	1
 171              		.global	start_encoder
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 175              		.fpu fpv4-sp-d16
 177              	start_encoder:
 178              	.LFB697:
  27:Src/encoder.c **** 
  28:Src/encoder.c **** void start_encoder(Encoder *encoder){
 179              		.loc 1 28 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 8
 182              		@ frame_needed = 1, uses_anonymous_args = 0
 183 0000 80B5     		push	{r7, lr}
 184              	.LCFI12:
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 7, -8
 187              		.cfi_offset 14, -4
 188 0002 82B0     		sub	sp, sp, #8
 189              	.LCFI13:
 190              		.cfi_def_cfa_offset 16
 191 0004 00AF     		add	r7, sp, #0
 192              	.LCFI14:
 193              		.cfi_def_cfa_register 7
 194 0006 7860     		str	r0, [r7, #4]
  29:Src/encoder.c ****   HAL_TIM_Encoder_Start(encoder->htim, TIM_CHANNEL_ALL);
 195              		.loc 1 29 0
 196 0008 7B68     		ldr	r3, [r7, #4]
 197 000a 9B68     		ldr	r3, [r3, #8]
 198 000c 3C21     		movs	r1, #60
 199 000e 1846     		mov	r0, r3
 200 0010 FFF7FEFF 		bl	HAL_TIM_Encoder_Start
  30:Src/encoder.c **** }
 201              		.loc 1 30 0
 202 0014 00BF     		nop
 203 0016 0837     		adds	r7, r7, #8
 204              	.LCFI15:
 205              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccakdnb8.s 			page 5


 206 0018 BD46     		mov	sp, r7
 207              	.LCFI16:
 208              		.cfi_def_cfa_register 13
 209              		@ sp needed
 210 001a 80BD     		pop	{r7, pc}
 211              		.cfi_endproc
 212              	.LFE697:
 214              		.text
 215              	.Letext0:
 216              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 217              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 218              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 219              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 220              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 221              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 222              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 223              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.3.0/include/stddef.h"
 224              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 225              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 226              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 227              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 228              		.file 14 "Inc/encoder.h"
 229              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_ll_dma.h"
ARM GAS  /tmp/ccakdnb8.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 encoder.c
     /tmp/ccakdnb8.s:18     .rodata.CHANNEL_OFFSET_TAB:0000000000000000 $d
     /tmp/ccakdnb8.s:21     .rodata.CHANNEL_OFFSET_TAB:0000000000000000 CHANNEL_OFFSET_TAB
     /tmp/ccakdnb8.s:30     .text.init_encoder:0000000000000000 $t
     /tmp/ccakdnb8.s:37     .text.init_encoder:0000000000000000 init_encoder
     /tmp/ccakdnb8.s:85     .text.update_encoder:0000000000000000 $t
     /tmp/ccakdnb8.s:92     .text.update_encoder:0000000000000000 update_encoder
     /tmp/ccakdnb8.s:170    .text.start_encoder:0000000000000000 $t
     /tmp/ccakdnb8.s:177    .text.start_encoder:0000000000000000 start_encoder

UNDEFINED SYMBOLS
HAL_TIM_Encoder_Start
