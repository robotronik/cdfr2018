ARM GAS  /tmp/ccxb5YoW.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"interpol.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.CHANNEL_OFFSET_TAB,"a",%progbits
  18              		.align	2
  21              	CHANNEL_OFFSET_TAB:
  22 0000 08       		.byte	8
  23 0001 1C       		.byte	28
  24 0002 30       		.byte	48
  25 0003 44       		.byte	68
  26 0004 58       		.byte	88
  27 0005 6C       		.byte	108
  28 0006 80       		.byte	-128
  29              		.global	__aeabi_f2d
  30              		.global	__aeabi_i2d
  31              		.global	__aeabi_d2f
  32              		.section	.text.interpol_calc,"ax",%progbits
  33              		.align	1
  34              		.global	interpol_calc
  35              		.syntax unified
  36              		.thumb
  37              		.thumb_func
  38              		.fpu fpv4-sp-d16
  40              	interpol_calc:
  41              	.LFB728:
  42              		.file 1 "Src/interpol.c"
   1:Src/interpol.c **** #include "interpol.h"
   2:Src/interpol.c **** 
   3:Src/interpol.c **** extern volatile int ENCODER_DIST;//distance between encoders
   4:Src/interpol.c **** extern volatile int ENCODER_STEP_DIST;//distance for 1 encoder step/2
   5:Src/interpol.c **** extern volatile int deltaL;
   6:Src/interpol.c **** 
   7:Src/interpol.c **** extern Odometry odometry;
   8:Src/interpol.c **** 
   9:Src/interpol.c **** void interpol_calc(Interpol *data)
  10:Src/interpol.c **** {
  43              		.loc 1 10 0
  44              		.cfi_startproc
  45              		@ args = 0, pretend = 0, frame = 40
  46              		@ frame_needed = 1, uses_anonymous_args = 0
  47 0000 B0B5     		push	{r4, r5, r7, lr}
  48              	.LCFI0:
  49              		.cfi_def_cfa_offset 16
  50              		.cfi_offset 4, -16
ARM GAS  /tmp/ccxb5YoW.s 			page 2


  51              		.cfi_offset 5, -12
  52              		.cfi_offset 7, -8
  53              		.cfi_offset 14, -4
  54 0002 8AB0     		sub	sp, sp, #40
  55              	.LCFI1:
  56              		.cfi_def_cfa_offset 56
  57 0004 00AF     		add	r7, sp, #0
  58              	.LCFI2:
  59              		.cfi_def_cfa_register 7
  60 0006 7860     		str	r0, [r7, #4]
  11:Src/interpol.c ****   int i=0,j,n=data->n,n1=n-1;
  61              		.loc 1 11 0
  62 0008 0023     		movs	r3, #0
  63 000a 7B62     		str	r3, [r7, #36]
  64 000c 7B68     		ldr	r3, [r7, #4]
  65 000e D3F82033 		ldr	r3, [r3, #800]
  66 0012 BB61     		str	r3, [r7, #24]
  67 0014 BB69     		ldr	r3, [r7, #24]
  68 0016 013B     		subs	r3, r3, #1
  69 0018 7B61     		str	r3, [r7, #20]
  12:Src/interpol.c ****   float tfact,t,tpow;
  13:Src/interpol.c **** 
  14:Src/interpol.c ****   for(i=0;i<RESULT_LENGTH-1;i++)
  70              		.loc 1 14 0
  71 001a 0023     		movs	r3, #0
  72 001c 7B62     		str	r3, [r7, #36]
  73 001e ABE0     		b	.L2
  74              	.L5:
  15:Src/interpol.c ****   {
  16:Src/interpol.c ****     t=(float)i/(RESULT_LENGTH-1);
  75              		.loc 1 16 0
  76 0020 7B6A     		ldr	r3, [r7, #36]
  77 0022 07EE903A 		vmov	s15, r3	@ int
  78 0026 B8EEE77A 		vcvt.f32.s32	s14, s15
  79 002a DFED626A 		vldr.32	s13, .L6
  80 002e C7EE267A 		vdiv.f32	s15, s14, s13
  81 0032 C7ED047A 		vstr.32	s15, [r7, #16]
  17:Src/interpol.c ****     tfact=t/(1-t);
  82              		.loc 1 17 0
  83 0036 B7EE007A 		vmov.f32	s14, #1.0e+0
  84 003a D7ED047A 		vldr.32	s15, [r7, #16]
  85 003e 37EE677A 		vsub.f32	s14, s14, s15
  86 0042 D7ED046A 		vldr.32	s13, [r7, #16]
  87 0046 C6EE877A 		vdiv.f32	s15, s13, s14
  88 004a C7ED037A 		vstr.32	s15, [r7, #12]
  18:Src/interpol.c ****     data->r_x[i]=0;
  89              		.loc 1 18 0
  90 004e 7A68     		ldr	r2, [r7, #4]
  91 0050 7B6A     		ldr	r3, [r7, #36]
  92 0052 C833     		adds	r3, r3, #200
  93 0054 9B00     		lsls	r3, r3, #2
  94 0056 1344     		add	r3, r3, r2
  95 0058 0433     		adds	r3, r3, #4
  96 005a 4FF00002 		mov	r2, #0
  97 005e 1A60     		str	r2, [r3]	@ float
  19:Src/interpol.c ****     data->r_y[i]=0;
  98              		.loc 1 19 0
ARM GAS  /tmp/ccxb5YoW.s 			page 3


  99 0060 7A68     		ldr	r2, [r7, #4]
 100 0062 7B6A     		ldr	r3, [r7, #36]
 101 0064 03F5E173 		add	r3, r3, #450
 102 0068 9B00     		lsls	r3, r3, #2
 103 006a 1344     		add	r3, r3, r2
 104 006c 0433     		adds	r3, r3, #4
 105 006e 4FF00002 		mov	r2, #0
 106 0072 1A60     		str	r2, [r3]	@ float
  20:Src/interpol.c ****     tpow=pow(1-t,n-1);
 107              		.loc 1 20 0
 108 0074 B7EE007A 		vmov.f32	s14, #1.0e+0
 109 0078 D7ED047A 		vldr.32	s15, [r7, #16]
 110 007c 77EE677A 		vsub.f32	s15, s14, s15
 111 0080 17EE900A 		vmov	r0, s15
 112 0084 FFF7FEFF 		bl	__aeabi_f2d
 113              	.LVL0:
 114 0088 0446     		mov	r4, r0
 115 008a 0D46     		mov	r5, r1
 116 008c BB69     		ldr	r3, [r7, #24]
 117 008e 013B     		subs	r3, r3, #1
 118 0090 1846     		mov	r0, r3
 119 0092 FFF7FEFF 		bl	__aeabi_i2d
 120              	.LVL1:
 121 0096 0246     		mov	r2, r0
 122 0098 0B46     		mov	r3, r1
 123 009a 43EC112B 		vmov	d1, r2, r3
 124 009e 45EC104B 		vmov	d0, r4, r5
 125 00a2 FFF7FEFF 		bl	pow
 126 00a6 54EC103B 		vmov	r3, r4, d0
 127 00aa 1846     		mov	r0, r3
 128 00ac 2146     		mov	r1, r4
 129 00ae FFF7FEFF 		bl	__aeabi_d2f
 130              	.LVL2:
 131 00b2 0346     		mov	r3, r0	@ float
 132 00b4 FB61     		str	r3, [r7, #28]	@ float
  21:Src/interpol.c ****     for(j=0;j<n;j++)
 133              		.loc 1 21 0
 134 00b6 0023     		movs	r3, #0
 135 00b8 3B62     		str	r3, [r7, #32]
 136 00ba 56E0     		b	.L3
 137              	.L4:
  22:Src/interpol.c ****     {
  23:Src/interpol.c ****       data->r_x[i]+=tpow*data->x[j];
 138              		.loc 1 23 0 discriminator 3
 139 00bc 7A68     		ldr	r2, [r7, #4]
 140 00be 7B6A     		ldr	r3, [r7, #36]
 141 00c0 C833     		adds	r3, r3, #200
 142 00c2 9B00     		lsls	r3, r3, #2
 143 00c4 1344     		add	r3, r3, r2
 144 00c6 0433     		adds	r3, r3, #4
 145 00c8 93ED007A 		vldr.32	s14, [r3]
 146 00cc 7A68     		ldr	r2, [r7, #4]
 147 00ce 3B6A     		ldr	r3, [r7, #32]
 148 00d0 9B00     		lsls	r3, r3, #2
 149 00d2 1344     		add	r3, r3, r2
 150 00d4 D3ED006A 		vldr.32	s13, [r3]
 151 00d8 D7ED077A 		vldr.32	s15, [r7, #28]
ARM GAS  /tmp/ccxb5YoW.s 			page 4


 152 00dc 66EEA77A 		vmul.f32	s15, s13, s15
 153 00e0 77EE277A 		vadd.f32	s15, s14, s15
 154 00e4 7A68     		ldr	r2, [r7, #4]
 155 00e6 7B6A     		ldr	r3, [r7, #36]
 156 00e8 C833     		adds	r3, r3, #200
 157 00ea 9B00     		lsls	r3, r3, #2
 158 00ec 1344     		add	r3, r3, r2
 159 00ee 0433     		adds	r3, r3, #4
 160 00f0 C3ED007A 		vstr.32	s15, [r3]
  24:Src/interpol.c ****       data->r_y[i]+=tpow*data->y[j];
 161              		.loc 1 24 0 discriminator 3
 162 00f4 7A68     		ldr	r2, [r7, #4]
 163 00f6 7B6A     		ldr	r3, [r7, #36]
 164 00f8 03F5E173 		add	r3, r3, #450
 165 00fc 9B00     		lsls	r3, r3, #2
 166 00fe 1344     		add	r3, r3, r2
 167 0100 0433     		adds	r3, r3, #4
 168 0102 93ED007A 		vldr.32	s14, [r3]
 169 0106 7A68     		ldr	r2, [r7, #4]
 170 0108 3B6A     		ldr	r3, [r7, #32]
 171 010a 6433     		adds	r3, r3, #100
 172 010c 9B00     		lsls	r3, r3, #2
 173 010e 1344     		add	r3, r3, r2
 174 0110 D3ED006A 		vldr.32	s13, [r3]
 175 0114 D7ED077A 		vldr.32	s15, [r7, #28]
 176 0118 66EEA77A 		vmul.f32	s15, s13, s15
 177 011c 77EE277A 		vadd.f32	s15, s14, s15
 178 0120 7A68     		ldr	r2, [r7, #4]
 179 0122 7B6A     		ldr	r3, [r7, #36]
 180 0124 03F5E173 		add	r3, r3, #450
 181 0128 9B00     		lsls	r3, r3, #2
 182 012a 1344     		add	r3, r3, r2
 183 012c 0433     		adds	r3, r3, #4
 184 012e C3ED007A 		vstr.32	s15, [r3]
  25:Src/interpol.c ****       tpow*=tfact*(n1-j)/(j+1);
 185              		.loc 1 25 0 discriminator 3
 186 0132 7A69     		ldr	r2, [r7, #20]
 187 0134 3B6A     		ldr	r3, [r7, #32]
 188 0136 D31A     		subs	r3, r2, r3
 189 0138 07EE903A 		vmov	s15, r3	@ int
 190 013c B8EEE77A 		vcvt.f32.s32	s14, s15
 191 0140 D7ED037A 		vldr.32	s15, [r7, #12]
 192 0144 67EE276A 		vmul.f32	s13, s14, s15
 193 0148 3B6A     		ldr	r3, [r7, #32]
 194 014a 0133     		adds	r3, r3, #1
 195 014c 07EE903A 		vmov	s15, r3	@ int
 196 0150 B8EEE77A 		vcvt.f32.s32	s14, s15
 197 0154 C6EE877A 		vdiv.f32	s15, s13, s14
 198 0158 97ED077A 		vldr.32	s14, [r7, #28]
 199 015c 67EE277A 		vmul.f32	s15, s14, s15
 200 0160 C7ED077A 		vstr.32	s15, [r7, #28]
  21:Src/interpol.c ****     {
 201              		.loc 1 21 0 discriminator 3
 202 0164 3B6A     		ldr	r3, [r7, #32]
 203 0166 0133     		adds	r3, r3, #1
 204 0168 3B62     		str	r3, [r7, #32]
 205              	.L3:
ARM GAS  /tmp/ccxb5YoW.s 			page 5


  21:Src/interpol.c ****     {
 206              		.loc 1 21 0 is_stmt 0 discriminator 1
 207 016a 3A6A     		ldr	r2, [r7, #32]
 208 016c BB69     		ldr	r3, [r7, #24]
 209 016e 9A42     		cmp	r2, r3
 210 0170 A4DB     		blt	.L4
  14:Src/interpol.c ****   {
 211              		.loc 1 14 0 is_stmt 1 discriminator 2
 212 0172 7B6A     		ldr	r3, [r7, #36]
 213 0174 0133     		adds	r3, r3, #1
 214 0176 7B62     		str	r3, [r7, #36]
 215              	.L2:
  14:Src/interpol.c ****   {
 216              		.loc 1 14 0 is_stmt 0 discriminator 1
 217 0178 7B6A     		ldr	r3, [r7, #36]
 218 017a F82B     		cmp	r3, #248
 219 017c 7FF750AF 		ble	.L5
  26:Src/interpol.c ****     }
  27:Src/interpol.c ****   }
  28:Src/interpol.c ****   data->r_x[RESULT_LENGTH-1]=data->x[n-1];
 220              		.loc 1 28 0 is_stmt 1
 221 0180 BB69     		ldr	r3, [r7, #24]
 222 0182 013B     		subs	r3, r3, #1
 223 0184 7A68     		ldr	r2, [r7, #4]
 224 0186 9B00     		lsls	r3, r3, #2
 225 0188 1344     		add	r3, r3, r2
 226 018a 1A68     		ldr	r2, [r3]	@ float
 227 018c 7B68     		ldr	r3, [r7, #4]
 228 018e 03F5E163 		add	r3, r3, #1800
 229 0192 1A60     		str	r2, [r3]	@ float
  29:Src/interpol.c ****   data->r_y[RESULT_LENGTH-1]=data->y[n-1];//to avoid a division by 0
 230              		.loc 1 29 0
 231 0194 BB69     		ldr	r3, [r7, #24]
 232 0196 013B     		subs	r3, r3, #1
 233 0198 7A68     		ldr	r2, [r7, #4]
 234 019a 6433     		adds	r3, r3, #100
 235 019c 9B00     		lsls	r3, r3, #2
 236 019e 1344     		add	r3, r3, r2
 237 01a0 1A68     		ldr	r2, [r3]	@ float
 238 01a2 7B68     		ldr	r3, [r7, #4]
 239 01a4 03F52F63 		add	r3, r3, #2800
 240 01a8 1A60     		str	r2, [r3]	@ float
  30:Src/interpol.c **** }
 241              		.loc 1 30 0
 242 01aa 00BF     		nop
 243 01ac 2837     		adds	r7, r7, #40
 244              	.LCFI3:
 245              		.cfi_def_cfa_offset 16
 246 01ae BD46     		mov	sp, r7
 247              	.LCFI4:
 248              		.cfi_def_cfa_register 13
 249              		@ sp needed
 250 01b0 B0BD     		pop	{r4, r5, r7, pc}
 251              	.L7:
 252 01b2 00BF     		.align	2
 253              	.L6:
 254 01b4 00007943 		.word	1132003328
ARM GAS  /tmp/ccxb5YoW.s 			page 6


 255              		.cfi_endproc
 256              	.LFE728:
 258              		.section	.text.d2,"ax",%progbits
 259              		.align	1
 260              		.global	d2
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 264              		.fpu fpv4-sp-d16
 266              	d2:
 267              	.LFB729:
  31:Src/interpol.c **** 
  32:Src/interpol.c **** float d2(float x1,float y1,float x2, float y2)
  33:Src/interpol.c **** {
 268              		.loc 1 33 0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 24
 271              		@ frame_needed = 1, uses_anonymous_args = 0
 272              		@ link register save eliminated.
 273 0000 80B4     		push	{r7}
 274              	.LCFI5:
 275              		.cfi_def_cfa_offset 4
 276              		.cfi_offset 7, -4
 277 0002 87B0     		sub	sp, sp, #28
 278              	.LCFI6:
 279              		.cfi_def_cfa_offset 32
 280 0004 00AF     		add	r7, sp, #0
 281              	.LCFI7:
 282              		.cfi_def_cfa_register 7
 283 0006 87ED030A 		vstr.32	s0, [r7, #12]
 284 000a C7ED020A 		vstr.32	s1, [r7, #8]
 285 000e 87ED011A 		vstr.32	s2, [r7, #4]
 286 0012 C7ED001A 		vstr.32	s3, [r7]
  34:Src/interpol.c ****   float dx=x1-x2,dy=y1-y2;
 287              		.loc 1 34 0
 288 0016 97ED037A 		vldr.32	s14, [r7, #12]
 289 001a D7ED017A 		vldr.32	s15, [r7, #4]
 290 001e 77EE677A 		vsub.f32	s15, s14, s15
 291 0022 C7ED057A 		vstr.32	s15, [r7, #20]
 292 0026 97ED027A 		vldr.32	s14, [r7, #8]
 293 002a D7ED007A 		vldr.32	s15, [r7]
 294 002e 77EE677A 		vsub.f32	s15, s14, s15
 295 0032 C7ED047A 		vstr.32	s15, [r7, #16]
  35:Src/interpol.c ****   return dx*dx+dy*dy;
 296              		.loc 1 35 0
 297 0036 97ED057A 		vldr.32	s14, [r7, #20]
 298 003a D7ED057A 		vldr.32	s15, [r7, #20]
 299 003e 27EE277A 		vmul.f32	s14, s14, s15
 300 0042 D7ED046A 		vldr.32	s13, [r7, #16]
 301 0046 D7ED047A 		vldr.32	s15, [r7, #16]
 302 004a 66EEA77A 		vmul.f32	s15, s13, s15
 303 004e 77EE277A 		vadd.f32	s15, s14, s15
  36:Src/interpol.c **** }
 304              		.loc 1 36 0
 305 0052 B0EE670A 		vmov.f32	s0, s15
 306 0056 1C37     		adds	r7, r7, #28
 307              	.LCFI8:
ARM GAS  /tmp/ccxb5YoW.s 			page 7


 308              		.cfi_def_cfa_offset 4
 309 0058 BD46     		mov	sp, r7
 310              	.LCFI9:
 311              		.cfi_def_cfa_register 13
 312              		@ sp needed
 313 005a 5DF8047B 		ldr	r7, [sp], #4
 314              	.LCFI10:
 315              		.cfi_restore 7
 316              		.cfi_def_cfa_offset 0
 317 005e 7047     		bx	lr
 318              		.cfi_endproc
 319              	.LFE729:
 321              		.global	__aeabi_dcmplt
 322              		.global	__aeabi_ddiv
 323              		.global	__aeabi_dmul
 324              		.global	__aeabi_dadd
 325              		.global	__aeabi_dsub
 326              		.section	.text.Kc,"ax",%progbits
 327              		.align	1
 328              		.global	Kc
 329              		.syntax unified
 330              		.thumb
 331              		.thumb_func
 332              		.fpu fpv4-sp-d16
 334              	Kc:
 335              	.LFB730:
  37:Src/interpol.c **** 
  38:Src/interpol.c **** float Kc(Interpol *data,float z,float w,float *speed_percent)
  39:Src/interpol.c **** {
 336              		.loc 1 39 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 88
 339              		@ frame_needed = 1, uses_anonymous_args = 0
 340 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 341              	.LCFI11:
 342              		.cfi_def_cfa_offset 24
 343              		.cfi_offset 4, -24
 344              		.cfi_offset 5, -20
 345              		.cfi_offset 7, -16
 346              		.cfi_offset 8, -12
 347              		.cfi_offset 9, -8
 348              		.cfi_offset 14, -4
 349 0004 96B0     		sub	sp, sp, #88
 350              	.LCFI12:
 351              		.cfi_def_cfa_offset 112
 352 0006 00AF     		add	r7, sp, #0
 353              	.LCFI13:
 354              		.cfi_def_cfa_register 7
 355 0008 F860     		str	r0, [r7, #12]
 356 000a 87ED020A 		vstr.32	s0, [r7, #8]
 357 000e C7ED010A 		vstr.32	s1, [r7, #4]
 358 0012 3960     		str	r1, [r7]
  40:Src/interpol.c ****   float robot_x=odometry.x,robot_y=odometry.y,robot_theta=odometry.theta;
 359              		.loc 1 40 0
 360 0014 984B     		ldr	r3, .L44+32
 361 0016 9B69     		ldr	r3, [r3, #24]	@ float
 362 0018 FB63     		str	r3, [r7, #60]	@ float
ARM GAS  /tmp/ccxb5YoW.s 			page 8


 363 001a 974B     		ldr	r3, .L44+32
 364 001c DB69     		ldr	r3, [r3, #28]	@ float
 365 001e BB63     		str	r3, [r7, #56]	@ float
 366 0020 954B     		ldr	r3, .L44+32
 367 0022 1B6A     		ldr	r3, [r3, #32]	@ float
 368 0024 7B65     		str	r3, [r7, #84]	@ float
  41:Src/interpol.c **** 
  42:Src/interpol.c ****   float dmin=d2(robot_x,robot_y,data->r_x[0],data->r_y[0]),d,dx,dy,dx2,dy2,theta_des,flexion,theta_
 369              		.loc 1 42 0
 370 0026 FB68     		ldr	r3, [r7, #12]
 371 0028 D3EDC97A 		vldr.32	s15, [r3, #804]
 372 002c FB68     		ldr	r3, [r7, #12]
 373 002e 03F20C73 		addw	r3, r3, #1804
 374 0032 93ED007A 		vldr.32	s14, [r3]
 375 0036 F0EE471A 		vmov.f32	s3, s14
 376 003a B0EE671A 		vmov.f32	s2, s15
 377 003e D7ED0E0A 		vldr.32	s1, [r7, #56]
 378 0042 97ED0F0A 		vldr.32	s0, [r7, #60]
 379 0046 FFF7FEFF 		bl	d2
 380 004a 87ED140A 		vstr.32	s0, [r7, #80]
 381 004e 97ED017A 		vldr.32	s14, [r7, #4]
 382 0052 D7ED017A 		vldr.32	s15, [r7, #4]
 383 0056 67EE277A 		vmul.f32	s15, s14, s15
 384 005a C7ED0D7A 		vstr.32	s15, [r7, #52]
 385 005e D7ED027A 		vldr.32	s15, [r7, #8]
 386 0062 77EEA77A 		vadd.f32	s15, s15, s15
 387 0066 97ED017A 		vldr.32	s14, [r7, #4]
 388 006a 67EE277A 		vmul.f32	s15, s14, s15
 389 006e C7ED0C7A 		vstr.32	s15, [r7, #48]
  43:Src/interpol.c ****   int i,imin=0;
 390              		.loc 1 43 0
 391 0072 0023     		movs	r3, #0
 392 0074 3B64     		str	r3, [r7, #64]
  44:Src/interpol.c **** 
  45:Src/interpol.c ****   for(i=1;i<RESULT_LENGTH;i++)//minimal distance calculation
 393              		.loc 1 45 0
 394 0076 0123     		movs	r3, #1
 395 0078 7B64     		str	r3, [r7, #68]
 396 007a 3CE0     		b	.L11
 397              	.L14:
  46:Src/interpol.c ****   {
  47:Src/interpol.c ****     dx=robot_x-data->r_x[i];
 398              		.loc 1 47 0
 399 007c FA68     		ldr	r2, [r7, #12]
 400 007e 7B6C     		ldr	r3, [r7, #68]
 401 0080 C833     		adds	r3, r3, #200
 402 0082 9B00     		lsls	r3, r3, #2
 403 0084 1344     		add	r3, r3, r2
 404 0086 0433     		adds	r3, r3, #4
 405 0088 D3ED007A 		vldr.32	s15, [r3]
 406 008c 97ED0F7A 		vldr.32	s14, [r7, #60]
 407 0090 77EE677A 		vsub.f32	s15, s14, s15
 408 0094 C7ED0A7A 		vstr.32	s15, [r7, #40]
  48:Src/interpol.c ****     dy=robot_y-data->r_y[i];
 409              		.loc 1 48 0
 410 0098 FA68     		ldr	r2, [r7, #12]
 411 009a 7B6C     		ldr	r3, [r7, #68]
ARM GAS  /tmp/ccxb5YoW.s 			page 9


 412 009c 03F5E173 		add	r3, r3, #450
 413 00a0 9B00     		lsls	r3, r3, #2
 414 00a2 1344     		add	r3, r3, r2
 415 00a4 0433     		adds	r3, r3, #4
 416 00a6 D3ED007A 		vldr.32	s15, [r3]
 417 00aa 97ED0E7A 		vldr.32	s14, [r7, #56]
 418 00ae 77EE677A 		vsub.f32	s15, s14, s15
 419 00b2 C7ED097A 		vstr.32	s15, [r7, #36]
  49:Src/interpol.c ****     d=dx*dx+dy*dy;
 420              		.loc 1 49 0
 421 00b6 97ED0A7A 		vldr.32	s14, [r7, #40]
 422 00ba D7ED0A7A 		vldr.32	s15, [r7, #40]
 423 00be 27EE277A 		vmul.f32	s14, s14, s15
 424 00c2 D7ED096A 		vldr.32	s13, [r7, #36]
 425 00c6 D7ED097A 		vldr.32	s15, [r7, #36]
 426 00ca 66EEA77A 		vmul.f32	s15, s13, s15
 427 00ce 77EE277A 		vadd.f32	s15, s14, s15
 428 00d2 C7ED057A 		vstr.32	s15, [r7, #20]
  50:Src/interpol.c ****     if(d<dmin)
 429              		.loc 1 50 0
 430 00d6 97ED057A 		vldr.32	s14, [r7, #20]
 431 00da D7ED147A 		vldr.32	s15, [r7, #80]
 432 00de B4EEE77A 		vcmpe.f32	s14, s15
 433 00e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 434 00e6 03D5     		bpl	.L12
  51:Src/interpol.c ****     {
  52:Src/interpol.c ****       dmin=d;
 435              		.loc 1 52 0
 436 00e8 7B69     		ldr	r3, [r7, #20]	@ float
 437 00ea 3B65     		str	r3, [r7, #80]	@ float
  53:Src/interpol.c ****       imin=i;
 438              		.loc 1 53 0
 439 00ec 7B6C     		ldr	r3, [r7, #68]
 440 00ee 3B64     		str	r3, [r7, #64]
 441              	.L12:
  45:Src/interpol.c ****   {
 442              		.loc 1 45 0 discriminator 2
 443 00f0 7B6C     		ldr	r3, [r7, #68]
 444 00f2 0133     		adds	r3, r3, #1
 445 00f4 7B64     		str	r3, [r7, #68]
 446              	.L11:
  45:Src/interpol.c ****   {
 447              		.loc 1 45 0 is_stmt 0 discriminator 1
 448 00f6 7B6C     		ldr	r3, [r7, #68]
 449 00f8 F92B     		cmp	r3, #249
 450 00fa BFDD     		ble	.L14
  54:Src/interpol.c ****     }
  55:Src/interpol.c ****   }
  56:Src/interpol.c **** 
  57:Src/interpol.c ****   completion=(float)imin/(RESULT_LENGTH-1);//speed generator
 451              		.loc 1 57 0 is_stmt 1
 452 00fc 3B6C     		ldr	r3, [r7, #64]
 453 00fe 07EE903A 		vmov	s15, r3	@ int
 454 0102 B8EEE77A 		vcvt.f32.s32	s14, s15
 455 0106 DFED5D6A 		vldr.32	s13, .L44+36
 456 010a C7EE267A 		vdiv.f32	s15, s14, s13
 457 010e C7ED0B7A 		vstr.32	s15, [r7, #44]
ARM GAS  /tmp/ccxb5YoW.s 			page 10


  58:Src/interpol.c ****   if(completion<0.333333) *speed_percent=0.05+(completion/0.333333)*(1-0.05);
 458              		.loc 1 58 0
 459 0112 F86A     		ldr	r0, [r7, #44]	@ float
 460 0114 FFF7FEFF 		bl	__aeabi_f2d
 461              	.LVL3:
 462 0118 4FA3     		adr	r3, .L44
 463 011a D3E90023 		ldrd	r2, [r3]
 464 011e FFF7FEFF 		bl	__aeabi_dcmplt
 465              	.LVL4:
 466 0122 0346     		mov	r3, r0
 467 0124 002B     		cmp	r3, #0
 468 0126 23D0     		beq	.L40
 469              		.loc 1 58 0 is_stmt 0 discriminator 1
 470 0128 F86A     		ldr	r0, [r7, #44]	@ float
 471 012a FFF7FEFF 		bl	__aeabi_f2d
 472              	.LVL5:
 473 012e 4AA3     		adr	r3, .L44
 474 0130 D3E90023 		ldrd	r2, [r3]
 475 0134 FFF7FEFF 		bl	__aeabi_ddiv
 476              	.LVL6:
 477 0138 0346     		mov	r3, r0
 478 013a 0C46     		mov	r4, r1
 479 013c 1846     		mov	r0, r3
 480 013e 2146     		mov	r1, r4
 481 0140 47A3     		adr	r3, .L44+8
 482 0142 D3E90023 		ldrd	r2, [r3]
 483 0146 FFF7FEFF 		bl	__aeabi_dmul
 484              	.LVL7:
 485 014a 0346     		mov	r3, r0
 486 014c 0C46     		mov	r4, r1
 487 014e 1846     		mov	r0, r3
 488 0150 2146     		mov	r1, r4
 489 0152 45A3     		adr	r3, .L44+16
 490 0154 D3E90023 		ldrd	r2, [r3]
 491 0158 FFF7FEFF 		bl	__aeabi_dadd
 492              	.LVL8:
 493 015c 0346     		mov	r3, r0
 494 015e 0C46     		mov	r4, r1
 495 0160 1846     		mov	r0, r3
 496 0162 2146     		mov	r1, r4
 497 0164 FFF7FEFF 		bl	__aeabi_d2f
 498              	.LVL9:
 499 0168 0246     		mov	r2, r0	@ float
 500 016a 3B68     		ldr	r3, [r7]
 501 016c 1A60     		str	r2, [r3]	@ float
 502 016e 27E0     		b	.L17
 503              	.L40:
  59:Src/interpol.c ****   else if(completion<0.666667) *speed_percent=1;
 504              		.loc 1 59 0 is_stmt 1
 505 0170 F86A     		ldr	r0, [r7, #44]	@ float
 506 0172 FFF7FEFF 		bl	__aeabi_f2d
 507              	.LVL10:
 508 0176 3EA3     		adr	r3, .L44+24
 509 0178 D3E90023 		ldrd	r2, [r3]
 510 017c FFF7FEFF 		bl	__aeabi_dcmplt
 511              	.LVL11:
 512 0180 0346     		mov	r3, r0
ARM GAS  /tmp/ccxb5YoW.s 			page 11


 513 0182 002B     		cmp	r3, #0
 514 0184 04D0     		beq	.L41
 515              		.loc 1 59 0 is_stmt 0 discriminator 1
 516 0186 3B68     		ldr	r3, [r7]
 517 0188 4FF07E52 		mov	r2, #1065353216
 518 018c 1A60     		str	r2, [r3]	@ float
 519 018e 17E0     		b	.L17
 520              	.L41:
  60:Src/interpol.c ****   else *speed_percent=(1-completion)/(1-0.666667);
 521              		.loc 1 60 0 is_stmt 1
 522 0190 B7EE007A 		vmov.f32	s14, #1.0e+0
 523 0194 D7ED0B7A 		vldr.32	s15, [r7, #44]
 524 0198 77EE677A 		vsub.f32	s15, s14, s15
 525 019c 17EE900A 		vmov	r0, s15
 526 01a0 FFF7FEFF 		bl	__aeabi_f2d
 527              	.LVL12:
 528 01a4 2CA3     		adr	r3, .L44
 529 01a6 D3E90023 		ldrd	r2, [r3]
 530 01aa FFF7FEFF 		bl	__aeabi_ddiv
 531              	.LVL13:
 532 01ae 0346     		mov	r3, r0
 533 01b0 0C46     		mov	r4, r1
 534 01b2 1846     		mov	r0, r3
 535 01b4 2146     		mov	r1, r4
 536 01b6 FFF7FEFF 		bl	__aeabi_d2f
 537              	.LVL14:
 538 01ba 0246     		mov	r2, r0	@ float
 539 01bc 3B68     		ldr	r3, [r7]
 540 01be 1A60     		str	r2, [r3]	@ float
 541              	.L17:
  61:Src/interpol.c **** 
  62:Src/interpol.c ****   if(imin==0) imin=1;//to avoid errors during derivation operations
 542              		.loc 1 62 0
 543 01c0 3B6C     		ldr	r3, [r7, #64]
 544 01c2 002B     		cmp	r3, #0
 545 01c4 01D1     		bne	.L20
 546              		.loc 1 62 0 is_stmt 0 discriminator 1
 547 01c6 0123     		movs	r3, #1
 548 01c8 3B64     		str	r3, [r7, #64]
 549              	.L20:
  63:Src/interpol.c ****   if(imin==RESULT_LENGTH-1) imin=RESULT_LENGTH-2;
 550              		.loc 1 63 0 is_stmt 1
 551 01ca 3B6C     		ldr	r3, [r7, #64]
 552 01cc F92B     		cmp	r3, #249
 553 01ce 01D1     		bne	.L21
 554              		.loc 1 63 0 is_stmt 0 discriminator 1
 555 01d0 F823     		movs	r3, #248
 556 01d2 3B64     		str	r3, [r7, #64]
 557              	.L21:
  64:Src/interpol.c **** 
  65:Src/interpol.c **** 
  66:Src/interpol.c ****   dx=(data->r_x[imin+1]-data->r_x[imin-1])/2;//angle of the curve
 558              		.loc 1 66 0 is_stmt 1
 559 01d4 3B6C     		ldr	r3, [r7, #64]
 560 01d6 0133     		adds	r3, r3, #1
 561 01d8 FA68     		ldr	r2, [r7, #12]
 562 01da C833     		adds	r3, r3, #200
ARM GAS  /tmp/ccxb5YoW.s 			page 12


 563 01dc 9B00     		lsls	r3, r3, #2
 564 01de 1344     		add	r3, r3, r2
 565 01e0 0433     		adds	r3, r3, #4
 566 01e2 93ED007A 		vldr.32	s14, [r3]
 567 01e6 3B6C     		ldr	r3, [r7, #64]
 568 01e8 013B     		subs	r3, r3, #1
 569 01ea FA68     		ldr	r2, [r7, #12]
 570 01ec C833     		adds	r3, r3, #200
 571 01ee 9B00     		lsls	r3, r3, #2
 572 01f0 1344     		add	r3, r3, r2
 573 01f2 0433     		adds	r3, r3, #4
 574 01f4 D3ED007A 		vldr.32	s15, [r3]
 575 01f8 37EE677A 		vsub.f32	s14, s14, s15
 576 01fc F0EE006A 		vmov.f32	s13, #2.0e+0
 577 0200 C7EE267A 		vdiv.f32	s15, s14, s13
 578 0204 C7ED0A7A 		vstr.32	s15, [r7, #40]
  67:Src/interpol.c ****   dy=(data->r_y[imin+1]-data->r_y[imin-1])/2;
 579              		.loc 1 67 0
 580 0208 3B6C     		ldr	r3, [r7, #64]
 581 020a 0133     		adds	r3, r3, #1
 582 020c FA68     		ldr	r2, [r7, #12]
 583 020e 03F5E173 		add	r3, r3, #450
 584 0212 9B00     		lsls	r3, r3, #2
 585 0214 1344     		add	r3, r3, r2
 586 0216 0433     		adds	r3, r3, #4
 587 0218 93ED007A 		vldr.32	s14, [r3]
 588 021c 3B6C     		ldr	r3, [r7, #64]
 589 021e 013B     		subs	r3, r3, #1
 590 0220 FA68     		ldr	r2, [r7, #12]
 591 0222 03F5E173 		add	r3, r3, #450
 592 0226 9B00     		lsls	r3, r3, #2
 593 0228 1344     		add	r3, r3, r2
 594 022a 0433     		adds	r3, r3, #4
 595 022c D3ED007A 		vldr.32	s15, [r3]
 596 0230 37EE677A 		vsub.f32	s14, s14, s15
 597 0234 F0EE006A 		vmov.f32	s13, #2.0e+0
 598 0238 C7EE267A 		vdiv.f32	s15, s14, s13
 599 023c C7ED097A 		vstr.32	s15, [r7, #36]
  68:Src/interpol.c ****   if(dx==0) theta_des=PI/2;
 600              		.loc 1 68 0
 601 0240 D7ED0A7A 		vldr.32	s15, [r7, #40]
 602 0244 F5EE407A 		vcmp.f32	s15, #0
 603 0248 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 604 024c 1AD1     		bne	.L22
 605              		.loc 1 68 0 is_stmt 0 discriminator 1
 606 024e 0C4B     		ldr	r3, .L44+40
 607 0250 FB64     		str	r3, [r7, #76]	@ float
 608 0252 2FE0     		b	.L23
 609              	.L45:
 610 0254 AFF30080 		.align	3
 611              	.L44:
 612 0258 465D6BEF 		.word	4016790854
 613 025c 5355D53F 		.word	1070945619
 614 0260 66666666 		.word	1717986918
 615 0264 6666EE3F 		.word	1072588390
 616 0268 9A999999 		.word	2576980378
 617 026c 9999A93F 		.word	1068079513
ARM GAS  /tmp/ccxb5YoW.s 			page 13


 618 0270 5D514A08 		.word	139088221
 619 0274 5655E53F 		.word	1071994198
 620 0278 00000000 		.word	odometry
 621 027c 00007943 		.word	1132003328
 622 0280 DB0FC93F 		.word	1070141403
 623              	.L22:
  69:Src/interpol.c ****   else theta_des=atan(dy/dx);
 624              		.loc 1 69 0 is_stmt 1
 625 0284 97ED097A 		vldr.32	s14, [r7, #36]
 626 0288 D7ED0A7A 		vldr.32	s15, [r7, #40]
 627 028c C7EE276A 		vdiv.f32	s13, s14, s15
 628 0290 16EE900A 		vmov	r0, s13
 629 0294 FFF7FEFF 		bl	__aeabi_f2d
 630              	.LVL15:
 631 0298 0346     		mov	r3, r0
 632 029a 0C46     		mov	r4, r1
 633 029c 44EC103B 		vmov	d0, r3, r4
 634 02a0 FFF7FEFF 		bl	atan
 635 02a4 54EC103B 		vmov	r3, r4, d0
 636 02a8 1846     		mov	r0, r3
 637 02aa 2146     		mov	r1, r4
 638 02ac FFF7FEFF 		bl	__aeabi_d2f
 639              	.LVL16:
 640 02b0 0346     		mov	r3, r0	@ float
 641 02b2 FB64     		str	r3, [r7, #76]	@ float
 642              	.L23:
  70:Src/interpol.c **** 
  71:Src/interpol.c ****   dx2=(data->r_x[imin+1]+data->r_x[imin-1]-2*data->r_x[imin])/4;
 643              		.loc 1 71 0
 644 02b4 3B6C     		ldr	r3, [r7, #64]
 645 02b6 0133     		adds	r3, r3, #1
 646 02b8 FA68     		ldr	r2, [r7, #12]
 647 02ba C833     		adds	r3, r3, #200
 648 02bc 9B00     		lsls	r3, r3, #2
 649 02be 1344     		add	r3, r3, r2
 650 02c0 0433     		adds	r3, r3, #4
 651 02c2 93ED007A 		vldr.32	s14, [r3]
 652 02c6 3B6C     		ldr	r3, [r7, #64]
 653 02c8 013B     		subs	r3, r3, #1
 654 02ca FA68     		ldr	r2, [r7, #12]
 655 02cc C833     		adds	r3, r3, #200
 656 02ce 9B00     		lsls	r3, r3, #2
 657 02d0 1344     		add	r3, r3, r2
 658 02d2 0433     		adds	r3, r3, #4
 659 02d4 D3ED007A 		vldr.32	s15, [r3]
 660 02d8 37EE277A 		vadd.f32	s14, s14, s15
 661 02dc FA68     		ldr	r2, [r7, #12]
 662 02de 3B6C     		ldr	r3, [r7, #64]
 663 02e0 C833     		adds	r3, r3, #200
 664 02e2 9B00     		lsls	r3, r3, #2
 665 02e4 1344     		add	r3, r3, r2
 666 02e6 0433     		adds	r3, r3, #4
 667 02e8 D3ED007A 		vldr.32	s15, [r3]
 668 02ec 77EEA77A 		vadd.f32	s15, s15, s15
 669 02f0 37EE677A 		vsub.f32	s14, s14, s15
 670 02f4 F1EE006A 		vmov.f32	s13, #4.0e+0
 671 02f8 C7EE267A 		vdiv.f32	s15, s14, s13
ARM GAS  /tmp/ccxb5YoW.s 			page 14


 672 02fc C7ED087A 		vstr.32	s15, [r7, #32]
  72:Src/interpol.c ****   dy2=(data->r_y[imin+1]+data->r_y[imin-1]-2*data->r_y[imin])/4;
 673              		.loc 1 72 0
 674 0300 3B6C     		ldr	r3, [r7, #64]
 675 0302 0133     		adds	r3, r3, #1
 676 0304 FA68     		ldr	r2, [r7, #12]
 677 0306 03F5E173 		add	r3, r3, #450
 678 030a 9B00     		lsls	r3, r3, #2
 679 030c 1344     		add	r3, r3, r2
 680 030e 0433     		adds	r3, r3, #4
 681 0310 93ED007A 		vldr.32	s14, [r3]
 682 0314 3B6C     		ldr	r3, [r7, #64]
 683 0316 013B     		subs	r3, r3, #1
 684 0318 FA68     		ldr	r2, [r7, #12]
 685 031a 03F5E173 		add	r3, r3, #450
 686 031e 9B00     		lsls	r3, r3, #2
 687 0320 1344     		add	r3, r3, r2
 688 0322 0433     		adds	r3, r3, #4
 689 0324 D3ED007A 		vldr.32	s15, [r3]
 690 0328 37EE277A 		vadd.f32	s14, s14, s15
 691 032c FA68     		ldr	r2, [r7, #12]
 692 032e 3B6C     		ldr	r3, [r7, #64]
 693 0330 03F5E173 		add	r3, r3, #450
 694 0334 9B00     		lsls	r3, r3, #2
 695 0336 1344     		add	r3, r3, r2
 696 0338 0433     		adds	r3, r3, #4
 697 033a D3ED007A 		vldr.32	s15, [r3]
 698 033e 77EEA77A 		vadd.f32	s15, s15, s15
 699 0342 37EE677A 		vsub.f32	s14, s14, s15
 700 0346 F1EE006A 		vmov.f32	s13, #4.0e+0
 701 034a C7EE267A 		vdiv.f32	s15, s14, s13
 702 034e C7ED077A 		vstr.32	s15, [r7, #28]
  73:Src/interpol.c ****   flexion=(dx*dy2-dy*dx2)/pow(sqrt(dx*dx+dy*dy),3);//flexion of the curve
 703              		.loc 1 73 0
 704 0352 97ED0A7A 		vldr.32	s14, [r7, #40]
 705 0356 D7ED077A 		vldr.32	s15, [r7, #28]
 706 035a 27EE277A 		vmul.f32	s14, s14, s15
 707 035e D7ED096A 		vldr.32	s13, [r7, #36]
 708 0362 D7ED087A 		vldr.32	s15, [r7, #32]
 709 0366 66EEA77A 		vmul.f32	s15, s13, s15
 710 036a 77EE677A 		vsub.f32	s15, s14, s15
 711 036e 17EE900A 		vmov	r0, s15
 712 0372 FFF7FEFF 		bl	__aeabi_f2d
 713              	.LVL17:
 714 0376 0446     		mov	r4, r0
 715 0378 0D46     		mov	r5, r1
 716 037a 97ED0A7A 		vldr.32	s14, [r7, #40]
 717 037e D7ED0A7A 		vldr.32	s15, [r7, #40]
 718 0382 27EE277A 		vmul.f32	s14, s14, s15
 719 0386 D7ED096A 		vldr.32	s13, [r7, #36]
 720 038a D7ED097A 		vldr.32	s15, [r7, #36]
 721 038e 66EEA77A 		vmul.f32	s15, s13, s15
 722 0392 77EE277A 		vadd.f32	s15, s14, s15
 723 0396 17EE900A 		vmov	r0, s15
 724 039a FFF7FEFF 		bl	__aeabi_f2d
 725              	.LVL18:
 726 039e 0246     		mov	r2, r0
ARM GAS  /tmp/ccxb5YoW.s 			page 15


 727 03a0 0B46     		mov	r3, r1
 728 03a2 43EC102B 		vmov	d0, r2, r3
 729 03a6 FFF7FEFF 		bl	sqrt
 730 03aa B0EE407A 		vmov.f32	s14, s0
 731 03ae F0EE607A 		vmov.f32	s15, s1
 732 03b2 9FED531B 		vldr.64	d1, .L46
 733 03b6 B0EE470A 		vmov.f32	s0, s14
 734 03ba F0EE670A 		vmov.f32	s1, s15
 735 03be FFF7FEFF 		bl	pow
 736 03c2 53EC102B 		vmov	r2, r3, d0
 737 03c6 2046     		mov	r0, r4
 738 03c8 2946     		mov	r1, r5
 739 03ca FFF7FEFF 		bl	__aeabi_ddiv
 740              	.LVL19:
 741 03ce 0346     		mov	r3, r0
 742 03d0 0C46     		mov	r4, r1
 743 03d2 1846     		mov	r0, r3
 744 03d4 2146     		mov	r1, r4
 745 03d6 FFF7FEFF 		bl	__aeabi_d2f
 746              	.LVL20:
 747 03da 0346     		mov	r3, r0	@ float
 748 03dc BB61     		str	r3, [r7, #24]	@ float
  74:Src/interpol.c **** 
  75:Src/interpol.c ****   if(robot_theta>PI/2)
 749              		.loc 1 75 0
 750 03de D7ED157A 		vldr.32	s15, [r7, #84]
 751 03e2 9FED497A 		vldr.32	s14, .L46+8
 752 03e6 F4EEC77A 		vcmpe.f32	s15, s14
 753 03ea F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 754 03ee 08DD     		ble	.L42
  76:Src/interpol.c ****   {
  77:Src/interpol.c ****     robot_theta=robot_theta-PI;//keep the direction
 755              		.loc 1 77 0
 756 03f0 D7ED157A 		vldr.32	s15, [r7, #84]
 757 03f4 9FED457A 		vldr.32	s14, .L46+12
 758 03f8 77EEC77A 		vsub.f32	s15, s15, s14
 759 03fc C7ED157A 		vstr.32	s15, [r7, #84]
 760 0400 10E0     		b	.L26
 761              	.L42:
  78:Src/interpol.c ****   }
  79:Src/interpol.c ****   else if(robot_theta<-PI/2)
 762              		.loc 1 79 0
 763 0402 D7ED157A 		vldr.32	s15, [r7, #84]
 764 0406 9FED427A 		vldr.32	s14, .L46+16
 765 040a F4EEC77A 		vcmpe.f32	s15, s14
 766 040e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 767 0412 07D5     		bpl	.L26
  80:Src/interpol.c ****   {
  81:Src/interpol.c ****     robot_theta=robot_theta+PI;//keep the direction
 768              		.loc 1 81 0
 769 0414 D7ED157A 		vldr.32	s15, [r7, #84]
 770 0418 9FED3C7A 		vldr.32	s14, .L46+12
 771 041c 77EE877A 		vadd.f32	s15, s15, s14
 772 0420 C7ED157A 		vstr.32	s15, [r7, #84]
 773              	.L26:
  82:Src/interpol.c ****   }
  83:Src/interpol.c **** 
ARM GAS  /tmp/ccxb5YoW.s 			page 16


  84:Src/interpol.c ****   theta_e=robot_theta-theta_des;//limits the robot angle to -PI/2 PI/2
 774              		.loc 1 84 0
 775 0424 97ED157A 		vldr.32	s14, [r7, #84]
 776 0428 D7ED137A 		vldr.32	s15, [r7, #76]
 777 042c 77EE677A 		vsub.f32	s15, s14, s15
 778 0430 C7ED127A 		vstr.32	s15, [r7, #72]
  85:Src/interpol.c ****   if(theta_e>PI) theta_e=theta_e-2*PI;
 779              		.loc 1 85 0
 780 0434 D7ED127A 		vldr.32	s15, [r7, #72]
 781 0438 9FED347A 		vldr.32	s14, .L46+12
 782 043c F4EEC77A 		vcmpe.f32	s15, s14
 783 0440 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 784 0444 08DD     		ble	.L43
 785              		.loc 1 85 0 is_stmt 0 discriminator 1
 786 0446 D7ED127A 		vldr.32	s15, [r7, #72]
 787 044a 9FED327A 		vldr.32	s14, .L46+20
 788 044e 77EEC77A 		vsub.f32	s15, s15, s14
 789 0452 C7ED127A 		vstr.32	s15, [r7, #72]
 790 0456 10E0     		b	.L30
 791              	.L43:
  86:Src/interpol.c ****   else if(theta_e<=-PI) theta_e=theta_e+2*PI;
 792              		.loc 1 86 0 is_stmt 1
 793 0458 D7ED127A 		vldr.32	s15, [r7, #72]
 794 045c 9FED2E7A 		vldr.32	s14, .L46+24
 795 0460 F4EEC77A 		vcmpe.f32	s15, s14
 796 0464 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 797 0468 07D8     		bhi	.L30
 798              		.loc 1 86 0 is_stmt 0 discriminator 1
 799 046a D7ED127A 		vldr.32	s15, [r7, #72]
 800 046e 9FED297A 		vldr.32	s14, .L46+20
 801 0472 77EE877A 		vadd.f32	s15, s15, s14
 802 0476 C7ED127A 		vstr.32	s15, [r7, #72]
 803              	.L30:
  87:Src/interpol.c **** 
  88:Src/interpol.c ****   return flexion-k1*sqrt(dmin)-k2*theta_e;
 804              		.loc 1 88 0 is_stmt 1
 805 047a B869     		ldr	r0, [r7, #24]	@ float
 806 047c FFF7FEFF 		bl	__aeabi_f2d
 807              	.LVL21:
 808 0480 0446     		mov	r4, r0
 809 0482 0D46     		mov	r5, r1
 810 0484 786B     		ldr	r0, [r7, #52]	@ float
 811 0486 FFF7FEFF 		bl	__aeabi_f2d
 812              	.LVL22:
 813 048a 8046     		mov	r8, r0
 814 048c 8946     		mov	r9, r1
 815 048e 386D     		ldr	r0, [r7, #80]	@ float
 816 0490 FFF7FEFF 		bl	__aeabi_f2d
 817              	.LVL23:
 818 0494 0246     		mov	r2, r0
 819 0496 0B46     		mov	r3, r1
 820 0498 43EC102B 		vmov	d0, r2, r3
 821 049c FFF7FEFF 		bl	sqrt
 822 04a0 53EC102B 		vmov	r2, r3, d0
 823 04a4 4046     		mov	r0, r8
 824 04a6 4946     		mov	r1, r9
 825 04a8 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  /tmp/ccxb5YoW.s 			page 17


 826              	.LVL24:
 827 04ac 0246     		mov	r2, r0
 828 04ae 0B46     		mov	r3, r1
 829 04b0 2046     		mov	r0, r4
 830 04b2 2946     		mov	r1, r5
 831 04b4 FFF7FEFF 		bl	__aeabi_dsub
 832              	.LVL25:
 833 04b8 0346     		mov	r3, r0
 834 04ba 0C46     		mov	r4, r1
 835 04bc 2546     		mov	r5, r4
 836 04be 1C46     		mov	r4, r3
 837 04c0 97ED0C7A 		vldr.32	s14, [r7, #48]
 838 04c4 D7ED127A 		vldr.32	s15, [r7, #72]
 839 04c8 67EE277A 		vmul.f32	s15, s14, s15
 840 04cc 17EE900A 		vmov	r0, s15
 841 04d0 FFF7FEFF 		bl	__aeabi_f2d
 842              	.LVL26:
 843 04d4 0246     		mov	r2, r0
 844 04d6 0B46     		mov	r3, r1
 845 04d8 2046     		mov	r0, r4
 846 04da 2946     		mov	r1, r5
 847 04dc FFF7FEFF 		bl	__aeabi_dsub
 848              	.LVL27:
 849 04e0 0346     		mov	r3, r0
 850 04e2 0C46     		mov	r4, r1
 851 04e4 1846     		mov	r0, r3
 852 04e6 2146     		mov	r1, r4
 853 04e8 FFF7FEFF 		bl	__aeabi_d2f
 854              	.LVL28:
 855 04ec 0346     		mov	r3, r0	@ float
 856 04ee 07EE903A 		vmov	s15, r3
  89:Src/interpol.c **** }
 857              		.loc 1 89 0
 858 04f2 B0EE670A 		vmov.f32	s0, s15
 859 04f6 5837     		adds	r7, r7, #88
 860              	.LCFI14:
 861              		.cfi_def_cfa_offset 24
 862 04f8 BD46     		mov	sp, r7
 863              	.LCFI15:
 864              		.cfi_def_cfa_register 13
 865              		@ sp needed
 866 04fa BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 867              	.L47:
 868 04fe 00BF     		.align	3
 869              	.L46:
 870 0500 00000000 		.word	0
 871 0504 00000840 		.word	1074266112
 872 0508 DB0FC93F 		.word	1070141403
 873 050c DB0F4940 		.word	1078530011
 874 0510 DB0FC9BF 		.word	3217625051
 875 0514 DB0FC940 		.word	1086918619
 876 0518 DB0F49C0 		.word	3226013659
 877              		.cfi_endproc
 878              	.LFE730:
 880              		.text
 881              	.Letext0:
 882              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
ARM GAS  /tmp/ccxb5YoW.s 			page 18


 883              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 884              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 885              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 886              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 887              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 888              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 889              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.3.0/include/stddef.h"
 890              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 891              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 892              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 893              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 894              		.file 14 "/usr/arm-none-eabi/include/math.h"
 895              		.file 15 "Inc/encoder.h"
 896              		.file 16 "Inc/odometry.h"
 897              		.file 17 "Inc/interpol.h"
 898              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_ll_dma.h"
ARM GAS  /tmp/ccxb5YoW.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 interpol.c
     /tmp/ccxb5YoW.s:18     .rodata.CHANNEL_OFFSET_TAB:0000000000000000 $d
     /tmp/ccxb5YoW.s:21     .rodata.CHANNEL_OFFSET_TAB:0000000000000000 CHANNEL_OFFSET_TAB
     /tmp/ccxb5YoW.s:33     .text.interpol_calc:0000000000000000 $t
     /tmp/ccxb5YoW.s:40     .text.interpol_calc:0000000000000000 interpol_calc
     /tmp/ccxb5YoW.s:254    .text.interpol_calc:00000000000001b4 $d
     /tmp/ccxb5YoW.s:259    .text.d2:0000000000000000 $t
     /tmp/ccxb5YoW.s:266    .text.d2:0000000000000000 d2
     /tmp/ccxb5YoW.s:327    .text.Kc:0000000000000000 $t
     /tmp/ccxb5YoW.s:334    .text.Kc:0000000000000000 Kc
     /tmp/ccxb5YoW.s:612    .text.Kc:0000000000000258 $d
     /tmp/ccxb5YoW.s:625    .text.Kc:0000000000000284 $t
     /tmp/ccxb5YoW.s:870    .text.Kc:0000000000000500 $d

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_i2d
__aeabi_d2f
pow
__aeabi_dcmplt
__aeabi_ddiv
__aeabi_dmul
__aeabi_dadd
__aeabi_dsub
odometry
atan
sqrt
