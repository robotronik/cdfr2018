ARM GAS  /tmp/cc3f4e78.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f3xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.CHANNEL_OFFSET_TAB,"a",%progbits
  18              		.align	2
  21              	CHANNEL_OFFSET_TAB:
  22 0000 08       		.byte	8
  23 0001 1C       		.byte	28
  24 0002 30       		.byte	48
  25 0003 44       		.byte	68
  26 0004 58       		.byte	88
  27 0005 6C       		.byte	108
  28 0006 80       		.byte	-128
  29              		.section	.text.HAL_UART_Init,"ax",%progbits
  30              		.align	1
  31              		.global	HAL_UART_Init
  32              		.syntax unified
  33              		.thumb
  34              		.thumb_func
  35              		.fpu fpv4-sp-d16
  37              	HAL_UART_Init:
  38              	.LFB695:
  39              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @file    stm32f3xx_hal_uart.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   [..]
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
ARM GAS  /tmp/cc3f4e78.s 			page 2


  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) UART pins configuration:
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) UART interrupts handling:
  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                 RXNE interrupt and Error Interrupts) are managed using the macros
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                 __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit and receive 
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         the HAL_UART_Init() API.
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    [..]
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (@) These APIs (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_MultiProcessor_Init(),
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         also configure the low level Hardware (GPIO, CLOCK, CORTEX...etc) by
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    [..]
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    [..] Three operation modes are available within this driver :
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      *** Polling mode IO operation ***
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      =================================
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      *** Interrupt mode IO operation ***
ARM GAS  /tmp/cc3f4e78.s 			page 3


  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      ===================================
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT()
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT()
  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      *** DMA mode IO operation ***
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      ==============================
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA()
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA()
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      *** UART HAL driver macros list ***
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      =============================================
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   @endverbatim
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @attention
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
ARM GAS  /tmp/cc3f4e78.s 			page 4


 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      without specific prior written permission.
 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #include "stm32f3xx_hal.h"
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @addtogroup STM32F3xx_HAL_Driver
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART UART
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief UART HAL module driver
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #define UART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                                      USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8)) /*!< UART or U
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
ARM GAS  /tmp/cc3f4e78.s 			page 5


 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** ===============================================================================
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     in asynchronous mode.
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Baud Rate
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Word Length
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Stop Bit
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Parity
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Hardware flow control
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Receiver/transmitter modes
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Over Sampling Method
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) One-Bit Sampling Method
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) data logical level inversion
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) RX and TX pins swap
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) RX overrun detection disabling
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) DMA disabling on RX error
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) MSB first on communication line
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) auto Baud rate detection
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init()
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     API follow respectively the UART asynchronous, UART Half duplex, UART LIN mode and
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     multiprocessor configuration procedures (details for the procedures are available in reference 
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
ARM GAS  /tmp/cc3f4e78.s 			page 6


 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /*
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   Additional Table: If the parity is enabled, then the MSB bit of the data written
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     in the data register is transmitted but is changed by the parity bit.
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     According to device capability (support or not of 7-bit word length),
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     frame length is either defined by the M bit (8-bits or 9-bits)
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     or by the M1 and M0 bits (7-bit, 8-bit or 9-bit).
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     Possible UART frame formats are as listed in the following table:
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       Table 1. UART frame format.             
 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |       M bit       |  PCE bit  |             UART frame                |
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |         0         |     0     |    | SB |    8-bit data   | STB |     |
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |         0         |     1     |    | SB | 7-bit data | PB | STB |     |
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |         1         |     0     |    | SB |    9-bit data   | STB |     |
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |         1         |     1     |    | SB | 8-bit data | PB | STB |     |
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    0    |    0    |     0     |    | SB |    8 bit data   | STB |     |
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    0    |    0    |     1     |    | SB | 7 bit data | PB | STB |     |
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    0    |    1    |     0     |    | SB |    9 bit data   | STB |     |
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    0    |    1    |     1     |    | SB | 8 bit data | PB | STB |     |
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    1    |    0    |     0     |    | SB |    7 bit data   | STB |     |
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    1    |    0    |     1     |    | SB | 6 bit data | PB | STB |     |
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
  40              		.loc 1 295 0
  41              		.cfi_startproc
  42              		@ args = 0, pretend = 0, frame = 8
  43              		@ frame_needed = 1, uses_anonymous_args = 0
  44 0000 80B5     		push	{r7, lr}
  45              	.LCFI0:
  46              		.cfi_def_cfa_offset 8
  47              		.cfi_offset 7, -8
  48              		.cfi_offset 14, -4
  49 0002 82B0     		sub	sp, sp, #8
  50              	.LCFI1:
ARM GAS  /tmp/cc3f4e78.s 			page 7


  51              		.cfi_def_cfa_offset 16
  52 0004 00AF     		add	r7, sp, #0
  53              	.LCFI2:
  54              		.cfi_def_cfa_register 7
  55 0006 7860     		str	r0, [r7, #4]
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
  56              		.loc 1 297 0
  57 0008 7B68     		ldr	r3, [r7, #4]
  58 000a 002B     		cmp	r3, #0
  59 000c 01D1     		bne	.L2
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
  60              		.loc 1 299 0
  61 000e 0123     		movs	r3, #1
  62 0010 43E0     		b	.L3
  63              	.L2:
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check the parameters */
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check the parameters */
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
  64              		.loc 1 313 0
  65 0012 7B68     		ldr	r3, [r7, #4]
  66 0014 93F86930 		ldrb	r3, [r3, #105]
  67 0018 DBB2     		uxtb	r3, r3
  68 001a 002B     		cmp	r3, #0
  69 001c 06D1     		bne	.L4
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  70              		.loc 1 316 0
  71 001e 7B68     		ldr	r3, [r7, #4]
  72 0020 0022     		movs	r2, #0
  73 0022 83F86820 		strb	r2, [r3, #104]
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
  74              		.loc 1 319 0
  75 0026 7868     		ldr	r0, [r7, #4]
  76 0028 FFF7FEFF 		bl	HAL_UART_MspInit
  77              	.L4:
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
  78              		.loc 1 322 0
  79 002c 7B68     		ldr	r3, [r7, #4]
  80 002e 2422     		movs	r2, #36
ARM GAS  /tmp/cc3f4e78.s 			page 8


  81 0030 83F86920 		strb	r2, [r3, #105]
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  82              		.loc 1 325 0
  83 0034 7B68     		ldr	r3, [r7, #4]
  84 0036 1B68     		ldr	r3, [r3]
  85 0038 1A68     		ldr	r2, [r3]
  86 003a 7B68     		ldr	r3, [r7, #4]
  87 003c 1B68     		ldr	r3, [r3]
  88 003e 22F00102 		bic	r2, r2, #1
  89 0042 1A60     		str	r2, [r3]
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
  90              		.loc 1 328 0
  91 0044 7868     		ldr	r0, [r7, #4]
  92 0046 FFF7FEFF 		bl	UART_SetConfig
  93 004a 0346     		mov	r3, r0
  94 004c 012B     		cmp	r3, #1
  95 004e 01D1     		bne	.L5
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
  96              		.loc 1 330 0
  97 0050 0123     		movs	r3, #1
  98 0052 22E0     		b	.L3
  99              	.L5:
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 100              		.loc 1 333 0
 101 0054 7B68     		ldr	r3, [r7, #4]
 102 0056 5B6A     		ldr	r3, [r3, #36]
 103 0058 002B     		cmp	r3, #0
 104 005a 02D0     		beq	.L6
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 105              		.loc 1 335 0
 106 005c 7868     		ldr	r0, [r7, #4]
 107 005e FFF7FEFF 		bl	UART_AdvFeatureConfig
 108              	.L6:
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 109              		.loc 1 341 0
 110 0062 7B68     		ldr	r3, [r7, #4]
 111 0064 1B68     		ldr	r3, [r3]
 112 0066 5A68     		ldr	r2, [r3, #4]
 113 0068 7B68     		ldr	r3, [r7, #4]
 114 006a 1B68     		ldr	r3, [r3]
 115 006c 22F49042 		bic	r2, r2, #18432
 116 0070 5A60     		str	r2, [r3, #4]
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 117              		.loc 1 342 0
ARM GAS  /tmp/cc3f4e78.s 			page 9


 118 0072 7B68     		ldr	r3, [r7, #4]
 119 0074 1B68     		ldr	r3, [r3]
 120 0076 9A68     		ldr	r2, [r3, #8]
 121 0078 7B68     		ldr	r3, [r7, #4]
 122 007a 1B68     		ldr	r3, [r3]
 123 007c 22F02A02 		bic	r2, r2, #42
 124 0080 9A60     		str	r2, [r3, #8]
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Peripheral */
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 125              		.loc 1 345 0
 126 0082 7B68     		ldr	r3, [r7, #4]
 127 0084 1B68     		ldr	r3, [r3]
 128 0086 1A68     		ldr	r2, [r3]
 129 0088 7B68     		ldr	r3, [r7, #4]
 130 008a 1B68     		ldr	r3, [r3]
 131 008c 42F00102 		orr	r2, r2, #1
 132 0090 1A60     		str	r2, [r3]
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 133              		.loc 1 348 0
 134 0092 7868     		ldr	r0, [r7, #4]
 135 0094 FFF7FEFF 		bl	UART_CheckIdleState
 136 0098 0346     		mov	r3, r0
 137              	.L3:
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 138              		.loc 1 349 0
 139 009a 1846     		mov	r0, r3
 140 009c 0837     		adds	r7, r7, #8
 141              	.LCFI3:
 142              		.cfi_def_cfa_offset 8
 143 009e BD46     		mov	sp, r7
 144              	.LCFI4:
 145              		.cfi_def_cfa_register 13
 146              		@ sp needed
 147 00a0 80BD     		pop	{r7, pc}
 148              		.cfi_endproc
 149              	.LFE695:
 151              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 152              		.align	1
 153              		.global	HAL_HalfDuplex_Init
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 157              		.fpu fpv4-sp-d16
 159              	HAL_HalfDuplex_Init:
 160              	.LFB696:
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
ARM GAS  /tmp/cc3f4e78.s 			page 10


 161              		.loc 1 358 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 8
 164              		@ frame_needed = 1, uses_anonymous_args = 0
 165 0000 80B5     		push	{r7, lr}
 166              	.LCFI5:
 167              		.cfi_def_cfa_offset 8
 168              		.cfi_offset 7, -8
 169              		.cfi_offset 14, -4
 170 0002 82B0     		sub	sp, sp, #8
 171              	.LCFI6:
 172              		.cfi_def_cfa_offset 16
 173 0004 00AF     		add	r7, sp, #0
 174              	.LCFI7:
 175              		.cfi_def_cfa_register 7
 176 0006 7860     		str	r0, [r7, #4]
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 177              		.loc 1 360 0
 178 0008 7B68     		ldr	r3, [r7, #4]
 179 000a 002B     		cmp	r3, #0
 180 000c 01D1     		bne	.L8
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 181              		.loc 1 362 0
 182 000e 0123     		movs	r3, #1
 183 0010 4BE0     		b	.L9
 184              	.L8:
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check UART instance */
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 185              		.loc 1 368 0
 186 0012 7B68     		ldr	r3, [r7, #4]
 187 0014 93F86930 		ldrb	r3, [r3, #105]
 188 0018 DBB2     		uxtb	r3, r3
 189 001a 002B     		cmp	r3, #0
 190 001c 06D1     		bne	.L10
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 191              		.loc 1 371 0
 192 001e 7B68     		ldr	r3, [r7, #4]
 193 0020 0022     		movs	r2, #0
 194 0022 83F86820 		strb	r2, [r3, #104]
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 195              		.loc 1 374 0
 196 0026 7868     		ldr	r0, [r7, #4]
 197 0028 FFF7FEFF 		bl	HAL_UART_MspInit
 198              	.L10:
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  /tmp/cc3f4e78.s 			page 11


 199              		.loc 1 377 0
 200 002c 7B68     		ldr	r3, [r7, #4]
 201 002e 2422     		movs	r2, #36
 202 0030 83F86920 		strb	r2, [r3, #105]
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 203              		.loc 1 380 0
 204 0034 7B68     		ldr	r3, [r7, #4]
 205 0036 1B68     		ldr	r3, [r3]
 206 0038 1A68     		ldr	r2, [r3]
 207 003a 7B68     		ldr	r3, [r7, #4]
 208 003c 1B68     		ldr	r3, [r3]
 209 003e 22F00102 		bic	r2, r2, #1
 210 0042 1A60     		str	r2, [r3]
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 211              		.loc 1 383 0
 212 0044 7868     		ldr	r0, [r7, #4]
 213 0046 FFF7FEFF 		bl	UART_SetConfig
 214 004a 0346     		mov	r3, r0
 215 004c 012B     		cmp	r3, #1
 216 004e 01D1     		bne	.L11
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 217              		.loc 1 385 0
 218 0050 0123     		movs	r3, #1
 219 0052 2AE0     		b	.L9
 220              	.L11:
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 221              		.loc 1 388 0
 222 0054 7B68     		ldr	r3, [r7, #4]
 223 0056 5B6A     		ldr	r3, [r3, #36]
 224 0058 002B     		cmp	r3, #0
 225 005a 02D0     		beq	.L12
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 226              		.loc 1 390 0
 227 005c 7868     		ldr	r0, [r7, #4]
 228 005e FFF7FEFF 		bl	UART_AdvFeatureConfig
 229              	.L12:
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 230              		.loc 1 396 0
 231 0062 7B68     		ldr	r3, [r7, #4]
 232 0064 1B68     		ldr	r3, [r3]
 233 0066 5A68     		ldr	r2, [r3, #4]
 234 0068 7B68     		ldr	r3, [r7, #4]
 235 006a 1B68     		ldr	r3, [r3]
 236 006c 22F49042 		bic	r2, r2, #18432
ARM GAS  /tmp/cc3f4e78.s 			page 12


 237 0070 5A60     		str	r2, [r3, #4]
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 238              		.loc 1 397 0
 239 0072 7B68     		ldr	r3, [r7, #4]
 240 0074 1B68     		ldr	r3, [r3]
 241 0076 9A68     		ldr	r2, [r3, #8]
 242 0078 7B68     		ldr	r3, [r7, #4]
 243 007a 1B68     		ldr	r3, [r3]
 244 007c 22F02202 		bic	r2, r2, #34
 245 0080 9A60     		str	r2, [r3, #8]
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 246              		.loc 1 400 0
 247 0082 7B68     		ldr	r3, [r7, #4]
 248 0084 1B68     		ldr	r3, [r3]
 249 0086 9A68     		ldr	r2, [r3, #8]
 250 0088 7B68     		ldr	r3, [r7, #4]
 251 008a 1B68     		ldr	r3, [r3]
 252 008c 42F00802 		orr	r2, r2, #8
 253 0090 9A60     		str	r2, [r3, #8]
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Peripheral */
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 254              		.loc 1 403 0
 255 0092 7B68     		ldr	r3, [r7, #4]
 256 0094 1B68     		ldr	r3, [r3]
 257 0096 1A68     		ldr	r2, [r3]
 258 0098 7B68     		ldr	r3, [r7, #4]
 259 009a 1B68     		ldr	r3, [r3]
 260 009c 42F00102 		orr	r2, r2, #1
 261 00a0 1A60     		str	r2, [r3]
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 262              		.loc 1 406 0
 263 00a2 7868     		ldr	r0, [r7, #4]
 264 00a4 FFF7FEFF 		bl	UART_CheckIdleState
 265 00a8 0346     		mov	r3, r0
 266              	.L9:
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 267              		.loc 1 407 0
 268 00aa 1846     		mov	r0, r3
 269 00ac 0837     		adds	r7, r7, #8
 270              	.LCFI8:
 271              		.cfi_def_cfa_offset 8
 272 00ae BD46     		mov	sp, r7
 273              	.LCFI9:
 274              		.cfi_def_cfa_register 13
 275              		@ sp needed
 276 00b0 80BD     		pop	{r7, pc}
 277              		.cfi_endproc
 278              	.LFE696:
 280              		.section	.text.HAL_LIN_Init,"ax",%progbits
 281              		.align	1
 282              		.global	HAL_LIN_Init
 283              		.syntax unified
ARM GAS  /tmp/cc3f4e78.s 			page 13


 284              		.thumb
 285              		.thumb_func
 286              		.fpu fpv4-sp-d16
 288              	HAL_LIN_Init:
 289              	.LFB697:
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle .
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param BreakDetectLength specifies the LIN break detection length.
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        This parameter can be one of the following values:
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 290              		.loc 1 421 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 8
 293              		@ frame_needed = 1, uses_anonymous_args = 0
 294 0000 80B5     		push	{r7, lr}
 295              	.LCFI10:
 296              		.cfi_def_cfa_offset 8
 297              		.cfi_offset 7, -8
 298              		.cfi_offset 14, -4
 299 0002 82B0     		sub	sp, sp, #8
 300              	.LCFI11:
 301              		.cfi_def_cfa_offset 16
 302 0004 00AF     		add	r7, sp, #0
 303              	.LCFI12:
 304              		.cfi_def_cfa_register 7
 305 0006 7860     		str	r0, [r7, #4]
 306 0008 3960     		str	r1, [r7]
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 307              		.loc 1 423 0
 308 000a 7B68     		ldr	r3, [r7, #4]
 309 000c 002B     		cmp	r3, #0
 310 000e 01D1     		bne	.L14
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 311              		.loc 1 425 0
 312 0010 0123     		movs	r3, #1
 313 0012 62E0     		b	.L15
 314              	.L14:
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the LIN UART instance */
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the Break detection length parameter */
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
ARM GAS  /tmp/cc3f4e78.s 			page 14


 315              		.loc 1 434 0
 316 0014 7B68     		ldr	r3, [r7, #4]
 317 0016 DB69     		ldr	r3, [r3, #28]
 318 0018 B3F5004F 		cmp	r3, #32768
 319 001c 01D1     		bne	.L16
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 320              		.loc 1 436 0
 321 001e 0123     		movs	r3, #1
 322 0020 5BE0     		b	.L15
 323              	.L16:
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->Init.WordLength != UART_WORDLENGTH_8B)
 324              		.loc 1 439 0
 325 0022 7B68     		ldr	r3, [r7, #4]
 326 0024 9B68     		ldr	r3, [r3, #8]
 327 0026 002B     		cmp	r3, #0
 328 0028 01D0     		beq	.L17
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 329              		.loc 1 441 0
 330 002a 0123     		movs	r3, #1
 331 002c 55E0     		b	.L15
 332              	.L17:
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 333              		.loc 1 444 0
 334 002e 7B68     		ldr	r3, [r7, #4]
 335 0030 93F86930 		ldrb	r3, [r3, #105]
 336 0034 DBB2     		uxtb	r3, r3
 337 0036 002B     		cmp	r3, #0
 338 0038 06D1     		bne	.L18
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 339              		.loc 1 447 0
 340 003a 7B68     		ldr	r3, [r7, #4]
 341 003c 0022     		movs	r2, #0
 342 003e 83F86820 		strb	r2, [r3, #104]
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 343              		.loc 1 450 0
 344 0042 7868     		ldr	r0, [r7, #4]
 345 0044 FFF7FEFF 		bl	HAL_UART_MspInit
 346              	.L18:
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 347              		.loc 1 453 0
 348 0048 7B68     		ldr	r3, [r7, #4]
 349 004a 2422     		movs	r2, #36
 350 004c 83F86920 		strb	r2, [r3, #105]
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
ARM GAS  /tmp/cc3f4e78.s 			page 15


 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 351              		.loc 1 456 0
 352 0050 7B68     		ldr	r3, [r7, #4]
 353 0052 1B68     		ldr	r3, [r3]
 354 0054 1A68     		ldr	r2, [r3]
 355 0056 7B68     		ldr	r3, [r7, #4]
 356 0058 1B68     		ldr	r3, [r3]
 357 005a 22F00102 		bic	r2, r2, #1
 358 005e 1A60     		str	r2, [r3]
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 359              		.loc 1 459 0
 360 0060 7868     		ldr	r0, [r7, #4]
 361 0062 FFF7FEFF 		bl	UART_SetConfig
 362 0066 0346     		mov	r3, r0
 363 0068 012B     		cmp	r3, #1
 364 006a 01D1     		bne	.L19
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 365              		.loc 1 461 0
 366 006c 0123     		movs	r3, #1
 367 006e 34E0     		b	.L15
 368              	.L19:
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 369              		.loc 1 464 0
 370 0070 7B68     		ldr	r3, [r7, #4]
 371 0072 5B6A     		ldr	r3, [r3, #36]
 372 0074 002B     		cmp	r3, #0
 373 0076 02D0     		beq	.L20
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 374              		.loc 1 466 0
 375 0078 7868     		ldr	r0, [r7, #4]
 376 007a FFF7FEFF 		bl	UART_AdvFeatureConfig
 377              	.L20:
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 378              		.loc 1 472 0
 379 007e 7B68     		ldr	r3, [r7, #4]
 380 0080 1B68     		ldr	r3, [r3]
 381 0082 5A68     		ldr	r2, [r3, #4]
 382 0084 7B68     		ldr	r3, [r7, #4]
 383 0086 1B68     		ldr	r3, [r3]
 384 0088 22F40062 		bic	r2, r2, #2048
 385 008c 5A60     		str	r2, [r3, #4]
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 386              		.loc 1 473 0
 387 008e 7B68     		ldr	r3, [r7, #4]
 388 0090 1B68     		ldr	r3, [r3]
 389 0092 9A68     		ldr	r2, [r3, #8]
ARM GAS  /tmp/cc3f4e78.s 			page 16


 390 0094 7B68     		ldr	r3, [r7, #4]
 391 0096 1B68     		ldr	r3, [r3]
 392 0098 22F02A02 		bic	r2, r2, #42
 393 009c 9A60     		str	r2, [r3, #8]
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 394              		.loc 1 476 0
 395 009e 7B68     		ldr	r3, [r7, #4]
 396 00a0 1B68     		ldr	r3, [r3]
 397 00a2 5A68     		ldr	r2, [r3, #4]
 398 00a4 7B68     		ldr	r3, [r7, #4]
 399 00a6 1B68     		ldr	r3, [r3]
 400 00a8 42F48042 		orr	r2, r2, #16384
 401 00ac 5A60     		str	r2, [r3, #4]
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 402              		.loc 1 479 0
 403 00ae 7B68     		ldr	r3, [r7, #4]
 404 00b0 1B68     		ldr	r3, [r3]
 405 00b2 5B68     		ldr	r3, [r3, #4]
 406 00b4 23F02001 		bic	r1, r3, #32
 407 00b8 7B68     		ldr	r3, [r7, #4]
 408 00ba 1B68     		ldr	r3, [r3]
 409 00bc 3A68     		ldr	r2, [r7]
 410 00be 0A43     		orrs	r2, r2, r1
 411 00c0 5A60     		str	r2, [r3, #4]
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Peripheral */
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 412              		.loc 1 482 0
 413 00c2 7B68     		ldr	r3, [r7, #4]
 414 00c4 1B68     		ldr	r3, [r3]
 415 00c6 1A68     		ldr	r2, [r3]
 416 00c8 7B68     		ldr	r3, [r7, #4]
 417 00ca 1B68     		ldr	r3, [r3]
 418 00cc 42F00102 		orr	r2, r2, #1
 419 00d0 1A60     		str	r2, [r3]
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 420              		.loc 1 485 0
 421 00d2 7868     		ldr	r0, [r7, #4]
 422 00d4 FFF7FEFF 		bl	UART_CheckIdleState
 423 00d8 0346     		mov	r3, r0
 424              	.L15:
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 425              		.loc 1 486 0
 426 00da 1846     		mov	r0, r3
 427 00dc 0837     		adds	r7, r7, #8
 428              	.LCFI13:
 429              		.cfi_def_cfa_offset 8
 430 00de BD46     		mov	sp, r7
 431              	.LCFI14:
 432              		.cfi_def_cfa_register 13
 433              		@ sp needed
ARM GAS  /tmp/cc3f4e78.s 			page 17


 434 00e0 80BD     		pop	{r7, pc}
 435              		.cfi_endproc
 436              	.LFE697:
 438              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 439              		.align	1
 440              		.global	HAL_MultiProcessor_Init
 441              		.syntax unified
 442              		.thumb
 443              		.thumb_func
 444              		.fpu fpv4-sp-d16
 446              	HAL_MultiProcessor_Init:
 447              	.LFB698:
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Address UART node address (4-, 6-, 7- or 8-bit long).
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param WakeUpMethod specifies the UART wakeup method.
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        This parameter can be one of the following values:
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 448              		.loc 1 508 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 16
 451              		@ frame_needed = 1, uses_anonymous_args = 0
 452 0000 80B5     		push	{r7, lr}
 453              	.LCFI15:
 454              		.cfi_def_cfa_offset 8
 455              		.cfi_offset 7, -8
 456              		.cfi_offset 14, -4
 457 0002 84B0     		sub	sp, sp, #16
 458              	.LCFI16:
 459              		.cfi_def_cfa_offset 24
 460 0004 00AF     		add	r7, sp, #0
 461              	.LCFI17:
 462              		.cfi_def_cfa_register 7
 463 0006 F860     		str	r0, [r7, #12]
 464 0008 0B46     		mov	r3, r1
 465 000a 7A60     		str	r2, [r7, #4]
 466 000c FB72     		strb	r3, [r7, #11]
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 467              		.loc 1 510 0
 468 000e FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cc3f4e78.s 			page 18


 469 0010 002B     		cmp	r3, #0
 470 0012 01D1     		bne	.L22
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 471              		.loc 1 512 0
 472 0014 0123     		movs	r3, #1
 473 0016 5CE0     		b	.L23
 474              	.L22:
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the wake up method parameter */
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 475              		.loc 1 518 0
 476 0018 FB68     		ldr	r3, [r7, #12]
 477 001a 93F86930 		ldrb	r3, [r3, #105]
 478 001e DBB2     		uxtb	r3, r3
 479 0020 002B     		cmp	r3, #0
 480 0022 06D1     		bne	.L24
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 481              		.loc 1 521 0
 482 0024 FB68     		ldr	r3, [r7, #12]
 483 0026 0022     		movs	r2, #0
 484 0028 83F86820 		strb	r2, [r3, #104]
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 485              		.loc 1 524 0
 486 002c F868     		ldr	r0, [r7, #12]
 487 002e FFF7FEFF 		bl	HAL_UART_MspInit
 488              	.L24:
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 489              		.loc 1 527 0
 490 0032 FB68     		ldr	r3, [r7, #12]
 491 0034 2422     		movs	r2, #36
 492 0036 83F86920 		strb	r2, [r3, #105]
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 493              		.loc 1 530 0
 494 003a FB68     		ldr	r3, [r7, #12]
 495 003c 1B68     		ldr	r3, [r3]
 496 003e 1A68     		ldr	r2, [r3]
 497 0040 FB68     		ldr	r3, [r7, #12]
 498 0042 1B68     		ldr	r3, [r3]
 499 0044 22F00102 		bic	r2, r2, #1
 500 0048 1A60     		str	r2, [r3]
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 501              		.loc 1 533 0
 502 004a F868     		ldr	r0, [r7, #12]
ARM GAS  /tmp/cc3f4e78.s 			page 19


 503 004c FFF7FEFF 		bl	UART_SetConfig
 504 0050 0346     		mov	r3, r0
 505 0052 012B     		cmp	r3, #1
 506 0054 01D1     		bne	.L25
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 507              		.loc 1 535 0
 508 0056 0123     		movs	r3, #1
 509 0058 3BE0     		b	.L23
 510              	.L25:
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 511              		.loc 1 538 0
 512 005a FB68     		ldr	r3, [r7, #12]
 513 005c 5B6A     		ldr	r3, [r3, #36]
 514 005e 002B     		cmp	r3, #0
 515 0060 02D0     		beq	.L26
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 516              		.loc 1 540 0
 517 0062 F868     		ldr	r0, [r7, #12]
 518 0064 FFF7FEFF 		bl	UART_AdvFeatureConfig
 519              	.L26:
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 520              		.loc 1 546 0
 521 0068 FB68     		ldr	r3, [r7, #12]
 522 006a 1B68     		ldr	r3, [r3]
 523 006c 5A68     		ldr	r2, [r3, #4]
 524 006e FB68     		ldr	r3, [r7, #12]
 525 0070 1B68     		ldr	r3, [r3]
 526 0072 22F49042 		bic	r2, r2, #18432
 527 0076 5A60     		str	r2, [r3, #4]
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 528              		.loc 1 547 0
 529 0078 FB68     		ldr	r3, [r7, #12]
 530 007a 1B68     		ldr	r3, [r3]
 531 007c 9A68     		ldr	r2, [r3, #8]
 532 007e FB68     		ldr	r3, [r7, #12]
 533 0080 1B68     		ldr	r3, [r3]
 534 0082 22F02A02 		bic	r2, r2, #42
 535 0086 9A60     		str	r2, [r3, #8]
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 536              		.loc 1 549 0
 537 0088 7B68     		ldr	r3, [r7, #4]
 538 008a B3F5006F 		cmp	r3, #2048
 539 008e 0AD1     		bne	.L27
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 540              		.loc 1 552 0
ARM GAS  /tmp/cc3f4e78.s 			page 20


 541 0090 FB68     		ldr	r3, [r7, #12]
 542 0092 1B68     		ldr	r3, [r3]
 543 0094 5B68     		ldr	r3, [r3, #4]
 544 0096 23F07F41 		bic	r1, r3, #-16777216
 545 009a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 546 009c 1A06     		lsls	r2, r3, #24
 547 009e FB68     		ldr	r3, [r7, #12]
 548 00a0 1B68     		ldr	r3, [r3]
 549 00a2 0A43     		orrs	r2, r2, r1
 550 00a4 5A60     		str	r2, [r3, #4]
 551              	.L27:
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 552              		.loc 1 556 0
 553 00a6 FB68     		ldr	r3, [r7, #12]
 554 00a8 1B68     		ldr	r3, [r3]
 555 00aa 1B68     		ldr	r3, [r3]
 556 00ac 23F40061 		bic	r1, r3, #2048
 557 00b0 FB68     		ldr	r3, [r7, #12]
 558 00b2 1B68     		ldr	r3, [r3]
 559 00b4 7A68     		ldr	r2, [r7, #4]
 560 00b6 0A43     		orrs	r2, r2, r1
 561 00b8 1A60     		str	r2, [r3]
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Peripheral */
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 562              		.loc 1 559 0
 563 00ba FB68     		ldr	r3, [r7, #12]
 564 00bc 1B68     		ldr	r3, [r3]
 565 00be 1A68     		ldr	r2, [r3]
 566 00c0 FB68     		ldr	r3, [r7, #12]
 567 00c2 1B68     		ldr	r3, [r3]
 568 00c4 42F00102 		orr	r2, r2, #1
 569 00c8 1A60     		str	r2, [r3]
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 570              		.loc 1 562 0
 571 00ca F868     		ldr	r0, [r7, #12]
 572 00cc FFF7FEFF 		bl	UART_CheckIdleState
 573 00d0 0346     		mov	r3, r0
 574              	.L23:
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 575              		.loc 1 563 0
 576 00d2 1846     		mov	r0, r3
 577 00d4 1037     		adds	r7, r7, #16
 578              	.LCFI18:
 579              		.cfi_def_cfa_offset 8
 580 00d6 BD46     		mov	sp, r7
 581              	.LCFI19:
 582              		.cfi_def_cfa_register 13
 583              		@ sp needed
 584 00d8 80BD     		pop	{r7, pc}
 585              		.cfi_endproc
 586              	.LFE698:
ARM GAS  /tmp/cc3f4e78.s 			page 21


 588              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 589              		.align	1
 590              		.global	HAL_UART_DeInit
 591              		.syntax unified
 592              		.thumb
 593              		.thumb_func
 594              		.fpu fpv4-sp-d16
 596              	HAL_UART_DeInit:
 597              	.LFB699:
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 598              		.loc 1 572 0
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 8
 601              		@ frame_needed = 1, uses_anonymous_args = 0
 602 0000 80B5     		push	{r7, lr}
 603              	.LCFI20:
 604              		.cfi_def_cfa_offset 8
 605              		.cfi_offset 7, -8
 606              		.cfi_offset 14, -4
 607 0002 82B0     		sub	sp, sp, #8
 608              	.LCFI21:
 609              		.cfi_def_cfa_offset 16
 610 0004 00AF     		add	r7, sp, #0
 611              	.LCFI22:
 612              		.cfi_def_cfa_register 7
 613 0006 7860     		str	r0, [r7, #4]
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 614              		.loc 1 574 0
 615 0008 7B68     		ldr	r3, [r7, #4]
 616 000a 002B     		cmp	r3, #0
 617 000c 01D1     		bne	.L29
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 618              		.loc 1 576 0
 619 000e 0123     		movs	r3, #1
 620 0010 2AE0     		b	.L30
 621              	.L29:
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 622              		.loc 1 582 0
 623 0012 7B68     		ldr	r3, [r7, #4]
 624 0014 2422     		movs	r2, #36
 625 0016 83F86920 		strb	r2, [r3, #105]
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc3f4e78.s 			page 22


 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 626              		.loc 1 585 0
 627 001a 7B68     		ldr	r3, [r7, #4]
 628 001c 1B68     		ldr	r3, [r3]
 629 001e 1A68     		ldr	r2, [r3]
 630 0020 7B68     		ldr	r3, [r7, #4]
 631 0022 1B68     		ldr	r3, [r3]
 632 0024 22F00102 		bic	r2, r2, #1
 633 0028 1A60     		str	r2, [r3]
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 634              		.loc 1 587 0
 635 002a 7B68     		ldr	r3, [r7, #4]
 636 002c 1B68     		ldr	r3, [r3]
 637 002e 0022     		movs	r2, #0
 638 0030 1A60     		str	r2, [r3]
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 639              		.loc 1 588 0
 640 0032 7B68     		ldr	r3, [r7, #4]
 641 0034 1B68     		ldr	r3, [r3]
 642 0036 0022     		movs	r2, #0
 643 0038 5A60     		str	r2, [r3, #4]
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 644              		.loc 1 589 0
 645 003a 7B68     		ldr	r3, [r7, #4]
 646 003c 1B68     		ldr	r3, [r3]
 647 003e 0022     		movs	r2, #0
 648 0040 9A60     		str	r2, [r3, #8]
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DeInit the low level hardware */
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 649              		.loc 1 592 0
 650 0042 7868     		ldr	r0, [r7, #4]
 651 0044 FFF7FEFF 		bl	HAL_UART_MspDeInit
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 652              		.loc 1 594 0
 653 0048 7B68     		ldr	r3, [r7, #4]
 654 004a 0022     		movs	r2, #0
 655 004c DA66     		str	r2, [r3, #108]
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 656              		.loc 1 595 0
 657 004e 7B68     		ldr	r3, [r7, #4]
 658 0050 0022     		movs	r2, #0
 659 0052 83F86920 		strb	r2, [r3, #105]
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 660              		.loc 1 596 0
 661 0056 7B68     		ldr	r3, [r7, #4]
 662 0058 0022     		movs	r2, #0
 663 005a 83F86A20 		strb	r2, [r3, #106]
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlock */
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 664              		.loc 1 599 0
 665 005e 7B68     		ldr	r3, [r7, #4]
 666 0060 0022     		movs	r2, #0
ARM GAS  /tmp/cc3f4e78.s 			page 23


 667 0062 83F86820 		strb	r2, [r3, #104]
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 668              		.loc 1 601 0
 669 0066 0023     		movs	r3, #0
 670              	.L30:
 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 671              		.loc 1 602 0
 672 0068 1846     		mov	r0, r3
 673 006a 0837     		adds	r7, r7, #8
 674              	.LCFI23:
 675              		.cfi_def_cfa_offset 8
 676 006c BD46     		mov	sp, r7
 677              	.LCFI24:
 678              		.cfi_def_cfa_register 13
 679              		@ sp needed
 680 006e 80BD     		pop	{r7, pc}
 681              		.cfi_endproc
 682              	.LFE699:
 684              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 685              		.align	1
 686              		.weak	HAL_UART_MspInit
 687              		.syntax unified
 688              		.thumb
 689              		.thumb_func
 690              		.fpu fpv4-sp-d16
 692              	HAL_UART_MspInit:
 693              	.LFB700:
 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 694              		.loc 1 610 0
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 8
 697              		@ frame_needed = 1, uses_anonymous_args = 0
 698              		@ link register save eliminated.
 699 0000 80B4     		push	{r7}
 700              	.LCFI25:
 701              		.cfi_def_cfa_offset 4
 702              		.cfi_offset 7, -4
 703 0002 83B0     		sub	sp, sp, #12
 704              	.LCFI26:
 705              		.cfi_def_cfa_offset 16
 706 0004 00AF     		add	r7, sp, #0
 707              	.LCFI27:
 708              		.cfi_def_cfa_register 7
 709 0006 7860     		str	r0, [r7, #4]
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
ARM GAS  /tmp/cc3f4e78.s 			page 24


 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 710              		.loc 1 617 0
 711 0008 00BF     		nop
 712 000a 0C37     		adds	r7, r7, #12
 713              	.LCFI28:
 714              		.cfi_def_cfa_offset 4
 715 000c BD46     		mov	sp, r7
 716              	.LCFI29:
 717              		.cfi_def_cfa_register 13
 718              		@ sp needed
 719 000e 5DF8047B 		ldr	r7, [sp], #4
 720              	.LCFI30:
 721              		.cfi_restore 7
 722              		.cfi_def_cfa_offset 0
 723 0012 7047     		bx	lr
 724              		.cfi_endproc
 725              	.LFE700:
 727              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 728              		.align	1
 729              		.weak	HAL_UART_MspDeInit
 730              		.syntax unified
 731              		.thumb
 732              		.thumb_func
 733              		.fpu fpv4-sp-d16
 735              	HAL_UART_MspDeInit:
 736              	.LFB701:
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 737              		.loc 1 625 0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 8
 740              		@ frame_needed = 1, uses_anonymous_args = 0
 741              		@ link register save eliminated.
 742 0000 80B4     		push	{r7}
 743              	.LCFI31:
 744              		.cfi_def_cfa_offset 4
 745              		.cfi_offset 7, -4
 746 0002 83B0     		sub	sp, sp, #12
 747              	.LCFI32:
 748              		.cfi_def_cfa_offset 16
 749 0004 00AF     		add	r7, sp, #0
 750              	.LCFI33:
 751              		.cfi_def_cfa_register 7
 752 0006 7860     		str	r0, [r7, #4]
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
ARM GAS  /tmp/cc3f4e78.s 			page 25


 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 753              		.loc 1 632 0
 754 0008 00BF     		nop
 755 000a 0C37     		adds	r7, r7, #12
 756              	.LCFI34:
 757              		.cfi_def_cfa_offset 4
 758 000c BD46     		mov	sp, r7
 759              	.LCFI35:
 760              		.cfi_def_cfa_register 13
 761              		@ sp needed
 762 000e 5DF8047B 		ldr	r7, [sp], #4
 763              	.LCFI36:
 764              		.cfi_restore 7
 765              		.cfi_def_cfa_offset 0
 766 0012 7047     		bx	lr
 767              		.cfi_endproc
 768              	.LFE701:
 770              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 771              		.align	1
 772              		.global	HAL_UART_Transmit
 773              		.syntax unified
 774              		.thumb
 775              		.thumb_func
 776              		.fpu fpv4-sp-d16
 778              	HAL_UART_Transmit:
 779              	.LFB702:
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                       ##### IO operation functions #####
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     and Half duplex data transfers.
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) There are two mode of transfer:
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (++) Blocking mode: The communication is performed in polling mode.
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            after finishing transfer.
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (++) Non-Blocking mode: The communication is performed using Interrupts
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The end of the data processing will be indicated through the
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            using DMA mode.
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Blocking mode API's are :
 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Transmit()
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Receive()
ARM GAS  /tmp/cc3f4e78.s 			page 26


 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Transmit_IT()
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Receive_IT()
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_IRQHandler()
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Transmit_DMA()
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Receive_DMA()
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_DMAPause()
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_DMAResume()
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_DMAStop()
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_TxHalfCpltCallback()
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_TxCpltCallback()
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_RxHalfCpltCallback()
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_RxCpltCallback()
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_ErrorCallback()
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Abort()
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortTransmit()
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortReceive()
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Abort_IT()
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortTransmit_IT()
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortReceive_IT()
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortCpltCallback()
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortTransmitCpltCallback()
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortReceiveCpltCallback()
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         Errors are handled as follows :
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Error is considered as Recoverable and non blocking : Transfer could go till end, but 
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in In
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              Received character is then retrieved and stored in Rx buffer, Error code is set to all
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UA
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              If user wants to abort it, Abort services should be called by user.
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Error is considered as Blocking : Transfer could not be completed properly and is abor
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() u
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData Pointer to data buffer.
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size Amount of data to be sent.
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Timeout Timeout duration.
ARM GAS  /tmp/cc3f4e78.s 			page 27


 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 780              		.loc 1 724 0
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 24
 783              		@ frame_needed = 1, uses_anonymous_args = 0
 784 0000 80B5     		push	{r7, lr}
 785              	.LCFI37:
 786              		.cfi_def_cfa_offset 8
 787              		.cfi_offset 7, -8
 788              		.cfi_offset 14, -4
 789 0002 88B0     		sub	sp, sp, #32
 790              	.LCFI38:
 791              		.cfi_def_cfa_offset 40
 792 0004 02AF     		add	r7, sp, #8
 793              	.LCFI39:
 794              		.cfi_def_cfa 7, 32
 795 0006 F860     		str	r0, [r7, #12]
 796 0008 B960     		str	r1, [r7, #8]
 797 000a 3B60     		str	r3, [r7]
 798 000c 1346     		mov	r3, r2	@ movhi
 799 000e FB80     		strh	r3, [r7, #6]	@ movhi
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart = 0U;
 800              		.loc 1 726 0
 801 0010 0023     		movs	r3, #0
 802 0012 7B61     		str	r3, [r7, #20]
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 803              		.loc 1 729 0
 804 0014 FB68     		ldr	r3, [r7, #12]
 805 0016 93F86930 		ldrb	r3, [r3, #105]
 806 001a DBB2     		uxtb	r3, r3
 807 001c 202B     		cmp	r3, #32
 808 001e 77D1     		bne	.L34
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 809              		.loc 1 731 0
 810 0020 BB68     		ldr	r3, [r7, #8]
 811 0022 002B     		cmp	r3, #0
 812 0024 02D0     		beq	.L35
 813              		.loc 1 731 0 is_stmt 0 discriminator 1
 814 0026 FB88     		ldrh	r3, [r7, #6]
 815 0028 002B     		cmp	r3, #0
 816 002a 01D1     		bne	.L36
 817              	.L35:
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return  HAL_ERROR;
 818              		.loc 1 733 0 is_stmt 1
 819 002c 0123     		movs	r3, #1
 820 002e 70E0     		b	.L37
 821              	.L36:
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc3f4e78.s 			page 28


 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 822              		.loc 1 737 0
 823 0030 FB68     		ldr	r3, [r7, #12]
 824 0032 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 825 0036 012B     		cmp	r3, #1
 826 0038 01D1     		bne	.L38
 827              		.loc 1 737 0 is_stmt 0 discriminator 1
 828 003a 0223     		movs	r3, #2
 829 003c 69E0     		b	.L37
 830              	.L38:
 831              		.loc 1 737 0 discriminator 2
 832 003e FB68     		ldr	r3, [r7, #12]
 833 0040 0122     		movs	r2, #1
 834 0042 83F86820 		strb	r2, [r3, #104]
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 835              		.loc 1 739 0 is_stmt 1 discriminator 2
 836 0046 FB68     		ldr	r3, [r7, #12]
 837 0048 0022     		movs	r2, #0
 838 004a DA66     		str	r2, [r3, #108]
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 839              		.loc 1 740 0 discriminator 2
 840 004c FB68     		ldr	r3, [r7, #12]
 841 004e 2122     		movs	r2, #33
 842 0050 83F86920 		strb	r2, [r3, #105]
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     tickstart = HAL_GetTick();
 843              		.loc 1 743 0 discriminator 2
 844 0054 FFF7FEFF 		bl	HAL_GetTick
 845 0058 7861     		str	r0, [r7, #20]
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 846              		.loc 1 745 0 discriminator 2
 847 005a FB68     		ldr	r3, [r7, #12]
 848 005c FA88     		ldrh	r2, [r7, #6]	@ movhi
 849 005e A3F85020 		strh	r2, [r3, #80]	@ movhi
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 850              		.loc 1 746 0 discriminator 2
 851 0062 FB68     		ldr	r3, [r7, #12]
 852 0064 FA88     		ldrh	r2, [r7, #6]	@ movhi
 853 0066 A3F85220 		strh	r2, [r3, #82]	@ movhi
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 854              		.loc 1 747 0 discriminator 2
 855 006a 34E0     		b	.L39
 856              	.L42:
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount--;
 857              		.loc 1 749 0
 858 006c FB68     		ldr	r3, [r7, #12]
 859 006e B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 860 0072 9BB2     		uxth	r3, r3
 861 0074 013B     		subs	r3, r3, #1
 862 0076 9AB2     		uxth	r2, r3
 863 0078 FB68     		ldr	r3, [r7, #12]
 864 007a A3F85220 		strh	r2, [r3, #82]	@ movhi
ARM GAS  /tmp/cc3f4e78.s 			page 29


 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 865              		.loc 1 750 0
 866 007e 3B68     		ldr	r3, [r7]
 867 0080 0093     		str	r3, [sp]
 868 0082 7B69     		ldr	r3, [r7, #20]
 869 0084 0022     		movs	r2, #0
 870 0086 8021     		movs	r1, #128
 871 0088 F868     		ldr	r0, [r7, #12]
 872 008a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 873 008e 0346     		mov	r3, r0
 874 0090 002B     		cmp	r3, #0
 875 0092 01D0     		beq	.L40
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
 876              		.loc 1 752 0
 877 0094 0323     		movs	r3, #3
 878 0096 3CE0     		b	.L37
 879              	.L40:
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 880              		.loc 1 754 0
 881 0098 FB68     		ldr	r3, [r7, #12]
 882 009a 9B68     		ldr	r3, [r3, #8]
 883 009c B3F5805F 		cmp	r3, #4096
 884 00a0 11D1     		bne	.L41
 885              		.loc 1 754 0 is_stmt 0 discriminator 1
 886 00a2 FB68     		ldr	r3, [r7, #12]
 887 00a4 1B69     		ldr	r3, [r3, #16]
 888 00a6 002B     		cmp	r3, #0
 889 00a8 0DD1     		bne	.L41
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 890              		.loc 1 756 0 is_stmt 1
 891 00aa BB68     		ldr	r3, [r7, #8]
 892 00ac 3B61     		str	r3, [r7, #16]
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 893              		.loc 1 757 0
 894 00ae 3B69     		ldr	r3, [r7, #16]
 895 00b0 1A88     		ldrh	r2, [r3]
 896 00b2 FB68     		ldr	r3, [r7, #12]
 897 00b4 1B68     		ldr	r3, [r3]
 898 00b6 C2F30802 		ubfx	r2, r2, #0, #9
 899 00ba 92B2     		uxth	r2, r2
 900 00bc 1A85     		strh	r2, [r3, #40]	@ movhi
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pData += 2U;
 901              		.loc 1 758 0
 902 00be BB68     		ldr	r3, [r7, #8]
 903 00c0 0233     		adds	r3, r3, #2
 904 00c2 BB60     		str	r3, [r7, #8]
 905 00c4 07E0     		b	.L39
 906              	.L41:
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
 907              		.loc 1 762 0
 908 00c6 BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/cc3f4e78.s 			page 30


 909 00c8 5A1C     		adds	r2, r3, #1
 910 00ca BA60     		str	r2, [r7, #8]
 911 00cc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 912 00ce FB68     		ldr	r3, [r7, #12]
 913 00d0 1B68     		ldr	r3, [r3]
 914 00d2 92B2     		uxth	r2, r2
 915 00d4 1A85     		strh	r2, [r3, #40]	@ movhi
 916              	.L39:
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 917              		.loc 1 747 0
 918 00d6 FB68     		ldr	r3, [r7, #12]
 919 00d8 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 920 00dc 9BB2     		uxth	r3, r3
 921 00de 002B     		cmp	r3, #0
 922 00e0 C4D1     		bne	.L42
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 923              		.loc 1 765 0
 924 00e2 3B68     		ldr	r3, [r7]
 925 00e4 0093     		str	r3, [sp]
 926 00e6 7B69     		ldr	r3, [r7, #20]
 927 00e8 0022     		movs	r2, #0
 928 00ea 4021     		movs	r1, #64
 929 00ec F868     		ldr	r0, [r7, #12]
 930 00ee FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 931 00f2 0346     		mov	r3, r0
 932 00f4 002B     		cmp	r3, #0
 933 00f6 01D0     		beq	.L43
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
 934              		.loc 1 767 0
 935 00f8 0323     		movs	r3, #3
 936 00fa 0AE0     		b	.L37
 937              	.L43:
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 938              		.loc 1 771 0
 939 00fc FB68     		ldr	r3, [r7, #12]
 940 00fe 2022     		movs	r2, #32
 941 0100 83F86920 		strb	r2, [r3, #105]
 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 942              		.loc 1 774 0
 943 0104 FB68     		ldr	r3, [r7, #12]
 944 0106 0022     		movs	r2, #0
 945 0108 83F86820 		strb	r2, [r3, #104]
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 946              		.loc 1 776 0
 947 010c 0023     		movs	r3, #0
 948 010e 00E0     		b	.L37
 949              	.L34:
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
ARM GAS  /tmp/cc3f4e78.s 			page 31


 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 950              		.loc 1 780 0
 951 0110 0223     		movs	r3, #2
 952              	.L37:
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 953              		.loc 1 782 0
 954 0112 1846     		mov	r0, r3
 955 0114 1837     		adds	r7, r7, #24
 956              	.LCFI40:
 957              		.cfi_def_cfa_offset 8
 958 0116 BD46     		mov	sp, r7
 959              	.LCFI41:
 960              		.cfi_def_cfa_register 13
 961              		@ sp needed
 962 0118 80BD     		pop	{r7, pc}
 963              		.cfi_endproc
 964              	.LFE702:
 966              		.section	.text.HAL_UART_Receive,"ax",%progbits
 967              		.align	1
 968              		.global	HAL_UART_Receive
 969              		.syntax unified
 970              		.thumb
 971              		.thumb_func
 972              		.fpu fpv4-sp-d16
 974              	HAL_UART_Receive:
 975              	.LFB703:
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData pointer to data buffer.
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size amount of data to be received.
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Timeout Timeout duration.
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 976              		.loc 1 793 0
 977              		.cfi_startproc
 978              		@ args = 0, pretend = 0, frame = 32
 979              		@ frame_needed = 1, uses_anonymous_args = 0
 980 0000 80B5     		push	{r7, lr}
 981              	.LCFI42:
 982              		.cfi_def_cfa_offset 8
 983              		.cfi_offset 7, -8
 984              		.cfi_offset 14, -4
 985 0002 8AB0     		sub	sp, sp, #40
 986              	.LCFI43:
 987              		.cfi_def_cfa_offset 48
 988 0004 02AF     		add	r7, sp, #8
 989              	.LCFI44:
 990              		.cfi_def_cfa 7, 40
 991 0006 F860     		str	r0, [r7, #12]
 992 0008 B960     		str	r1, [r7, #8]
ARM GAS  /tmp/cc3f4e78.s 			page 32


 993 000a 3B60     		str	r3, [r7]
 994 000c 1346     		mov	r3, r2	@ movhi
 995 000e FB80     		strh	r3, [r7, #6]	@ movhi
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t uhMask;
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart = 0U;
 996              		.loc 1 796 0
 997 0010 0023     		movs	r3, #0
 998 0012 FB61     		str	r3, [r7, #28]
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 999              		.loc 1 799 0
 1000 0014 FB68     		ldr	r3, [r7, #12]
 1001 0016 93F86A30 		ldrb	r3, [r3, #106]
 1002 001a DBB2     		uxtb	r3, r3
 1003 001c 202B     		cmp	r3, #32
 1004 001e 40F0AD80 		bne	.L45
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 1005              		.loc 1 801 0
 1006 0022 BB68     		ldr	r3, [r7, #8]
 1007 0024 002B     		cmp	r3, #0
 1008 0026 02D0     		beq	.L46
 1009              		.loc 1 801 0 is_stmt 0 discriminator 1
 1010 0028 FB88     		ldrh	r3, [r7, #6]
 1011 002a 002B     		cmp	r3, #0
 1012 002c 01D1     		bne	.L47
 1013              	.L46:
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return  HAL_ERROR;
 1014              		.loc 1 803 0 is_stmt 1
 1015 002e 0123     		movs	r3, #1
 1016 0030 A5E0     		b	.L48
 1017              	.L47:
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 1018              		.loc 1 807 0
 1019 0032 FB68     		ldr	r3, [r7, #12]
 1020 0034 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1021 0038 012B     		cmp	r3, #1
 1022 003a 01D1     		bne	.L49
 1023              		.loc 1 807 0 is_stmt 0 discriminator 1
 1024 003c 0223     		movs	r3, #2
 1025 003e 9EE0     		b	.L48
 1026              	.L49:
 1027              		.loc 1 807 0 discriminator 2
 1028 0040 FB68     		ldr	r3, [r7, #12]
 1029 0042 0122     		movs	r2, #1
 1030 0044 83F86820 		strb	r2, [r3, #104]
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1031              		.loc 1 809 0 is_stmt 1 discriminator 2
 1032 0048 FB68     		ldr	r3, [r7, #12]
 1033 004a 0022     		movs	r2, #0
ARM GAS  /tmp/cc3f4e78.s 			page 33


 1034 004c DA66     		str	r2, [r3, #108]
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1035              		.loc 1 810 0 discriminator 2
 1036 004e FB68     		ldr	r3, [r7, #12]
 1037 0050 2222     		movs	r2, #34
 1038 0052 83F86A20 		strb	r2, [r3, #106]
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     tickstart = HAL_GetTick();
 1039              		.loc 1 813 0 discriminator 2
 1040 0056 FFF7FEFF 		bl	HAL_GetTick
 1041 005a F861     		str	r0, [r7, #28]
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 1042              		.loc 1 815 0 discriminator 2
 1043 005c FB68     		ldr	r3, [r7, #12]
 1044 005e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1045 0060 A3F85820 		strh	r2, [r3, #88]	@ movhi
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 1046              		.loc 1 816 0 discriminator 2
 1047 0064 FB68     		ldr	r3, [r7, #12]
 1048 0066 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1049 0068 A3F85A20 		strh	r2, [r3, #90]	@ movhi
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 1050              		.loc 1 819 0 discriminator 2
 1051 006c FB68     		ldr	r3, [r7, #12]
 1052 006e 9B68     		ldr	r3, [r3, #8]
 1053 0070 B3F5805F 		cmp	r3, #4096
 1054 0074 0ED1     		bne	.L50
 1055              		.loc 1 819 0 is_stmt 0 discriminator 1
 1056 0076 FB68     		ldr	r3, [r7, #12]
 1057 0078 1B69     		ldr	r3, [r3, #16]
 1058 007a 002B     		cmp	r3, #0
 1059 007c 05D1     		bne	.L51
 1060              		.loc 1 819 0 discriminator 3
 1061 007e FB68     		ldr	r3, [r7, #12]
 1062 0080 40F2FF12 		movw	r2, #511
 1063 0084 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1064 0088 28E0     		b	.L53
 1065              	.L51:
 1066              		.loc 1 819 0 discriminator 4
 1067 008a FB68     		ldr	r3, [r7, #12]
 1068 008c FF22     		movs	r2, #255
 1069 008e A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1070 0092 23E0     		b	.L53
 1071              	.L50:
 1072              		.loc 1 819 0 discriminator 2
 1073 0094 FB68     		ldr	r3, [r7, #12]
 1074 0096 9B68     		ldr	r3, [r3, #8]
 1075 0098 002B     		cmp	r3, #0
 1076 009a 0DD1     		bne	.L54
 1077              		.loc 1 819 0 discriminator 5
 1078 009c FB68     		ldr	r3, [r7, #12]
 1079 009e 1B69     		ldr	r3, [r3, #16]
 1080 00a0 002B     		cmp	r3, #0
ARM GAS  /tmp/cc3f4e78.s 			page 34


 1081 00a2 04D1     		bne	.L55
 1082              		.loc 1 819 0 discriminator 7
 1083 00a4 FB68     		ldr	r3, [r7, #12]
 1084 00a6 FF22     		movs	r2, #255
 1085 00a8 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1086 00ac 16E0     		b	.L53
 1087              	.L55:
 1088              		.loc 1 819 0 discriminator 8
 1089 00ae FB68     		ldr	r3, [r7, #12]
 1090 00b0 7F22     		movs	r2, #127
 1091 00b2 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1092 00b6 11E0     		b	.L53
 1093              	.L54:
 1094              		.loc 1 819 0 discriminator 6
 1095 00b8 FB68     		ldr	r3, [r7, #12]
 1096 00ba 9B68     		ldr	r3, [r3, #8]
 1097 00bc B3F1805F 		cmp	r3, #268435456
 1098 00c0 0CD1     		bne	.L53
 1099              		.loc 1 819 0 discriminator 9
 1100 00c2 FB68     		ldr	r3, [r7, #12]
 1101 00c4 1B69     		ldr	r3, [r3, #16]
 1102 00c6 002B     		cmp	r3, #0
 1103 00c8 04D1     		bne	.L57
 1104              		.loc 1 819 0 discriminator 10
 1105 00ca FB68     		ldr	r3, [r7, #12]
 1106 00cc 7F22     		movs	r2, #127
 1107 00ce A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1108 00d2 03E0     		b	.L53
 1109              	.L57:
 1110              		.loc 1 819 0 discriminator 11
 1111 00d4 FB68     		ldr	r3, [r7, #12]
 1112 00d6 3F22     		movs	r2, #63
 1113 00d8 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1114              	.L53:
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 1115              		.loc 1 820 0 is_stmt 1
 1116 00dc FB68     		ldr	r3, [r7, #12]
 1117 00de B3F85C30 		ldrh	r3, [r3, #92]	@ movhi
 1118 00e2 7B83     		strh	r3, [r7, #26]	@ movhi
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* as long as data have to be received */
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 1119              		.loc 1 823 0
 1120 00e4 3AE0     		b	.L58
 1121              	.L61:
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxXferCount--;
 1122              		.loc 1 825 0
 1123 00e6 FB68     		ldr	r3, [r7, #12]
 1124 00e8 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 1125 00ec 9BB2     		uxth	r3, r3
 1126 00ee 013B     		subs	r3, r3, #1
 1127 00f0 9AB2     		uxth	r2, r3
 1128 00f2 FB68     		ldr	r3, [r7, #12]
 1129 00f4 A3F85A20 		strh	r2, [r3, #90]	@ movhi
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1130              		.loc 1 826 0
ARM GAS  /tmp/cc3f4e78.s 			page 35


 1131 00f8 3B68     		ldr	r3, [r7]
 1132 00fa 0093     		str	r3, [sp]
 1133 00fc FB69     		ldr	r3, [r7, #28]
 1134 00fe 0022     		movs	r2, #0
 1135 0100 2021     		movs	r1, #32
 1136 0102 F868     		ldr	r0, [r7, #12]
 1137 0104 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1138 0108 0346     		mov	r3, r0
 1139 010a 002B     		cmp	r3, #0
 1140 010c 01D0     		beq	.L59
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
 1141              		.loc 1 828 0
 1142 010e 0323     		movs	r3, #3
 1143 0110 35E0     		b	.L48
 1144              	.L59:
 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 1145              		.loc 1 830 0
 1146 0112 FB68     		ldr	r3, [r7, #12]
 1147 0114 9B68     		ldr	r3, [r3, #8]
 1148 0116 B3F5805F 		cmp	r3, #4096
 1149 011a 12D1     		bne	.L60
 1150              		.loc 1 830 0 is_stmt 0 discriminator 1
 1151 011c FB68     		ldr	r3, [r7, #12]
 1152 011e 1B69     		ldr	r3, [r3, #16]
 1153 0120 002B     		cmp	r3, #0
 1154 0122 0ED1     		bne	.L60
 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         tmp = (uint16_t*) pData ;
 1155              		.loc 1 832 0 is_stmt 1
 1156 0124 BB68     		ldr	r3, [r7, #8]
 1157 0126 7B61     		str	r3, [r7, #20]
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 1158              		.loc 1 833 0
 1159 0128 FB68     		ldr	r3, [r7, #12]
 1160 012a 1B68     		ldr	r3, [r3]
 1161 012c 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 1162 012e 9AB2     		uxth	r2, r3
 1163 0130 7B8B     		ldrh	r3, [r7, #26]	@ movhi
 1164 0132 1340     		ands	r3, r3, r2
 1165 0134 9AB2     		uxth	r2, r3
 1166 0136 7B69     		ldr	r3, [r7, #20]
 1167 0138 1A80     		strh	r2, [r3]	@ movhi
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pData +=2U;
 1168              		.loc 1 834 0
 1169 013a BB68     		ldr	r3, [r7, #8]
 1170 013c 0233     		adds	r3, r3, #2
 1171 013e BB60     		str	r3, [r7, #8]
 1172 0140 0CE0     		b	.L58
 1173              	.L60:
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 1174              		.loc 1 838 0
 1175 0142 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cc3f4e78.s 			page 36


 1176 0144 1B68     		ldr	r3, [r3]
 1177 0146 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 1178 0148 9BB2     		uxth	r3, r3
 1179 014a D9B2     		uxtb	r1, r3
 1180 014c 7B8B     		ldrh	r3, [r7, #26]	@ movhi
 1181 014e DAB2     		uxtb	r2, r3
 1182 0150 BB68     		ldr	r3, [r7, #8]
 1183 0152 581C     		adds	r0, r3, #1
 1184 0154 B860     		str	r0, [r7, #8]
 1185 0156 0A40     		ands	r2, r2, r1
 1186 0158 D2B2     		uxtb	r2, r2
 1187 015a 1A70     		strb	r2, [r3]
 1188              	.L58:
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1189              		.loc 1 823 0
 1190 015c FB68     		ldr	r3, [r7, #12]
 1191 015e B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 1192 0162 9BB2     		uxth	r3, r3
 1193 0164 002B     		cmp	r3, #0
 1194 0166 BED1     		bne	.L61
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1195              		.loc 1 843 0
 1196 0168 FB68     		ldr	r3, [r7, #12]
 1197 016a 2022     		movs	r2, #32
 1198 016c 83F86A20 		strb	r2, [r3, #106]
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1199              		.loc 1 846 0
 1200 0170 FB68     		ldr	r3, [r7, #12]
 1201 0172 0022     		movs	r2, #0
 1202 0174 83F86820 		strb	r2, [r3, #104]
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 1203              		.loc 1 848 0
 1204 0178 0023     		movs	r3, #0
 1205 017a 00E0     		b	.L48
 1206              	.L45:
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 1207              		.loc 1 852 0
 1208 017c 0223     		movs	r3, #2
 1209              	.L48:
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1210              		.loc 1 854 0
 1211 017e 1846     		mov	r0, r3
 1212 0180 2037     		adds	r7, r7, #32
 1213              	.LCFI45:
 1214              		.cfi_def_cfa_offset 8
 1215 0182 BD46     		mov	sp, r7
ARM GAS  /tmp/cc3f4e78.s 			page 37


 1216              	.LCFI46:
 1217              		.cfi_def_cfa_register 13
 1218              		@ sp needed
 1219 0184 80BD     		pop	{r7, pc}
 1220              		.cfi_endproc
 1221              	.LFE703:
 1223              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1224              		.align	1
 1225              		.global	HAL_UART_Transmit_IT
 1226              		.syntax unified
 1227              		.thumb
 1228              		.thumb_func
 1229              		.fpu fpv4-sp-d16
 1231              	HAL_UART_Transmit_IT:
 1232              	.LFB704:
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData pointer to data buffer.
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size amount of data to be sent.
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1233              		.loc 1 864 0
 1234              		.cfi_startproc
 1235              		@ args = 0, pretend = 0, frame = 16
 1236              		@ frame_needed = 1, uses_anonymous_args = 0
 1237              		@ link register save eliminated.
 1238 0000 80B4     		push	{r7}
 1239              	.LCFI47:
 1240              		.cfi_def_cfa_offset 4
 1241              		.cfi_offset 7, -4
 1242 0002 85B0     		sub	sp, sp, #20
 1243              	.LCFI48:
 1244              		.cfi_def_cfa_offset 24
 1245 0004 00AF     		add	r7, sp, #0
 1246              	.LCFI49:
 1247              		.cfi_def_cfa_register 7
 1248 0006 F860     		str	r0, [r7, #12]
 1249 0008 B960     		str	r1, [r7, #8]
 1250 000a 1346     		mov	r3, r2
 1251 000c FB80     		strh	r3, [r7, #6]	@ movhi
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 1252              		.loc 1 866 0
 1253 000e FB68     		ldr	r3, [r7, #12]
 1254 0010 93F86930 		ldrb	r3, [r3, #105]
 1255 0014 DBB2     		uxtb	r3, r3
 1256 0016 202B     		cmp	r3, #32
 1257 0018 32D1     		bne	.L63
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 1258              		.loc 1 868 0
 1259 001a BB68     		ldr	r3, [r7, #8]
 1260 001c 002B     		cmp	r3, #0
ARM GAS  /tmp/cc3f4e78.s 			page 38


 1261 001e 02D0     		beq	.L64
 1262              		.loc 1 868 0 is_stmt 0 discriminator 1
 1263 0020 FB88     		ldrh	r3, [r7, #6]
 1264 0022 002B     		cmp	r3, #0
 1265 0024 01D1     		bne	.L65
 1266              	.L64:
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
 1267              		.loc 1 870 0 is_stmt 1
 1268 0026 0123     		movs	r3, #1
 1269 0028 2BE0     		b	.L66
 1270              	.L65:
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 1271              		.loc 1 874 0
 1272 002a FB68     		ldr	r3, [r7, #12]
 1273 002c 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1274 0030 012B     		cmp	r3, #1
 1275 0032 01D1     		bne	.L67
 1276              		.loc 1 874 0 is_stmt 0 discriminator 1
 1277 0034 0223     		movs	r3, #2
 1278 0036 24E0     		b	.L66
 1279              	.L67:
 1280              		.loc 1 874 0 discriminator 2
 1281 0038 FB68     		ldr	r3, [r7, #12]
 1282 003a 0122     		movs	r2, #1
 1283 003c 83F86820 		strb	r2, [r3, #104]
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1284              		.loc 1 876 0 is_stmt 1 discriminator 2
 1285 0040 FB68     		ldr	r3, [r7, #12]
 1286 0042 BA68     		ldr	r2, [r7, #8]
 1287 0044 DA64     		str	r2, [r3, #76]
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 1288              		.loc 1 877 0 discriminator 2
 1289 0046 FB68     		ldr	r3, [r7, #12]
 1290 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1291 004a A3F85020 		strh	r2, [r3, #80]	@ movhi
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 1292              		.loc 1 878 0 discriminator 2
 1293 004e FB68     		ldr	r3, [r7, #12]
 1294 0050 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1295 0052 A3F85220 		strh	r2, [r3, #82]	@ movhi
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1296              		.loc 1 880 0 discriminator 2
 1297 0056 FB68     		ldr	r3, [r7, #12]
 1298 0058 0022     		movs	r2, #0
 1299 005a DA66     		str	r2, [r3, #108]
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1300              		.loc 1 881 0 discriminator 2
 1301 005c FB68     		ldr	r3, [r7, #12]
 1302 005e 2122     		movs	r2, #33
 1303 0060 83F86920 		strb	r2, [r3, #105]
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc3f4e78.s 			page 39


 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1304              		.loc 1 884 0 discriminator 2
 1305 0064 FB68     		ldr	r3, [r7, #12]
 1306 0066 0022     		movs	r2, #0
 1307 0068 83F86820 		strb	r2, [r3, #104]
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Transmit Data Register Empty Interrupt */
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 1308              		.loc 1 887 0 discriminator 2
 1309 006c FB68     		ldr	r3, [r7, #12]
 1310 006e 1B68     		ldr	r3, [r3]
 1311 0070 1A68     		ldr	r2, [r3]
 1312 0072 FB68     		ldr	r3, [r7, #12]
 1313 0074 1B68     		ldr	r3, [r3]
 1314 0076 42F08002 		orr	r2, r2, #128
 1315 007a 1A60     		str	r2, [r3]
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 1316              		.loc 1 889 0 discriminator 2
 1317 007c 0023     		movs	r3, #0
 1318 007e 00E0     		b	.L66
 1319              	.L63:
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 1320              		.loc 1 893 0
 1321 0080 0223     		movs	r3, #2
 1322              	.L66:
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1323              		.loc 1 895 0
 1324 0082 1846     		mov	r0, r3
 1325 0084 1437     		adds	r7, r7, #20
 1326              	.LCFI50:
 1327              		.cfi_def_cfa_offset 4
 1328 0086 BD46     		mov	sp, r7
 1329              	.LCFI51:
 1330              		.cfi_def_cfa_register 13
 1331              		@ sp needed
 1332 0088 5DF8047B 		ldr	r7, [sp], #4
 1333              	.LCFI52:
 1334              		.cfi_restore 7
 1335              		.cfi_def_cfa_offset 0
 1336 008c 7047     		bx	lr
 1337              		.cfi_endproc
 1338              	.LFE704:
 1340              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1341              		.align	1
 1342              		.global	HAL_UART_Receive_IT
 1343              		.syntax unified
 1344              		.thumb
 1345              		.thumb_func
 1346              		.fpu fpv4-sp-d16
 1348              	HAL_UART_Receive_IT:
 1349              	.LFB705:
ARM GAS  /tmp/cc3f4e78.s 			page 40


 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData pointer to data buffer.
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size amount of data to be received.
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1350              		.loc 1 905 0
 1351              		.cfi_startproc
 1352              		@ args = 0, pretend = 0, frame = 16
 1353              		@ frame_needed = 1, uses_anonymous_args = 0
 1354              		@ link register save eliminated.
 1355 0000 80B4     		push	{r7}
 1356              	.LCFI53:
 1357              		.cfi_def_cfa_offset 4
 1358              		.cfi_offset 7, -4
 1359 0002 85B0     		sub	sp, sp, #20
 1360              	.LCFI54:
 1361              		.cfi_def_cfa_offset 24
 1362 0004 00AF     		add	r7, sp, #0
 1363              	.LCFI55:
 1364              		.cfi_def_cfa_register 7
 1365 0006 F860     		str	r0, [r7, #12]
 1366 0008 B960     		str	r1, [r7, #8]
 1367 000a 1346     		mov	r3, r2
 1368 000c FB80     		strh	r3, [r7, #6]	@ movhi
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 1369              		.loc 1 907 0
 1370 000e FB68     		ldr	r3, [r7, #12]
 1371 0010 93F86A30 		ldrb	r3, [r3, #106]
 1372 0014 DBB2     		uxtb	r3, r3
 1373 0016 202B     		cmp	r3, #32
 1374 0018 72D1     		bne	.L69
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 1375              		.loc 1 909 0
 1376 001a BB68     		ldr	r3, [r7, #8]
 1377 001c 002B     		cmp	r3, #0
 1378 001e 02D0     		beq	.L70
 1379              		.loc 1 909 0 is_stmt 0 discriminator 1
 1380 0020 FB88     		ldrh	r3, [r7, #6]
 1381 0022 002B     		cmp	r3, #0
 1382 0024 01D1     		bne	.L71
 1383              	.L70:
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
 1384              		.loc 1 911 0 is_stmt 1
 1385 0026 0123     		movs	r3, #1
 1386 0028 6BE0     		b	.L72
 1387              	.L71:
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
ARM GAS  /tmp/cc3f4e78.s 			page 41


 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 1388              		.loc 1 915 0
 1389 002a FB68     		ldr	r3, [r7, #12]
 1390 002c 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1391 0030 012B     		cmp	r3, #1
 1392 0032 01D1     		bne	.L73
 1393              		.loc 1 915 0 is_stmt 0 discriminator 1
 1394 0034 0223     		movs	r3, #2
 1395 0036 64E0     		b	.L72
 1396              	.L73:
 1397              		.loc 1 915 0 discriminator 2
 1398 0038 FB68     		ldr	r3, [r7, #12]
 1399 003a 0122     		movs	r2, #1
 1400 003c 83F86820 		strb	r2, [r3, #104]
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1401              		.loc 1 917 0 is_stmt 1 discriminator 2
 1402 0040 FB68     		ldr	r3, [r7, #12]
 1403 0042 BA68     		ldr	r2, [r7, #8]
 1404 0044 5A65     		str	r2, [r3, #84]
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 1405              		.loc 1 918 0 discriminator 2
 1406 0046 FB68     		ldr	r3, [r7, #12]
 1407 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1408 004a A3F85820 		strh	r2, [r3, #88]	@ movhi
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 1409              		.loc 1 919 0 discriminator 2
 1410 004e FB68     		ldr	r3, [r7, #12]
 1411 0050 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1412 0052 A3F85A20 		strh	r2, [r3, #90]	@ movhi
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 1413              		.loc 1 922 0 discriminator 2
 1414 0056 FB68     		ldr	r3, [r7, #12]
 1415 0058 9B68     		ldr	r3, [r3, #8]
 1416 005a B3F5805F 		cmp	r3, #4096
 1417 005e 0ED1     		bne	.L74
 1418              		.loc 1 922 0 is_stmt 0 discriminator 1
 1419 0060 FB68     		ldr	r3, [r7, #12]
 1420 0062 1B69     		ldr	r3, [r3, #16]
 1421 0064 002B     		cmp	r3, #0
 1422 0066 05D1     		bne	.L75
 1423              		.loc 1 922 0 discriminator 3
 1424 0068 FB68     		ldr	r3, [r7, #12]
 1425 006a 40F2FF12 		movw	r2, #511
 1426 006e A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1427 0072 28E0     		b	.L77
 1428              	.L75:
 1429              		.loc 1 922 0 discriminator 4
 1430 0074 FB68     		ldr	r3, [r7, #12]
 1431 0076 FF22     		movs	r2, #255
 1432 0078 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1433 007c 23E0     		b	.L77
 1434              	.L74:
 1435              		.loc 1 922 0 discriminator 2
 1436 007e FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cc3f4e78.s 			page 42


 1437 0080 9B68     		ldr	r3, [r3, #8]
 1438 0082 002B     		cmp	r3, #0
 1439 0084 0DD1     		bne	.L78
 1440              		.loc 1 922 0 discriminator 5
 1441 0086 FB68     		ldr	r3, [r7, #12]
 1442 0088 1B69     		ldr	r3, [r3, #16]
 1443 008a 002B     		cmp	r3, #0
 1444 008c 04D1     		bne	.L79
 1445              		.loc 1 922 0 discriminator 7
 1446 008e FB68     		ldr	r3, [r7, #12]
 1447 0090 FF22     		movs	r2, #255
 1448 0092 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1449 0096 16E0     		b	.L77
 1450              	.L79:
 1451              		.loc 1 922 0 discriminator 8
 1452 0098 FB68     		ldr	r3, [r7, #12]
 1453 009a 7F22     		movs	r2, #127
 1454 009c A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1455 00a0 11E0     		b	.L77
 1456              	.L78:
 1457              		.loc 1 922 0 discriminator 6
 1458 00a2 FB68     		ldr	r3, [r7, #12]
 1459 00a4 9B68     		ldr	r3, [r3, #8]
 1460 00a6 B3F1805F 		cmp	r3, #268435456
 1461 00aa 0CD1     		bne	.L77
 1462              		.loc 1 922 0 discriminator 9
 1463 00ac FB68     		ldr	r3, [r7, #12]
 1464 00ae 1B69     		ldr	r3, [r3, #16]
 1465 00b0 002B     		cmp	r3, #0
 1466 00b2 04D1     		bne	.L81
 1467              		.loc 1 922 0 discriminator 10
 1468 00b4 FB68     		ldr	r3, [r7, #12]
 1469 00b6 7F22     		movs	r2, #127
 1470 00b8 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1471 00bc 03E0     		b	.L77
 1472              	.L81:
 1473              		.loc 1 922 0 discriminator 11
 1474 00be FB68     		ldr	r3, [r7, #12]
 1475 00c0 3F22     		movs	r2, #63
 1476 00c2 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1477              	.L77:
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1478              		.loc 1 924 0 is_stmt 1
 1479 00c6 FB68     		ldr	r3, [r7, #12]
 1480 00c8 0022     		movs	r2, #0
 1481 00ca DA66     		str	r2, [r3, #108]
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1482              		.loc 1 925 0
 1483 00cc FB68     		ldr	r3, [r7, #12]
 1484 00ce 2222     		movs	r2, #34
 1485 00d0 83F86A20 		strb	r2, [r3, #106]
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1486              		.loc 1 928 0
 1487 00d4 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cc3f4e78.s 			page 43


 1488 00d6 0022     		movs	r2, #0
 1489 00d8 83F86820 		strb	r2, [r3, #104]
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1490              		.loc 1 931 0
 1491 00dc FB68     		ldr	r3, [r7, #12]
 1492 00de 1B68     		ldr	r3, [r3]
 1493 00e0 9A68     		ldr	r2, [r3, #8]
 1494 00e2 FB68     		ldr	r3, [r7, #12]
 1495 00e4 1B68     		ldr	r3, [r3]
 1496 00e6 42F00102 		orr	r2, r2, #1
 1497 00ea 9A60     		str	r2, [r3, #8]
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Parity Error and Data Register not empty Interrupts */
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 1498              		.loc 1 934 0
 1499 00ec FB68     		ldr	r3, [r7, #12]
 1500 00ee 1B68     		ldr	r3, [r3]
 1501 00f0 1A68     		ldr	r2, [r3]
 1502 00f2 FB68     		ldr	r3, [r7, #12]
 1503 00f4 1B68     		ldr	r3, [r3]
 1504 00f6 42F49072 		orr	r2, r2, #288
 1505 00fa 1A60     		str	r2, [r3]
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 1506              		.loc 1 936 0
 1507 00fc 0023     		movs	r3, #0
 1508 00fe 00E0     		b	.L72
 1509              	.L69:
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 1510              		.loc 1 940 0
 1511 0100 0223     		movs	r3, #2
 1512              	.L72:
 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1513              		.loc 1 942 0
 1514 0102 1846     		mov	r0, r3
 1515 0104 1437     		adds	r7, r7, #20
 1516              	.LCFI56:
 1517              		.cfi_def_cfa_offset 4
 1518 0106 BD46     		mov	sp, r7
 1519              	.LCFI57:
 1520              		.cfi_def_cfa_register 13
 1521              		@ sp needed
 1522 0108 5DF8047B 		ldr	r7, [sp], #4
 1523              	.LCFI58:
 1524              		.cfi_restore 7
 1525              		.cfi_def_cfa_offset 0
 1526 010c 7047     		bx	lr
 1527              		.cfi_endproc
 1528              	.LFE705:
 1530              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1531              		.align	1
ARM GAS  /tmp/cc3f4e78.s 			page 44


 1532              		.global	HAL_UART_Transmit_DMA
 1533              		.syntax unified
 1534              		.thumb
 1535              		.thumb_func
 1536              		.fpu fpv4-sp-d16
 1538              	HAL_UART_Transmit_DMA:
 1539              	.LFB706:
 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData pointer to data buffer.
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size amount of data to be sent.
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note This function starts a DMA transfer in interrupt mode meaning that
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *       DMA half transfer complete, DMA transfer complete and DMA transfer
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *       error interrupts are enabled
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1540              		.loc 1 955 0
 1541              		.cfi_startproc
 1542              		@ args = 0, pretend = 0, frame = 16
 1543              		@ frame_needed = 1, uses_anonymous_args = 0
 1544 0000 80B5     		push	{r7, lr}
 1545              	.LCFI59:
 1546              		.cfi_def_cfa_offset 8
 1547              		.cfi_offset 7, -8
 1548              		.cfi_offset 14, -4
 1549 0002 84B0     		sub	sp, sp, #16
 1550              	.LCFI60:
 1551              		.cfi_def_cfa_offset 24
 1552 0004 00AF     		add	r7, sp, #0
 1553              	.LCFI61:
 1554              		.cfi_def_cfa_register 7
 1555 0006 F860     		str	r0, [r7, #12]
 1556 0008 B960     		str	r1, [r7, #8]
 1557 000a 1346     		mov	r3, r2
 1558 000c FB80     		strh	r3, [r7, #6]	@ movhi
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if UART instance supports continuous communication using DMA */
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_DMA_INSTANCE(huart->Instance));
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 1559              		.loc 1 960 0
 1560 000e FB68     		ldr	r3, [r7, #12]
 1561 0010 93F86930 		ldrb	r3, [r3, #105]
 1562 0014 DBB2     		uxtb	r3, r3
 1563 0016 202B     		cmp	r3, #32
 1564 0018 52D1     		bne	.L83
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 1565              		.loc 1 962 0
 1566 001a BB68     		ldr	r3, [r7, #8]
 1567 001c 002B     		cmp	r3, #0
 1568 001e 02D0     		beq	.L84
 1569              		.loc 1 962 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/cc3f4e78.s 			page 45


 1570 0020 FB88     		ldrh	r3, [r7, #6]
 1571 0022 002B     		cmp	r3, #0
 1572 0024 01D1     		bne	.L85
 1573              	.L84:
 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
 1574              		.loc 1 964 0 is_stmt 1
 1575 0026 0123     		movs	r3, #1
 1576 0028 4BE0     		b	.L86
 1577              	.L85:
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 1578              		.loc 1 968 0
 1579 002a FB68     		ldr	r3, [r7, #12]
 1580 002c 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1581 0030 012B     		cmp	r3, #1
 1582 0032 01D1     		bne	.L87
 1583              		.loc 1 968 0 is_stmt 0 discriminator 1
 1584 0034 0223     		movs	r3, #2
 1585 0036 44E0     		b	.L86
 1586              	.L87:
 1587              		.loc 1 968 0 discriminator 2
 1588 0038 FB68     		ldr	r3, [r7, #12]
 1589 003a 0122     		movs	r2, #1
 1590 003c 83F86820 		strb	r2, [r3, #104]
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1591              		.loc 1 970 0 is_stmt 1 discriminator 2
 1592 0040 FB68     		ldr	r3, [r7, #12]
 1593 0042 BA68     		ldr	r2, [r7, #8]
 1594 0044 DA64     		str	r2, [r3, #76]
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 1595              		.loc 1 971 0 discriminator 2
 1596 0046 FB68     		ldr	r3, [r7, #12]
 1597 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1598 004a A3F85020 		strh	r2, [r3, #80]	@ movhi
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 1599              		.loc 1 972 0 discriminator 2
 1600 004e FB68     		ldr	r3, [r7, #12]
 1601 0050 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1602 0052 A3F85220 		strh	r2, [r3, #82]	@ movhi
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1603              		.loc 1 974 0 discriminator 2
 1604 0056 FB68     		ldr	r3, [r7, #12]
 1605 0058 0022     		movs	r2, #0
 1606 005a DA66     		str	r2, [r3, #108]
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1607              		.loc 1 975 0 discriminator 2
 1608 005c FB68     		ldr	r3, [r7, #12]
 1609 005e 2122     		movs	r2, #33
 1610 0060 83F86920 		strb	r2, [r3, #105]
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
ARM GAS  /tmp/cc3f4e78.s 			page 46


 1611              		.loc 1 978 0 discriminator 2
 1612 0064 FB68     		ldr	r3, [r7, #12]
 1613 0066 1B6E     		ldr	r3, [r3, #96]
 1614 0068 184A     		ldr	r2, .L88
 1615 006a 9A62     		str	r2, [r3, #40]
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 1616              		.loc 1 981 0 discriminator 2
 1617 006c FB68     		ldr	r3, [r7, #12]
 1618 006e 1B6E     		ldr	r3, [r3, #96]
 1619 0070 174A     		ldr	r2, .L88+4
 1620 0072 DA62     		str	r2, [r3, #44]
 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the DMA error callback */
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 1621              		.loc 1 984 0 discriminator 2
 1622 0074 FB68     		ldr	r3, [r7, #12]
 1623 0076 1B6E     		ldr	r3, [r3, #96]
 1624 0078 164A     		ldr	r2, .L88+8
 1625 007a 1A63     		str	r2, [r3, #48]
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the DMA abort callback */
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 1626              		.loc 1 987 0 discriminator 2
 1627 007c FB68     		ldr	r3, [r7, #12]
 1628 007e 1B6E     		ldr	r3, [r3, #96]
 1629 0080 0022     		movs	r2, #0
 1630 0082 5A63     		str	r2, [r3, #52]
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->TDR, S
 1631              		.loc 1 990 0 discriminator 2
 1632 0084 FB68     		ldr	r3, [r7, #12]
 1633 0086 186E     		ldr	r0, [r3, #96]
 1634 0088 FB68     		ldr	r3, [r7, #12]
 1635 008a DB6C     		ldr	r3, [r3, #76]
 1636 008c 1946     		mov	r1, r3
 1637 008e FB68     		ldr	r3, [r7, #12]
 1638 0090 1B68     		ldr	r3, [r3]
 1639 0092 2833     		adds	r3, r3, #40
 1640 0094 1A46     		mov	r2, r3
 1641 0096 FB88     		ldrh	r3, [r7, #6]
 1642 0098 FFF7FEFF 		bl	HAL_DMA_Start_IT
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
 1643              		.loc 1 993 0 discriminator 2
 1644 009c FB68     		ldr	r3, [r7, #12]
 1645 009e 1B68     		ldr	r3, [r3]
 1646 00a0 4022     		movs	r2, #64
 1647 00a2 1A62     		str	r2, [r3, #32]
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1648              		.loc 1 996 0 discriminator 2
 1649 00a4 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cc3f4e78.s 			page 47


 1650 00a6 0022     		movs	r2, #0
 1651 00a8 83F86820 		strb	r2, [r3, #104]
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1652              		.loc 1 1000 0 discriminator 2
 1653 00ac FB68     		ldr	r3, [r7, #12]
 1654 00ae 1B68     		ldr	r3, [r3]
 1655 00b0 9A68     		ldr	r2, [r3, #8]
 1656 00b2 FB68     		ldr	r3, [r7, #12]
 1657 00b4 1B68     		ldr	r3, [r3]
 1658 00b6 42F08002 		orr	r2, r2, #128
 1659 00ba 9A60     		str	r2, [r3, #8]
1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 1660              		.loc 1 1002 0 discriminator 2
 1661 00bc 0023     		movs	r3, #0
 1662 00be 00E0     		b	.L86
 1663              	.L83:
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 1664              		.loc 1 1006 0
 1665 00c0 0223     		movs	r3, #2
 1666              	.L86:
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1667              		.loc 1 1008 0
 1668 00c2 1846     		mov	r0, r3
 1669 00c4 1037     		adds	r7, r7, #16
 1670              	.LCFI62:
 1671              		.cfi_def_cfa_offset 8
 1672 00c6 BD46     		mov	sp, r7
 1673              	.LCFI63:
 1674              		.cfi_def_cfa_register 13
 1675              		@ sp needed
 1676 00c8 80BD     		pop	{r7, pc}
 1677              	.L89:
 1678 00ca 00BF     		.align	2
 1679              	.L88:
 1680 00cc 00000000 		.word	UART_DMATransmitCplt
 1681 00d0 00000000 		.word	UART_DMATxHalfCplt
 1682 00d4 00000000 		.word	UART_DMAError
 1683              		.cfi_endproc
 1684              	.LFE706:
 1686              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1687              		.align	1
 1688              		.global	HAL_UART_Receive_DMA
 1689              		.syntax unified
 1690              		.thumb
 1691              		.thumb_func
 1692              		.fpu fpv4-sp-d16
 1694              	HAL_UART_Receive_DMA:
 1695              	.LFB707:
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc3f4e78.s 			page 48


1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData pointer to data buffer.
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size amount of data to be received.
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         the parity bit (MSB position).
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note This function starts a DMA transfer in interrupt mode meaning that
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *       DMA half transfer complete, DMA transfer complete and DMA transfer
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *       error interrupts are enabled
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1696              		.loc 1 1023 0
 1697              		.cfi_startproc
 1698              		@ args = 0, pretend = 0, frame = 16
 1699              		@ frame_needed = 1, uses_anonymous_args = 0
 1700 0000 80B5     		push	{r7, lr}
 1701              	.LCFI64:
 1702              		.cfi_def_cfa_offset 8
 1703              		.cfi_offset 7, -8
 1704              		.cfi_offset 14, -4
 1705 0002 84B0     		sub	sp, sp, #16
 1706              	.LCFI65:
 1707              		.cfi_def_cfa_offset 24
 1708 0004 00AF     		add	r7, sp, #0
 1709              	.LCFI66:
 1710              		.cfi_def_cfa_register 7
 1711 0006 F860     		str	r0, [r7, #12]
 1712 0008 B960     		str	r1, [r7, #8]
 1713 000a 1346     		mov	r3, r2
 1714 000c FB80     		strh	r3, [r7, #6]	@ movhi
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if UART instance supports continuous communication using DMA */
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_DMA_INSTANCE(huart->Instance));
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 1715              		.loc 1 1028 0
 1716 000e FB68     		ldr	r3, [r7, #12]
 1717 0010 93F86A30 		ldrb	r3, [r3, #106]
 1718 0014 DBB2     		uxtb	r3, r3
 1719 0016 202B     		cmp	r3, #32
 1720 0018 5AD1     		bne	.L91
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 1721              		.loc 1 1030 0
 1722 001a BB68     		ldr	r3, [r7, #8]
 1723 001c 002B     		cmp	r3, #0
 1724 001e 02D0     		beq	.L92
 1725              		.loc 1 1030 0 is_stmt 0 discriminator 1
 1726 0020 FB88     		ldrh	r3, [r7, #6]
 1727 0022 002B     		cmp	r3, #0
 1728 0024 01D1     		bne	.L93
 1729              	.L92:
1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
ARM GAS  /tmp/cc3f4e78.s 			page 49


 1730              		.loc 1 1032 0 is_stmt 1
 1731 0026 0123     		movs	r3, #1
 1732 0028 53E0     		b	.L94
 1733              	.L93:
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 1734              		.loc 1 1036 0
 1735 002a FB68     		ldr	r3, [r7, #12]
 1736 002c 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1737 0030 012B     		cmp	r3, #1
 1738 0032 01D1     		bne	.L95
 1739              		.loc 1 1036 0 is_stmt 0 discriminator 1
 1740 0034 0223     		movs	r3, #2
 1741 0036 4CE0     		b	.L94
 1742              	.L95:
 1743              		.loc 1 1036 0 discriminator 2
 1744 0038 FB68     		ldr	r3, [r7, #12]
 1745 003a 0122     		movs	r2, #1
 1746 003c 83F86820 		strb	r2, [r3, #104]
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1747              		.loc 1 1038 0 is_stmt 1 discriminator 2
 1748 0040 FB68     		ldr	r3, [r7, #12]
 1749 0042 BA68     		ldr	r2, [r7, #8]
 1750 0044 5A65     		str	r2, [r3, #84]
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 1751              		.loc 1 1039 0 discriminator 2
 1752 0046 FB68     		ldr	r3, [r7, #12]
 1753 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1754 004a A3F85820 		strh	r2, [r3, #88]	@ movhi
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1755              		.loc 1 1041 0 discriminator 2
 1756 004e FB68     		ldr	r3, [r7, #12]
 1757 0050 0022     		movs	r2, #0
 1758 0052 DA66     		str	r2, [r3, #108]
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1759              		.loc 1 1042 0 discriminator 2
 1760 0054 FB68     		ldr	r3, [r7, #12]
 1761 0056 2222     		movs	r2, #34
 1762 0058 83F86A20 		strb	r2, [r3, #106]
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 1763              		.loc 1 1045 0 discriminator 2
 1764 005c FB68     		ldr	r3, [r7, #12]
 1765 005e 5B6E     		ldr	r3, [r3, #100]
 1766 0060 1E4A     		ldr	r2, .L96
 1767 0062 9A62     		str	r2, [r3, #40]
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 1768              		.loc 1 1048 0 discriminator 2
 1769 0064 FB68     		ldr	r3, [r7, #12]
 1770 0066 5B6E     		ldr	r3, [r3, #100]
ARM GAS  /tmp/cc3f4e78.s 			page 50


 1771 0068 1D4A     		ldr	r2, .L96+4
 1772 006a DA62     		str	r2, [r3, #44]
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the DMA error callback */
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 1773              		.loc 1 1051 0 discriminator 2
 1774 006c FB68     		ldr	r3, [r7, #12]
 1775 006e 5B6E     		ldr	r3, [r3, #100]
 1776 0070 1C4A     		ldr	r2, .L96+8
 1777 0072 1A63     		str	r2, [r3, #48]
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the DMA abort callback */
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
 1778              		.loc 1 1054 0 discriminator 2
 1779 0074 FB68     		ldr	r3, [r7, #12]
 1780 0076 5B6E     		ldr	r3, [r3, #100]
 1781 0078 0022     		movs	r2, #0
 1782 007a 5A63     		str	r2, [r3, #52]
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the DMA channel */
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuffPtr, S
 1783              		.loc 1 1057 0 discriminator 2
 1784 007c FB68     		ldr	r3, [r7, #12]
 1785 007e 586E     		ldr	r0, [r3, #100]
 1786 0080 FB68     		ldr	r3, [r7, #12]
 1787 0082 1B68     		ldr	r3, [r3]
 1788 0084 2433     		adds	r3, r3, #36
 1789 0086 1946     		mov	r1, r3
 1790 0088 FB68     		ldr	r3, [r7, #12]
 1791 008a 5B6D     		ldr	r3, [r3, #84]
 1792 008c 1A46     		mov	r2, r3
 1793 008e FB88     		ldrh	r3, [r7, #6]
 1794 0090 FFF7FEFF 		bl	HAL_DMA_Start_IT
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1795              		.loc 1 1060 0 discriminator 2
 1796 0094 FB68     		ldr	r3, [r7, #12]
 1797 0096 0022     		movs	r2, #0
 1798 0098 83F86820 		strb	r2, [r3, #104]
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1799              		.loc 1 1063 0 discriminator 2
 1800 009c FB68     		ldr	r3, [r7, #12]
 1801 009e 1B68     		ldr	r3, [r3]
 1802 00a0 1A68     		ldr	r2, [r3]
 1803 00a2 FB68     		ldr	r3, [r7, #12]
 1804 00a4 1B68     		ldr	r3, [r3]
 1805 00a6 42F48072 		orr	r2, r2, #256
 1806 00aa 1A60     		str	r2, [r3]
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1807              		.loc 1 1066 0 discriminator 2
 1808 00ac FB68     		ldr	r3, [r7, #12]
 1809 00ae 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc3f4e78.s 			page 51


 1810 00b0 9A68     		ldr	r2, [r3, #8]
 1811 00b2 FB68     		ldr	r3, [r7, #12]
 1812 00b4 1B68     		ldr	r3, [r3]
 1813 00b6 42F00102 		orr	r2, r2, #1
 1814 00ba 9A60     		str	r2, [r3, #8]
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1815              		.loc 1 1070 0 discriminator 2
 1816 00bc FB68     		ldr	r3, [r7, #12]
 1817 00be 1B68     		ldr	r3, [r3]
 1818 00c0 9A68     		ldr	r2, [r3, #8]
 1819 00c2 FB68     		ldr	r3, [r7, #12]
 1820 00c4 1B68     		ldr	r3, [r3]
 1821 00c6 42F04002 		orr	r2, r2, #64
 1822 00ca 9A60     		str	r2, [r3, #8]
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 1823              		.loc 1 1072 0 discriminator 2
 1824 00cc 0023     		movs	r3, #0
 1825 00ce 00E0     		b	.L94
 1826              	.L91:
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 1827              		.loc 1 1076 0
 1828 00d0 0223     		movs	r3, #2
 1829              	.L94:
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1830              		.loc 1 1078 0
 1831 00d2 1846     		mov	r0, r3
 1832 00d4 1037     		adds	r7, r7, #16
 1833              	.LCFI67:
 1834              		.cfi_def_cfa_offset 8
 1835 00d6 BD46     		mov	sp, r7
 1836              	.LCFI68:
 1837              		.cfi_def_cfa_register 13
 1838              		@ sp needed
 1839 00d8 80BD     		pop	{r7, pc}
 1840              	.L97:
 1841 00da 00BF     		.align	2
 1842              	.L96:
 1843 00dc 00000000 		.word	UART_DMAReceiveCplt
 1844 00e0 00000000 		.word	UART_DMARxHalfCplt
 1845 00e4 00000000 		.word	UART_DMAError
 1846              		.cfi_endproc
 1847              	.LFE707:
 1849              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1850              		.align	1
 1851              		.global	HAL_UART_DMAPause
 1852              		.syntax unified
 1853              		.thumb
 1854              		.thumb_func
 1855              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cc3f4e78.s 			page 52


 1857              	HAL_UART_DMAPause:
 1858              	.LFB708:
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Pause the DMA Transfer.
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1859              		.loc 1 1086 0
 1860              		.cfi_startproc
 1861              		@ args = 0, pretend = 0, frame = 8
 1862              		@ frame_needed = 1, uses_anonymous_args = 0
 1863              		@ link register save eliminated.
 1864 0000 80B4     		push	{r7}
 1865              	.LCFI69:
 1866              		.cfi_def_cfa_offset 4
 1867              		.cfi_offset 7, -4
 1868 0002 83B0     		sub	sp, sp, #12
 1869              	.LCFI70:
 1870              		.cfi_def_cfa_offset 16
 1871 0004 00AF     		add	r7, sp, #0
 1872              	.LCFI71:
 1873              		.cfi_def_cfa_register 7
 1874 0006 7860     		str	r0, [r7, #4]
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 1875              		.loc 1 1088 0
 1876 0008 7B68     		ldr	r3, [r7, #4]
 1877 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1878 000e 012B     		cmp	r3, #1
 1879 0010 01D1     		bne	.L99
 1880              		.loc 1 1088 0 is_stmt 0 discriminator 1
 1881 0012 0223     		movs	r3, #2
 1882 0014 42E0     		b	.L100
 1883              	.L99:
 1884              		.loc 1 1088 0 discriminator 2
 1885 0016 7B68     		ldr	r3, [r7, #4]
 1886 0018 0122     		movs	r2, #1
 1887 001a 83F86820 		strb	r2, [r3, #104]
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
 1888              		.loc 1 1090 0 is_stmt 1 discriminator 2
 1889 001e 7B68     		ldr	r3, [r7, #4]
 1890 0020 93F86930 		ldrb	r3, [r3, #105]
 1891 0024 DBB2     		uxtb	r3, r3
 1892 0026 212B     		cmp	r3, #33
 1893 0028 0ED1     		bne	.L101
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 1894              		.loc 1 1091 0 discriminator 1
 1895 002a 7B68     		ldr	r3, [r7, #4]
 1896 002c 1B68     		ldr	r3, [r3]
 1897 002e 9B68     		ldr	r3, [r3, #8]
 1898 0030 03F08003 		and	r3, r3, #128
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 1899              		.loc 1 1090 0 discriminator 1
ARM GAS  /tmp/cc3f4e78.s 			page 53


 1900 0034 002B     		cmp	r3, #0
 1901 0036 07D0     		beq	.L101
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1902              		.loc 1 1094 0
 1903 0038 7B68     		ldr	r3, [r7, #4]
 1904 003a 1B68     		ldr	r3, [r3]
 1905 003c 9A68     		ldr	r2, [r3, #8]
 1906 003e 7B68     		ldr	r3, [r7, #4]
 1907 0040 1B68     		ldr	r3, [r3]
 1908 0042 22F08002 		bic	r2, r2, #128
 1909 0046 9A60     		str	r2, [r3, #8]
 1910              	.L101:
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
 1911              		.loc 1 1096 0
 1912 0048 7B68     		ldr	r3, [r7, #4]
 1913 004a 93F86A30 		ldrb	r3, [r3, #106]
 1914 004e DBB2     		uxtb	r3, r3
 1915 0050 222B     		cmp	r3, #34
 1916 0052 1ED1     		bne	.L102
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1917              		.loc 1 1097 0 discriminator 1
 1918 0054 7B68     		ldr	r3, [r7, #4]
 1919 0056 1B68     		ldr	r3, [r3]
 1920 0058 9B68     		ldr	r3, [r3, #8]
 1921 005a 03F04003 		and	r3, r3, #64
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1922              		.loc 1 1096 0 discriminator 1
 1923 005e 002B     		cmp	r3, #0
 1924 0060 17D0     		beq	.L102
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1925              		.loc 1 1100 0
 1926 0062 7B68     		ldr	r3, [r7, #4]
 1927 0064 1B68     		ldr	r3, [r3]
 1928 0066 1A68     		ldr	r2, [r3]
 1929 0068 7B68     		ldr	r3, [r7, #4]
 1930 006a 1B68     		ldr	r3, [r3]
 1931 006c 22F48072 		bic	r2, r2, #256
 1932 0070 1A60     		str	r2, [r3]
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1933              		.loc 1 1101 0
 1934 0072 7B68     		ldr	r3, [r7, #4]
 1935 0074 1B68     		ldr	r3, [r3]
 1936 0076 9A68     		ldr	r2, [r3, #8]
 1937 0078 7B68     		ldr	r3, [r7, #4]
 1938 007a 1B68     		ldr	r3, [r3]
 1939 007c 22F00102 		bic	r2, r2, #1
 1940 0080 9A60     		str	r2, [r3, #8]
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1941              		.loc 1 1104 0
 1942 0082 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc3f4e78.s 			page 54


 1943 0084 1B68     		ldr	r3, [r3]
 1944 0086 9A68     		ldr	r2, [r3, #8]
 1945 0088 7B68     		ldr	r3, [r7, #4]
 1946 008a 1B68     		ldr	r3, [r3]
 1947 008c 22F04002 		bic	r2, r2, #64
 1948 0090 9A60     		str	r2, [r3, #8]
 1949              	.L102:
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 1950              		.loc 1 1108 0
 1951 0092 7B68     		ldr	r3, [r7, #4]
 1952 0094 0022     		movs	r2, #0
 1953 0096 83F86820 		strb	r2, [r3, #104]
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 1954              		.loc 1 1110 0
 1955 009a 0023     		movs	r3, #0
 1956              	.L100:
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1957              		.loc 1 1111 0
 1958 009c 1846     		mov	r0, r3
 1959 009e 0C37     		adds	r7, r7, #12
 1960              	.LCFI72:
 1961              		.cfi_def_cfa_offset 4
 1962 00a0 BD46     		mov	sp, r7
 1963              	.LCFI73:
 1964              		.cfi_def_cfa_register 13
 1965              		@ sp needed
 1966 00a2 5DF8047B 		ldr	r7, [sp], #4
 1967              	.LCFI74:
 1968              		.cfi_restore 7
 1969              		.cfi_def_cfa_offset 0
 1970 00a6 7047     		bx	lr
 1971              		.cfi_endproc
 1972              	.LFE708:
 1974              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1975              		.align	1
 1976              		.global	HAL_UART_DMAResume
 1977              		.syntax unified
 1978              		.thumb
 1979              		.thumb_func
 1980              		.fpu fpv4-sp-d16
 1982              	HAL_UART_DMAResume:
 1983              	.LFB709:
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Resume the DMA Transfer.
1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1984              		.loc 1 1119 0
 1985              		.cfi_startproc
 1986              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/cc3f4e78.s 			page 55


 1987              		@ frame_needed = 1, uses_anonymous_args = 0
 1988              		@ link register save eliminated.
 1989 0000 80B4     		push	{r7}
 1990              	.LCFI75:
 1991              		.cfi_def_cfa_offset 4
 1992              		.cfi_offset 7, -4
 1993 0002 83B0     		sub	sp, sp, #12
 1994              	.LCFI76:
 1995              		.cfi_def_cfa_offset 16
 1996 0004 00AF     		add	r7, sp, #0
 1997              	.LCFI77:
 1998              		.cfi_def_cfa_register 7
 1999 0006 7860     		str	r0, [r7, #4]
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 2000              		.loc 1 1121 0
 2001 0008 7B68     		ldr	r3, [r7, #4]
 2002 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 2003 000e 012B     		cmp	r3, #1
 2004 0010 01D1     		bne	.L104
 2005              		.loc 1 1121 0 is_stmt 0 discriminator 1
 2006 0012 0223     		movs	r3, #2
 2007 0014 38E0     		b	.L105
 2008              	.L104:
 2009              		.loc 1 1121 0 discriminator 2
 2010 0016 7B68     		ldr	r3, [r7, #4]
 2011 0018 0122     		movs	r2, #1
 2012 001a 83F86820 		strb	r2, [r3, #104]
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
 2013              		.loc 1 1123 0 is_stmt 1 discriminator 2
 2014 001e 7B68     		ldr	r3, [r7, #4]
 2015 0020 93F86930 		ldrb	r3, [r3, #105]
 2016 0024 DBB2     		uxtb	r3, r3
 2017 0026 212B     		cmp	r3, #33
 2018 0028 07D1     		bne	.L106
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2019              		.loc 1 1126 0
 2020 002a 7B68     		ldr	r3, [r7, #4]
 2021 002c 1B68     		ldr	r3, [r3]
 2022 002e 9A68     		ldr	r2, [r3, #8]
 2023 0030 7B68     		ldr	r3, [r7, #4]
 2024 0032 1B68     		ldr	r3, [r3]
 2025 0034 42F08002 		orr	r2, r2, #128
 2026 0038 9A60     		str	r2, [r3, #8]
 2027              	.L106:
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 2028              		.loc 1 1128 0
 2029 003a 7B68     		ldr	r3, [r7, #4]
 2030 003c 93F86A30 		ldrb	r3, [r3, #106]
 2031 0040 DBB2     		uxtb	r3, r3
 2032 0042 222B     		cmp	r3, #34
 2033 0044 1BD1     		bne	.L107
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
ARM GAS  /tmp/cc3f4e78.s 			page 56


1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 2034              		.loc 1 1131 0
 2035 0046 7B68     		ldr	r3, [r7, #4]
 2036 0048 1B68     		ldr	r3, [r3]
 2037 004a 0822     		movs	r2, #8
 2038 004c 1A62     		str	r2, [r3, #32]
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2039              		.loc 1 1134 0
 2040 004e 7B68     		ldr	r3, [r7, #4]
 2041 0050 1B68     		ldr	r3, [r3]
 2042 0052 1A68     		ldr	r2, [r3]
 2043 0054 7B68     		ldr	r3, [r7, #4]
 2044 0056 1B68     		ldr	r3, [r3]
 2045 0058 42F48072 		orr	r2, r2, #256
 2046 005c 1A60     		str	r2, [r3]
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2047              		.loc 1 1135 0
 2048 005e 7B68     		ldr	r3, [r7, #4]
 2049 0060 1B68     		ldr	r3, [r3]
 2050 0062 9A68     		ldr	r2, [r3, #8]
 2051 0064 7B68     		ldr	r3, [r7, #4]
 2052 0066 1B68     		ldr	r3, [r3]
 2053 0068 42F00102 		orr	r2, r2, #1
 2054 006c 9A60     		str	r2, [r3, #8]
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2055              		.loc 1 1138 0
 2056 006e 7B68     		ldr	r3, [r7, #4]
 2057 0070 1B68     		ldr	r3, [r3]
 2058 0072 9A68     		ldr	r2, [r3, #8]
 2059 0074 7B68     		ldr	r3, [r7, #4]
 2060 0076 1B68     		ldr	r3, [r3]
 2061 0078 42F04002 		orr	r2, r2, #64
 2062 007c 9A60     		str	r2, [r3, #8]
 2063              	.L107:
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2064              		.loc 1 1142 0
 2065 007e 7B68     		ldr	r3, [r7, #4]
 2066 0080 0022     		movs	r2, #0
 2067 0082 83F86820 		strb	r2, [r3, #104]
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 2068              		.loc 1 1144 0
 2069 0086 0023     		movs	r3, #0
 2070              	.L105:
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2071              		.loc 1 1145 0
 2072 0088 1846     		mov	r0, r3
 2073 008a 0C37     		adds	r7, r7, #12
 2074              	.LCFI78:
ARM GAS  /tmp/cc3f4e78.s 			page 57


 2075              		.cfi_def_cfa_offset 4
 2076 008c BD46     		mov	sp, r7
 2077              	.LCFI79:
 2078              		.cfi_def_cfa_register 13
 2079              		@ sp needed
 2080 008e 5DF8047B 		ldr	r7, [sp], #4
 2081              	.LCFI80:
 2082              		.cfi_restore 7
 2083              		.cfi_def_cfa_offset 0
 2084 0092 7047     		bx	lr
 2085              		.cfi_endproc
 2086              	.LFE709:
 2088              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2089              		.align	1
 2090              		.global	HAL_UART_DMAStop
 2091              		.syntax unified
 2092              		.thumb
 2093              		.thumb_func
 2094              		.fpu fpv4-sp-d16
 2096              	HAL_UART_DMAStop:
 2097              	.LFB710:
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Stop the DMA Transfer.
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 2098              		.loc 1 1153 0
 2099              		.cfi_startproc
 2100              		@ args = 0, pretend = 0, frame = 8
 2101              		@ frame_needed = 1, uses_anonymous_args = 0
 2102 0000 80B5     		push	{r7, lr}
 2103              	.LCFI81:
 2104              		.cfi_def_cfa_offset 8
 2105              		.cfi_offset 7, -8
 2106              		.cfi_offset 14, -4
 2107 0002 82B0     		sub	sp, sp, #8
 2108              	.LCFI82:
 2109              		.cfi_def_cfa_offset 16
 2110 0004 00AF     		add	r7, sp, #0
 2111              	.LCFI83:
 2112              		.cfi_def_cfa_register 7
 2113 0006 7860     		str	r0, [r7, #4]
1154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback: 
1157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete  
1158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of 
1159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
 2114              		.loc 1 1162 0
 2115 0008 7B68     		ldr	r3, [r7, #4]
 2116 000a 93F86930 		ldrb	r3, [r3, #105]
ARM GAS  /tmp/cc3f4e78.s 			page 58


 2117 000e DBB2     		uxtb	r3, r3
 2118 0010 212B     		cmp	r3, #33
 2119 0012 1AD1     		bne	.L109
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 2120              		.loc 1 1163 0 discriminator 1
 2121 0014 7B68     		ldr	r3, [r7, #4]
 2122 0016 1B68     		ldr	r3, [r3]
 2123 0018 9B68     		ldr	r3, [r3, #8]
 2124 001a 03F08003 		and	r3, r3, #128
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 2125              		.loc 1 1162 0 discriminator 1
 2126 001e 002B     		cmp	r3, #0
 2127 0020 13D0     		beq	.L109
1164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2128              		.loc 1 1165 0
 2129 0022 7B68     		ldr	r3, [r7, #4]
 2130 0024 1B68     		ldr	r3, [r3]
 2131 0026 9A68     		ldr	r2, [r3, #8]
 2132 0028 7B68     		ldr	r3, [r7, #4]
 2133 002a 1B68     		ldr	r3, [r3]
 2134 002c 22F08002 		bic	r2, r2, #128
 2135 0030 9A60     		str	r2, [r3, #8]
1166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
 2136              		.loc 1 1168 0
 2137 0032 7B68     		ldr	r3, [r7, #4]
 2138 0034 1B6E     		ldr	r3, [r3, #96]
 2139 0036 002B     		cmp	r3, #0
 2140 0038 04D0     		beq	.L110
1169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
 2141              		.loc 1 1170 0
 2142 003a 7B68     		ldr	r3, [r7, #4]
 2143 003c 1B6E     		ldr	r3, [r3, #96]
 2144 003e 1846     		mov	r0, r3
 2145 0040 FFF7FEFF 		bl	HAL_DMA_Abort
 2146              	.L110:
1171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2147              		.loc 1 1173 0
 2148 0044 7868     		ldr	r0, [r7, #4]
 2149 0046 FFF7FEFF 		bl	UART_EndTxTransfer
 2150              	.L109:
1174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
 2151              		.loc 1 1177 0
 2152 004a 7B68     		ldr	r3, [r7, #4]
 2153 004c 93F86A30 		ldrb	r3, [r3, #106]
 2154 0050 DBB2     		uxtb	r3, r3
 2155 0052 222B     		cmp	r3, #34
 2156 0054 1AD1     		bne	.L111
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
ARM GAS  /tmp/cc3f4e78.s 			page 59


 2157              		.loc 1 1178 0 discriminator 1
 2158 0056 7B68     		ldr	r3, [r7, #4]
 2159 0058 1B68     		ldr	r3, [r3]
 2160 005a 9B68     		ldr	r3, [r3, #8]
 2161 005c 03F04003 		and	r3, r3, #64
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2162              		.loc 1 1177 0 discriminator 1
 2163 0060 002B     		cmp	r3, #0
 2164 0062 13D0     		beq	.L111
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2165              		.loc 1 1180 0
 2166 0064 7B68     		ldr	r3, [r7, #4]
 2167 0066 1B68     		ldr	r3, [r3]
 2168 0068 9A68     		ldr	r2, [r3, #8]
 2169 006a 7B68     		ldr	r3, [r7, #4]
 2170 006c 1B68     		ldr	r3, [r3]
 2171 006e 22F04002 		bic	r2, r2, #64
 2172 0072 9A60     		str	r2, [r3, #8]
1181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
 2173              		.loc 1 1183 0
 2174 0074 7B68     		ldr	r3, [r7, #4]
 2175 0076 5B6E     		ldr	r3, [r3, #100]
 2176 0078 002B     		cmp	r3, #0
 2177 007a 04D0     		beq	.L112
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
 2178              		.loc 1 1185 0
 2179 007c 7B68     		ldr	r3, [r7, #4]
 2180 007e 5B6E     		ldr	r3, [r3, #100]
 2181 0080 1846     		mov	r0, r3
 2182 0082 FFF7FEFF 		bl	HAL_DMA_Abort
 2183              	.L112:
1186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2184              		.loc 1 1188 0
 2185 0086 7868     		ldr	r0, [r7, #4]
 2186 0088 FFF7FEFF 		bl	UART_EndRxTransfer
 2187              	.L111:
1189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 2188              		.loc 1 1191 0
 2189 008c 0023     		movs	r3, #0
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2190              		.loc 1 1192 0
 2191 008e 1846     		mov	r0, r3
 2192 0090 0837     		adds	r7, r7, #8
 2193              	.LCFI84:
 2194              		.cfi_def_cfa_offset 8
 2195 0092 BD46     		mov	sp, r7
 2196              	.LCFI85:
 2197              		.cfi_def_cfa_register 13
 2198              		@ sp needed
ARM GAS  /tmp/cc3f4e78.s 			page 60


 2199 0094 80BD     		pop	{r7, pc}
 2200              		.cfi_endproc
 2201              	.LFE710:
 2203              		.section	.text.HAL_UART_Abort,"ax",%progbits
 2204              		.align	1
 2205              		.global	HAL_UART_Abort
 2206              		.syntax unified
 2207              		.thumb
 2208              		.thumb_func
 2209              		.fpu fpv4-sp-d16
 2211              	HAL_UART_Abort:
 2212              	.LFB711:
1193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 2213              		.loc 1 1207 0
 2214              		.cfi_startproc
 2215              		@ args = 0, pretend = 0, frame = 8
 2216              		@ frame_needed = 1, uses_anonymous_args = 0
 2217 0000 80B5     		push	{r7, lr}
 2218              	.LCFI86:
 2219              		.cfi_def_cfa_offset 8
 2220              		.cfi_offset 7, -8
 2221              		.cfi_offset 14, -4
 2222 0002 82B0     		sub	sp, sp, #8
 2223              	.LCFI87:
 2224              		.cfi_def_cfa_offset 16
 2225 0004 00AF     		add	r7, sp, #0
 2226              	.LCFI88:
 2227              		.cfi_def_cfa_register 7
 2228 0006 7860     		str	r0, [r7, #4]
1208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 2229              		.loc 1 1209 0
 2230 0008 7B68     		ldr	r3, [r7, #4]
 2231 000a 1B68     		ldr	r3, [r3]
 2232 000c 1A68     		ldr	r2, [r3]
 2233 000e 7B68     		ldr	r3, [r7, #4]
 2234 0010 1B68     		ldr	r3, [r3]
 2235 0012 22F4F072 		bic	r2, r2, #480
 2236 0016 1A60     		str	r2, [r3]
1210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2237              		.loc 1 1210 0
 2238 0018 7B68     		ldr	r3, [r7, #4]
 2239 001a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc3f4e78.s 			page 61


 2240 001c 9A68     		ldr	r2, [r3, #8]
 2241 001e 7B68     		ldr	r3, [r7, #4]
 2242 0020 1B68     		ldr	r3, [r3]
 2243 0022 22F00102 		bic	r2, r2, #1
 2244 0026 9A60     		str	r2, [r3, #8]
1211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2245              		.loc 1 1213 0
 2246 0028 7B68     		ldr	r3, [r7, #4]
 2247 002a 1B68     		ldr	r3, [r3]
 2248 002c 9B68     		ldr	r3, [r3, #8]
 2249 002e 03F08003 		and	r3, r3, #128
 2250 0032 002B     		cmp	r3, #0
 2251 0034 14D0     		beq	.L115
1214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2252              		.loc 1 1215 0
 2253 0036 7B68     		ldr	r3, [r7, #4]
 2254 0038 1B68     		ldr	r3, [r3]
 2255 003a 9A68     		ldr	r2, [r3, #8]
 2256 003c 7B68     		ldr	r3, [r7, #4]
 2257 003e 1B68     		ldr	r3, [r3]
 2258 0040 22F08002 		bic	r2, r2, #128
 2259 0044 9A60     		str	r2, [r3, #8]
1216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
 2260              		.loc 1 1218 0
 2261 0046 7B68     		ldr	r3, [r7, #4]
 2262 0048 1B6E     		ldr	r3, [r3, #96]
 2263 004a 002B     		cmp	r3, #0
 2264 004c 08D0     		beq	.L115
1219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2265              		.loc 1 1222 0
 2266 004e 7B68     		ldr	r3, [r7, #4]
 2267 0050 1B6E     		ldr	r3, [r3, #96]
 2268 0052 0022     		movs	r2, #0
 2269 0054 5A63     		str	r2, [r3, #52]
1223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
 2270              		.loc 1 1224 0
 2271 0056 7B68     		ldr	r3, [r7, #4]
 2272 0058 1B6E     		ldr	r3, [r3, #96]
 2273 005a 1846     		mov	r0, r3
 2274 005c FFF7FEFF 		bl	HAL_DMA_Abort
 2275              	.L115:
1225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2276              		.loc 1 1229 0
 2277 0060 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc3f4e78.s 			page 62


 2278 0062 1B68     		ldr	r3, [r3]
 2279 0064 9B68     		ldr	r3, [r3, #8]
 2280 0066 03F04003 		and	r3, r3, #64
 2281 006a 002B     		cmp	r3, #0
 2282 006c 14D0     		beq	.L116
1230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2283              		.loc 1 1231 0
 2284 006e 7B68     		ldr	r3, [r7, #4]
 2285 0070 1B68     		ldr	r3, [r3]
 2286 0072 9A68     		ldr	r2, [r3, #8]
 2287 0074 7B68     		ldr	r3, [r7, #4]
 2288 0076 1B68     		ldr	r3, [r3]
 2289 0078 22F04002 		bic	r2, r2, #64
 2290 007c 9A60     		str	r2, [r3, #8]
1232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
 2291              		.loc 1 1234 0
 2292 007e 7B68     		ldr	r3, [r7, #4]
 2293 0080 5B6E     		ldr	r3, [r3, #100]
 2294 0082 002B     		cmp	r3, #0
 2295 0084 08D0     		beq	.L116
1235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2296              		.loc 1 1238 0
 2297 0086 7B68     		ldr	r3, [r7, #4]
 2298 0088 5B6E     		ldr	r3, [r3, #100]
 2299 008a 0022     		movs	r2, #0
 2300 008c 5A63     		str	r2, [r3, #52]
1239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
 2301              		.loc 1 1240 0
 2302 008e 7B68     		ldr	r3, [r7, #4]
 2303 0090 5B6E     		ldr	r3, [r3, #100]
 2304 0092 1846     		mov	r0, r3
 2305 0094 FFF7FEFF 		bl	HAL_DMA_Abort
 2306              	.L116:
1241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U; 
 2307              		.loc 1 1245 0
 2308 0098 7B68     		ldr	r3, [r7, #4]
 2309 009a 0022     		movs	r2, #0
 2310 009c A3F85220 		strh	r2, [r3, #82]	@ movhi
1246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U; 
 2311              		.loc 1 1246 0
 2312 00a0 7B68     		ldr	r3, [r7, #4]
 2313 00a2 0022     		movs	r2, #0
 2314 00a4 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
ARM GAS  /tmp/cc3f4e78.s 			page 63


 2315              		.loc 1 1249 0
 2316 00a8 7B68     		ldr	r3, [r7, #4]
 2317 00aa 1B68     		ldr	r3, [r3]
 2318 00ac 0F22     		movs	r2, #15
 2319 00ae 1A62     		str	r2, [r3, #32]
1250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 2320              		.loc 1 1252 0
 2321 00b0 7B68     		ldr	r3, [r7, #4]
 2322 00b2 2022     		movs	r2, #32
 2323 00b4 83F86920 		strb	r2, [r3, #105]
1253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2324              		.loc 1 1253 0
 2325 00b8 7B68     		ldr	r3, [r7, #4]
 2326 00ba 2022     		movs	r2, #32
 2327 00bc 83F86A20 		strb	r2, [r3, #106]
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Handle ErrorCode to No Error */
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 2328              		.loc 1 1256 0
 2329 00c0 7B68     		ldr	r3, [r7, #4]
 2330 00c2 0022     		movs	r2, #0
 2331 00c4 DA66     		str	r2, [r3, #108]
1257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 2332              		.loc 1 1258 0
 2333 00c6 0023     		movs	r3, #0
1259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2334              		.loc 1 1259 0
 2335 00c8 1846     		mov	r0, r3
 2336 00ca 0837     		adds	r7, r7, #8
 2337              	.LCFI89:
 2338              		.cfi_def_cfa_offset 8
 2339 00cc BD46     		mov	sp, r7
 2340              	.LCFI90:
 2341              		.cfi_def_cfa_register 13
 2342              		@ sp needed
 2343 00ce 80BD     		pop	{r7, pc}
 2344              		.cfi_endproc
 2345              	.LFE711:
 2347              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2348              		.align	1
 2349              		.global	HAL_UART_AbortTransmit
 2350              		.syntax unified
 2351              		.thumb
 2352              		.thumb_func
 2353              		.fpu fpv4-sp-d16
 2355              	HAL_UART_AbortTransmit:
 2356              	.LFB712:
1260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
ARM GAS  /tmp/cc3f4e78.s 			page 64


1267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 2357              		.loc 1 1274 0
 2358              		.cfi_startproc
 2359              		@ args = 0, pretend = 0, frame = 8
 2360              		@ frame_needed = 1, uses_anonymous_args = 0
 2361 0000 80B5     		push	{r7, lr}
 2362              	.LCFI91:
 2363              		.cfi_def_cfa_offset 8
 2364              		.cfi_offset 7, -8
 2365              		.cfi_offset 14, -4
 2366 0002 82B0     		sub	sp, sp, #8
 2367              	.LCFI92:
 2368              		.cfi_def_cfa_offset 16
 2369 0004 00AF     		add	r7, sp, #0
 2370              	.LCFI93:
 2371              		.cfi_def_cfa_register 7
 2372 0006 7860     		str	r0, [r7, #4]
1275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 2373              		.loc 1 1276 0
 2374 0008 7B68     		ldr	r3, [r7, #4]
 2375 000a 1B68     		ldr	r3, [r3]
 2376 000c 1A68     		ldr	r2, [r3]
 2377 000e 7B68     		ldr	r3, [r7, #4]
 2378 0010 1B68     		ldr	r3, [r3]
 2379 0012 22F0C002 		bic	r2, r2, #192
 2380 0016 1A60     		str	r2, [r3]
1277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2381              		.loc 1 1279 0
 2382 0018 7B68     		ldr	r3, [r7, #4]
 2383 001a 1B68     		ldr	r3, [r3]
 2384 001c 9B68     		ldr	r3, [r3, #8]
 2385 001e 03F08003 		and	r3, r3, #128
 2386 0022 002B     		cmp	r3, #0
 2387 0024 14D0     		beq	.L119
1280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2388              		.loc 1 1281 0
 2389 0026 7B68     		ldr	r3, [r7, #4]
 2390 0028 1B68     		ldr	r3, [r3]
 2391 002a 9A68     		ldr	r2, [r3, #8]
 2392 002c 7B68     		ldr	r3, [r7, #4]
 2393 002e 1B68     		ldr	r3, [r3]
 2394 0030 22F08002 		bic	r2, r2, #128
 2395 0034 9A60     		str	r2, [r3, #8]
1282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
ARM GAS  /tmp/cc3f4e78.s 			page 65


 2396              		.loc 1 1284 0
 2397 0036 7B68     		ldr	r3, [r7, #4]
 2398 0038 1B6E     		ldr	r3, [r3, #96]
 2399 003a 002B     		cmp	r3, #0
 2400 003c 08D0     		beq	.L119
1285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2401              		.loc 1 1288 0
 2402 003e 7B68     		ldr	r3, [r7, #4]
 2403 0040 1B6E     		ldr	r3, [r3, #96]
 2404 0042 0022     		movs	r2, #0
 2405 0044 5A63     		str	r2, [r3, #52]
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
 2406              		.loc 1 1290 0
 2407 0046 7B68     		ldr	r3, [r7, #4]
 2408 0048 1B6E     		ldr	r3, [r3, #96]
 2409 004a 1846     		mov	r0, r3
 2410 004c FFF7FEFF 		bl	HAL_DMA_Abort
 2411              	.L119:
1291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Tx transfer counter */
1295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U; 
 2412              		.loc 1 1295 0
 2413 0050 7B68     		ldr	r3, [r7, #4]
 2414 0052 0022     		movs	r2, #0
 2415 0054 A3F85220 		strh	r2, [r3, #82]	@ movhi
1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2416              		.loc 1 1298 0
 2417 0058 7B68     		ldr	r3, [r7, #4]
 2418 005a 2022     		movs	r2, #32
 2419 005c 83F86920 		strb	r2, [r3, #105]
1299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 2420              		.loc 1 1300 0
 2421 0060 0023     		movs	r3, #0
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2422              		.loc 1 1301 0
 2423 0062 1846     		mov	r0, r3
 2424 0064 0837     		adds	r7, r7, #8
 2425              	.LCFI94:
 2426              		.cfi_def_cfa_offset 8
 2427 0066 BD46     		mov	sp, r7
 2428              	.LCFI95:
 2429              		.cfi_def_cfa_register 13
 2430              		@ sp needed
 2431 0068 80BD     		pop	{r7, pc}
 2432              		.cfi_endproc
 2433              	.LFE712:
 2435              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 2436              		.align	1
ARM GAS  /tmp/cc3f4e78.s 			page 66


 2437              		.global	HAL_UART_AbortReceive
 2438              		.syntax unified
 2439              		.thumb
 2440              		.thumb_func
 2441              		.fpu fpv4-sp-d16
 2443              	HAL_UART_AbortReceive:
 2444              	.LFB713:
1302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 2445              		.loc 1 1316 0
 2446              		.cfi_startproc
 2447              		@ args = 0, pretend = 0, frame = 8
 2448              		@ frame_needed = 1, uses_anonymous_args = 0
 2449 0000 80B5     		push	{r7, lr}
 2450              	.LCFI96:
 2451              		.cfi_def_cfa_offset 8
 2452              		.cfi_offset 7, -8
 2453              		.cfi_offset 14, -4
 2454 0002 82B0     		sub	sp, sp, #8
 2455              	.LCFI97:
 2456              		.cfi_def_cfa_offset 16
 2457 0004 00AF     		add	r7, sp, #0
 2458              	.LCFI98:
 2459              		.cfi_def_cfa_register 7
 2460 0006 7860     		str	r0, [r7, #4]
1317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 2461              		.loc 1 1318 0
 2462 0008 7B68     		ldr	r3, [r7, #4]
 2463 000a 1B68     		ldr	r3, [r3]
 2464 000c 1A68     		ldr	r2, [r3]
 2465 000e 7B68     		ldr	r3, [r7, #4]
 2466 0010 1B68     		ldr	r3, [r3]
 2467 0012 22F49072 		bic	r2, r2, #288
 2468 0016 1A60     		str	r2, [r3]
1319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2469              		.loc 1 1319 0
 2470 0018 7B68     		ldr	r3, [r7, #4]
 2471 001a 1B68     		ldr	r3, [r3]
 2472 001c 9A68     		ldr	r2, [r3, #8]
 2473 001e 7B68     		ldr	r3, [r7, #4]
 2474 0020 1B68     		ldr	r3, [r3]
 2475 0022 22F00102 		bic	r2, r2, #1
 2476 0026 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/cc3f4e78.s 			page 67


1320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2477              		.loc 1 1322 0
 2478 0028 7B68     		ldr	r3, [r7, #4]
 2479 002a 1B68     		ldr	r3, [r3]
 2480 002c 9B68     		ldr	r3, [r3, #8]
 2481 002e 03F04003 		and	r3, r3, #64
 2482 0032 002B     		cmp	r3, #0
 2483 0034 14D0     		beq	.L122
1323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2484              		.loc 1 1324 0
 2485 0036 7B68     		ldr	r3, [r7, #4]
 2486 0038 1B68     		ldr	r3, [r3]
 2487 003a 9A68     		ldr	r2, [r3, #8]
 2488 003c 7B68     		ldr	r3, [r7, #4]
 2489 003e 1B68     		ldr	r3, [r3]
 2490 0040 22F04002 		bic	r2, r2, #64
 2491 0044 9A60     		str	r2, [r3, #8]
1325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
 2492              		.loc 1 1327 0
 2493 0046 7B68     		ldr	r3, [r7, #4]
 2494 0048 5B6E     		ldr	r3, [r3, #100]
 2495 004a 002B     		cmp	r3, #0
 2496 004c 08D0     		beq	.L122
1328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2497              		.loc 1 1331 0
 2498 004e 7B68     		ldr	r3, [r7, #4]
 2499 0050 5B6E     		ldr	r3, [r3, #100]
 2500 0052 0022     		movs	r2, #0
 2501 0054 5A63     		str	r2, [r3, #52]
1332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
 2502              		.loc 1 1333 0
 2503 0056 7B68     		ldr	r3, [r7, #4]
 2504 0058 5B6E     		ldr	r3, [r3, #100]
 2505 005a 1846     		mov	r0, r3
 2506 005c FFF7FEFF 		bl	HAL_DMA_Abort
 2507              	.L122:
1334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Rx transfer counter */
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U; 
 2508              		.loc 1 1338 0
 2509 0060 7B68     		ldr	r3, [r7, #4]
 2510 0062 0022     		movs	r2, #0
 2511 0064 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
ARM GAS  /tmp/cc3f4e78.s 			page 68


 2512              		.loc 1 1341 0
 2513 0068 7B68     		ldr	r3, [r7, #4]
 2514 006a 1B68     		ldr	r3, [r3]
 2515 006c 0F22     		movs	r2, #15
 2516 006e 1A62     		str	r2, [r3, #32]
1342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2517              		.loc 1 1344 0
 2518 0070 7B68     		ldr	r3, [r7, #4]
 2519 0072 2022     		movs	r2, #32
 2520 0074 83F86A20 		strb	r2, [r3, #106]
1345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 2521              		.loc 1 1346 0
 2522 0078 0023     		movs	r3, #0
1347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2523              		.loc 1 1347 0
 2524 007a 1846     		mov	r0, r3
 2525 007c 0837     		adds	r7, r7, #8
 2526              	.LCFI99:
 2527              		.cfi_def_cfa_offset 8
 2528 007e BD46     		mov	sp, r7
 2529              	.LCFI100:
 2530              		.cfi_def_cfa_register 13
 2531              		@ sp needed
 2532 0080 80BD     		pop	{r7, pc}
 2533              		.cfi_endproc
 2534              	.LFE713:
 2536              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 2537              		.align	1
 2538              		.global	HAL_UART_Abort_IT
 2539              		.syntax unified
 2540              		.thumb
 2541              		.thumb_func
 2542              		.fpu fpv4-sp-d16
 2544              	HAL_UART_Abort_IT:
 2545              	.LFB714:
1348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 2546              		.loc 1 1364 0
 2547              		.cfi_startproc
ARM GAS  /tmp/cc3f4e78.s 			page 69


 2548              		@ args = 0, pretend = 0, frame = 16
 2549              		@ frame_needed = 1, uses_anonymous_args = 0
 2550 0000 80B5     		push	{r7, lr}
 2551              	.LCFI101:
 2552              		.cfi_def_cfa_offset 8
 2553              		.cfi_offset 7, -8
 2554              		.cfi_offset 14, -4
 2555 0002 84B0     		sub	sp, sp, #16
 2556              	.LCFI102:
 2557              		.cfi_def_cfa_offset 24
 2558 0004 00AF     		add	r7, sp, #0
 2559              	.LCFI103:
 2560              		.cfi_def_cfa_register 7
 2561 0006 7860     		str	r0, [r7, #4]
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 2562              		.loc 1 1365 0
 2563 0008 0123     		movs	r3, #1
 2564 000a FB60     		str	r3, [r7, #12]
1366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 2565              		.loc 1 1368 0
 2566 000c 7B68     		ldr	r3, [r7, #4]
 2567 000e 1B68     		ldr	r3, [r3]
 2568 0010 1A68     		ldr	r2, [r3]
 2569 0012 7B68     		ldr	r3, [r7, #4]
 2570 0014 1B68     		ldr	r3, [r3]
 2571 0016 22F4F072 		bic	r2, r2, #480
 2572 001a 1A60     		str	r2, [r3]
1369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2573              		.loc 1 1369 0
 2574 001c 7B68     		ldr	r3, [r7, #4]
 2575 001e 1B68     		ldr	r3, [r3]
 2576 0020 9A68     		ldr	r2, [r3, #8]
 2577 0022 7B68     		ldr	r3, [r7, #4]
 2578 0024 1B68     		ldr	r3, [r3]
 2579 0026 22F00102 		bic	r2, r2, #1
 2580 002a 9A60     		str	r2, [r3, #8]
1370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      before any call to DMA Abort functions */
1373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->hdmatx != NULL)
 2581              		.loc 1 1374 0
 2582 002c 7B68     		ldr	r3, [r7, #4]
 2583 002e 1B6E     		ldr	r3, [r3, #96]
 2584 0030 002B     		cmp	r3, #0
 2585 0032 0FD0     		beq	.L125
1375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        Otherwise, set it to NULL */
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2586              		.loc 1 1378 0
 2587 0034 7B68     		ldr	r3, [r7, #4]
 2588 0036 1B68     		ldr	r3, [r3]
 2589 0038 9B68     		ldr	r3, [r3, #8]
 2590 003a 03F08003 		and	r3, r3, #128
ARM GAS  /tmp/cc3f4e78.s 			page 70


 2591 003e 002B     		cmp	r3, #0
 2592 0040 04D0     		beq	.L126
1379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
 2593              		.loc 1 1380 0
 2594 0042 7B68     		ldr	r3, [r7, #4]
 2595 0044 1B6E     		ldr	r3, [r3, #96]
 2596 0046 414A     		ldr	r2, .L135
 2597 0048 5A63     		str	r2, [r3, #52]
 2598 004a 03E0     		b	.L125
 2599              	.L126:
1381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2600              		.loc 1 1384 0
 2601 004c 7B68     		ldr	r3, [r7, #4]
 2602 004e 1B6E     		ldr	r3, [r3, #96]
 2603 0050 0022     		movs	r2, #0
 2604 0052 5A63     		str	r2, [r3, #52]
 2605              	.L125:
1385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->hdmarx != NULL)
 2606              		.loc 1 1388 0
 2607 0054 7B68     		ldr	r3, [r7, #4]
 2608 0056 5B6E     		ldr	r3, [r3, #100]
 2609 0058 002B     		cmp	r3, #0
 2610 005a 0FD0     		beq	.L127
1389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        Otherwise, set it to NULL */
1392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2611              		.loc 1 1392 0
 2612 005c 7B68     		ldr	r3, [r7, #4]
 2613 005e 1B68     		ldr	r3, [r3]
 2614 0060 9B68     		ldr	r3, [r3, #8]
 2615 0062 03F04003 		and	r3, r3, #64
 2616 0066 002B     		cmp	r3, #0
 2617 0068 04D0     		beq	.L128
1393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
 2618              		.loc 1 1394 0
 2619 006a 7B68     		ldr	r3, [r7, #4]
 2620 006c 5B6E     		ldr	r3, [r3, #100]
 2621 006e 384A     		ldr	r2, .L135+4
 2622 0070 5A63     		str	r2, [r3, #52]
 2623 0072 03E0     		b	.L127
 2624              	.L128:
1395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2625              		.loc 1 1398 0
 2626 0074 7B68     		ldr	r3, [r7, #4]
 2627 0076 5B6E     		ldr	r3, [r3, #100]
ARM GAS  /tmp/cc3f4e78.s 			page 71


 2628 0078 0022     		movs	r2, #0
 2629 007a 5A63     		str	r2, [r3, #52]
 2630              	.L127:
1399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2631              		.loc 1 1403 0
 2632 007c 7B68     		ldr	r3, [r7, #4]
 2633 007e 1B68     		ldr	r3, [r3]
 2634 0080 9B68     		ldr	r3, [r3, #8]
 2635 0082 03F08003 		and	r3, r3, #128
 2636 0086 002B     		cmp	r3, #0
 2637 0088 1AD0     		beq	.L129
1404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2638              		.loc 1 1406 0
 2639 008a 7B68     		ldr	r3, [r7, #4]
 2640 008c 1B68     		ldr	r3, [r3]
 2641 008e 9A68     		ldr	r2, [r3, #8]
 2642 0090 7B68     		ldr	r3, [r7, #4]
 2643 0092 1B68     		ldr	r3, [r3]
 2644 0094 22F08002 		bic	r2, r2, #128
 2645 0098 9A60     		str	r2, [r3, #8]
1407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
 2646              		.loc 1 1409 0
 2647 009a 7B68     		ldr	r3, [r7, #4]
 2648 009c 1B6E     		ldr	r3, [r3, #96]
 2649 009e 002B     		cmp	r3, #0
 2650 00a0 0ED0     		beq	.L129
1410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised : 
1412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA TX */
1415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 2651              		.loc 1 1415 0
 2652 00a2 7B68     		ldr	r3, [r7, #4]
 2653 00a4 1B6E     		ldr	r3, [r3, #96]
 2654 00a6 1846     		mov	r0, r3
 2655 00a8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2656 00ac 0346     		mov	r3, r0
 2657 00ae 002B     		cmp	r3, #0
 2658 00b0 04D0     		beq	.L130
1416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
 2659              		.loc 1 1417 0
 2660 00b2 7B68     		ldr	r3, [r7, #4]
 2661 00b4 1B6E     		ldr	r3, [r3, #96]
 2662 00b6 0022     		movs	r2, #0
 2663 00b8 5A63     		str	r2, [r3, #52]
 2664 00ba 01E0     		b	.L129
 2665              	.L130:
ARM GAS  /tmp/cc3f4e78.s 			page 72


1418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 0U;
 2666              		.loc 1 1421 0
 2667 00bc 0023     		movs	r3, #0
 2668 00be FB60     		str	r3, [r7, #12]
 2669              	.L129:
1422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2670              		.loc 1 1427 0
 2671 00c0 7B68     		ldr	r3, [r7, #4]
 2672 00c2 1B68     		ldr	r3, [r3]
 2673 00c4 9B68     		ldr	r3, [r3, #8]
 2674 00c6 03F04003 		and	r3, r3, #64
 2675 00ca 002B     		cmp	r3, #0
 2676 00cc 1CD0     		beq	.L131
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2677              		.loc 1 1429 0
 2678 00ce 7B68     		ldr	r3, [r7, #4]
 2679 00d0 1B68     		ldr	r3, [r3]
 2680 00d2 9A68     		ldr	r2, [r3, #8]
 2681 00d4 7B68     		ldr	r3, [r7, #4]
 2682 00d6 1B68     		ldr	r3, [r3]
 2683 00d8 22F04002 		bic	r2, r2, #64
 2684 00dc 9A60     		str	r2, [r3, #8]
1430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
 2685              		.loc 1 1432 0
 2686 00de 7B68     		ldr	r3, [r7, #4]
 2687 00e0 5B6E     		ldr	r3, [r3, #100]
 2688 00e2 002B     		cmp	r3, #0
 2689 00e4 10D0     		beq	.L131
1433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised : 
1435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA RX */
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 2690              		.loc 1 1438 0
 2691 00e6 7B68     		ldr	r3, [r7, #4]
 2692 00e8 5B6E     		ldr	r3, [r3, #100]
 2693 00ea 1846     		mov	r0, r3
 2694 00ec FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2695 00f0 0346     		mov	r3, r0
 2696 00f2 002B     		cmp	r3, #0
 2697 00f4 06D0     		beq	.L132
1439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
 2698              		.loc 1 1440 0
 2699 00f6 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc3f4e78.s 			page 73


 2700 00f8 5B6E     		ldr	r3, [r3, #100]
 2701 00fa 0022     		movs	r2, #0
 2702 00fc 5A63     		str	r2, [r3, #52]
1441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 1U;
 2703              		.loc 1 1441 0
 2704 00fe 0123     		movs	r3, #1
 2705 0100 FB60     		str	r3, [r7, #12]
 2706 0102 01E0     		b	.L131
 2707              	.L132:
1442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 0U;
 2708              		.loc 1 1445 0
 2709 0104 0023     		movs	r3, #0
 2710 0106 FB60     		str	r3, [r7, #12]
 2711              	.L131:
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (abortcplt == 1U)
 2712              		.loc 1 1451 0
 2713 0108 FB68     		ldr	r3, [r7, #12]
 2714 010a 012B     		cmp	r3, #1
 2715 010c 19D1     		bne	.L133
1452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U; 
 2716              		.loc 1 1454 0
 2717 010e 7B68     		ldr	r3, [r7, #4]
 2718 0110 0022     		movs	r2, #0
 2719 0112 A3F85220 		strh	r2, [r3, #82]	@ movhi
1455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
 2720              		.loc 1 1455 0
 2721 0116 7B68     		ldr	r3, [r7, #4]
 2722 0118 0022     		movs	r2, #0
 2723 011a A3F85A20 		strh	r2, [r3, #90]	@ movhi
1456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset errorCode */
1458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 2724              		.loc 1 1458 0
 2725 011e 7B68     		ldr	r3, [r7, #4]
 2726 0120 0022     		movs	r2, #0
 2727 0122 DA66     		str	r2, [r3, #108]
1459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
 2728              		.loc 1 1461 0
 2729 0124 7B68     		ldr	r3, [r7, #4]
 2730 0126 1B68     		ldr	r3, [r3]
 2731 0128 0F22     		movs	r2, #15
 2732 012a 1A62     		str	r2, [r3, #32]
1462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
ARM GAS  /tmp/cc3f4e78.s 			page 74


 2733              		.loc 1 1464 0
 2734 012c 7B68     		ldr	r3, [r7, #4]
 2735 012e 2022     		movs	r2, #32
 2736 0130 83F86920 		strb	r2, [r3, #105]
1465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2737              		.loc 1 1465 0
 2738 0134 7B68     		ldr	r3, [r7, #4]
 2739 0136 2022     		movs	r2, #32
 2740 0138 83F86A20 		strb	r2, [r3, #106]
1466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
 2741              		.loc 1 1468 0
 2742 013c 7868     		ldr	r0, [r7, #4]
 2743 013e FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2744              	.L133:
1469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 2745              		.loc 1 1471 0
 2746 0142 0023     		movs	r3, #0
1472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2747              		.loc 1 1472 0
 2748 0144 1846     		mov	r0, r3
 2749 0146 1037     		adds	r7, r7, #16
 2750              	.LCFI104:
 2751              		.cfi_def_cfa_offset 8
 2752 0148 BD46     		mov	sp, r7
 2753              	.LCFI105:
 2754              		.cfi_def_cfa_register 13
 2755              		@ sp needed
 2756 014a 80BD     		pop	{r7, pc}
 2757              	.L136:
 2758              		.align	2
 2759              	.L135:
 2760 014c 00000000 		.word	UART_DMATxAbortCallback
 2761 0150 00000000 		.word	UART_DMARxAbortCallback
 2762              		.cfi_endproc
 2763              	.LFE714:
 2765              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 2766              		.align	1
 2767              		.global	HAL_UART_AbortTransmit_IT
 2768              		.syntax unified
 2769              		.thumb
 2770              		.thumb_func
 2771              		.fpu fpv4-sp-d16
 2773              	HAL_UART_AbortTransmit_IT:
 2774              	.LFB715:
1473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
ARM GAS  /tmp/cc3f4e78.s 			page 75


1482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 2775              		.loc 1 1489 0
 2776              		.cfi_startproc
 2777              		@ args = 0, pretend = 0, frame = 8
 2778              		@ frame_needed = 1, uses_anonymous_args = 0
 2779 0000 80B5     		push	{r7, lr}
 2780              	.LCFI106:
 2781              		.cfi_def_cfa_offset 8
 2782              		.cfi_offset 7, -8
 2783              		.cfi_offset 14, -4
 2784 0002 82B0     		sub	sp, sp, #8
 2785              	.LCFI107:
 2786              		.cfi_def_cfa_offset 16
 2787 0004 00AF     		add	r7, sp, #0
 2788              	.LCFI108:
 2789              		.cfi_def_cfa_register 7
 2790 0006 7860     		str	r0, [r7, #4]
1490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 2791              		.loc 1 1491 0
 2792 0008 7B68     		ldr	r3, [r7, #4]
 2793 000a 1B68     		ldr	r3, [r3]
 2794 000c 1A68     		ldr	r2, [r3]
 2795 000e 7B68     		ldr	r3, [r7, #4]
 2796 0010 1B68     		ldr	r3, [r3]
 2797 0012 22F0C002 		bic	r2, r2, #192
 2798 0016 1A60     		str	r2, [r3]
1492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2799              		.loc 1 1494 0
 2800 0018 7B68     		ldr	r3, [r7, #4]
 2801 001a 1B68     		ldr	r3, [r3]
 2802 001c 9B68     		ldr	r3, [r3, #8]
 2803 001e 03F08003 		and	r3, r3, #128
 2804 0022 002B     		cmp	r3, #0
 2805 0024 2BD0     		beq	.L138
1495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2806              		.loc 1 1496 0
 2807 0026 7B68     		ldr	r3, [r7, #4]
 2808 0028 1B68     		ldr	r3, [r3]
 2809 002a 9A68     		ldr	r2, [r3, #8]
 2810 002c 7B68     		ldr	r3, [r7, #4]
 2811 002e 1B68     		ldr	r3, [r3]
 2812 0030 22F08002 		bic	r2, r2, #128
 2813 0034 9A60     		str	r2, [r3, #8]
1497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
ARM GAS  /tmp/cc3f4e78.s 			page 76


 2814              		.loc 1 1499 0
 2815 0036 7B68     		ldr	r3, [r7, #4]
 2816 0038 1B6E     		ldr	r3, [r3, #96]
 2817 003a 002B     		cmp	r3, #0
 2818 003c 13D0     		beq	.L139
1500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
 2819              		.loc 1 1503 0
 2820 003e 7B68     		ldr	r3, [r7, #4]
 2821 0040 1B6E     		ldr	r3, [r3, #96]
 2822 0042 174A     		ldr	r2, .L144
 2823 0044 5A63     		str	r2, [r3, #52]
1504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA TX */
1506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 2824              		.loc 1 1506 0
 2825 0046 7B68     		ldr	r3, [r7, #4]
 2826 0048 1B6E     		ldr	r3, [r3, #96]
 2827 004a 1846     		mov	r0, r3
 2828 004c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2829 0050 0346     		mov	r3, r0
 2830 0052 002B     		cmp	r3, #0
 2831 0054 1ED0     		beq	.L142
1507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
 2832              		.loc 1 1509 0
 2833 0056 7B68     		ldr	r3, [r7, #4]
 2834 0058 1B6E     		ldr	r3, [r3, #96]
 2835 005a 5B6B     		ldr	r3, [r3, #52]
 2836 005c 7A68     		ldr	r2, [r7, #4]
 2837 005e 126E     		ldr	r2, [r2, #96]
 2838 0060 1046     		mov	r0, r2
 2839 0062 9847     		blx	r3
 2840              	.LVL0:
 2841 0064 16E0     		b	.L142
 2842              	.L139:
1510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Reset Tx transfer counter */
1515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount = 0U; 
 2843              		.loc 1 1515 0
 2844 0066 7B68     		ldr	r3, [r7, #4]
 2845 0068 0022     		movs	r2, #0
 2846 006a A3F85220 		strh	r2, [r3, #82]	@ movhi
1516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 2847              		.loc 1 1518 0
 2848 006e 7B68     		ldr	r3, [r7, #4]
 2849 0070 2022     		movs	r2, #32
 2850 0072 83F86920 		strb	r2, [r3, #105]
1519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc3f4e78.s 			page 77


1520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
 2851              		.loc 1 1521 0
 2852 0076 7868     		ldr	r0, [r7, #4]
 2853 0078 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2854 007c 0AE0     		b	.L142
 2855              	.L138:
1522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset Tx transfer counter */
1527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U; 
 2856              		.loc 1 1527 0
 2857 007e 7B68     		ldr	r3, [r7, #4]
 2858 0080 0022     		movs	r2, #0
 2859 0082 A3F85220 		strh	r2, [r3, #82]	@ movhi
1528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 2860              		.loc 1 1530 0
 2861 0086 7B68     		ldr	r3, [r7, #4]
 2862 0088 2022     		movs	r2, #32
 2863 008a 83F86920 		strb	r2, [r3, #105]
1531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
 2864              		.loc 1 1533 0
 2865 008e 7868     		ldr	r0, [r7, #4]
 2866 0090 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2867              	.L142:
1534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 2868              		.loc 1 1536 0
 2869 0094 0023     		movs	r3, #0
1537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2870              		.loc 1 1537 0
 2871 0096 1846     		mov	r0, r3
 2872 0098 0837     		adds	r7, r7, #8
 2873              	.LCFI109:
 2874              		.cfi_def_cfa_offset 8
 2875 009a BD46     		mov	sp, r7
 2876              	.LCFI110:
 2877              		.cfi_def_cfa_register 13
 2878              		@ sp needed
 2879 009c 80BD     		pop	{r7, pc}
 2880              	.L145:
 2881 009e 00BF     		.align	2
 2882              	.L144:
 2883 00a0 00000000 		.word	UART_DMATxOnlyAbortCallback
 2884              		.cfi_endproc
 2885              	.LFE715:
 2887              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 2888              		.align	1
 2889              		.global	HAL_UART_AbortReceive_IT
 2890              		.syntax unified
ARM GAS  /tmp/cc3f4e78.s 			page 78


 2891              		.thumb
 2892              		.thumb_func
 2893              		.fpu fpv4-sp-d16
 2895              	HAL_UART_AbortReceive_IT:
 2896              	.LFB716:
1538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 2897              		.loc 1 1554 0
 2898              		.cfi_startproc
 2899              		@ args = 0, pretend = 0, frame = 8
 2900              		@ frame_needed = 1, uses_anonymous_args = 0
 2901 0000 80B5     		push	{r7, lr}
 2902              	.LCFI111:
 2903              		.cfi_def_cfa_offset 8
 2904              		.cfi_offset 7, -8
 2905              		.cfi_offset 14, -4
 2906 0002 82B0     		sub	sp, sp, #8
 2907              	.LCFI112:
 2908              		.cfi_def_cfa_offset 16
 2909 0004 00AF     		add	r7, sp, #0
 2910              	.LCFI113:
 2911              		.cfi_def_cfa_register 7
 2912 0006 7860     		str	r0, [r7, #4]
1555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 2913              		.loc 1 1556 0
 2914 0008 7B68     		ldr	r3, [r7, #4]
 2915 000a 1B68     		ldr	r3, [r3]
 2916 000c 1A68     		ldr	r2, [r3]
 2917 000e 7B68     		ldr	r3, [r7, #4]
 2918 0010 1B68     		ldr	r3, [r3]
 2919 0012 22F49072 		bic	r2, r2, #288
 2920 0016 1A60     		str	r2, [r3]
1557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2921              		.loc 1 1557 0
 2922 0018 7B68     		ldr	r3, [r7, #4]
 2923 001a 1B68     		ldr	r3, [r3]
 2924 001c 9A68     		ldr	r2, [r3, #8]
 2925 001e 7B68     		ldr	r3, [r7, #4]
 2926 0020 1B68     		ldr	r3, [r3]
 2927 0022 22F00102 		bic	r2, r2, #1
 2928 0026 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/cc3f4e78.s 			page 79


1558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2929              		.loc 1 1560 0
 2930 0028 7B68     		ldr	r3, [r7, #4]
 2931 002a 1B68     		ldr	r3, [r3]
 2932 002c 9B68     		ldr	r3, [r3, #8]
 2933 002e 03F04003 		and	r3, r3, #64
 2934 0032 002B     		cmp	r3, #0
 2935 0034 2FD0     		beq	.L147
1561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2936              		.loc 1 1562 0
 2937 0036 7B68     		ldr	r3, [r7, #4]
 2938 0038 1B68     		ldr	r3, [r3]
 2939 003a 9A68     		ldr	r2, [r3, #8]
 2940 003c 7B68     		ldr	r3, [r7, #4]
 2941 003e 1B68     		ldr	r3, [r3]
 2942 0040 22F04002 		bic	r2, r2, #64
 2943 0044 9A60     		str	r2, [r3, #8]
1563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
 2944              		.loc 1 1565 0
 2945 0046 7B68     		ldr	r3, [r7, #4]
 2946 0048 5B6E     		ldr	r3, [r3, #100]
 2947 004a 002B     		cmp	r3, #0
 2948 004c 13D0     		beq	.L148
1566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
 2949              		.loc 1 1569 0
 2950 004e 7B68     		ldr	r3, [r7, #4]
 2951 0050 5B6E     		ldr	r3, [r3, #100]
 2952 0052 1B4A     		ldr	r2, .L153
 2953 0054 5A63     		str	r2, [r3, #52]
1570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA RX */
1572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 2954              		.loc 1 1572 0
 2955 0056 7B68     		ldr	r3, [r7, #4]
 2956 0058 5B6E     		ldr	r3, [r3, #100]
 2957 005a 1846     		mov	r0, r3
 2958 005c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2959 0060 0346     		mov	r3, r0
 2960 0062 002B     		cmp	r3, #0
 2961 0064 26D0     		beq	.L151
1573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
 2962              		.loc 1 1575 0
 2963 0066 7B68     		ldr	r3, [r7, #4]
 2964 0068 5B6E     		ldr	r3, [r3, #100]
 2965 006a 5B6B     		ldr	r3, [r3, #52]
 2966 006c 7A68     		ldr	r2, [r7, #4]
 2967 006e 526E     		ldr	r2, [r2, #100]
ARM GAS  /tmp/cc3f4e78.s 			page 80


 2968 0070 1046     		mov	r0, r2
 2969 0072 9847     		blx	r3
 2970              	.LVL1:
 2971 0074 1EE0     		b	.L151
 2972              	.L148:
1576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Reset Rx transfer counter */
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxXferCount = 0U; 
 2973              		.loc 1 1581 0
 2974 0076 7B68     		ldr	r3, [r7, #4]
 2975 0078 0022     		movs	r2, #0
 2976 007a A3F85A20 		strh	r2, [r3, #90]	@ movhi
1582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
1584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
 2977              		.loc 1 1584 0
 2978 007e 7B68     		ldr	r3, [r7, #4]
 2979 0080 1B68     		ldr	r3, [r3]
 2980 0082 0F22     		movs	r2, #15
 2981 0084 1A62     		str	r2, [r3, #32]
1585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 2982              		.loc 1 1587 0
 2983 0086 7B68     		ldr	r3, [r7, #4]
 2984 0088 2022     		movs	r2, #32
 2985 008a 83F86A20 		strb	r2, [r3, #106]
1588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
 2986              		.loc 1 1590 0
 2987 008e 7868     		ldr	r0, [r7, #4]
 2988 0090 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2989 0094 0EE0     		b	.L151
 2990              	.L147:
1591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset Rx transfer counter */
1596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U; 
 2991              		.loc 1 1596 0
 2992 0096 7B68     		ldr	r3, [r7, #4]
 2993 0098 0022     		movs	r2, #0
 2994 009a A3F85A20 		strh	r2, [r3, #90]	@ movhi
1597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
 2995              		.loc 1 1599 0
 2996 009e 7B68     		ldr	r3, [r7, #4]
 2997 00a0 1B68     		ldr	r3, [r3]
 2998 00a2 0F22     		movs	r2, #15
 2999 00a4 1A62     		str	r2, [r3, #32]
1600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc3f4e78.s 			page 81


1601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3000              		.loc 1 1602 0
 3001 00a6 7B68     		ldr	r3, [r7, #4]
 3002 00a8 2022     		movs	r2, #32
 3003 00aa 83F86A20 		strb	r2, [r3, #106]
1603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
 3004              		.loc 1 1605 0
 3005 00ae 7868     		ldr	r0, [r7, #4]
 3006 00b0 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3007              	.L151:
1606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 3008              		.loc 1 1608 0
 3009 00b4 0023     		movs	r3, #0
1609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3010              		.loc 1 1609 0
 3011 00b6 1846     		mov	r0, r3
 3012 00b8 0837     		adds	r7, r7, #8
 3013              	.LCFI114:
 3014              		.cfi_def_cfa_offset 8
 3015 00ba BD46     		mov	sp, r7
 3016              	.LCFI115:
 3017              		.cfi_def_cfa_register 13
 3018              		@ sp needed
 3019 00bc 80BD     		pop	{r7, pc}
 3020              	.L154:
 3021 00be 00BF     		.align	2
 3022              	.L153:
 3023 00c0 00000000 		.word	UART_DMARxOnlyAbortCallback
 3024              		.cfi_endproc
 3025              	.LFE716:
 3027              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 3028              		.align	1
 3029              		.global	HAL_UART_IRQHandler
 3030              		.syntax unified
 3031              		.thumb
 3032              		.thumb_func
 3033              		.fpu fpv4-sp-d16
 3035              	HAL_UART_IRQHandler:
 3036              	.LFB717:
1610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Handle UART interrupt request.
1613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 3037              		.loc 1 1617 0
 3038              		.cfi_startproc
 3039              		@ args = 0, pretend = 0, frame = 24
 3040              		@ frame_needed = 1, uses_anonymous_args = 0
 3041 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/cc3f4e78.s 			page 82


 3042              	.LCFI116:
 3043              		.cfi_def_cfa_offset 8
 3044              		.cfi_offset 7, -8
 3045              		.cfi_offset 14, -4
 3046 0002 86B0     		sub	sp, sp, #24
 3047              	.LCFI117:
 3048              		.cfi_def_cfa_offset 32
 3049 0004 00AF     		add	r7, sp, #0
 3050              	.LCFI118:
 3051              		.cfi_def_cfa_register 7
 3052 0006 7860     		str	r0, [r7, #4]
1618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 3053              		.loc 1 1618 0
 3054 0008 7B68     		ldr	r3, [r7, #4]
 3055 000a 1B68     		ldr	r3, [r3]
 3056 000c DB69     		ldr	r3, [r3, #28]
 3057 000e 7B61     		str	r3, [r7, #20]
1619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 3058              		.loc 1 1619 0
 3059 0010 7B68     		ldr	r3, [r7, #4]
 3060 0012 1B68     		ldr	r3, [r3]
 3061 0014 1B68     		ldr	r3, [r3]
 3062 0016 3B61     		str	r3, [r7, #16]
1620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr3its;
1621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t errorflags;
1622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* If no error occurs */
1624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
 3063              		.loc 1 1624 0
 3064 0018 7B69     		ldr	r3, [r7, #20]
 3065 001a 03F00F03 		and	r3, r3, #15
 3066 001e FB60     		str	r3, [r7, #12]
1625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (errorflags == RESET)
 3067              		.loc 1 1625 0
 3068 0020 FB68     		ldr	r3, [r7, #12]
 3069 0022 002B     		cmp	r3, #0
 3070 0024 0DD1     		bne	.L156
1626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 3071              		.loc 1 1628 0
 3072 0026 7B69     		ldr	r3, [r7, #20]
 3073 0028 03F02003 		and	r3, r3, #32
 3074 002c 002B     		cmp	r3, #0
 3075 002e 08D0     		beq	.L156
 3076              		.loc 1 1628 0 is_stmt 0 discriminator 1
 3077 0030 3B69     		ldr	r3, [r7, #16]
 3078 0032 03F02003 		and	r3, r3, #32
 3079 0036 002B     		cmp	r3, #0
 3080 0038 03D0     		beq	.L156
1629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       UART_Receive_IT(huart);
 3081              		.loc 1 1630 0 is_stmt 1
 3082 003a 7868     		ldr	r0, [r7, #4]
 3083 003c FFF7FEFF 		bl	UART_Receive_IT
1631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
 3084              		.loc 1 1631 0
ARM GAS  /tmp/cc3f4e78.s 			page 83


 3085 0040 FAE0     		b	.L155
 3086              	.L156:
1632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }  
1634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* If some errors occur */
1636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   cr3its = READ_REG(huart->Instance->CR3);
 3087              		.loc 1 1636 0
 3088 0042 7B68     		ldr	r3, [r7, #4]
 3089 0044 1B68     		ldr	r3, [r3]
 3090 0046 9B68     		ldr	r3, [r3, #8]
 3091 0048 BB60     		str	r3, [r7, #8]
1637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(   (errorflags != RESET)
 3092              		.loc 1 1637 0
 3093 004a FB68     		ldr	r3, [r7, #12]
 3094 004c 002B     		cmp	r3, #0
 3095 004e 00F0BA80 		beq	.L158
1638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
 3096              		.loc 1 1638 0
 3097 0052 BB68     		ldr	r3, [r7, #8]
 3098 0054 03F00103 		and	r3, r3, #1
 3099 0058 002B     		cmp	r3, #0
 3100 005a 05D1     		bne	.L159
1639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
 3101              		.loc 1 1639 0
 3102 005c 3B69     		ldr	r3, [r7, #16]
 3103 005e 03F49073 		and	r3, r3, #288
 3104 0062 002B     		cmp	r3, #0
 3105 0064 00F0AF80 		beq	.L158
 3106              	.L159:
1640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 3107              		.loc 1 1642 0
 3108 0068 7B69     		ldr	r3, [r7, #20]
 3109 006a 03F00103 		and	r3, r3, #1
 3110 006e 002B     		cmp	r3, #0
 3111 0070 0ED0     		beq	.L160
 3112              		.loc 1 1642 0 is_stmt 0 discriminator 1
 3113 0072 3B69     		ldr	r3, [r7, #16]
 3114 0074 03F48073 		and	r3, r3, #256
 3115 0078 002B     		cmp	r3, #0
 3116 007a 09D0     		beq	.L160
1643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_PEF);
 3117              		.loc 1 1644 0 is_stmt 1
 3118 007c 7B68     		ldr	r3, [r7, #4]
 3119 007e 1B68     		ldr	r3, [r3]
 3120 0080 0122     		movs	r2, #1
 3121 0082 1A62     		str	r2, [r3, #32]
1645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 3122              		.loc 1 1646 0
 3123 0084 7B68     		ldr	r3, [r7, #4]
 3124 0086 DB6E     		ldr	r3, [r3, #108]
 3125 0088 43F00102 		orr	r2, r3, #1
 3126 008c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc3f4e78.s 			page 84


 3127 008e DA66     		str	r2, [r3, #108]
 3128              	.L160:
1647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
1650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 3129              		.loc 1 1650 0
 3130 0090 7B69     		ldr	r3, [r7, #20]
 3131 0092 03F00203 		and	r3, r3, #2
 3132 0096 002B     		cmp	r3, #0
 3133 0098 0ED0     		beq	.L161
 3134              		.loc 1 1650 0 is_stmt 0 discriminator 1
 3135 009a BB68     		ldr	r3, [r7, #8]
 3136 009c 03F00103 		and	r3, r3, #1
 3137 00a0 002B     		cmp	r3, #0
 3138 00a2 09D0     		beq	.L161
1651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_FEF);
 3139              		.loc 1 1652 0 is_stmt 1
 3140 00a4 7B68     		ldr	r3, [r7, #4]
 3141 00a6 1B68     		ldr	r3, [r3]
 3142 00a8 0222     		movs	r2, #2
 3143 00aa 1A62     		str	r2, [r3, #32]
1653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
 3144              		.loc 1 1654 0
 3145 00ac 7B68     		ldr	r3, [r7, #4]
 3146 00ae DB6E     		ldr	r3, [r3, #108]
 3147 00b0 43F00402 		orr	r2, r3, #4
 3148 00b4 7B68     		ldr	r3, [r7, #4]
 3149 00b6 DA66     		str	r2, [r3, #108]
 3150              	.L161:
1655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
1658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 3151              		.loc 1 1658 0
 3152 00b8 7B69     		ldr	r3, [r7, #20]
 3153 00ba 03F00403 		and	r3, r3, #4
 3154 00be 002B     		cmp	r3, #0
 3155 00c0 0ED0     		beq	.L162
 3156              		.loc 1 1658 0 is_stmt 0 discriminator 1
 3157 00c2 BB68     		ldr	r3, [r7, #8]
 3158 00c4 03F00103 		and	r3, r3, #1
 3159 00c8 002B     		cmp	r3, #0
 3160 00ca 09D0     		beq	.L162
1659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_NEF);
 3161              		.loc 1 1660 0 is_stmt 1
 3162 00cc 7B68     		ldr	r3, [r7, #4]
 3163 00ce 1B68     		ldr	r3, [r3]
 3164 00d0 0422     		movs	r2, #4
 3165 00d2 1A62     		str	r2, [r3, #32]
1661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
 3166              		.loc 1 1662 0
 3167 00d4 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc3f4e78.s 			page 85


 3168 00d6 DB6E     		ldr	r3, [r3, #108]
 3169 00d8 43F00202 		orr	r2, r3, #2
 3170 00dc 7B68     		ldr	r3, [r7, #4]
 3171 00de DA66     		str	r2, [r3, #108]
 3172              	.L162:
1663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
1665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
1666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_ORE) != RESET) &&
 3173              		.loc 1 1666 0
 3174 00e0 7B69     		ldr	r3, [r7, #20]
 3175 00e2 03F00803 		and	r3, r3, #8
 3176 00e6 002B     		cmp	r3, #0
 3177 00e8 13D0     		beq	.L163
1667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 3178              		.loc 1 1667 0 discriminator 1
 3179 00ea 3B69     		ldr	r3, [r7, #16]
 3180 00ec 03F02003 		and	r3, r3, #32
1666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 3181              		.loc 1 1666 0 discriminator 1
 3182 00f0 002B     		cmp	r3, #0
 3183 00f2 04D1     		bne	.L164
 3184              		.loc 1 1667 0
 3185 00f4 BB68     		ldr	r3, [r7, #8]
 3186 00f6 03F00103 		and	r3, r3, #1
 3187 00fa 002B     		cmp	r3, #0
 3188 00fc 09D0     		beq	.L163
 3189              	.L164:
1668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_OREF);
 3190              		.loc 1 1669 0
 3191 00fe 7B68     		ldr	r3, [r7, #4]
 3192 0100 1B68     		ldr	r3, [r3]
 3193 0102 0822     		movs	r2, #8
 3194 0104 1A62     		str	r2, [r3, #32]
1670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 3195              		.loc 1 1671 0
 3196 0106 7B68     		ldr	r3, [r7, #4]
 3197 0108 DB6E     		ldr	r3, [r3, #108]
 3198 010a 43F00802 		orr	r2, r3, #8
 3199 010e 7B68     		ldr	r3, [r7, #4]
 3200 0110 DA66     		str	r2, [r3, #108]
 3201              	.L163:
1672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
1675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
 3202              		.loc 1 1675 0
 3203 0112 7B68     		ldr	r3, [r7, #4]
 3204 0114 DB6E     		ldr	r3, [r3, #108]
 3205 0116 002B     		cmp	r3, #0
 3206 0118 00F08D80 		beq	.L176
1676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
1678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 3207              		.loc 1 1678 0
ARM GAS  /tmp/cc3f4e78.s 			page 86


 3208 011c 7B69     		ldr	r3, [r7, #20]
 3209 011e 03F02003 		and	r3, r3, #32
 3210 0122 002B     		cmp	r3, #0
 3211 0124 07D0     		beq	.L166
 3212              		.loc 1 1678 0 is_stmt 0 discriminator 1
 3213 0126 3B69     		ldr	r3, [r7, #16]
 3214 0128 03F02003 		and	r3, r3, #32
 3215 012c 002B     		cmp	r3, #0
 3216 012e 02D0     		beq	.L166
1679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         UART_Receive_IT(huart);
 3217              		.loc 1 1680 0 is_stmt 1
 3218 0130 7868     		ldr	r0, [r7, #4]
 3219 0132 FFF7FEFF 		bl	UART_Receive_IT
 3220              	.L166:
1681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          consider error as blocking */
1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) ||
 3221              		.loc 1 1685 0
 3222 0136 7B68     		ldr	r3, [r7, #4]
 3223 0138 DB6E     		ldr	r3, [r3, #108]
 3224 013a 03F00803 		and	r3, r3, #8
 3225 013e 002B     		cmp	r3, #0
 3226 0140 06D1     		bne	.L167
1686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 3227              		.loc 1 1686 0 discriminator 1
 3228 0142 7B68     		ldr	r3, [r7, #4]
 3229 0144 1B68     		ldr	r3, [r3]
 3230 0146 9B68     		ldr	r3, [r3, #8]
 3231 0148 03F04003 		and	r3, r3, #64
1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 3232              		.loc 1 1685 0 discriminator 1
 3233 014c 002B     		cmp	r3, #0
 3234 014e 31D0     		beq	.L168
 3235              	.L167:
1687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {  
1688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         UART_EndRxTransfer(huart);
 3236              		.loc 1 1691 0
 3237 0150 7868     		ldr	r0, [r7, #4]
 3238 0152 FFF7FEFF 		bl	UART_EndRxTransfer
1692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3239              		.loc 1 1694 0
 3240 0156 7B68     		ldr	r3, [r7, #4]
 3241 0158 1B68     		ldr	r3, [r3]
 3242 015a 9B68     		ldr	r3, [r3, #8]
 3243 015c 03F04003 		and	r3, r3, #64
 3244 0160 002B     		cmp	r3, #0
 3245 0162 23D0     		beq	.L169
1695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
ARM GAS  /tmp/cc3f4e78.s 			page 87


 3246              		.loc 1 1696 0
 3247 0164 7B68     		ldr	r3, [r7, #4]
 3248 0166 1B68     		ldr	r3, [r3]
 3249 0168 9A68     		ldr	r2, [r3, #8]
 3250 016a 7B68     		ldr	r3, [r7, #4]
 3251 016c 1B68     		ldr	r3, [r3]
 3252 016e 22F04002 		bic	r2, r2, #64
 3253 0172 9A60     		str	r2, [r3, #8]
1697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           if(huart->hdmarx != NULL)
 3254              		.loc 1 1699 0
 3255 0174 7B68     		ldr	r3, [r7, #4]
 3256 0176 5B6E     		ldr	r3, [r3, #100]
 3257 0178 002B     		cmp	r3, #0
 3258 017a 13D0     		beq	.L170
1700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           {
1701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /* Set the UART DMA Abort callback : 
1702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 3259              		.loc 1 1703 0
 3260 017c 7B68     		ldr	r3, [r7, #4]
 3261 017e 5B6E     		ldr	r3, [r3, #100]
 3262 0180 2F4A     		ldr	r2, .L178
 3263 0182 5A63     		str	r2, [r3, #52]
1704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /* Abort DMA RX */
1706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3264              		.loc 1 1706 0
 3265 0184 7B68     		ldr	r3, [r7, #4]
 3266 0186 5B6E     		ldr	r3, [r3, #100]
 3267 0188 1846     		mov	r0, r3
 3268 018a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3269 018e 0346     		mov	r3, r0
 3270 0190 002B     		cmp	r3, #0
 3271 0192 16D0     		beq	.L177
1707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             {
1708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
 3272              		.loc 1 1709 0
 3273 0194 7B68     		ldr	r3, [r7, #4]
 3274 0196 5B6E     		ldr	r3, [r3, #100]
 3275 0198 5B6B     		ldr	r3, [r3, #52]
 3276 019a 7A68     		ldr	r2, [r7, #4]
 3277 019c 526E     		ldr	r2, [r2, #100]
 3278 019e 1046     		mov	r0, r2
 3279 01a0 9847     		blx	r3
 3280              	.LVL2:
1694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 3281              		.loc 1 1694 0
 3282 01a2 0EE0     		b	.L177
 3283              	.L170:
1710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             }
1711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           }
1712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           else
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           {
1714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /* Call user error callback */
ARM GAS  /tmp/cc3f4e78.s 			page 88


1715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
 3284              		.loc 1 1715 0
 3285 01a4 7868     		ldr	r0, [r7, #4]
 3286 01a6 FFF7FEFF 		bl	HAL_UART_ErrorCallback
1694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 3287              		.loc 1 1694 0
 3288 01aa 0AE0     		b	.L177
 3289              	.L169:
1716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           }
1717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         else
1719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Call user error callback */
1721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 3290              		.loc 1 1721 0
 3291 01ac 7868     		ldr	r0, [r7, #4]
 3292 01ae FFF7FEFF 		bl	HAL_UART_ErrorCallback
1694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 3293              		.loc 1 1694 0
 3294 01b2 06E0     		b	.L177
 3295              	.L168:
1722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Non Blocking error : transfer could go on. 
1727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Error is notified to user through user error callback */
1728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
 3296              		.loc 1 1728 0
 3297 01b4 7868     		ldr	r0, [r7, #4]
 3298 01b6 FFF7FEFF 		bl	HAL_UART_ErrorCallback
1729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 3299              		.loc 1 1729 0
 3300 01ba 7B68     		ldr	r3, [r7, #4]
 3301 01bc 0022     		movs	r2, #0
 3302 01be DA66     		str	r2, [r3, #108]
1730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
 3303              		.loc 1 1732 0
 3304 01c0 39E0     		b	.L176
 3305              	.L177:
1694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 3306              		.loc 1 1694 0
 3307 01c2 00BF     		nop
 3308              		.loc 1 1732 0
 3309 01c4 37E0     		b	.L176
 3310              	.L158:
1733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   } /* End if some error occurs */
1735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
1737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(((isrflags & USART_ISR_WUF) != RESET) && ((cr3its & USART_CR3_WUFIE) != RESET))
 3311              		.loc 1 1737 0
 3312 01c6 7B69     		ldr	r3, [r7, #20]
 3313 01c8 03F48013 		and	r3, r3, #1048576
 3314 01cc 002B     		cmp	r3, #0
ARM GAS  /tmp/cc3f4e78.s 			page 89


 3315 01ce 15D0     		beq	.L174
 3316              		.loc 1 1737 0 is_stmt 0 discriminator 1
 3317 01d0 BB68     		ldr	r3, [r7, #8]
 3318 01d2 03F48003 		and	r3, r3, #4194304
 3319 01d6 002B     		cmp	r3, #0
 3320 01d8 10D0     		beq	.L174
1738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_WUF);
 3321              		.loc 1 1739 0 is_stmt 1
 3322 01da 7B68     		ldr	r3, [r7, #4]
 3323 01dc 1B68     		ldr	r3, [r3]
 3324 01de 4FF48012 		mov	r2, #1048576
 3325 01e2 1A62     		str	r2, [r3, #32]
1740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
1741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
 3326              		.loc 1 1741 0
 3327 01e4 7B68     		ldr	r3, [r7, #4]
 3328 01e6 2022     		movs	r2, #32
 3329 01e8 83F86920 		strb	r2, [r3, #105]
1742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3330              		.loc 1 1742 0
 3331 01ec 7B68     		ldr	r3, [r7, #4]
 3332 01ee 2022     		movs	r2, #32
 3333 01f0 83F86A20 		strb	r2, [r3, #106]
1743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
 3334              		.loc 1 1743 0
 3335 01f4 7868     		ldr	r0, [r7, #4]
 3336 01f6 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
1744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
 3337              		.loc 1 1744 0
 3338 01fa 1DE0     		b	.L155
 3339              	.L174:
1745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(((isrflags & USART_ISR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 3340              		.loc 1 1748 0
 3341 01fc 7B69     		ldr	r3, [r7, #20]
 3342 01fe 03F08003 		and	r3, r3, #128
 3343 0202 002B     		cmp	r3, #0
 3344 0204 08D0     		beq	.L175
 3345              		.loc 1 1748 0 is_stmt 0 discriminator 1
 3346 0206 3B69     		ldr	r3, [r7, #16]
 3347 0208 03F08003 		and	r3, r3, #128
 3348 020c 002B     		cmp	r3, #0
 3349 020e 03D0     		beq	.L175
1749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_Transmit_IT(huart);
 3350              		.loc 1 1750 0 is_stmt 1
 3351 0210 7868     		ldr	r0, [r7, #4]
 3352 0212 FFF7FEFF 		bl	UART_Transmit_IT
1751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
 3353              		.loc 1 1751 0
 3354 0216 0FE0     		b	.L155
 3355              	.L175:
1752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc3f4e78.s 			page 90


1754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
1755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(((isrflags & USART_ISR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 3356              		.loc 1 1755 0
 3357 0218 7B69     		ldr	r3, [r7, #20]
 3358 021a 03F04003 		and	r3, r3, #64
 3359 021e 002B     		cmp	r3, #0
 3360 0220 0AD0     		beq	.L155
 3361              		.loc 1 1755 0 is_stmt 0 discriminator 1
 3362 0222 3B69     		ldr	r3, [r7, #16]
 3363 0224 03F04003 		and	r3, r3, #64
 3364 0228 002B     		cmp	r3, #0
 3365 022a 05D0     		beq	.L155
1756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 3366              		.loc 1 1757 0 is_stmt 1
 3367 022c 7868     		ldr	r0, [r7, #4]
 3368 022e FFF7FEFF 		bl	UART_EndTransmit_IT
1758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
 3369              		.loc 1 1758 0
 3370 0232 00BF     		nop
 3371 0234 00E0     		b	.L155
 3372              	.L176:
1732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3373              		.loc 1 1732 0
 3374 0236 00BF     		nop
 3375              	.L155:
1759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3376              		.loc 1 1761 0
 3377 0238 1837     		adds	r7, r7, #24
 3378              	.LCFI119:
 3379              		.cfi_def_cfa_offset 8
 3380 023a BD46     		mov	sp, r7
 3381              	.LCFI120:
 3382              		.cfi_def_cfa_register 13
 3383              		@ sp needed
 3384 023c 80BD     		pop	{r7, pc}
 3385              	.L179:
 3386 023e 00BF     		.align	2
 3387              	.L178:
 3388 0240 00000000 		.word	UART_DMAAbortOnError
 3389              		.cfi_endproc
 3390              	.LFE717:
 3392              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 3393              		.align	1
 3394              		.weak	HAL_UART_TxCpltCallback
 3395              		.syntax unified
 3396              		.thumb
 3397              		.thumb_func
 3398              		.fpu fpv4-sp-d16
 3400              	HAL_UART_TxCpltCallback:
 3401              	.LFB718:
1762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
1765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
ARM GAS  /tmp/cc3f4e78.s 			page 91


1766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 3402              		.loc 1 1769 0
 3403              		.cfi_startproc
 3404              		@ args = 0, pretend = 0, frame = 8
 3405              		@ frame_needed = 1, uses_anonymous_args = 0
 3406              		@ link register save eliminated.
 3407 0000 80B4     		push	{r7}
 3408              	.LCFI121:
 3409              		.cfi_def_cfa_offset 4
 3410              		.cfi_offset 7, -4
 3411 0002 83B0     		sub	sp, sp, #12
 3412              	.LCFI122:
 3413              		.cfi_def_cfa_offset 16
 3414 0004 00AF     		add	r7, sp, #0
 3415              	.LCFI123:
 3416              		.cfi_def_cfa_register 7
 3417 0006 7860     		str	r0, [r7, #4]
1770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
1775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3418              		.loc 1 1776 0
 3419 0008 00BF     		nop
 3420 000a 0C37     		adds	r7, r7, #12
 3421              	.LCFI124:
 3422              		.cfi_def_cfa_offset 4
 3423 000c BD46     		mov	sp, r7
 3424              	.LCFI125:
 3425              		.cfi_def_cfa_register 13
 3426              		@ sp needed
 3427 000e 5DF8047B 		ldr	r7, [sp], #4
 3428              	.LCFI126:
 3429              		.cfi_restore 7
 3430              		.cfi_def_cfa_offset 0
 3431 0012 7047     		bx	lr
 3432              		.cfi_endproc
 3433              	.LFE718:
 3435              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 3436              		.align	1
 3437              		.weak	HAL_UART_TxHalfCpltCallback
 3438              		.syntax unified
 3439              		.thumb
 3440              		.thumb_func
 3441              		.fpu fpv4-sp-d16
 3443              	HAL_UART_TxHalfCpltCallback:
 3444              	.LFB719:
1777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
1780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
ARM GAS  /tmp/cc3f4e78.s 			page 92


1782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 3445              		.loc 1 1784 0
 3446              		.cfi_startproc
 3447              		@ args = 0, pretend = 0, frame = 8
 3448              		@ frame_needed = 1, uses_anonymous_args = 0
 3449              		@ link register save eliminated.
 3450 0000 80B4     		push	{r7}
 3451              	.LCFI127:
 3452              		.cfi_def_cfa_offset 4
 3453              		.cfi_offset 7, -4
 3454 0002 83B0     		sub	sp, sp, #12
 3455              	.LCFI128:
 3456              		.cfi_def_cfa_offset 16
 3457 0004 00AF     		add	r7, sp, #0
 3458              	.LCFI129:
 3459              		.cfi_def_cfa_register 7
 3460 0006 7860     		str	r0, [r7, #4]
1785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
1790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3461              		.loc 1 1791 0
 3462 0008 00BF     		nop
 3463 000a 0C37     		adds	r7, r7, #12
 3464              	.LCFI130:
 3465              		.cfi_def_cfa_offset 4
 3466 000c BD46     		mov	sp, r7
 3467              	.LCFI131:
 3468              		.cfi_def_cfa_register 13
 3469              		@ sp needed
 3470 000e 5DF8047B 		ldr	r7, [sp], #4
 3471              	.LCFI132:
 3472              		.cfi_restore 7
 3473              		.cfi_def_cfa_offset 0
 3474 0012 7047     		bx	lr
 3475              		.cfi_endproc
 3476              	.LFE719:
 3478              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 3479              		.align	1
 3480              		.weak	HAL_UART_RxCpltCallback
 3481              		.syntax unified
 3482              		.thumb
 3483              		.thumb_func
 3484              		.fpu fpv4-sp-d16
 3486              	HAL_UART_RxCpltCallback:
 3487              	.LFB720:
1792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Rx Transfer completed callback.
1795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
ARM GAS  /tmp/cc3f4e78.s 			page 93


1798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 3488              		.loc 1 1799 0
 3489              		.cfi_startproc
 3490              		@ args = 0, pretend = 0, frame = 8
 3491              		@ frame_needed = 1, uses_anonymous_args = 0
 3492              		@ link register save eliminated.
 3493 0000 80B4     		push	{r7}
 3494              	.LCFI133:
 3495              		.cfi_def_cfa_offset 4
 3496              		.cfi_offset 7, -4
 3497 0002 83B0     		sub	sp, sp, #12
 3498              	.LCFI134:
 3499              		.cfi_def_cfa_offset 16
 3500 0004 00AF     		add	r7, sp, #0
 3501              	.LCFI135:
 3502              		.cfi_def_cfa_register 7
 3503 0006 7860     		str	r0, [r7, #4]
1800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
1805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3504              		.loc 1 1806 0
 3505 0008 00BF     		nop
 3506 000a 0C37     		adds	r7, r7, #12
 3507              	.LCFI136:
 3508              		.cfi_def_cfa_offset 4
 3509 000c BD46     		mov	sp, r7
 3510              	.LCFI137:
 3511              		.cfi_def_cfa_register 13
 3512              		@ sp needed
 3513 000e 5DF8047B 		ldr	r7, [sp], #4
 3514              	.LCFI138:
 3515              		.cfi_restore 7
 3516              		.cfi_def_cfa_offset 0
 3517 0012 7047     		bx	lr
 3518              		.cfi_endproc
 3519              	.LFE720:
 3521              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 3522              		.align	1
 3523              		.weak	HAL_UART_RxHalfCpltCallback
 3524              		.syntax unified
 3525              		.thumb
 3526              		.thumb_func
 3527              		.fpu fpv4-sp-d16
 3529              	HAL_UART_RxHalfCpltCallback:
 3530              	.LFB721:
1807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
1810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
ARM GAS  /tmp/cc3f4e78.s 			page 94


1814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 3531              		.loc 1 1814 0
 3532              		.cfi_startproc
 3533              		@ args = 0, pretend = 0, frame = 8
 3534              		@ frame_needed = 1, uses_anonymous_args = 0
 3535              		@ link register save eliminated.
 3536 0000 80B4     		push	{r7}
 3537              	.LCFI139:
 3538              		.cfi_def_cfa_offset 4
 3539              		.cfi_offset 7, -4
 3540 0002 83B0     		sub	sp, sp, #12
 3541              	.LCFI140:
 3542              		.cfi_def_cfa_offset 16
 3543 0004 00AF     		add	r7, sp, #0
 3544              	.LCFI141:
 3545              		.cfi_def_cfa_register 7
 3546 0006 7860     		str	r0, [r7, #4]
1815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
1820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3547              		.loc 1 1821 0
 3548 0008 00BF     		nop
 3549 000a 0C37     		adds	r7, r7, #12
 3550              	.LCFI142:
 3551              		.cfi_def_cfa_offset 4
 3552 000c BD46     		mov	sp, r7
 3553              	.LCFI143:
 3554              		.cfi_def_cfa_register 13
 3555              		@ sp needed
 3556 000e 5DF8047B 		ldr	r7, [sp], #4
 3557              	.LCFI144:
 3558              		.cfi_restore 7
 3559              		.cfi_def_cfa_offset 0
 3560 0012 7047     		bx	lr
 3561              		.cfi_endproc
 3562              	.LFE721:
 3564              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 3565              		.align	1
 3566              		.weak	HAL_UART_ErrorCallback
 3567              		.syntax unified
 3568              		.thumb
 3569              		.thumb_func
 3570              		.fpu fpv4-sp-d16
 3572              	HAL_UART_ErrorCallback:
 3573              	.LFB722:
1822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief UART error callback.
1825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
ARM GAS  /tmp/cc3f4e78.s 			page 95


 3574              		.loc 1 1829 0
 3575              		.cfi_startproc
 3576              		@ args = 0, pretend = 0, frame = 8
 3577              		@ frame_needed = 1, uses_anonymous_args = 0
 3578              		@ link register save eliminated.
 3579 0000 80B4     		push	{r7}
 3580              	.LCFI145:
 3581              		.cfi_def_cfa_offset 4
 3582              		.cfi_offset 7, -4
 3583 0002 83B0     		sub	sp, sp, #12
 3584              	.LCFI146:
 3585              		.cfi_def_cfa_offset 16
 3586 0004 00AF     		add	r7, sp, #0
 3587              	.LCFI147:
 3588              		.cfi_def_cfa_register 7
 3589 0006 7860     		str	r0, [r7, #4]
1830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
1835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3590              		.loc 1 1836 0
 3591 0008 00BF     		nop
 3592 000a 0C37     		adds	r7, r7, #12
 3593              	.LCFI148:
 3594              		.cfi_def_cfa_offset 4
 3595 000c BD46     		mov	sp, r7
 3596              	.LCFI149:
 3597              		.cfi_def_cfa_register 13
 3598              		@ sp needed
 3599 000e 5DF8047B 		ldr	r7, [sp], #4
 3600              	.LCFI150:
 3601              		.cfi_restore 7
 3602              		.cfi_def_cfa_offset 0
 3603 0012 7047     		bx	lr
 3604              		.cfi_endproc
 3605              	.LFE722:
 3607              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 3608              		.align	1
 3609              		.weak	HAL_UART_AbortCpltCallback
 3610              		.syntax unified
 3611              		.thumb
 3612              		.thumb_func
 3613              		.fpu fpv4-sp-d16
 3615              	HAL_UART_AbortCpltCallback:
 3616              	.LFB723:
1837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback (UART_HandleTypeDef *huart)
1844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 3617              		.loc 1 1844 0
ARM GAS  /tmp/cc3f4e78.s 			page 96


 3618              		.cfi_startproc
 3619              		@ args = 0, pretend = 0, frame = 8
 3620              		@ frame_needed = 1, uses_anonymous_args = 0
 3621              		@ link register save eliminated.
 3622 0000 80B4     		push	{r7}
 3623              	.LCFI151:
 3624              		.cfi_def_cfa_offset 4
 3625              		.cfi_offset 7, -4
 3626 0002 83B0     		sub	sp, sp, #12
 3627              	.LCFI152:
 3628              		.cfi_def_cfa_offset 16
 3629 0004 00AF     		add	r7, sp, #0
 3630              	.LCFI153:
 3631              		.cfi_def_cfa_register 7
 3632 0006 7860     		str	r0, [r7, #4]
1845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
1850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3633              		.loc 1 1851 0
 3634 0008 00BF     		nop
 3635 000a 0C37     		adds	r7, r7, #12
 3636              	.LCFI154:
 3637              		.cfi_def_cfa_offset 4
 3638 000c BD46     		mov	sp, r7
 3639              	.LCFI155:
 3640              		.cfi_def_cfa_register 13
 3641              		@ sp needed
 3642 000e 5DF8047B 		ldr	r7, [sp], #4
 3643              	.LCFI156:
 3644              		.cfi_restore 7
 3645              		.cfi_def_cfa_offset 0
 3646 0012 7047     		bx	lr
 3647              		.cfi_endproc
 3648              	.LFE723:
 3650              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 3651              		.align	1
 3652              		.weak	HAL_UART_AbortTransmitCpltCallback
 3653              		.syntax unified
 3654              		.thumb
 3655              		.thumb_func
 3656              		.fpu fpv4-sp-d16
 3658              	HAL_UART_AbortTransmitCpltCallback:
 3659              	.LFB724:
1852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback (UART_HandleTypeDef *huart)
1859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 3660              		.loc 1 1859 0
 3661              		.cfi_startproc
ARM GAS  /tmp/cc3f4e78.s 			page 97


 3662              		@ args = 0, pretend = 0, frame = 8
 3663              		@ frame_needed = 1, uses_anonymous_args = 0
 3664              		@ link register save eliminated.
 3665 0000 80B4     		push	{r7}
 3666              	.LCFI157:
 3667              		.cfi_def_cfa_offset 4
 3668              		.cfi_offset 7, -4
 3669 0002 83B0     		sub	sp, sp, #12
 3670              	.LCFI158:
 3671              		.cfi_def_cfa_offset 16
 3672 0004 00AF     		add	r7, sp, #0
 3673              	.LCFI159:
 3674              		.cfi_def_cfa_register 7
 3675 0006 7860     		str	r0, [r7, #4]
1860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
1865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3676              		.loc 1 1866 0
 3677 0008 00BF     		nop
 3678 000a 0C37     		adds	r7, r7, #12
 3679              	.LCFI160:
 3680              		.cfi_def_cfa_offset 4
 3681 000c BD46     		mov	sp, r7
 3682              	.LCFI161:
 3683              		.cfi_def_cfa_register 13
 3684              		@ sp needed
 3685 000e 5DF8047B 		ldr	r7, [sp], #4
 3686              	.LCFI162:
 3687              		.cfi_restore 7
 3688              		.cfi_def_cfa_offset 0
 3689 0012 7047     		bx	lr
 3690              		.cfi_endproc
 3691              	.LFE724:
 3693              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 3694              		.align	1
 3695              		.weak	HAL_UART_AbortReceiveCpltCallback
 3696              		.syntax unified
 3697              		.thumb
 3698              		.thumb_func
 3699              		.fpu fpv4-sp-d16
 3701              	HAL_UART_AbortReceiveCpltCallback:
 3702              	.LFB725:
1867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
1870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback (UART_HandleTypeDef *huart)
1874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 3703              		.loc 1 1874 0
 3704              		.cfi_startproc
 3705              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/cc3f4e78.s 			page 98


 3706              		@ frame_needed = 1, uses_anonymous_args = 0
 3707              		@ link register save eliminated.
 3708 0000 80B4     		push	{r7}
 3709              	.LCFI163:
 3710              		.cfi_def_cfa_offset 4
 3711              		.cfi_offset 7, -4
 3712 0002 83B0     		sub	sp, sp, #12
 3713              	.LCFI164:
 3714              		.cfi_def_cfa_offset 16
 3715 0004 00AF     		add	r7, sp, #0
 3716              	.LCFI165:
 3717              		.cfi_def_cfa_register 7
 3718 0006 7860     		str	r0, [r7, #4]
1875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
1880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3719              		.loc 1 1881 0
 3720 0008 00BF     		nop
 3721 000a 0C37     		adds	r7, r7, #12
 3722              	.LCFI166:
 3723              		.cfi_def_cfa_offset 4
 3724 000c BD46     		mov	sp, r7
 3725              	.LCFI167:
 3726              		.cfi_def_cfa_register 13
 3727              		@ sp needed
 3728 000e 5DF8047B 		ldr	r7, [sp], #4
 3729              	.LCFI168:
 3730              		.cfi_restore 7
 3731              		.cfi_def_cfa_offset 0
 3732 0012 7047     		bx	lr
 3733              		.cfi_endproc
 3734              	.LFE725:
 3736              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 3737              		.align	1
 3738              		.global	HAL_MultiProcessor_EnableMuteMode
 3739              		.syntax unified
 3740              		.thumb
 3741              		.thumb_func
 3742              		.fpu fpv4-sp-d16
 3744              	HAL_MultiProcessor_EnableMuteMode:
 3745              	.LFB726:
1882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
1885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
1888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  @brief   UART control functions
1889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
1890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
1891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
1892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
ARM GAS  /tmp/cc3f4e78.s 			page 99


1894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
1895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
1896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
1897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
1898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
1899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
1900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
1901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
1902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
1903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
1904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Enable UART in mute mode (does not mean UART enters mute mode;
1908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
1909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
1913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 3746              		.loc 1 1913 0
 3747              		.cfi_startproc
 3748              		@ args = 0, pretend = 0, frame = 8
 3749              		@ frame_needed = 1, uses_anonymous_args = 0
 3750 0000 80B5     		push	{r7, lr}
 3751              	.LCFI169:
 3752              		.cfi_def_cfa_offset 8
 3753              		.cfi_offset 7, -8
 3754              		.cfi_offset 14, -4
 3755 0002 82B0     		sub	sp, sp, #8
 3756              	.LCFI170:
 3757              		.cfi_def_cfa_offset 16
 3758 0004 00AF     		add	r7, sp, #0
 3759              	.LCFI171:
 3760              		.cfi_def_cfa_register 7
 3761 0006 7860     		str	r0, [r7, #4]
1914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 3762              		.loc 1 1915 0
 3763 0008 7B68     		ldr	r3, [r7, #4]
 3764 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 3765 000e 012B     		cmp	r3, #1
 3766 0010 01D1     		bne	.L189
 3767              		.loc 1 1915 0 is_stmt 0 discriminator 1
 3768 0012 0223     		movs	r3, #2
 3769 0014 17E0     		b	.L190
 3770              	.L189:
 3771              		.loc 1 1915 0 discriminator 2
 3772 0016 7B68     		ldr	r3, [r7, #4]
 3773 0018 0122     		movs	r2, #1
 3774 001a 83F86820 		strb	r2, [r3, #104]
1916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3775              		.loc 1 1917 0 is_stmt 1 discriminator 2
 3776 001e 7B68     		ldr	r3, [r7, #4]
 3777 0020 2422     		movs	r2, #36
 3778 0022 83F86920 		strb	r2, [r3, #105]
ARM GAS  /tmp/cc3f4e78.s 			page 100


1918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
1920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
 3779              		.loc 1 1920 0 discriminator 2
 3780 0026 7B68     		ldr	r3, [r7, #4]
 3781 0028 1B68     		ldr	r3, [r3]
 3782 002a 1A68     		ldr	r2, [r3]
 3783 002c 7B68     		ldr	r3, [r7, #4]
 3784 002e 1B68     		ldr	r3, [r3]
 3785 0030 42F40052 		orr	r2, r2, #8192
 3786 0034 1A60     		str	r2, [r3]
1921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3787              		.loc 1 1922 0 discriminator 2
 3788 0036 7B68     		ldr	r3, [r7, #4]
 3789 0038 2022     		movs	r2, #32
 3790 003a 83F86920 		strb	r2, [r3, #105]
1923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 3791              		.loc 1 1924 0 discriminator 2
 3792 003e 7868     		ldr	r0, [r7, #4]
 3793 0040 FFF7FEFF 		bl	UART_CheckIdleState
 3794 0044 0346     		mov	r3, r0
 3795              	.L190:
1925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3796              		.loc 1 1925 0
 3797 0046 1846     		mov	r0, r3
 3798 0048 0837     		adds	r7, r7, #8
 3799              	.LCFI172:
 3800              		.cfi_def_cfa_offset 8
 3801 004a BD46     		mov	sp, r7
 3802              	.LCFI173:
 3803              		.cfi_def_cfa_register 13
 3804              		@ sp needed
 3805 004c 80BD     		pop	{r7, pc}
 3806              		.cfi_endproc
 3807              	.LFE726:
 3809              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 3810              		.align	1
 3811              		.global	HAL_MultiProcessor_DisableMuteMode
 3812              		.syntax unified
 3813              		.thumb
 3814              		.thumb_func
 3815              		.fpu fpv4-sp-d16
 3817              	HAL_MultiProcessor_DisableMuteMode:
 3818              	.LFB727:
1926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
1929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
1930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
1934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 3819              		.loc 1 1934 0
 3820              		.cfi_startproc
ARM GAS  /tmp/cc3f4e78.s 			page 101


 3821              		@ args = 0, pretend = 0, frame = 8
 3822              		@ frame_needed = 1, uses_anonymous_args = 0
 3823 0000 80B5     		push	{r7, lr}
 3824              	.LCFI174:
 3825              		.cfi_def_cfa_offset 8
 3826              		.cfi_offset 7, -8
 3827              		.cfi_offset 14, -4
 3828 0002 82B0     		sub	sp, sp, #8
 3829              	.LCFI175:
 3830              		.cfi_def_cfa_offset 16
 3831 0004 00AF     		add	r7, sp, #0
 3832              	.LCFI176:
 3833              		.cfi_def_cfa_register 7
 3834 0006 7860     		str	r0, [r7, #4]
1935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 3835              		.loc 1 1936 0
 3836 0008 7B68     		ldr	r3, [r7, #4]
 3837 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 3838 000e 012B     		cmp	r3, #1
 3839 0010 01D1     		bne	.L192
 3840              		.loc 1 1936 0 is_stmt 0 discriminator 1
 3841 0012 0223     		movs	r3, #2
 3842 0014 17E0     		b	.L193
 3843              	.L192:
 3844              		.loc 1 1936 0 discriminator 2
 3845 0016 7B68     		ldr	r3, [r7, #4]
 3846 0018 0122     		movs	r2, #1
 3847 001a 83F86820 		strb	r2, [r3, #104]
1937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3848              		.loc 1 1938 0 is_stmt 1 discriminator 2
 3849 001e 7B68     		ldr	r3, [r7, #4]
 3850 0020 2422     		movs	r2, #36
 3851 0022 83F86920 		strb	r2, [r3, #105]
1939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    /* Disable USART mute mode by clearing the MME bit in the CR1 register */
1941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
 3852              		.loc 1 1941 0 discriminator 2
 3853 0026 7B68     		ldr	r3, [r7, #4]
 3854 0028 1B68     		ldr	r3, [r3]
 3855 002a 1A68     		ldr	r2, [r3]
 3856 002c 7B68     		ldr	r3, [r7, #4]
 3857 002e 1B68     		ldr	r3, [r3]
 3858 0030 22F40052 		bic	r2, r2, #8192
 3859 0034 1A60     		str	r2, [r3]
1942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3860              		.loc 1 1943 0 discriminator 2
 3861 0036 7B68     		ldr	r3, [r7, #4]
 3862 0038 2022     		movs	r2, #32
 3863 003a 83F86920 		strb	r2, [r3, #105]
1944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 3864              		.loc 1 1945 0 discriminator 2
 3865 003e 7868     		ldr	r0, [r7, #4]
 3866 0040 FFF7FEFF 		bl	UART_CheckIdleState
ARM GAS  /tmp/cc3f4e78.s 			page 102


 3867 0044 0346     		mov	r3, r0
 3868              	.L193:
1946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3869              		.loc 1 1946 0
 3870 0046 1846     		mov	r0, r3
 3871 0048 0837     		adds	r7, r7, #8
 3872              	.LCFI177:
 3873              		.cfi_def_cfa_offset 8
 3874 004a BD46     		mov	sp, r7
 3875              	.LCFI178:
 3876              		.cfi_def_cfa_register 13
 3877              		@ sp needed
 3878 004c 80BD     		pop	{r7, pc}
 3879              		.cfi_endproc
 3880              	.LFE727:
 3882              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 3883              		.align	1
 3884              		.global	HAL_MultiProcessor_EnterMuteMode
 3885              		.syntax unified
 3886              		.thumb
 3887              		.thumb_func
 3888              		.fpu fpv4-sp-d16
 3890              	HAL_MultiProcessor_EnterMuteMode:
 3891              	.LFB728:
1947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
1950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
1951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 3892              		.loc 1 1955 0
 3893              		.cfi_startproc
 3894              		@ args = 0, pretend = 0, frame = 8
 3895              		@ frame_needed = 1, uses_anonymous_args = 0
 3896              		@ link register save eliminated.
 3897 0000 80B4     		push	{r7}
 3898              	.LCFI179:
 3899              		.cfi_def_cfa_offset 4
 3900              		.cfi_offset 7, -4
 3901 0002 83B0     		sub	sp, sp, #12
 3902              	.LCFI180:
 3903              		.cfi_def_cfa_offset 16
 3904 0004 00AF     		add	r7, sp, #0
 3905              	.LCFI181:
 3906              		.cfi_def_cfa_register 7
 3907 0006 7860     		str	r0, [r7, #4]
1956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 3908              		.loc 1 1956 0
 3909 0008 7B68     		ldr	r3, [r7, #4]
 3910 000a 1B68     		ldr	r3, [r3]
 3911 000c 9A69     		ldr	r2, [r3, #24]
 3912 000e 7B68     		ldr	r3, [r7, #4]
 3913 0010 1B68     		ldr	r3, [r3]
 3914 0012 42F00402 		orr	r2, r2, #4
ARM GAS  /tmp/cc3f4e78.s 			page 103


 3915 0016 9A61     		str	r2, [r3, #24]
1957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3916              		.loc 1 1957 0
 3917 0018 00BF     		nop
 3918 001a 0C37     		adds	r7, r7, #12
 3919              	.LCFI182:
 3920              		.cfi_def_cfa_offset 4
 3921 001c BD46     		mov	sp, r7
 3922              	.LCFI183:
 3923              		.cfi_def_cfa_register 13
 3924              		@ sp needed
 3925 001e 5DF8047B 		ldr	r7, [sp], #4
 3926              	.LCFI184:
 3927              		.cfi_restore 7
 3928              		.cfi_def_cfa_offset 0
 3929 0022 7047     		bx	lr
 3930              		.cfi_endproc
 3931              	.LFE728:
 3933              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 3934              		.align	1
 3935              		.global	HAL_HalfDuplex_EnableTransmitter
 3936              		.syntax unified
 3937              		.thumb
 3938              		.thumb_func
 3939              		.fpu fpv4-sp-d16
 3941              	HAL_HalfDuplex_EnableTransmitter:
 3942              	.LFB729:
1958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
1961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
1965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 3943              		.loc 1 1965 0
 3944              		.cfi_startproc
 3945              		@ args = 0, pretend = 0, frame = 8
 3946              		@ frame_needed = 1, uses_anonymous_args = 0
 3947              		@ link register save eliminated.
 3948 0000 80B4     		push	{r7}
 3949              	.LCFI185:
 3950              		.cfi_def_cfa_offset 4
 3951              		.cfi_offset 7, -4
 3952 0002 83B0     		sub	sp, sp, #12
 3953              	.LCFI186:
 3954              		.cfi_def_cfa_offset 16
 3955 0004 00AF     		add	r7, sp, #0
 3956              	.LCFI187:
 3957              		.cfi_def_cfa_register 7
 3958 0006 7860     		str	r0, [r7, #4]
1966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 3959              		.loc 1 1967 0
 3960 0008 7B68     		ldr	r3, [r7, #4]
 3961 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 3962 000e 012B     		cmp	r3, #1
ARM GAS  /tmp/cc3f4e78.s 			page 104


 3963 0010 01D1     		bne	.L196
 3964              		.loc 1 1967 0 is_stmt 0 discriminator 1
 3965 0012 0223     		movs	r3, #2
 3966 0014 20E0     		b	.L197
 3967              	.L196:
 3968              		.loc 1 1967 0 discriminator 2
 3969 0016 7B68     		ldr	r3, [r7, #4]
 3970 0018 0122     		movs	r2, #1
 3971 001a 83F86820 		strb	r2, [r3, #104]
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3972              		.loc 1 1968 0 is_stmt 1 discriminator 2
 3973 001e 7B68     		ldr	r3, [r7, #4]
 3974 0020 2422     		movs	r2, #36
 3975 0022 83F86920 		strb	r2, [r3, #105]
1969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear TE and RE bits */
1971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 3976              		.loc 1 1971 0 discriminator 2
 3977 0026 7B68     		ldr	r3, [r7, #4]
 3978 0028 1B68     		ldr	r3, [r3]
 3979 002a 1A68     		ldr	r2, [r3]
 3980 002c 7B68     		ldr	r3, [r7, #4]
 3981 002e 1B68     		ldr	r3, [r3]
 3982 0030 22F00C02 		bic	r2, r2, #12
 3983 0034 1A60     		str	r2, [r3]
1972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
1973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
 3984              		.loc 1 1973 0 discriminator 2
 3985 0036 7B68     		ldr	r3, [r7, #4]
 3986 0038 1B68     		ldr	r3, [r3]
 3987 003a 1A68     		ldr	r2, [r3]
 3988 003c 7B68     		ldr	r3, [r7, #4]
 3989 003e 1B68     		ldr	r3, [r3]
 3990 0040 42F00802 		orr	r2, r2, #8
 3991 0044 1A60     		str	r2, [r3]
1974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3992              		.loc 1 1975 0 discriminator 2
 3993 0046 7B68     		ldr	r3, [r7, #4]
 3994 0048 2022     		movs	r2, #32
 3995 004a 83F86920 		strb	r2, [r3, #105]
1976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
1978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 3996              		.loc 1 1978 0 discriminator 2
 3997 004e 7B68     		ldr	r3, [r7, #4]
 3998 0050 0022     		movs	r2, #0
 3999 0052 83F86820 		strb	r2, [r3, #104]
1979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 4000              		.loc 1 1980 0 discriminator 2
 4001 0056 0023     		movs	r3, #0
 4002              	.L197:
1981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4003              		.loc 1 1981 0
 4004 0058 1846     		mov	r0, r3
 4005 005a 0C37     		adds	r7, r7, #12
ARM GAS  /tmp/cc3f4e78.s 			page 105


 4006              	.LCFI188:
 4007              		.cfi_def_cfa_offset 4
 4008 005c BD46     		mov	sp, r7
 4009              	.LCFI189:
 4010              		.cfi_def_cfa_register 13
 4011              		@ sp needed
 4012 005e 5DF8047B 		ldr	r7, [sp], #4
 4013              	.LCFI190:
 4014              		.cfi_restore 7
 4015              		.cfi_def_cfa_offset 0
 4016 0062 7047     		bx	lr
 4017              		.cfi_endproc
 4018              	.LFE729:
 4020              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 4021              		.align	1
 4022              		.global	HAL_HalfDuplex_EnableReceiver
 4023              		.syntax unified
 4024              		.thumb
 4025              		.thumb_func
 4026              		.fpu fpv4-sp-d16
 4028              	HAL_HalfDuplex_EnableReceiver:
 4029              	.LFB730:
1982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
1985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status.
1987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
1989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4030              		.loc 1 1989 0
 4031              		.cfi_startproc
 4032              		@ args = 0, pretend = 0, frame = 8
 4033              		@ frame_needed = 1, uses_anonymous_args = 0
 4034              		@ link register save eliminated.
 4035 0000 80B4     		push	{r7}
 4036              	.LCFI191:
 4037              		.cfi_def_cfa_offset 4
 4038              		.cfi_offset 7, -4
 4039 0002 83B0     		sub	sp, sp, #12
 4040              	.LCFI192:
 4041              		.cfi_def_cfa_offset 16
 4042 0004 00AF     		add	r7, sp, #0
 4043              	.LCFI193:
 4044              		.cfi_def_cfa_register 7
 4045 0006 7860     		str	r0, [r7, #4]
1990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 4046              		.loc 1 1991 0
 4047 0008 7B68     		ldr	r3, [r7, #4]
 4048 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 4049 000e 012B     		cmp	r3, #1
 4050 0010 01D1     		bne	.L199
 4051              		.loc 1 1991 0 is_stmt 0 discriminator 1
 4052 0012 0223     		movs	r3, #2
 4053 0014 20E0     		b	.L200
 4054              	.L199:
ARM GAS  /tmp/cc3f4e78.s 			page 106


 4055              		.loc 1 1991 0 discriminator 2
 4056 0016 7B68     		ldr	r3, [r7, #4]
 4057 0018 0122     		movs	r2, #1
 4058 001a 83F86820 		strb	r2, [r3, #104]
1992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4059              		.loc 1 1992 0 is_stmt 1 discriminator 2
 4060 001e 7B68     		ldr	r3, [r7, #4]
 4061 0020 2422     		movs	r2, #36
 4062 0022 83F86920 		strb	r2, [r3, #105]
1993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear TE and RE bits */
1995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 4063              		.loc 1 1995 0 discriminator 2
 4064 0026 7B68     		ldr	r3, [r7, #4]
 4065 0028 1B68     		ldr	r3, [r3]
 4066 002a 1A68     		ldr	r2, [r3]
 4067 002c 7B68     		ldr	r3, [r7, #4]
 4068 002e 1B68     		ldr	r3, [r3]
 4069 0030 22F00C02 		bic	r2, r2, #12
 4070 0034 1A60     		str	r2, [r3]
1996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
1997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
 4071              		.loc 1 1997 0 discriminator 2
 4072 0036 7B68     		ldr	r3, [r7, #4]
 4073 0038 1B68     		ldr	r3, [r3]
 4074 003a 1A68     		ldr	r2, [r3]
 4075 003c 7B68     		ldr	r3, [r7, #4]
 4076 003e 1B68     		ldr	r3, [r3]
 4077 0040 42F00402 		orr	r2, r2, #4
 4078 0044 1A60     		str	r2, [r3]
1998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4079              		.loc 1 1999 0 discriminator 2
 4080 0046 7B68     		ldr	r3, [r7, #4]
 4081 0048 2022     		movs	r2, #32
 4082 004a 83F86920 		strb	r2, [r3, #105]
2000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
2001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4083              		.loc 1 2001 0 discriminator 2
 4084 004e 7B68     		ldr	r3, [r7, #4]
 4085 0050 0022     		movs	r2, #0
 4086 0052 83F86820 		strb	r2, [r3, #104]
2002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 4087              		.loc 1 2003 0 discriminator 2
 4088 0056 0023     		movs	r3, #0
 4089              	.L200:
2004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4090              		.loc 1 2004 0
 4091 0058 1846     		mov	r0, r3
 4092 005a 0C37     		adds	r7, r7, #12
 4093              	.LCFI194:
 4094              		.cfi_def_cfa_offset 4
 4095 005c BD46     		mov	sp, r7
 4096              	.LCFI195:
 4097              		.cfi_def_cfa_register 13
 4098              		@ sp needed
ARM GAS  /tmp/cc3f4e78.s 			page 107


 4099 005e 5DF8047B 		ldr	r7, [sp], #4
 4100              	.LCFI196:
 4101              		.cfi_restore 7
 4102              		.cfi_def_cfa_offset 0
 4103 0062 7047     		bx	lr
 4104              		.cfi_endproc
 4105              	.LFE730:
 4107              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 4108              		.align	1
 4109              		.global	HAL_LIN_SendBreak
 4110              		.syntax unified
 4111              		.thumb
 4112              		.thumb_func
 4113              		.fpu fpv4-sp-d16
 4115              	HAL_LIN_SendBreak:
 4116              	.LFB731:
2005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Transmit break characters.
2009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4117              		.loc 1 2013 0
 4118              		.cfi_startproc
 4119              		@ args = 0, pretend = 0, frame = 8
 4120              		@ frame_needed = 1, uses_anonymous_args = 0
 4121              		@ link register save eliminated.
 4122 0000 80B4     		push	{r7}
 4123              	.LCFI197:
 4124              		.cfi_def_cfa_offset 4
 4125              		.cfi_offset 7, -4
 4126 0002 83B0     		sub	sp, sp, #12
 4127              	.LCFI198:
 4128              		.cfi_def_cfa_offset 16
 4129 0004 00AF     		add	r7, sp, #0
 4130              	.LCFI199:
 4131              		.cfi_def_cfa_register 7
 4132 0006 7860     		str	r0, [r7, #4]
2014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
2015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 4133              		.loc 1 2018 0
 4134 0008 7B68     		ldr	r3, [r7, #4]
 4135 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 4136 000e 012B     		cmp	r3, #1
 4137 0010 01D1     		bne	.L202
 4138              		.loc 1 2018 0 is_stmt 0 discriminator 1
 4139 0012 0223     		movs	r3, #2
 4140 0014 18E0     		b	.L203
 4141              	.L202:
 4142              		.loc 1 2018 0 discriminator 2
 4143 0016 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc3f4e78.s 			page 108


 4144 0018 0122     		movs	r2, #1
 4145 001a 83F86820 		strb	r2, [r3, #104]
2019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4146              		.loc 1 2020 0 is_stmt 1 discriminator 2
 4147 001e 7B68     		ldr	r3, [r7, #4]
 4148 0020 2422     		movs	r2, #36
 4149 0022 83F86920 		strb	r2, [r3, #105]
2021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Send break characters */
2023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->RQR |= UART_SENDBREAK_REQUEST;
 4150              		.loc 1 2023 0 discriminator 2
 4151 0026 7B68     		ldr	r3, [r7, #4]
 4152 0028 1B68     		ldr	r3, [r3]
 4153 002a 9A69     		ldr	r2, [r3, #24]
 4154 002c 7B68     		ldr	r3, [r7, #4]
 4155 002e 1B68     		ldr	r3, [r3]
 4156 0030 42F00202 		orr	r2, r2, #2
 4157 0034 9A61     		str	r2, [r3, #24]
2024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4158              		.loc 1 2025 0 discriminator 2
 4159 0036 7B68     		ldr	r3, [r7, #4]
 4160 0038 2022     		movs	r2, #32
 4161 003a 83F86920 		strb	r2, [r3, #105]
2026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
2028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4162              		.loc 1 2028 0 discriminator 2
 4163 003e 7B68     		ldr	r3, [r7, #4]
 4164 0040 0022     		movs	r2, #0
 4165 0042 83F86820 		strb	r2, [r3, #104]
2029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 4166              		.loc 1 2030 0 discriminator 2
 4167 0046 0023     		movs	r3, #0
 4168              	.L203:
2031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4169              		.loc 1 2031 0
 4170 0048 1846     		mov	r0, r3
 4171 004a 0C37     		adds	r7, r7, #12
 4172              	.LCFI200:
 4173              		.cfi_def_cfa_offset 4
 4174 004c BD46     		mov	sp, r7
 4175              	.LCFI201:
 4176              		.cfi_def_cfa_register 13
 4177              		@ sp needed
 4178 004e 5DF8047B 		ldr	r7, [sp], #4
 4179              	.LCFI202:
 4180              		.cfi_restore 7
 4181              		.cfi_def_cfa_offset 0
 4182 0052 7047     		bx	lr
 4183              		.cfi_endproc
 4184              	.LFE731:
 4186              		.section	.text.HAL_UART_GetState,"ax",%progbits
 4187              		.align	1
 4188              		.global	HAL_UART_GetState
ARM GAS  /tmp/cc3f4e78.s 			page 109


 4189              		.syntax unified
 4190              		.thumb
 4191              		.thumb_func
 4192              		.fpu fpv4-sp-d16
 4194              	HAL_UART_GetState:
 4195              	.LFB732:
2032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  *  @brief   UART Peripheral State functions
2040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  *
2041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
2042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ==============================================================================
2043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ==============================================================================
2045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
2046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides functions allowing to :
2047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) Return the UART handle state.
2048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) Return the UART handle error code
2049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
2051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
2052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Return the UART handle state.
2056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *               the configuration information for the specified UART.
2058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL state
2059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4196              		.loc 1 2061 0
 4197              		.cfi_startproc
 4198              		@ args = 0, pretend = 0, frame = 16
 4199              		@ frame_needed = 1, uses_anonymous_args = 0
 4200              		@ link register save eliminated.
 4201 0000 80B4     		push	{r7}
 4202              	.LCFI203:
 4203              		.cfi_def_cfa_offset 4
 4204              		.cfi_offset 7, -4
 4205 0002 85B0     		sub	sp, sp, #20
 4206              	.LCFI204:
 4207              		.cfi_def_cfa_offset 24
 4208 0004 00AF     		add	r7, sp, #0
 4209              	.LCFI205:
 4210              		.cfi_def_cfa_register 7
 4211 0006 7860     		str	r0, [r7, #4]
2062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 4212              		.loc 1 2062 0
 4213 0008 0023     		movs	r3, #0
 4214 000a FB60     		str	r3, [r7, #12]
 4215 000c 0023     		movs	r3, #0
ARM GAS  /tmp/cc3f4e78.s 			page 110


 4216 000e BB60     		str	r3, [r7, #8]
2063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   temp1 = huart->gState;
 4217              		.loc 1 2063 0
 4218 0010 7B68     		ldr	r3, [r7, #4]
 4219 0012 93F86930 		ldrb	r3, [r3, #105]
 4220 0016 DBB2     		uxtb	r3, r3
 4221 0018 FB60     		str	r3, [r7, #12]
2064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   temp2 = huart->RxState;
 4222              		.loc 1 2064 0
 4223 001a 7B68     		ldr	r3, [r7, #4]
 4224 001c 93F86A30 		ldrb	r3, [r3, #106]
 4225 0020 DBB2     		uxtb	r3, r3
 4226 0022 BB60     		str	r3, [r7, #8]
2065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 4227              		.loc 1 2066 0
 4228 0024 FB68     		ldr	r3, [r7, #12]
 4229 0026 DAB2     		uxtb	r2, r3
 4230 0028 BB68     		ldr	r3, [r7, #8]
 4231 002a DBB2     		uxtb	r3, r3
 4232 002c 1343     		orrs	r3, r3, r2
 4233 002e DBB2     		uxtb	r3, r3
2067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4234              		.loc 1 2067 0
 4235 0030 1846     		mov	r0, r3
 4236 0032 1437     		adds	r7, r7, #20
 4237              	.LCFI206:
 4238              		.cfi_def_cfa_offset 4
 4239 0034 BD46     		mov	sp, r7
 4240              	.LCFI207:
 4241              		.cfi_def_cfa_register 13
 4242              		@ sp needed
 4243 0036 5DF8047B 		ldr	r7, [sp], #4
 4244              	.LCFI208:
 4245              		.cfi_restore 7
 4246              		.cfi_def_cfa_offset 0
 4247 003a 7047     		bx	lr
 4248              		.cfi_endproc
 4249              	.LFE732:
 4251              		.section	.text.HAL_UART_GetError,"ax",%progbits
 4252              		.align	1
 4253              		.global	HAL_UART_GetError
 4254              		.syntax unified
 4255              		.thumb
 4256              		.thumb_func
 4257              		.fpu fpv4-sp-d16
 4259              	HAL_UART_GetError:
 4260              	.LFB733:
2068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *               the configuration information for the specified UART.
2073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval UART Error Code
2074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
ARM GAS  /tmp/cc3f4e78.s 			page 111


 4261              		.loc 1 2076 0
 4262              		.cfi_startproc
 4263              		@ args = 0, pretend = 0, frame = 8
 4264              		@ frame_needed = 1, uses_anonymous_args = 0
 4265              		@ link register save eliminated.
 4266 0000 80B4     		push	{r7}
 4267              	.LCFI209:
 4268              		.cfi_def_cfa_offset 4
 4269              		.cfi_offset 7, -4
 4270 0002 83B0     		sub	sp, sp, #12
 4271              	.LCFI210:
 4272              		.cfi_def_cfa_offset 16
 4273 0004 00AF     		add	r7, sp, #0
 4274              	.LCFI211:
 4275              		.cfi_def_cfa_register 7
 4276 0006 7860     		str	r0, [r7, #4]
2077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return huart->ErrorCode;
 4277              		.loc 1 2077 0
 4278 0008 7B68     		ldr	r3, [r7, #4]
 4279 000a DB6E     		ldr	r3, [r3, #108]
2078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4280              		.loc 1 2078 0
 4281 000c 1846     		mov	r0, r3
 4282 000e 0C37     		adds	r7, r7, #12
 4283              	.LCFI212:
 4284              		.cfi_def_cfa_offset 4
 4285 0010 BD46     		mov	sp, r7
 4286              	.LCFI213:
 4287              		.cfi_def_cfa_register 13
 4288              		@ sp needed
 4289 0012 5DF8047B 		ldr	r7, [sp], #4
 4290              	.LCFI214:
 4291              		.cfi_restore 7
 4292              		.cfi_def_cfa_offset 0
 4293 0016 7047     		bx	lr
 4294              		.cfi_endproc
 4295              	.LFE733:
 4297              		.section	.text.UART_SetConfig,"ax",%progbits
 4298              		.align	1
 4299              		.global	UART_SetConfig
 4300              		.syntax unified
 4301              		.thumb
 4302              		.thumb_func
 4303              		.fpu fpv4-sp-d16
 4305              	UART_SetConfig:
 4306              	.LFB734:
2079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
2089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
ARM GAS  /tmp/cc3f4e78.s 			page 112


2090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4307              		.loc 1 2097 0
 4308              		.cfi_startproc
 4309              		@ args = 0, pretend = 0, frame = 24
 4310              		@ frame_needed = 1, uses_anonymous_args = 0
 4311 0000 80B5     		push	{r7, lr}
 4312              	.LCFI215:
 4313              		.cfi_def_cfa_offset 8
 4314              		.cfi_offset 7, -8
 4315              		.cfi_offset 14, -4
 4316 0002 86B0     		sub	sp, sp, #24
 4317              	.LCFI216:
 4318              		.cfi_def_cfa_offset 32
 4319 0004 00AF     		add	r7, sp, #0
 4320              	.LCFI217:
 4321              		.cfi_def_cfa_register 7
 4322 0006 7860     		str	r0, [r7, #4]
2098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
 4323              		.loc 1 2098 0
 4324 0008 0023     		movs	r3, #0
 4325 000a FB60     		str	r3, [r7, #12]
2099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
 4326              		.loc 1 2099 0
 4327 000c 1023     		movs	r3, #16
 4328 000e FB75     		strb	r3, [r7, #23]
2100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 4329              		.loc 1 2100 0
 4330 0010 0023     		movs	r3, #0
 4331 0012 7B81     		strh	r3, [r7, #10]	@ movhi
2101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t usartdiv                   = 0x0000U;
 4332              		.loc 1 2101 0
 4333 0014 0023     		movs	r3, #0
 4334 0016 BB82     		strh	r3, [r7, #20]	@ movhi
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 4335              		.loc 1 2102 0
 4336 0018 0023     		movs	r3, #0
 4337 001a FB74     		strb	r3, [r7, #19]
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
2105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
ARM GAS  /tmp/cc3f4e78.s 			page 113


2116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  the UART Word Length, Parity, Mode and oversampling:
2118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set the M bits according to huart->Init.WordLength value
2119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set PCE and PS bits according to huart->Init.Parity value
2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set TE and RE bits according to huart->Init.Mode value
2121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set OVER8 bit according to huart->Init.OverSampling value */
2122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 4338              		.loc 1 2122 0
 4339 001c 7B68     		ldr	r3, [r7, #4]
 4340 001e 9A68     		ldr	r2, [r3, #8]
 4341 0020 7B68     		ldr	r3, [r7, #4]
 4342 0022 1B69     		ldr	r3, [r3, #16]
 4343 0024 1A43     		orrs	r2, r2, r3
 4344 0026 7B68     		ldr	r3, [r7, #4]
 4345 0028 5B69     		ldr	r3, [r3, #20]
 4346 002a 1A43     		orrs	r2, r2, r3
 4347 002c 7B68     		ldr	r3, [r7, #4]
 4348 002e DB69     		ldr	r3, [r3, #28]
 4349 0030 1343     		orrs	r3, r3, r2
 4350 0032 FB60     		str	r3, [r7, #12]
2123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 4351              		.loc 1 2123 0
 4352 0034 7B68     		ldr	r3, [r7, #4]
 4353 0036 1B68     		ldr	r3, [r3]
 4354 0038 1A68     		ldr	r2, [r3]
 4355 003a 9F4B     		ldr	r3, .L238
 4356 003c 1340     		ands	r3, r3, r2
 4357 003e 7A68     		ldr	r2, [r7, #4]
 4358 0040 1268     		ldr	r2, [r2]
 4359 0042 F968     		ldr	r1, [r7, #12]
 4360 0044 0B43     		orrs	r3, r3, r1
 4361 0046 1360     		str	r3, [r2]
2124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    * to huart->Init.StopBits value */
2128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 4362              		.loc 1 2128 0
 4363 0048 7B68     		ldr	r3, [r7, #4]
 4364 004a 1B68     		ldr	r3, [r3]
 4365 004c 5B68     		ldr	r3, [r3, #4]
 4366 004e 23F44051 		bic	r1, r3, #12288
 4367 0052 7B68     		ldr	r3, [r7, #4]
 4368 0054 DA68     		ldr	r2, [r3, #12]
 4369 0056 7B68     		ldr	r3, [r7, #4]
 4370 0058 1B68     		ldr	r3, [r3]
 4371 005a 0A43     		orrs	r2, r2, r1
 4372 005c 5A60     		str	r2, [r3, #4]
2129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Configure
2132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    * - UART HardWare Flow Control: set CTSE and RTSE bits according
2133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *   to huart->Init.HwFlowCtl value
2134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    * - one-bit sampling method versus three samples' majority rule according
2135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *   to huart->Init.OneBitSampling */
2136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl | huart->Init.OneBitSampling ;
 4373              		.loc 1 2136 0
ARM GAS  /tmp/cc3f4e78.s 			page 114


 4374 005e 7B68     		ldr	r3, [r7, #4]
 4375 0060 9A69     		ldr	r2, [r3, #24]
 4376 0062 7B68     		ldr	r3, [r7, #4]
 4377 0064 1B6A     		ldr	r3, [r3, #32]
 4378 0066 1343     		orrs	r3, r3, r2
 4379 0068 FB60     		str	r3, [r7, #12]
2137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 4380              		.loc 1 2137 0
 4381 006a 7B68     		ldr	r3, [r7, #4]
 4382 006c 1B68     		ldr	r3, [r3]
 4383 006e 9B68     		ldr	r3, [r3, #8]
 4384 0070 23F43061 		bic	r1, r3, #2816
 4385 0074 7B68     		ldr	r3, [r7, #4]
 4386 0076 1B68     		ldr	r3, [r3]
 4387 0078 FA68     		ldr	r2, [r7, #12]
 4388 007a 0A43     		orrs	r2, r2, r1
 4389 007c 9A60     		str	r2, [r3, #8]
2138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
 4390              		.loc 1 2140 0
 4391 007e 7B68     		ldr	r3, [r7, #4]
 4392 0080 1B68     		ldr	r3, [r3]
 4393 0082 8E4A     		ldr	r2, .L238+4
 4394 0084 9342     		cmp	r3, r2
 4395 0086 21D1     		bne	.L209
 4396              		.loc 1 2140 0 is_stmt 0 discriminator 1
 4397 0088 8D4B     		ldr	r3, .L238+8
 4398 008a 1B6B     		ldr	r3, [r3, #48]
 4399 008c 03F00303 		and	r3, r3, #3
 4400 0090 032B     		cmp	r3, #3
 4401 0092 17D8     		bhi	.L210
 4402 0094 01A2     		adr	r2, .L212
 4403 0096 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4404 009a 00BF     		.p2align 2
 4405              	.L212:
 4406 009c AD000000 		.word	.L211+1
 4407 00a0 B9000000 		.word	.L213+1
 4408 00a4 BF000000 		.word	.L214+1
 4409 00a8 B3000000 		.word	.L215+1
 4410              		.p2align 1
 4411              	.L211:
 4412              		.loc 1 2140 0 discriminator 4
 4413 00ac 0023     		movs	r3, #0
 4414 00ae FB75     		strb	r3, [r7, #23]
 4415 00b0 1EE0     		b	.L217
 4416              	.L215:
 4417              		.loc 1 2140 0 discriminator 7
 4418 00b2 0223     		movs	r3, #2
 4419 00b4 FB75     		strb	r3, [r7, #23]
 4420 00b6 1BE0     		b	.L217
 4421              	.L213:
 4422              		.loc 1 2140 0 discriminator 5
 4423 00b8 0423     		movs	r3, #4
 4424 00ba FB75     		strb	r3, [r7, #23]
 4425 00bc 18E0     		b	.L217
 4426              	.L214:
ARM GAS  /tmp/cc3f4e78.s 			page 115


 4427              		.loc 1 2140 0 discriminator 6
 4428 00be 0823     		movs	r3, #8
 4429 00c0 FB75     		strb	r3, [r7, #23]
 4430 00c2 15E0     		b	.L217
 4431              	.L210:
 4432              		.loc 1 2140 0 discriminator 3
 4433 00c4 1023     		movs	r3, #16
 4434 00c6 FB75     		strb	r3, [r7, #23]
 4435 00c8 00BF     		nop
 4436 00ca 11E0     		b	.L217
 4437              	.L209:
 4438              		.loc 1 2140 0 discriminator 2
 4439 00cc 7B68     		ldr	r3, [r7, #4]
 4440 00ce 1B68     		ldr	r3, [r3]
 4441 00d0 7C4A     		ldr	r2, .L238+12
 4442 00d2 9342     		cmp	r3, r2
 4443 00d4 02D1     		bne	.L218
 4444              		.loc 1 2140 0 discriminator 13
 4445 00d6 0023     		movs	r3, #0
 4446 00d8 FB75     		strb	r3, [r7, #23]
 4447 00da 09E0     		b	.L217
 4448              	.L218:
 4449              		.loc 1 2140 0 discriminator 14
 4450 00dc 7B68     		ldr	r3, [r7, #4]
 4451 00de 1B68     		ldr	r3, [r3]
 4452 00e0 794A     		ldr	r2, .L238+16
 4453 00e2 9342     		cmp	r3, r2
 4454 00e4 02D1     		bne	.L219
 4455              		.loc 1 2140 0 discriminator 15
 4456 00e6 0023     		movs	r3, #0
 4457 00e8 FB75     		strb	r3, [r7, #23]
 4458 00ea 01E0     		b	.L217
 4459              	.L219:
 4460              		.loc 1 2140 0 discriminator 16
 4461 00ec 1023     		movs	r3, #16
 4462 00ee FB75     		strb	r3, [r7, #23]
 4463              	.L217:
2141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
2143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 4464              		.loc 1 2143 0 is_stmt 1
 4465 00f0 7B68     		ldr	r3, [r7, #4]
 4466 00f2 DB69     		ldr	r3, [r3, #28]
 4467 00f4 B3F5004F 		cmp	r3, #32768
 4468 00f8 6FD1     		bne	.L220
2144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (clocksource)
 4469              		.loc 1 2145 0
 4470 00fa FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4471 00fc 082B     		cmp	r3, #8
 4472 00fe 57D8     		bhi	.L221
 4473 0100 01A2     		adr	r2, .L223
 4474 0102 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4475 0106 00BF     		.p2align 2
 4476              	.L223:
 4477 0108 2D010000 		.word	.L222+1
 4478 010c 49010000 		.word	.L224+1
ARM GAS  /tmp/cc3f4e78.s 			page 116


 4479 0110 65010000 		.word	.L225+1
 4480 0114 B1010000 		.word	.L221+1
 4481 0118 7F010000 		.word	.L226+1
 4482 011c B1010000 		.word	.L221+1
 4483 0120 B1010000 		.word	.L221+1
 4484 0124 B1010000 		.word	.L221+1
 4485 0128 9B010000 		.word	.L227+1
 4486              		.p2align 1
 4487              	.L222:
2146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
 4488              		.loc 1 2148 0
 4489 012c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4490 0130 0346     		mov	r3, r0
 4491 0132 5A00     		lsls	r2, r3, #1
 4492 0134 7B68     		ldr	r3, [r7, #4]
 4493 0136 5B68     		ldr	r3, [r3, #4]
 4494 0138 5B08     		lsrs	r3, r3, #1
 4495 013a 1A44     		add	r2, r2, r3
 4496 013c 7B68     		ldr	r3, [r7, #4]
 4497 013e 5B68     		ldr	r3, [r3, #4]
 4498 0140 B2FBF3F3 		udiv	r3, r2, r3
 4499 0144 BB82     		strh	r3, [r7, #20]	@ movhi
2149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 4500              		.loc 1 2149 0
 4501 0146 36E0     		b	.L228
 4502              	.L224:
2150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
 4503              		.loc 1 2151 0
 4504 0148 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4505 014c 0346     		mov	r3, r0
 4506 014e 5A00     		lsls	r2, r3, #1
 4507 0150 7B68     		ldr	r3, [r7, #4]
 4508 0152 5B68     		ldr	r3, [r3, #4]
 4509 0154 5B08     		lsrs	r3, r3, #1
 4510 0156 1A44     		add	r2, r2, r3
 4511 0158 7B68     		ldr	r3, [r7, #4]
 4512 015a 5B68     		ldr	r3, [r3, #4]
 4513 015c B2FBF3F3 		udiv	r3, r2, r3
 4514 0160 BB82     		strh	r3, [r7, #20]	@ movhi
2152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 4515              		.loc 1 2152 0
 4516 0162 28E0     		b	.L228
 4517              	.L225:
2153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
 4518              		.loc 1 2154 0
 4519 0164 7B68     		ldr	r3, [r7, #4]
 4520 0166 5B68     		ldr	r3, [r3, #4]
 4521 0168 5B08     		lsrs	r3, r3, #1
 4522 016a 03F57403 		add	r3, r3, #15990784
 4523 016e 03F51053 		add	r3, r3, #9216
 4524 0172 7A68     		ldr	r2, [r7, #4]
 4525 0174 5268     		ldr	r2, [r2, #4]
 4526 0176 B3FBF2F3 		udiv	r3, r3, r2
ARM GAS  /tmp/cc3f4e78.s 			page 117


 4527 017a BB82     		strh	r3, [r7, #20]	@ movhi
2155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 4528              		.loc 1 2155 0
 4529 017c 1BE0     		b	.L228
 4530              	.L226:
2156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 4531              		.loc 1 2157 0
 4532 017e FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 4533 0182 0346     		mov	r3, r0
 4534 0184 5A00     		lsls	r2, r3, #1
 4535 0186 7B68     		ldr	r3, [r7, #4]
 4536 0188 5B68     		ldr	r3, [r3, #4]
 4537 018a 5B08     		lsrs	r3, r3, #1
 4538 018c 1A44     		add	r2, r2, r3
 4539 018e 7B68     		ldr	r3, [r7, #4]
 4540 0190 5B68     		ldr	r3, [r3, #4]
 4541 0192 B2FBF3F3 		udiv	r3, r2, r3
 4542 0196 BB82     		strh	r3, [r7, #20]	@ movhi
2158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 4543              		.loc 1 2158 0
 4544 0198 0DE0     		b	.L228
 4545              	.L227:
2159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
 4546              		.loc 1 2160 0
 4547 019a 7B68     		ldr	r3, [r7, #4]
 4548 019c 5B68     		ldr	r3, [r3, #4]
 4549 019e 5B08     		lsrs	r3, r3, #1
 4550 01a0 03F58032 		add	r2, r3, #65536
 4551 01a4 7B68     		ldr	r3, [r7, #4]
 4552 01a6 5B68     		ldr	r3, [r3, #4]
 4553 01a8 B2FBF3F3 		udiv	r3, r2, r3
 4554 01ac BB82     		strh	r3, [r7, #20]	@ movhi
2161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 4555              		.loc 1 2161 0
 4556 01ae 02E0     		b	.L228
 4557              	.L221:
2162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default:
2164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         ret = HAL_ERROR;
 4558              		.loc 1 2164 0
 4559 01b0 0123     		movs	r3, #1
 4560 01b2 FB74     		strb	r3, [r7, #19]
2165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 4561              		.loc 1 2165 0
 4562 01b4 00BF     		nop
 4563              	.L228:
2166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     brrtemp = usartdiv & 0xFFF0U;
 4564              		.loc 1 2168 0
 4565 01b6 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 4566 01b8 23F00F03 		bic	r3, r3, #15
 4567 01bc 7B81     		strh	r3, [r7, #10]	@ movhi
2169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 4568              		.loc 1 2169 0
ARM GAS  /tmp/cc3f4e78.s 			page 118


 4569 01be BB8A     		ldrh	r3, [r7, #20]
 4570 01c0 5B10     		asrs	r3, r3, #1
 4571 01c2 9BB2     		uxth	r3, r3
 4572 01c4 03F00703 		and	r3, r3, #7
 4573 01c8 9AB2     		uxth	r2, r3
 4574 01ca 7B89     		ldrh	r3, [r7, #10]	@ movhi
 4575 01cc 1343     		orrs	r3, r3, r2
 4576 01ce 7B81     		strh	r3, [r7, #10]	@ movhi
2170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
 4577              		.loc 1 2170 0
 4578 01d0 7B68     		ldr	r3, [r7, #4]
 4579 01d2 1B68     		ldr	r3, [r3]
 4580 01d4 7A89     		ldrh	r2, [r7, #10]
 4581 01d6 DA60     		str	r2, [r3, #12]
 4582 01d8 69E0     		b	.L229
 4583              	.L220:
2171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (clocksource)
 4584              		.loc 1 2174 0
 4585 01da FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4586 01dc 082B     		cmp	r3, #8
 4587 01de 63D8     		bhi	.L230
 4588 01e0 01A2     		adr	r2, .L232
 4589 01e2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4590 01e6 00BF     		.p2align 2
 4591              	.L232:
 4592 01e8 0D020000 		.word	.L231+1
 4593 01ec 2D020000 		.word	.L233+1
 4594 01f0 4D020000 		.word	.L234+1
 4595 01f4 A9020000 		.word	.L230+1
 4596 01f8 6D020000 		.word	.L235+1
 4597 01fc A9020000 		.word	.L230+1
 4598 0200 A9020000 		.word	.L230+1
 4599 0204 A9020000 		.word	.L230+1
 4600 0208 8D020000 		.word	.L236+1
 4601              		.p2align 1
 4602              	.L231:
2175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.B
 4603              		.loc 1 2177 0
 4604 020c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4605 0210 0246     		mov	r2, r0
 4606 0212 7B68     		ldr	r3, [r7, #4]
 4607 0214 5B68     		ldr	r3, [r3, #4]
 4608 0216 5B08     		lsrs	r3, r3, #1
 4609 0218 1A44     		add	r2, r2, r3
 4610 021a 7B68     		ldr	r3, [r7, #4]
 4611 021c 5B68     		ldr	r3, [r3, #4]
 4612 021e B2FBF3F3 		udiv	r3, r2, r3
 4613 0222 9AB2     		uxth	r2, r3
 4614 0224 7B68     		ldr	r3, [r7, #4]
 4615 0226 1B68     		ldr	r3, [r3]
 4616 0228 DA60     		str	r2, [r3, #12]
2178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
ARM GAS  /tmp/cc3f4e78.s 			page 119


 4617              		.loc 1 2178 0
 4618 022a 40E0     		b	.L229
 4619              	.L233:
2179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.B
 4620              		.loc 1 2180 0
 4621 022c FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4622 0230 0246     		mov	r2, r0
 4623 0232 7B68     		ldr	r3, [r7, #4]
 4624 0234 5B68     		ldr	r3, [r3, #4]
 4625 0236 5B08     		lsrs	r3, r3, #1
 4626 0238 1A44     		add	r2, r2, r3
 4627 023a 7B68     		ldr	r3, [r7, #4]
 4628 023c 5B68     		ldr	r3, [r3, #4]
 4629 023e B2FBF3F3 		udiv	r3, r2, r3
 4630 0242 9AB2     		uxth	r2, r3
 4631 0244 7B68     		ldr	r3, [r7, #4]
 4632 0246 1B68     		ldr	r3, [r3]
 4633 0248 DA60     		str	r2, [r3, #12]
2181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 4634              		.loc 1 2181 0
 4635 024a 30E0     		b	.L229
 4636              	.L234:
2182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
 4637              		.loc 1 2183 0
 4638 024c 7B68     		ldr	r3, [r7, #4]
 4639 024e 5B68     		ldr	r3, [r3, #4]
 4640 0250 5B08     		lsrs	r3, r3, #1
 4641 0252 03F5F403 		add	r3, r3, #7995392
 4642 0256 03F59053 		add	r3, r3, #4608
 4643 025a 7A68     		ldr	r2, [r7, #4]
 4644 025c 5268     		ldr	r2, [r2, #4]
 4645 025e B3FBF2F3 		udiv	r3, r3, r2
 4646 0262 9AB2     		uxth	r2, r3
 4647 0264 7B68     		ldr	r3, [r7, #4]
 4648 0266 1B68     		ldr	r3, [r3]
 4649 0268 DA60     		str	r2, [r3, #12]
2184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 4650              		.loc 1 2184 0
 4651 026a 20E0     		b	.L229
 4652              	.L235:
2185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Ini
 4653              		.loc 1 2186 0
 4654 026c FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 4655 0270 0246     		mov	r2, r0
 4656 0272 7B68     		ldr	r3, [r7, #4]
 4657 0274 5B68     		ldr	r3, [r3, #4]
 4658 0276 5B08     		lsrs	r3, r3, #1
 4659 0278 1A44     		add	r2, r2, r3
 4660 027a 7B68     		ldr	r3, [r7, #4]
 4661 027c 5B68     		ldr	r3, [r3, #4]
 4662 027e B2FBF3F3 		udiv	r3, r2, r3
 4663 0282 9AB2     		uxth	r2, r3
 4664 0284 7B68     		ldr	r3, [r7, #4]
 4665 0286 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc3f4e78.s 			page 120


 4666 0288 DA60     		str	r2, [r3, #12]
2187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 4667              		.loc 1 2187 0
 4668 028a 10E0     		b	.L229
 4669              	.L236:
2188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
 4670              		.loc 1 2189 0
 4671 028c 7B68     		ldr	r3, [r7, #4]
 4672 028e 5B68     		ldr	r3, [r3, #4]
 4673 0290 5B08     		lsrs	r3, r3, #1
 4674 0292 03F50042 		add	r2, r3, #32768
 4675 0296 7B68     		ldr	r3, [r7, #4]
 4676 0298 5B68     		ldr	r3, [r3, #4]
 4677 029a B2FBF3F3 		udiv	r3, r2, r3
 4678 029e 9AB2     		uxth	r2, r3
 4679 02a0 7B68     		ldr	r3, [r7, #4]
 4680 02a2 1B68     		ldr	r3, [r3]
 4681 02a4 DA60     		str	r2, [r3, #12]
2190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 4682              		.loc 1 2190 0
 4683 02a6 02E0     		b	.L229
 4684              	.L230:
2191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default:
2193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         ret = HAL_ERROR;
 4685              		.loc 1 2193 0
 4686 02a8 0123     		movs	r3, #1
 4687 02aa FB74     		strb	r3, [r7, #19]
2194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 4688              		.loc 1 2194 0
 4689 02ac 00BF     		nop
 4690              	.L229:
2195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return ret;
 4691              		.loc 1 2198 0
 4692 02ae FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
2199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4693              		.loc 1 2200 0
 4694 02b0 1846     		mov	r0, r3
 4695 02b2 1837     		adds	r7, r7, #24
 4696              	.LCFI218:
 4697              		.cfi_def_cfa_offset 8
 4698 02b4 BD46     		mov	sp, r7
 4699              	.LCFI219:
 4700              		.cfi_def_cfa_register 13
 4701              		@ sp needed
 4702 02b6 80BD     		pop	{r7, pc}
 4703              	.L239:
 4704              		.align	2
 4705              	.L238:
 4706 02b8 F369FFEF 		.word	-268473869
 4707 02bc 00380140 		.word	1073821696
 4708 02c0 00100240 		.word	1073876992
ARM GAS  /tmp/cc3f4e78.s 			page 121


 4709 02c4 00440040 		.word	1073759232
 4710 02c8 00480040 		.word	1073760256
 4711              		.cfi_endproc
 4712              	.LFE734:
 4714              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 4715              		.align	1
 4716              		.global	UART_AdvFeatureConfig
 4717              		.syntax unified
 4718              		.thumb
 4719              		.thumb_func
 4720              		.fpu fpv4-sp-d16
 4722              	UART_AdvFeatureConfig:
 4723              	.LFB735:
2201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
2204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
2208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4724              		.loc 1 2208 0
 4725              		.cfi_startproc
 4726              		@ args = 0, pretend = 0, frame = 8
 4727              		@ frame_needed = 1, uses_anonymous_args = 0
 4728              		@ link register save eliminated.
 4729 0000 80B4     		push	{r7}
 4730              	.LCFI220:
 4731              		.cfi_def_cfa_offset 4
 4732              		.cfi_offset 7, -4
 4733 0002 83B0     		sub	sp, sp, #12
 4734              	.LCFI221:
 4735              		.cfi_def_cfa_offset 16
 4736 0004 00AF     		add	r7, sp, #0
 4737              	.LCFI222:
 4738              		.cfi_def_cfa_register 7
 4739 0006 7860     		str	r0, [r7, #4]
2209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
2210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
2211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
2213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 4740              		.loc 1 2213 0
 4741 0008 7B68     		ldr	r3, [r7, #4]
 4742 000a 5B6A     		ldr	r3, [r3, #36]
 4743 000c 03F00103 		and	r3, r3, #1
 4744 0010 002B     		cmp	r3, #0
 4745 0012 0AD0     		beq	.L241
2214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
2216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 4746              		.loc 1 2216 0
 4747 0014 7B68     		ldr	r3, [r7, #4]
 4748 0016 1B68     		ldr	r3, [r3]
 4749 0018 5B68     		ldr	r3, [r3, #4]
 4750 001a 23F40031 		bic	r1, r3, #131072
 4751 001e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc3f4e78.s 			page 122


 4752 0020 9A6A     		ldr	r2, [r3, #40]
 4753 0022 7B68     		ldr	r3, [r7, #4]
 4754 0024 1B68     		ldr	r3, [r3]
 4755 0026 0A43     		orrs	r2, r2, r1
 4756 0028 5A60     		str	r2, [r3, #4]
 4757              	.L241:
2217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
2220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 4758              		.loc 1 2220 0
 4759 002a 7B68     		ldr	r3, [r7, #4]
 4760 002c 5B6A     		ldr	r3, [r3, #36]
 4761 002e 03F00203 		and	r3, r3, #2
 4762 0032 002B     		cmp	r3, #0
 4763 0034 0AD0     		beq	.L242
2221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
2223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 4764              		.loc 1 2223 0
 4765 0036 7B68     		ldr	r3, [r7, #4]
 4766 0038 1B68     		ldr	r3, [r3]
 4767 003a 5B68     		ldr	r3, [r3, #4]
 4768 003c 23F48031 		bic	r1, r3, #65536
 4769 0040 7B68     		ldr	r3, [r7, #4]
 4770 0042 DA6A     		ldr	r2, [r3, #44]
 4771 0044 7B68     		ldr	r3, [r7, #4]
 4772 0046 1B68     		ldr	r3, [r3]
 4773 0048 0A43     		orrs	r2, r2, r1
 4774 004a 5A60     		str	r2, [r3, #4]
 4775              	.L242:
2224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure data inversion */
2227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 4776              		.loc 1 2227 0
 4777 004c 7B68     		ldr	r3, [r7, #4]
 4778 004e 5B6A     		ldr	r3, [r3, #36]
 4779 0050 03F00403 		and	r3, r3, #4
 4780 0054 002B     		cmp	r3, #0
 4781 0056 0AD0     		beq	.L243
2228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
2230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 4782              		.loc 1 2230 0
 4783 0058 7B68     		ldr	r3, [r7, #4]
 4784 005a 1B68     		ldr	r3, [r3]
 4785 005c 5B68     		ldr	r3, [r3, #4]
 4786 005e 23F48021 		bic	r1, r3, #262144
 4787 0062 7B68     		ldr	r3, [r7, #4]
 4788 0064 1A6B     		ldr	r2, [r3, #48]
 4789 0066 7B68     		ldr	r3, [r7, #4]
 4790 0068 1B68     		ldr	r3, [r3]
 4791 006a 0A43     		orrs	r2, r2, r1
 4792 006c 5A60     		str	r2, [r3, #4]
 4793              	.L243:
2231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
ARM GAS  /tmp/cc3f4e78.s 			page 123


2232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
2234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 4794              		.loc 1 2234 0
 4795 006e 7B68     		ldr	r3, [r7, #4]
 4796 0070 5B6A     		ldr	r3, [r3, #36]
 4797 0072 03F00803 		and	r3, r3, #8
 4798 0076 002B     		cmp	r3, #0
 4799 0078 0AD0     		beq	.L244
2235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
2237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 4800              		.loc 1 2237 0
 4801 007a 7B68     		ldr	r3, [r7, #4]
 4802 007c 1B68     		ldr	r3, [r3]
 4803 007e 5B68     		ldr	r3, [r3, #4]
 4804 0080 23F40041 		bic	r1, r3, #32768
 4805 0084 7B68     		ldr	r3, [r7, #4]
 4806 0086 5A6B     		ldr	r2, [r3, #52]
 4807 0088 7B68     		ldr	r3, [r7, #4]
 4808 008a 1B68     		ldr	r3, [r3]
 4809 008c 0A43     		orrs	r2, r2, r1
 4810 008e 5A60     		str	r2, [r3, #4]
 4811              	.L244:
2238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
2241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 4812              		.loc 1 2241 0
 4813 0090 7B68     		ldr	r3, [r7, #4]
 4814 0092 5B6A     		ldr	r3, [r3, #36]
 4815 0094 03F01003 		and	r3, r3, #16
 4816 0098 002B     		cmp	r3, #0
 4817 009a 0AD0     		beq	.L245
2242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
2244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 4818              		.loc 1 2244 0
 4819 009c 7B68     		ldr	r3, [r7, #4]
 4820 009e 1B68     		ldr	r3, [r3]
 4821 00a0 9B68     		ldr	r3, [r3, #8]
 4822 00a2 23F48051 		bic	r1, r3, #4096
 4823 00a6 7B68     		ldr	r3, [r7, #4]
 4824 00a8 9A6B     		ldr	r2, [r3, #56]
 4825 00aa 7B68     		ldr	r3, [r7, #4]
 4826 00ac 1B68     		ldr	r3, [r3]
 4827 00ae 0A43     		orrs	r2, r2, r1
 4828 00b0 9A60     		str	r2, [r3, #8]
 4829              	.L245:
2245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
2248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 4830              		.loc 1 2248 0
 4831 00b2 7B68     		ldr	r3, [r7, #4]
 4832 00b4 5B6A     		ldr	r3, [r3, #36]
 4833 00b6 03F02003 		and	r3, r3, #32
ARM GAS  /tmp/cc3f4e78.s 			page 124


 4834 00ba 002B     		cmp	r3, #0
 4835 00bc 0AD0     		beq	.L246
2249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
2251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 4836              		.loc 1 2251 0
 4837 00be 7B68     		ldr	r3, [r7, #4]
 4838 00c0 1B68     		ldr	r3, [r3]
 4839 00c2 9B68     		ldr	r3, [r3, #8]
 4840 00c4 23F40051 		bic	r1, r3, #8192
 4841 00c8 7B68     		ldr	r3, [r7, #4]
 4842 00ca DA6B     		ldr	r2, [r3, #60]
 4843 00cc 7B68     		ldr	r3, [r7, #4]
 4844 00ce 1B68     		ldr	r3, [r3]
 4845 00d0 0A43     		orrs	r2, r2, r1
 4846 00d2 9A60     		str	r2, [r3, #8]
 4847              	.L246:
2252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
2255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 4848              		.loc 1 2255 0
 4849 00d4 7B68     		ldr	r3, [r7, #4]
 4850 00d6 5B6A     		ldr	r3, [r3, #36]
 4851 00d8 03F04003 		and	r3, r3, #64
 4852 00dc 002B     		cmp	r3, #0
 4853 00de 1AD0     		beq	.L247
2256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
2258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
2259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 4854              		.loc 1 2259 0
 4855 00e0 7B68     		ldr	r3, [r7, #4]
 4856 00e2 1B68     		ldr	r3, [r3]
 4857 00e4 5B68     		ldr	r3, [r3, #4]
 4858 00e6 23F48011 		bic	r1, r3, #1048576
 4859 00ea 7B68     		ldr	r3, [r7, #4]
 4860 00ec 1A6C     		ldr	r2, [r3, #64]
 4861 00ee 7B68     		ldr	r3, [r7, #4]
 4862 00f0 1B68     		ldr	r3, [r3]
 4863 00f2 0A43     		orrs	r2, r2, r1
 4864 00f4 5A60     		str	r2, [r3, #4]
2260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
2261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 4865              		.loc 1 2261 0
 4866 00f6 7B68     		ldr	r3, [r7, #4]
 4867 00f8 1B6C     		ldr	r3, [r3, #64]
 4868 00fa B3F5801F 		cmp	r3, #1048576
 4869 00fe 0AD1     		bne	.L247
2262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
2264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 4870              		.loc 1 2264 0
 4871 0100 7B68     		ldr	r3, [r7, #4]
 4872 0102 1B68     		ldr	r3, [r3]
 4873 0104 5B68     		ldr	r3, [r3, #4]
 4874 0106 23F4C001 		bic	r1, r3, #6291456
ARM GAS  /tmp/cc3f4e78.s 			page 125


 4875 010a 7B68     		ldr	r3, [r7, #4]
 4876 010c 5A6C     		ldr	r2, [r3, #68]
 4877 010e 7B68     		ldr	r3, [r7, #4]
 4878 0110 1B68     		ldr	r3, [r3]
 4879 0112 0A43     		orrs	r2, r2, r1
 4880 0114 5A60     		str	r2, [r3, #4]
 4881              	.L247:
2265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
2269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 4882              		.loc 1 2269 0
 4883 0116 7B68     		ldr	r3, [r7, #4]
 4884 0118 5B6A     		ldr	r3, [r3, #36]
 4885 011a 03F08003 		and	r3, r3, #128
 4886 011e 002B     		cmp	r3, #0
 4887 0120 0AD0     		beq	.L249
2270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
2272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 4888              		.loc 1 2272 0
 4889 0122 7B68     		ldr	r3, [r7, #4]
 4890 0124 1B68     		ldr	r3, [r3]
 4891 0126 5B68     		ldr	r3, [r3, #4]
 4892 0128 23F40021 		bic	r1, r3, #524288
 4893 012c 7B68     		ldr	r3, [r7, #4]
 4894 012e 9A6C     		ldr	r2, [r3, #72]
 4895 0130 7B68     		ldr	r3, [r7, #4]
 4896 0132 1B68     		ldr	r3, [r3]
 4897 0134 0A43     		orrs	r2, r2, r1
 4898 0136 5A60     		str	r2, [r3, #4]
 4899              	.L249:
2273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4900              		.loc 1 2274 0
 4901 0138 00BF     		nop
 4902 013a 0C37     		adds	r7, r7, #12
 4903              	.LCFI223:
 4904              		.cfi_def_cfa_offset 4
 4905 013c BD46     		mov	sp, r7
 4906              	.LCFI224:
 4907              		.cfi_def_cfa_register 13
 4908              		@ sp needed
 4909 013e 5DF8047B 		ldr	r7, [sp], #4
 4910              	.LCFI225:
 4911              		.cfi_restore 7
 4912              		.cfi_def_cfa_offset 0
 4913 0142 7047     		bx	lr
 4914              		.cfi_endproc
 4915              	.LFE735:
 4917              		.section	.text.UART_CheckIdleState,"ax",%progbits
 4918              		.align	1
 4919              		.global	UART_CheckIdleState
 4920              		.syntax unified
 4921              		.thumb
 4922              		.thumb_func
ARM GAS  /tmp/cc3f4e78.s 			page 126


 4923              		.fpu fpv4-sp-d16
 4925              	UART_CheckIdleState:
 4926              	.LFB736:
2275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Check the UART Idle State.
2278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
2282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4927              		.loc 1 2282 0
 4928              		.cfi_startproc
 4929              		@ args = 0, pretend = 0, frame = 16
 4930              		@ frame_needed = 1, uses_anonymous_args = 0
 4931 0000 80B5     		push	{r7, lr}
 4932              	.LCFI226:
 4933              		.cfi_def_cfa_offset 8
 4934              		.cfi_offset 7, -8
 4935              		.cfi_offset 14, -4
 4936 0002 86B0     		sub	sp, sp, #24
 4937              	.LCFI227:
 4938              		.cfi_def_cfa_offset 32
 4939 0004 02AF     		add	r7, sp, #8
 4940              	.LCFI228:
 4941              		.cfi_def_cfa 7, 24
 4942 0006 7860     		str	r0, [r7, #4]
2283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart = 0U;
 4943              		.loc 1 2283 0
 4944 0008 0023     		movs	r3, #0
 4945 000a FB60     		str	r3, [r7, #12]
2284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
2286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 4946              		.loc 1 2286 0
 4947 000c 7B68     		ldr	r3, [r7, #4]
 4948 000e 0022     		movs	r2, #0
 4949 0010 DA66     		str	r2, [r3, #108]
2287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
2289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tickstart = HAL_GetTick();
 4950              		.loc 1 2289 0
 4951 0012 FFF7FEFF 		bl	HAL_GetTick
 4952 0016 F860     		str	r0, [r7, #12]
2290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
2292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 4953              		.loc 1 2292 0
 4954 0018 7B68     		ldr	r3, [r7, #4]
 4955 001a 1B68     		ldr	r3, [r3]
 4956 001c 1B68     		ldr	r3, [r3]
 4957 001e 03F00803 		and	r3, r3, #8
 4958 0022 082B     		cmp	r3, #8
 4959 0024 0ED1     		bne	.L251
2293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Wait until TEACK flag is set */
2295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
ARM GAS  /tmp/cc3f4e78.s 			page 127


 4960              		.loc 1 2295 0
 4961 0026 6FF07E43 		mvn	r3, #-33554432
 4962 002a 0093     		str	r3, [sp]
 4963 002c FB68     		ldr	r3, [r7, #12]
 4964 002e 0022     		movs	r2, #0
 4965 0030 4FF40011 		mov	r1, #2097152
 4966 0034 7868     		ldr	r0, [r7, #4]
 4967 0036 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4968 003a 0346     		mov	r3, r0
 4969 003c 002B     		cmp	r3, #0
 4970 003e 01D0     		beq	.L251
2296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Timeout Occured */
2298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
 4971              		.loc 1 2298 0
 4972 0040 0323     		movs	r3, #3
 4973 0042 22E0     		b	.L252
 4974              	.L251:
2299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if the Receiver is enabled */
2302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 4975              		.loc 1 2302 0
 4976 0044 7B68     		ldr	r3, [r7, #4]
 4977 0046 1B68     		ldr	r3, [r3]
 4978 0048 1B68     		ldr	r3, [r3]
 4979 004a 03F00403 		and	r3, r3, #4
 4980 004e 042B     		cmp	r3, #4
 4981 0050 0ED1     		bne	.L253
2303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Wait until REACK flag is set */
2305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
 4982              		.loc 1 2305 0
 4983 0052 6FF07E43 		mvn	r3, #-33554432
 4984 0056 0093     		str	r3, [sp]
 4985 0058 FB68     		ldr	r3, [r7, #12]
 4986 005a 0022     		movs	r2, #0
 4987 005c 4FF48001 		mov	r1, #4194304
 4988 0060 7868     		ldr	r0, [r7, #4]
 4989 0062 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4990 0066 0346     		mov	r3, r0
 4991 0068 002B     		cmp	r3, #0
 4992 006a 01D0     		beq	.L253
2306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Timeout Occured */
2308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
 4993              		.loc 1 2308 0
 4994 006c 0323     		movs	r3, #3
 4995 006e 0CE0     		b	.L252
 4996              	.L253:
2309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Initialize the UART State */
2313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 4997              		.loc 1 2313 0
 4998 0070 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc3f4e78.s 			page 128


 4999 0072 2022     		movs	r2, #32
 5000 0074 83F86920 		strb	r2, [r3, #105]
2314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5001              		.loc 1 2314 0
 5002 0078 7B68     		ldr	r3, [r7, #4]
 5003 007a 2022     		movs	r2, #32
 5004 007c 83F86A20 		strb	r2, [r3, #106]
2315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
2317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 5005              		.loc 1 2317 0
 5006 0080 7B68     		ldr	r3, [r7, #4]
 5007 0082 0022     		movs	r2, #0
 5008 0084 83F86820 		strb	r2, [r3, #104]
2318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 5009              		.loc 1 2319 0
 5010 0088 0023     		movs	r3, #0
 5011              	.L252:
2320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 5012              		.loc 1 2320 0
 5013 008a 1846     		mov	r0, r3
 5014 008c 1037     		adds	r7, r7, #16
 5015              	.LCFI229:
 5016              		.cfi_def_cfa_offset 8
 5017 008e BD46     		mov	sp, r7
 5018              	.LCFI230:
 5019              		.cfi_def_cfa_register 13
 5020              		@ sp needed
 5021 0090 80BD     		pop	{r7, pc}
 5022              		.cfi_endproc
 5023              	.LFE736:
 5025              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 5026              		.align	1
 5027              		.global	UART_WaitOnFlagUntilTimeout
 5028              		.syntax unified
 5029              		.thumb
 5030              		.thumb_func
 5031              		.fpu fpv4-sp-d16
 5033              	UART_WaitOnFlagUntilTimeout:
 5034              	.LFB737:
2321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
2324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  Flag Specifies the UART flag to check
2326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  Status Flag status (SET or RESET)
2327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  Tickstart Tick start value
2328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  Timeout Timeout duration
2329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
2332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 5035              		.loc 1 2332 0
 5036              		.cfi_startproc
 5037              		@ args = 4, pretend = 0, frame = 16
 5038              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/cc3f4e78.s 			page 129


 5039 0000 80B5     		push	{r7, lr}
 5040              	.LCFI231:
 5041              		.cfi_def_cfa_offset 8
 5042              		.cfi_offset 7, -8
 5043              		.cfi_offset 14, -4
 5044 0002 84B0     		sub	sp, sp, #16
 5045              	.LCFI232:
 5046              		.cfi_def_cfa_offset 24
 5047 0004 00AF     		add	r7, sp, #0
 5048              	.LCFI233:
 5049              		.cfi_def_cfa_register 7
 5050 0006 F860     		str	r0, [r7, #12]
 5051 0008 B960     		str	r1, [r7, #8]
 5052 000a 3B60     		str	r3, [r7]
 5053 000c 1346     		mov	r3, r2
 5054 000e FB71     		strb	r3, [r7, #7]
2333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Wait until flag is set */
2334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 5055              		.loc 1 2334 0
 5056 0010 2CE0     		b	.L255
 5057              	.L258:
2335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check for the Timeout */
2337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
 5058              		.loc 1 2337 0
 5059 0012 BB69     		ldr	r3, [r7, #24]
 5060 0014 B3F1FF3F 		cmp	r3, #-1
 5061 0018 28D0     		beq	.L255
2338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) > Timeout))
 5062              		.loc 1 2339 0
 5063 001a BB69     		ldr	r3, [r7, #24]
 5064 001c 002B     		cmp	r3, #0
 5065 001e 07D0     		beq	.L256
 5066              		.loc 1 2339 0 is_stmt 0 discriminator 1
 5067 0020 FFF7FEFF 		bl	HAL_GetTick
 5068 0024 0246     		mov	r2, r0
 5069 0026 3B68     		ldr	r3, [r7]
 5070 0028 D31A     		subs	r3, r2, r3
 5071 002a BA69     		ldr	r2, [r7, #24]
 5072 002c 9A42     		cmp	r2, r3
 5073 002e 1DD2     		bcs	.L255
 5074              	.L256:
2340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 5075              		.loc 1 2342 0 is_stmt 1
 5076 0030 FB68     		ldr	r3, [r7, #12]
 5077 0032 1B68     		ldr	r3, [r3]
 5078 0034 1A68     		ldr	r2, [r3]
 5079 0036 FB68     		ldr	r3, [r7, #12]
 5080 0038 1B68     		ldr	r3, [r3]
 5081 003a 22F4D072 		bic	r2, r2, #416
 5082 003e 1A60     		str	r2, [r3]
2343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5083              		.loc 1 2343 0
 5084 0040 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cc3f4e78.s 			page 130


 5085 0042 1B68     		ldr	r3, [r3]
 5086 0044 9A68     		ldr	r2, [r3, #8]
 5087 0046 FB68     		ldr	r3, [r7, #12]
 5088 0048 1B68     		ldr	r3, [r3]
 5089 004a 22F00102 		bic	r2, r2, #1
 5090 004e 9A60     		str	r2, [r3, #8]
2344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
 5091              		.loc 1 2345 0
 5092 0050 FB68     		ldr	r3, [r7, #12]
 5093 0052 2022     		movs	r2, #32
 5094 0054 83F86920 		strb	r2, [r3, #105]
2346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 5095              		.loc 1 2346 0
 5096 0058 FB68     		ldr	r3, [r7, #12]
 5097 005a 2022     		movs	r2, #32
 5098 005c 83F86A20 		strb	r2, [r3, #106]
2347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Process Unlocked */
2349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 5099              		.loc 1 2349 0
 5100 0060 FB68     		ldr	r3, [r7, #12]
 5101 0062 0022     		movs	r2, #0
 5102 0064 83F86820 		strb	r2, [r3, #104]
2350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
 5103              		.loc 1 2350 0
 5104 0068 0323     		movs	r3, #3
 5105 006a 0FE0     		b	.L257
 5106              	.L255:
2334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 5107              		.loc 1 2334 0
 5108 006c FB68     		ldr	r3, [r7, #12]
 5109 006e 1B68     		ldr	r3, [r3]
 5110 0070 DA69     		ldr	r2, [r3, #28]
 5111 0072 BB68     		ldr	r3, [r7, #8]
 5112 0074 1340     		ands	r3, r3, r2
 5113 0076 BA68     		ldr	r2, [r7, #8]
 5114 0078 9A42     		cmp	r2, r3
 5115 007a 0CBF     		ite	eq
 5116 007c 0123     		moveq	r3, #1
 5117 007e 0023     		movne	r3, #0
 5118 0080 DBB2     		uxtb	r3, r3
 5119 0082 1A46     		mov	r2, r3
 5120 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5121 0086 9A42     		cmp	r2, r3
 5122 0088 C3D0     		beq	.L258
2351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 5123              		.loc 1 2354 0
 5124 008a 0023     		movs	r3, #0
 5125              	.L257:
2355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 5126              		.loc 1 2355 0
 5127 008c 1846     		mov	r0, r3
 5128 008e 1037     		adds	r7, r7, #16
ARM GAS  /tmp/cc3f4e78.s 			page 131


 5129              	.LCFI234:
 5130              		.cfi_def_cfa_offset 8
 5131 0090 BD46     		mov	sp, r7
 5132              	.LCFI235:
 5133              		.cfi_def_cfa_register 13
 5134              		@ sp needed
 5135 0092 80BD     		pop	{r7, pc}
 5136              		.cfi_endproc
 5137              	.LFE737:
 5139              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 5140              		.align	1
 5141              		.syntax unified
 5142              		.thumb
 5143              		.thumb_func
 5144              		.fpu fpv4-sp-d16
 5146              	UART_EndTxTransfer:
 5147              	.LFB738:
2356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 5148              		.loc 1 2364 0
 5149              		.cfi_startproc
 5150              		@ args = 0, pretend = 0, frame = 8
 5151              		@ frame_needed = 1, uses_anonymous_args = 0
 5152              		@ link register save eliminated.
 5153 0000 80B4     		push	{r7}
 5154              	.LCFI236:
 5155              		.cfi_def_cfa_offset 4
 5156              		.cfi_offset 7, -4
 5157 0002 83B0     		sub	sp, sp, #12
 5158              	.LCFI237:
 5159              		.cfi_def_cfa_offset 16
 5160 0004 00AF     		add	r7, sp, #0
 5161              	.LCFI238:
 5162              		.cfi_def_cfa_register 7
 5163 0006 7860     		str	r0, [r7, #4]
2365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 5164              		.loc 1 2366 0
 5165 0008 7B68     		ldr	r3, [r7, #4]
 5166 000a 1B68     		ldr	r3, [r3]
 5167 000c 1A68     		ldr	r2, [r3]
 5168 000e 7B68     		ldr	r3, [r7, #4]
 5169 0010 1B68     		ldr	r3, [r3]
 5170 0012 22F0C002 		bic	r2, r2, #192
 5171 0016 1A60     		str	r2, [r3]
2367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5172              		.loc 1 2369 0
 5173 0018 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc3f4e78.s 			page 132


 5174 001a 2022     		movs	r2, #32
 5175 001c 83F86920 		strb	r2, [r3, #105]
2370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 5176              		.loc 1 2370 0
 5177 0020 00BF     		nop
 5178 0022 0C37     		adds	r7, r7, #12
 5179              	.LCFI239:
 5180              		.cfi_def_cfa_offset 4
 5181 0024 BD46     		mov	sp, r7
 5182              	.LCFI240:
 5183              		.cfi_def_cfa_register 13
 5184              		@ sp needed
 5185 0026 5DF8047B 		ldr	r7, [sp], #4
 5186              	.LCFI241:
 5187              		.cfi_restore 7
 5188              		.cfi_def_cfa_offset 0
 5189 002a 7047     		bx	lr
 5190              		.cfi_endproc
 5191              	.LFE738:
 5193              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 5194              		.align	1
 5195              		.syntax unified
 5196              		.thumb
 5197              		.thumb_func
 5198              		.fpu fpv4-sp-d16
 5200              	UART_EndRxTransfer:
 5201              	.LFB739:
2371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 5202              		.loc 1 2379 0
 5203              		.cfi_startproc
 5204              		@ args = 0, pretend = 0, frame = 8
 5205              		@ frame_needed = 1, uses_anonymous_args = 0
 5206              		@ link register save eliminated.
 5207 0000 80B4     		push	{r7}
 5208              	.LCFI242:
 5209              		.cfi_def_cfa_offset 4
 5210              		.cfi_offset 7, -4
 5211 0002 83B0     		sub	sp, sp, #12
 5212              	.LCFI243:
 5213              		.cfi_def_cfa_offset 16
 5214 0004 00AF     		add	r7, sp, #0
 5215              	.LCFI244:
 5216              		.cfi_def_cfa_register 7
 5217 0006 7860     		str	r0, [r7, #4]
2380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 5218              		.loc 1 2381 0
 5219 0008 7B68     		ldr	r3, [r7, #4]
 5220 000a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc3f4e78.s 			page 133


 5221 000c 1A68     		ldr	r2, [r3]
 5222 000e 7B68     		ldr	r3, [r7, #4]
 5223 0010 1B68     		ldr	r3, [r3]
 5224 0012 22F49072 		bic	r2, r2, #288
 5225 0016 1A60     		str	r2, [r3]
2382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5226              		.loc 1 2382 0
 5227 0018 7B68     		ldr	r3, [r7, #4]
 5228 001a 1B68     		ldr	r3, [r3]
 5229 001c 9A68     		ldr	r2, [r3, #8]
 5230 001e 7B68     		ldr	r3, [r7, #4]
 5231 0020 1B68     		ldr	r3, [r3]
 5232 0022 22F00102 		bic	r2, r2, #1
 5233 0026 9A60     		str	r2, [r3, #8]
2383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5234              		.loc 1 2385 0
 5235 0028 7B68     		ldr	r3, [r7, #4]
 5236 002a 2022     		movs	r2, #32
 5237 002c 83F86A20 		strb	r2, [r3, #106]
2386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 5238              		.loc 1 2386 0
 5239 0030 00BF     		nop
 5240 0032 0C37     		adds	r7, r7, #12
 5241              	.LCFI245:
 5242              		.cfi_def_cfa_offset 4
 5243 0034 BD46     		mov	sp, r7
 5244              	.LCFI246:
 5245              		.cfi_def_cfa_register 13
 5246              		@ sp needed
 5247 0036 5DF8047B 		ldr	r7, [sp], #4
 5248              	.LCFI247:
 5249              		.cfi_restore 7
 5250              		.cfi_def_cfa_offset 0
 5251 003a 7047     		bx	lr
 5252              		.cfi_endproc
 5253              	.LFE739:
 5255              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 5256              		.align	1
 5257              		.syntax unified
 5258              		.thumb
 5259              		.thumb_func
 5260              		.fpu fpv4-sp-d16
 5262              	UART_DMATransmitCplt:
 5263              	.LFB740:
2387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
2391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 5264              		.loc 1 2395 0
 5265              		.cfi_startproc
ARM GAS  /tmp/cc3f4e78.s 			page 134


 5266              		@ args = 0, pretend = 0, frame = 16
 5267              		@ frame_needed = 1, uses_anonymous_args = 0
 5268 0000 80B5     		push	{r7, lr}
 5269              	.LCFI248:
 5270              		.cfi_def_cfa_offset 8
 5271              		.cfi_offset 7, -8
 5272              		.cfi_offset 14, -4
 5273 0002 84B0     		sub	sp, sp, #16
 5274              	.LCFI249:
 5275              		.cfi_def_cfa_offset 24
 5276 0004 00AF     		add	r7, sp, #0
 5277              	.LCFI250:
 5278              		.cfi_def_cfa_register 7
 5279 0006 7860     		str	r0, [r7, #4]
2396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 5280              		.loc 1 2396 0
 5281 0008 7B68     		ldr	r3, [r7, #4]
 5282 000a 5B6A     		ldr	r3, [r3, #36]
 5283 000c FB60     		str	r3, [r7, #12]
2397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Normal mode */
2399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 5284              		.loc 1 2399 0
 5285 000e 7B68     		ldr	r3, [r7, #4]
 5286 0010 1B68     		ldr	r3, [r3]
 5287 0012 1B68     		ldr	r3, [r3]
 5288 0014 03F02003 		and	r3, r3, #32
 5289 0018 002B     		cmp	r3, #0
 5290 001a 14D1     		bne	.L262
2400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U;
 5291              		.loc 1 2401 0
 5292 001c FB68     		ldr	r3, [r7, #12]
 5293 001e 0022     		movs	r2, #0
 5294 0020 A3F85220 		strh	r2, [r3, #82]	@ movhi
2402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
2404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
2405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 5295              		.loc 1 2405 0
 5296 0024 FB68     		ldr	r3, [r7, #12]
 5297 0026 1B68     		ldr	r3, [r3]
 5298 0028 9A68     		ldr	r2, [r3, #8]
 5299 002a FB68     		ldr	r3, [r7, #12]
 5300 002c 1B68     		ldr	r3, [r3]
 5301 002e 22F08002 		bic	r2, r2, #128
 5302 0032 9A60     		str	r2, [r3, #8]
2406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 5303              		.loc 1 2408 0
 5304 0034 FB68     		ldr	r3, [r7, #12]
 5305 0036 1B68     		ldr	r3, [r3]
 5306 0038 1A68     		ldr	r2, [r3]
 5307 003a FB68     		ldr	r3, [r7, #12]
 5308 003c 1B68     		ldr	r3, [r3]
 5309 003e 42F04002 		orr	r2, r2, #64
ARM GAS  /tmp/cc3f4e78.s 			page 135


 5310 0042 1A60     		str	r2, [r3]
2409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Circular mode */
2411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
2414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 5311              		.loc 1 2416 0
 5312 0044 02E0     		b	.L264
 5313              	.L262:
2413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 5314              		.loc 1 2413 0
 5315 0046 F868     		ldr	r0, [r7, #12]
 5316 0048 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 5317              	.L264:
 5318              		.loc 1 2416 0
 5319 004c 00BF     		nop
 5320 004e 1037     		adds	r7, r7, #16
 5321              	.LCFI251:
 5322              		.cfi_def_cfa_offset 8
 5323 0050 BD46     		mov	sp, r7
 5324              	.LCFI252:
 5325              		.cfi_def_cfa_register 13
 5326              		@ sp needed
 5327 0052 80BD     		pop	{r7, pc}
 5328              		.cfi_endproc
 5329              	.LFE740:
 5331              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 5332              		.align	1
 5333              		.syntax unified
 5334              		.thumb
 5335              		.thumb_func
 5336              		.fpu fpv4-sp-d16
 5338              	UART_DMATxHalfCplt:
 5339              	.LFB741:
2417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
2420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 5340              		.loc 1 2424 0
 5341              		.cfi_startproc
 5342              		@ args = 0, pretend = 0, frame = 16
 5343              		@ frame_needed = 1, uses_anonymous_args = 0
 5344 0000 80B5     		push	{r7, lr}
 5345              	.LCFI253:
 5346              		.cfi_def_cfa_offset 8
 5347              		.cfi_offset 7, -8
 5348              		.cfi_offset 14, -4
 5349 0002 84B0     		sub	sp, sp, #16
 5350              	.LCFI254:
 5351              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/cc3f4e78.s 			page 136


 5352 0004 00AF     		add	r7, sp, #0
 5353              	.LCFI255:
 5354              		.cfi_def_cfa_register 7
 5355 0006 7860     		str	r0, [r7, #4]
2425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 5356              		.loc 1 2425 0
 5357 0008 7B68     		ldr	r3, [r7, #4]
 5358 000a 5B6A     		ldr	r3, [r3, #36]
 5359 000c FB60     		str	r3, [r7, #12]
2426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 5360              		.loc 1 2427 0
 5361 000e F868     		ldr	r0, [r7, #12]
 5362 0010 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
2428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 5363              		.loc 1 2428 0
 5364 0014 00BF     		nop
 5365 0016 1037     		adds	r7, r7, #16
 5366              	.LCFI256:
 5367              		.cfi_def_cfa_offset 8
 5368 0018 BD46     		mov	sp, r7
 5369              	.LCFI257:
 5370              		.cfi_def_cfa_register 13
 5371              		@ sp needed
 5372 001a 80BD     		pop	{r7, pc}
 5373              		.cfi_endproc
 5374              	.LFE741:
 5376              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 5377              		.align	1
 5378              		.syntax unified
 5379              		.thumb
 5380              		.thumb_func
 5381              		.fpu fpv4-sp-d16
 5383              	UART_DMAReceiveCplt:
 5384              	.LFB742:
2429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
2432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 5385              		.loc 1 2436 0
 5386              		.cfi_startproc
 5387              		@ args = 0, pretend = 0, frame = 16
 5388              		@ frame_needed = 1, uses_anonymous_args = 0
 5389 0000 80B5     		push	{r7, lr}
 5390              	.LCFI258:
 5391              		.cfi_def_cfa_offset 8
 5392              		.cfi_offset 7, -8
 5393              		.cfi_offset 14, -4
 5394 0002 84B0     		sub	sp, sp, #16
 5395              	.LCFI259:
 5396              		.cfi_def_cfa_offset 24
 5397 0004 00AF     		add	r7, sp, #0
 5398              	.LCFI260:
ARM GAS  /tmp/cc3f4e78.s 			page 137


 5399              		.cfi_def_cfa_register 7
 5400 0006 7860     		str	r0, [r7, #4]
2437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 5401              		.loc 1 2437 0
 5402 0008 7B68     		ldr	r3, [r7, #4]
 5403 000a 5B6A     		ldr	r3, [r3, #36]
 5404 000c FB60     		str	r3, [r7, #12]
2438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Normal mode */
2440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 5405              		.loc 1 2440 0
 5406 000e 7B68     		ldr	r3, [r7, #4]
 5407 0010 1B68     		ldr	r3, [r3]
 5408 0012 1B68     		ldr	r3, [r3]
 5409 0014 03F02003 		and	r3, r3, #32
 5410 0018 002B     		cmp	r3, #0
 5411 001a 1FD1     		bne	.L267
2441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
 5412              		.loc 1 2442 0
 5413 001c FB68     		ldr	r3, [r7, #12]
 5414 001e 0022     		movs	r2, #0
 5415 0020 A3F85A20 		strh	r2, [r3, #90]	@ movhi
2443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 5416              		.loc 1 2445 0
 5417 0024 FB68     		ldr	r3, [r7, #12]
 5418 0026 1B68     		ldr	r3, [r3]
 5419 0028 1A68     		ldr	r2, [r3]
 5420 002a FB68     		ldr	r3, [r7, #12]
 5421 002c 1B68     		ldr	r3, [r3]
 5422 002e 22F48072 		bic	r2, r2, #256
 5423 0032 1A60     		str	r2, [r3]
2446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5424              		.loc 1 2446 0
 5425 0034 FB68     		ldr	r3, [r7, #12]
 5426 0036 1B68     		ldr	r3, [r3]
 5427 0038 9A68     		ldr	r2, [r3, #8]
 5428 003a FB68     		ldr	r3, [r7, #12]
 5429 003c 1B68     		ldr	r3, [r3]
 5430 003e 22F00102 		bic	r2, r2, #1
 5431 0042 9A60     		str	r2, [r3, #8]
2447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
2450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 5432              		.loc 1 2450 0
 5433 0044 FB68     		ldr	r3, [r7, #12]
 5434 0046 1B68     		ldr	r3, [r3]
 5435 0048 9A68     		ldr	r2, [r3, #8]
 5436 004a FB68     		ldr	r3, [r7, #12]
 5437 004c 1B68     		ldr	r3, [r3]
 5438 004e 22F04002 		bic	r2, r2, #64
 5439 0052 9A60     		str	r2, [r3, #8]
2451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
ARM GAS  /tmp/cc3f4e78.s 			page 138


2453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 5440              		.loc 1 2453 0
 5441 0054 FB68     		ldr	r3, [r7, #12]
 5442 0056 2022     		movs	r2, #32
 5443 0058 83F86A20 		strb	r2, [r3, #106]
 5444              	.L267:
2454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 5445              		.loc 1 2456 0
 5446 005c F868     		ldr	r0, [r7, #12]
 5447 005e FFF7FEFF 		bl	HAL_UART_RxCpltCallback
2457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 5448              		.loc 1 2457 0
 5449 0062 00BF     		nop
 5450 0064 1037     		adds	r7, r7, #16
 5451              	.LCFI261:
 5452              		.cfi_def_cfa_offset 8
 5453 0066 BD46     		mov	sp, r7
 5454              	.LCFI262:
 5455              		.cfi_def_cfa_register 13
 5456              		@ sp needed
 5457 0068 80BD     		pop	{r7, pc}
 5458              		.cfi_endproc
 5459              	.LFE742:
 5461              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 5462              		.align	1
 5463              		.syntax unified
 5464              		.thumb
 5465              		.thumb_func
 5466              		.fpu fpv4-sp-d16
 5468              	UART_DMARxHalfCplt:
 5469              	.LFB743:
2458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
2461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 5470              		.loc 1 2465 0
 5471              		.cfi_startproc
 5472              		@ args = 0, pretend = 0, frame = 16
 5473              		@ frame_needed = 1, uses_anonymous_args = 0
 5474 0000 80B5     		push	{r7, lr}
 5475              	.LCFI263:
 5476              		.cfi_def_cfa_offset 8
 5477              		.cfi_offset 7, -8
 5478              		.cfi_offset 14, -4
 5479 0002 84B0     		sub	sp, sp, #16
 5480              	.LCFI264:
 5481              		.cfi_def_cfa_offset 24
 5482 0004 00AF     		add	r7, sp, #0
 5483              	.LCFI265:
 5484              		.cfi_def_cfa_register 7
 5485 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/cc3f4e78.s 			page 139


2466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 5486              		.loc 1 2466 0
 5487 0008 7B68     		ldr	r3, [r7, #4]
 5488 000a 5B6A     		ldr	r3, [r3, #36]
 5489 000c FB60     		str	r3, [r7, #12]
2467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
 5490              		.loc 1 2468 0
 5491 000e F868     		ldr	r0, [r7, #12]
 5492 0010 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
2469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 5493              		.loc 1 2469 0
 5494 0014 00BF     		nop
 5495 0016 1037     		adds	r7, r7, #16
 5496              	.LCFI266:
 5497              		.cfi_def_cfa_offset 8
 5498 0018 BD46     		mov	sp, r7
 5499              	.LCFI267:
 5500              		.cfi_def_cfa_register 13
 5501              		@ sp needed
 5502 001a 80BD     		pop	{r7, pc}
 5503              		.cfi_endproc
 5504              	.LFE743:
 5506              		.section	.text.UART_DMAError,"ax",%progbits
 5507              		.align	1
 5508              		.syntax unified
 5509              		.thumb
 5510              		.thumb_func
 5511              		.fpu fpv4-sp-d16
 5513              	UART_DMAError:
 5514              	.LFB744:
2470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART communication error callback.
2473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 5515              		.loc 1 2477 0
 5516              		.cfi_startproc
 5517              		@ args = 0, pretend = 0, frame = 16
 5518              		@ frame_needed = 1, uses_anonymous_args = 0
 5519 0000 80B5     		push	{r7, lr}
 5520              	.LCFI268:
 5521              		.cfi_def_cfa_offset 8
 5522              		.cfi_offset 7, -8
 5523              		.cfi_offset 14, -4
 5524 0002 84B0     		sub	sp, sp, #16
 5525              	.LCFI269:
 5526              		.cfi_def_cfa_offset 24
 5527 0004 00AF     		add	r7, sp, #0
 5528              	.LCFI270:
 5529              		.cfi_def_cfa_register 7
 5530 0006 7860     		str	r0, [r7, #4]
2478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 5531              		.loc 1 2478 0
ARM GAS  /tmp/cc3f4e78.s 			page 140


 5532 0008 7B68     		ldr	r3, [r7, #4]
 5533 000a 5B6A     		ldr	r3, [r3, #36]
 5534 000c FB60     		str	r3, [r7, #12]
2479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (  (huart->gState == HAL_UART_STATE_BUSY_TX)
 5535              		.loc 1 2481 0
 5536 000e FB68     		ldr	r3, [r7, #12]
 5537 0010 93F86930 		ldrb	r3, [r3, #105]
 5538 0014 DBB2     		uxtb	r3, r3
 5539 0016 212B     		cmp	r3, #33
 5540 0018 0DD1     		bne	.L270
2482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) )
 5541              		.loc 1 2482 0
 5542 001a FB68     		ldr	r3, [r7, #12]
 5543 001c 1B68     		ldr	r3, [r3]
 5544 001e 9B68     		ldr	r3, [r3, #8]
 5545 0020 03F08003 		and	r3, r3, #128
 5546 0024 002B     		cmp	r3, #0
 5547 0026 06D0     		beq	.L270
2483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U;
 5548              		.loc 1 2484 0
 5549 0028 FB68     		ldr	r3, [r7, #12]
 5550 002a 0022     		movs	r2, #0
 5551 002c A3F85220 		strh	r2, [r3, #82]	@ movhi
2485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 5552              		.loc 1 2485 0
 5553 0030 F868     		ldr	r0, [r7, #12]
 5554 0032 FFF7FEFF 		bl	UART_EndTxTransfer
 5555              	.L270:
2486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (  (huart->RxState == HAL_UART_STATE_BUSY_RX)
 5556              		.loc 1 2489 0
 5557 0036 FB68     		ldr	r3, [r7, #12]
 5558 0038 93F86A30 		ldrb	r3, [r3, #106]
 5559 003c DBB2     		uxtb	r3, r3
 5560 003e 222B     		cmp	r3, #34
 5561 0040 0DD1     		bne	.L271
2490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) )
 5562              		.loc 1 2490 0
 5563 0042 FB68     		ldr	r3, [r7, #12]
 5564 0044 1B68     		ldr	r3, [r3]
 5565 0046 9B68     		ldr	r3, [r3, #8]
 5566 0048 03F04003 		and	r3, r3, #64
 5567 004c 002B     		cmp	r3, #0
 5568 004e 06D0     		beq	.L271
2491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
 5569              		.loc 1 2492 0
 5570 0050 FB68     		ldr	r3, [r7, #12]
 5571 0052 0022     		movs	r2, #0
 5572 0054 A3F85A20 		strh	r2, [r3, #90]	@ movhi
2493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 5573              		.loc 1 2493 0
ARM GAS  /tmp/cc3f4e78.s 			page 141


 5574 0058 F868     		ldr	r0, [r7, #12]
 5575 005a FFF7FEFF 		bl	UART_EndRxTransfer
 5576              	.L271:
2494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 5577              		.loc 1 2496 0
 5578 005e FB68     		ldr	r3, [r7, #12]
 5579 0060 DB6E     		ldr	r3, [r3, #108]
 5580 0062 43F01002 		orr	r2, r3, #16
 5581 0066 FB68     		ldr	r3, [r7, #12]
 5582 0068 DA66     		str	r2, [r3, #108]
2497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 5583              		.loc 1 2497 0
 5584 006a F868     		ldr	r0, [r7, #12]
 5585 006c FFF7FEFF 		bl	HAL_UART_ErrorCallback
2498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 5586              		.loc 1 2498 0
 5587 0070 00BF     		nop
 5588 0072 1037     		adds	r7, r7, #16
 5589              	.LCFI271:
 5590              		.cfi_def_cfa_offset 8
 5591 0074 BD46     		mov	sp, r7
 5592              	.LCFI272:
 5593              		.cfi_def_cfa_register 13
 5594              		@ sp needed
 5595 0076 80BD     		pop	{r7, pc}
 5596              		.cfi_endproc
 5597              	.LFE744:
 5599              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 5600              		.align	1
 5601              		.syntax unified
 5602              		.thumb
 5603              		.thumb_func
 5604              		.fpu fpv4-sp-d16
 5606              	UART_DMAAbortOnError:
 5607              	.LFB745:
2499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 5608              		.loc 1 2507 0
 5609              		.cfi_startproc
 5610              		@ args = 0, pretend = 0, frame = 16
 5611              		@ frame_needed = 1, uses_anonymous_args = 0
 5612 0000 80B5     		push	{r7, lr}
 5613              	.LCFI273:
 5614              		.cfi_def_cfa_offset 8
 5615              		.cfi_offset 7, -8
 5616              		.cfi_offset 14, -4
 5617 0002 84B0     		sub	sp, sp, #16
 5618              	.LCFI274:
ARM GAS  /tmp/cc3f4e78.s 			page 142


 5619              		.cfi_def_cfa_offset 24
 5620 0004 00AF     		add	r7, sp, #0
 5621              	.LCFI275:
 5622              		.cfi_def_cfa_register 7
 5623 0006 7860     		str	r0, [r7, #4]
2508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 5624              		.loc 1 2508 0
 5625 0008 7B68     		ldr	r3, [r7, #4]
 5626 000a 5B6A     		ldr	r3, [r3, #36]
 5627 000c FB60     		str	r3, [r7, #12]
2509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 5628              		.loc 1 2509 0
 5629 000e FB68     		ldr	r3, [r7, #12]
 5630 0010 0022     		movs	r2, #0
 5631 0012 A3F85A20 		strh	r2, [r3, #90]	@ movhi
2510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
 5632              		.loc 1 2510 0
 5633 0016 FB68     		ldr	r3, [r7, #12]
 5634 0018 0022     		movs	r2, #0
 5635 001a A3F85220 		strh	r2, [r3, #82]	@ movhi
2511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 5636              		.loc 1 2512 0
 5637 001e F868     		ldr	r0, [r7, #12]
 5638 0020 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 5639              		.loc 1 2513 0
 5640 0024 00BF     		nop
 5641 0026 1037     		adds	r7, r7, #16
 5642              	.LCFI276:
 5643              		.cfi_def_cfa_offset 8
 5644 0028 BD46     		mov	sp, r7
 5645              	.LCFI277:
 5646              		.cfi_def_cfa_register 13
 5647              		@ sp needed
 5648 002a 80BD     		pop	{r7, pc}
 5649              		.cfi_endproc
 5650              	.LFE745:
 5652              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 5653              		.align	1
 5654              		.syntax unified
 5655              		.thumb
 5656              		.thumb_func
 5657              		.fpu fpv4-sp-d16
 5659              	UART_DMATxAbortCallback:
 5660              	.LFB746:
2514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
ARM GAS  /tmp/cc3f4e78.s 			page 143


 5661              		.loc 1 2524 0
 5662              		.cfi_startproc
 5663              		@ args = 0, pretend = 0, frame = 16
 5664              		@ frame_needed = 1, uses_anonymous_args = 0
 5665 0000 80B5     		push	{r7, lr}
 5666              	.LCFI278:
 5667              		.cfi_def_cfa_offset 8
 5668              		.cfi_offset 7, -8
 5669              		.cfi_offset 14, -4
 5670 0002 84B0     		sub	sp, sp, #16
 5671              	.LCFI279:
 5672              		.cfi_def_cfa_offset 24
 5673 0004 00AF     		add	r7, sp, #0
 5674              	.LCFI280:
 5675              		.cfi_def_cfa_register 7
 5676 0006 7860     		str	r0, [r7, #4]
2525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 5677              		.loc 1 2525 0
 5678 0008 7B68     		ldr	r3, [r7, #4]
 5679 000a 5B6A     		ldr	r3, [r3, #36]
 5680 000c FB60     		str	r3, [r7, #12]
2526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
 5681              		.loc 1 2527 0
 5682 000e FB68     		ldr	r3, [r7, #12]
 5683 0010 1B6E     		ldr	r3, [r3, #96]
 5684 0012 0022     		movs	r2, #0
 5685 0014 5A63     		str	r2, [r3, #52]
2528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->hdmarx != NULL)
 5686              		.loc 1 2530 0
 5687 0016 FB68     		ldr	r3, [r7, #12]
 5688 0018 5B6E     		ldr	r3, [r3, #100]
 5689 001a 002B     		cmp	r3, #0
 5690 001c 04D0     		beq	.L274
2531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx->XferAbortCallback != NULL)
 5691              		.loc 1 2532 0
 5692 001e FB68     		ldr	r3, [r7, #12]
 5693 0020 5B6E     		ldr	r3, [r3, #100]
 5694 0022 5B6B     		ldr	r3, [r3, #52]
 5695 0024 002B     		cmp	r3, #0
 5696 0026 1AD1     		bne	.L276
 5697              	.L274:
2533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
2535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
 5698              		.loc 1 2539 0
 5699 0028 FB68     		ldr	r3, [r7, #12]
 5700 002a 0022     		movs	r2, #0
 5701 002c A3F85220 		strh	r2, [r3, #82]	@ movhi
2540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
ARM GAS  /tmp/cc3f4e78.s 			page 144


 5702              		.loc 1 2540 0
 5703 0030 FB68     		ldr	r3, [r7, #12]
 5704 0032 0022     		movs	r2, #0
 5705 0034 A3F85A20 		strh	r2, [r3, #90]	@ movhi
2541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset errorCode */
2543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 5706              		.loc 1 2543 0
 5707 0038 FB68     		ldr	r3, [r7, #12]
 5708 003a 0022     		movs	r2, #0
 5709 003c DA66     		str	r2, [r3, #108]
2544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 5710              		.loc 1 2546 0
 5711 003e FB68     		ldr	r3, [r7, #12]
 5712 0040 1B68     		ldr	r3, [r3]
 5713 0042 0F22     		movs	r2, #15
 5714 0044 1A62     		str	r2, [r3, #32]
2547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 5715              		.loc 1 2549 0
 5716 0046 FB68     		ldr	r3, [r7, #12]
 5717 0048 2022     		movs	r2, #32
 5718 004a 83F86920 		strb	r2, [r3, #105]
2550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5719              		.loc 1 2550 0
 5720 004e FB68     		ldr	r3, [r7, #12]
 5721 0050 2022     		movs	r2, #32
 5722 0052 83F86A20 		strb	r2, [r3, #106]
2551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
2553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 5723              		.loc 1 2553 0
 5724 0056 F868     		ldr	r0, [r7, #12]
 5725 0058 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 5726 005c 00E0     		b	.L273
 5727              	.L276:
2534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 5728              		.loc 1 2534 0
 5729 005e 00BF     		nop
 5730              	.L273:
2554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 5731              		.loc 1 2554 0
 5732 0060 1037     		adds	r7, r7, #16
 5733              	.LCFI281:
 5734              		.cfi_def_cfa_offset 8
 5735 0062 BD46     		mov	sp, r7
 5736              	.LCFI282:
 5737              		.cfi_def_cfa_register 13
 5738              		@ sp needed
 5739 0064 80BD     		pop	{r7, pc}
 5740              		.cfi_endproc
 5741              	.LFE746:
 5743              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 5744              		.align	1
ARM GAS  /tmp/cc3f4e78.s 			page 145


 5745              		.syntax unified
 5746              		.thumb
 5747              		.thumb_func
 5748              		.fpu fpv4-sp-d16
 5750              	UART_DMARxAbortCallback:
 5751              	.LFB747:
2555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 5752              		.loc 1 2566 0
 5753              		.cfi_startproc
 5754              		@ args = 0, pretend = 0, frame = 16
 5755              		@ frame_needed = 1, uses_anonymous_args = 0
 5756 0000 80B5     		push	{r7, lr}
 5757              	.LCFI283:
 5758              		.cfi_def_cfa_offset 8
 5759              		.cfi_offset 7, -8
 5760              		.cfi_offset 14, -4
 5761 0002 84B0     		sub	sp, sp, #16
 5762              	.LCFI284:
 5763              		.cfi_def_cfa_offset 24
 5764 0004 00AF     		add	r7, sp, #0
 5765              	.LCFI285:
 5766              		.cfi_def_cfa_register 7
 5767 0006 7860     		str	r0, [r7, #4]
2567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 5768              		.loc 1 2567 0
 5769 0008 7B68     		ldr	r3, [r7, #4]
 5770 000a 5B6A     		ldr	r3, [r3, #36]
 5771 000c FB60     		str	r3, [r7, #12]
2568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 5772              		.loc 1 2569 0
 5773 000e FB68     		ldr	r3, [r7, #12]
 5774 0010 5B6E     		ldr	r3, [r3, #100]
 5775 0012 0022     		movs	r2, #0
 5776 0014 5A63     		str	r2, [r3, #52]
2570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->hdmatx != NULL)
 5777              		.loc 1 2572 0
 5778 0016 FB68     		ldr	r3, [r7, #12]
 5779 0018 1B6E     		ldr	r3, [r3, #96]
 5780 001a 002B     		cmp	r3, #0
 5781 001c 04D0     		beq	.L278
2573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx->XferAbortCallback != NULL)
 5782              		.loc 1 2574 0
ARM GAS  /tmp/cc3f4e78.s 			page 146


 5783 001e FB68     		ldr	r3, [r7, #12]
 5784 0020 1B6E     		ldr	r3, [r3, #96]
 5785 0022 5B6B     		ldr	r3, [r3, #52]
 5786 0024 002B     		cmp	r3, #0
 5787 0026 1AD1     		bne	.L280
 5788              	.L278:
2575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
2577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
 5789              		.loc 1 2581 0
 5790 0028 FB68     		ldr	r3, [r7, #12]
 5791 002a 0022     		movs	r2, #0
 5792 002c A3F85220 		strh	r2, [r3, #82]	@ movhi
2582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 5793              		.loc 1 2582 0
 5794 0030 FB68     		ldr	r3, [r7, #12]
 5795 0032 0022     		movs	r2, #0
 5796 0034 A3F85A20 		strh	r2, [r3, #90]	@ movhi
2583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset errorCode */
2585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 5797              		.loc 1 2585 0
 5798 0038 FB68     		ldr	r3, [r7, #12]
 5799 003a 0022     		movs	r2, #0
 5800 003c DA66     		str	r2, [r3, #108]
2586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 5801              		.loc 1 2588 0
 5802 003e FB68     		ldr	r3, [r7, #12]
 5803 0040 1B68     		ldr	r3, [r3]
 5804 0042 0F22     		movs	r2, #15
 5805 0044 1A62     		str	r2, [r3, #32]
2589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 5806              		.loc 1 2591 0
 5807 0046 FB68     		ldr	r3, [r7, #12]
 5808 0048 2022     		movs	r2, #32
 5809 004a 83F86920 		strb	r2, [r3, #105]
2592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5810              		.loc 1 2592 0
 5811 004e FB68     		ldr	r3, [r7, #12]
 5812 0050 2022     		movs	r2, #32
 5813 0052 83F86A20 		strb	r2, [r3, #106]
2593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
2595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 5814              		.loc 1 2595 0
 5815 0056 F868     		ldr	r0, [r7, #12]
 5816 0058 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 5817 005c 00E0     		b	.L277
 5818              	.L280:
ARM GAS  /tmp/cc3f4e78.s 			page 147


2576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 5819              		.loc 1 2576 0
 5820 005e 00BF     		nop
 5821              	.L277:
2596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 5822              		.loc 1 2596 0
 5823 0060 1037     		adds	r7, r7, #16
 5824              	.LCFI286:
 5825              		.cfi_def_cfa_offset 8
 5826 0062 BD46     		mov	sp, r7
 5827              	.LCFI287:
 5828              		.cfi_def_cfa_register 13
 5829              		@ sp needed
 5830 0064 80BD     		pop	{r7, pc}
 5831              		.cfi_endproc
 5832              	.LFE747:
 5834              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 5835              		.align	1
 5836              		.syntax unified
 5837              		.thumb
 5838              		.thumb_func
 5839              		.fpu fpv4-sp-d16
 5841              	UART_DMATxOnlyAbortCallback:
 5842              	.LFB748:
2597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 5843              		.loc 1 2608 0
 5844              		.cfi_startproc
 5845              		@ args = 0, pretend = 0, frame = 16
 5846              		@ frame_needed = 1, uses_anonymous_args = 0
 5847 0000 80B5     		push	{r7, lr}
 5848              	.LCFI288:
 5849              		.cfi_def_cfa_offset 8
 5850              		.cfi_offset 7, -8
 5851              		.cfi_offset 14, -4
 5852 0002 84B0     		sub	sp, sp, #16
 5853              	.LCFI289:
 5854              		.cfi_def_cfa_offset 24
 5855 0004 00AF     		add	r7, sp, #0
 5856              	.LCFI290:
 5857              		.cfi_def_cfa_register 7
 5858 0006 7860     		str	r0, [r7, #4]
2609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 5859              		.loc 1 2609 0
 5860 0008 7B68     		ldr	r3, [r7, #4]
 5861 000a 5B6A     		ldr	r3, [r3, #36]
 5862 000c FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/cc3f4e78.s 			page 148


2610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
 5863              		.loc 1 2611 0
 5864 000e FB68     		ldr	r3, [r7, #12]
 5865 0010 0022     		movs	r2, #0
 5866 0012 A3F85220 		strh	r2, [r3, #82]	@ movhi
2612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5867              		.loc 1 2614 0
 5868 0016 FB68     		ldr	r3, [r7, #12]
 5869 0018 2022     		movs	r2, #32
 5870 001a 83F86920 		strb	r2, [r3, #105]
2615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
2617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 5871              		.loc 1 2617 0
 5872 001e F868     		ldr	r0, [r7, #12]
 5873 0020 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
2618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 5874              		.loc 1 2618 0
 5875 0024 00BF     		nop
 5876 0026 1037     		adds	r7, r7, #16
 5877              	.LCFI291:
 5878              		.cfi_def_cfa_offset 8
 5879 0028 BD46     		mov	sp, r7
 5880              	.LCFI292:
 5881              		.cfi_def_cfa_register 13
 5882              		@ sp needed
 5883 002a 80BD     		pop	{r7, pc}
 5884              		.cfi_endproc
 5885              	.LFE748:
 5887              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 5888              		.align	1
 5889              		.syntax unified
 5890              		.thumb
 5891              		.thumb_func
 5892              		.fpu fpv4-sp-d16
 5894              	UART_DMARxOnlyAbortCallback:
 5895              	.LFB749:
2619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 5896              		.loc 1 2629 0
 5897              		.cfi_startproc
 5898              		@ args = 0, pretend = 0, frame = 16
 5899              		@ frame_needed = 1, uses_anonymous_args = 0
 5900 0000 80B5     		push	{r7, lr}
 5901              	.LCFI293:
ARM GAS  /tmp/cc3f4e78.s 			page 149


 5902              		.cfi_def_cfa_offset 8
 5903              		.cfi_offset 7, -8
 5904              		.cfi_offset 14, -4
 5905 0002 84B0     		sub	sp, sp, #16
 5906              	.LCFI294:
 5907              		.cfi_def_cfa_offset 24
 5908 0004 00AF     		add	r7, sp, #0
 5909              	.LCFI295:
 5910              		.cfi_def_cfa_register 7
 5911 0006 7860     		str	r0, [r7, #4]
2630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 5912              		.loc 1 2630 0
 5913 0008 7B68     		ldr	r3, [r7, #4]
 5914 000a 5B6A     		ldr	r3, [r3, #36]
 5915 000c FB60     		str	r3, [r7, #12]
2631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 5916              		.loc 1 2632 0
 5917 000e FB68     		ldr	r3, [r7, #12]
 5918 0010 0022     		movs	r2, #0
 5919 0012 A3F85A20 		strh	r2, [r3, #90]	@ movhi
2633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 5920              		.loc 1 2635 0
 5921 0016 FB68     		ldr	r3, [r7, #12]
 5922 0018 1B68     		ldr	r3, [r3]
 5923 001a 0F22     		movs	r2, #15
 5924 001c 1A62     		str	r2, [r3, #32]
2636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5925              		.loc 1 2638 0
 5926 001e FB68     		ldr	r3, [r7, #12]
 5927 0020 2022     		movs	r2, #32
 5928 0022 83F86A20 		strb	r2, [r3, #106]
2639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
2641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 5929              		.loc 1 2641 0
 5930 0026 F868     		ldr	r0, [r7, #12]
 5931 0028 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
2642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 5932              		.loc 1 2642 0
 5933 002c 00BF     		nop
 5934 002e 1037     		adds	r7, r7, #16
 5935              	.LCFI296:
 5936              		.cfi_def_cfa_offset 8
 5937 0030 BD46     		mov	sp, r7
 5938              	.LCFI297:
 5939              		.cfi_def_cfa_register 13
 5940              		@ sp needed
 5941 0032 80BD     		pop	{r7, pc}
 5942              		.cfi_endproc
 5943              	.LFE749:
 5945              		.section	.text.UART_Transmit_IT,"ax",%progbits
 5946              		.align	1
ARM GAS  /tmp/cc3f4e78.s 			page 150


 5947              		.global	UART_Transmit_IT
 5948              		.syntax unified
 5949              		.thumb
 5950              		.thumb_func
 5951              		.fpu fpv4-sp-d16
 5953              	UART_Transmit_IT:
 5954              	.LFB750:
2643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Send an amount of data in interrupt mode.
2646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
2648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 5955              		.loc 1 2652 0
 5956              		.cfi_startproc
 5957              		@ args = 0, pretend = 0, frame = 16
 5958              		@ frame_needed = 1, uses_anonymous_args = 0
 5959              		@ link register save eliminated.
 5960 0000 80B4     		push	{r7}
 5961              	.LCFI298:
 5962              		.cfi_def_cfa_offset 4
 5963              		.cfi_offset 7, -4
 5964 0002 85B0     		sub	sp, sp, #20
 5965              	.LCFI299:
 5966              		.cfi_def_cfa_offset 24
 5967 0004 00AF     		add	r7, sp, #0
 5968              	.LCFI300:
 5969              		.cfi_def_cfa_register 7
 5970 0006 7860     		str	r0, [r7, #4]
2653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
2654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 5971              		.loc 1 2656 0
 5972 0008 7B68     		ldr	r3, [r7, #4]
 5973 000a 93F86930 		ldrb	r3, [r3, #105]
 5974 000e DBB2     		uxtb	r3, r3
 5975 0010 212B     		cmp	r3, #33
 5976 0012 46D1     		bne	.L284
2657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->TxXferCount == 0U)
 5977              		.loc 1 2658 0
 5978 0014 7B68     		ldr	r3, [r7, #4]
 5979 0016 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 5980 001a 9BB2     		uxth	r3, r3
 5981 001c 002B     		cmp	r3, #0
 5982 001e 11D1     		bne	.L285
2659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
2661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 5983              		.loc 1 2661 0
 5984 0020 7B68     		ldr	r3, [r7, #4]
 5985 0022 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc3f4e78.s 			page 151


 5986 0024 1A68     		ldr	r2, [r3]
 5987 0026 7B68     		ldr	r3, [r7, #4]
 5988 0028 1B68     		ldr	r3, [r3]
 5989 002a 22F08002 		bic	r2, r2, #128
 5990 002e 1A60     		str	r2, [r3]
2662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
2664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 5991              		.loc 1 2664 0
 5992 0030 7B68     		ldr	r3, [r7, #4]
 5993 0032 1B68     		ldr	r3, [r3]
 5994 0034 1A68     		ldr	r2, [r3]
 5995 0036 7B68     		ldr	r3, [r7, #4]
 5996 0038 1B68     		ldr	r3, [r3]
 5997 003a 42F04002 		orr	r2, r2, #64
 5998 003e 1A60     		str	r2, [r3]
2665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_OK;
 5999              		.loc 1 2666 0
 6000 0040 0023     		movs	r3, #0
 6001 0042 2FE0     		b	.L286
 6002              	.L285:
2667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
2669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 6003              		.loc 1 2670 0
 6004 0044 7B68     		ldr	r3, [r7, #4]
 6005 0046 9B68     		ldr	r3, [r3, #8]
 6006 0048 B3F5805F 		cmp	r3, #4096
 6007 004c 14D1     		bne	.L287
 6008              		.loc 1 2670 0 is_stmt 0 discriminator 1
 6009 004e 7B68     		ldr	r3, [r7, #4]
 6010 0050 1B69     		ldr	r3, [r3, #16]
 6011 0052 002B     		cmp	r3, #0
 6012 0054 10D1     		bne	.L287
2671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         tmp = (uint16_t*) huart->pTxBuffPtr;
 6013              		.loc 1 2672 0 is_stmt 1
 6014 0056 7B68     		ldr	r3, [r7, #4]
 6015 0058 DB6C     		ldr	r3, [r3, #76]
 6016 005a FB60     		str	r3, [r7, #12]
2673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 6017              		.loc 1 2673 0
 6018 005c FB68     		ldr	r3, [r7, #12]
 6019 005e 1A88     		ldrh	r2, [r3]
 6020 0060 7B68     		ldr	r3, [r7, #4]
 6021 0062 1B68     		ldr	r3, [r3]
 6022 0064 C2F30802 		ubfx	r2, r2, #0, #9
 6023 0068 92B2     		uxth	r2, r2
 6024 006a 1A85     		strh	r2, [r3, #40]	@ movhi
2674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 6025              		.loc 1 2674 0
 6026 006c 7B68     		ldr	r3, [r7, #4]
 6027 006e DB6C     		ldr	r3, [r3, #76]
 6028 0070 9A1C     		adds	r2, r3, #2
 6029 0072 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc3f4e78.s 			page 152


 6030 0074 DA64     		str	r2, [r3, #76]
 6031 0076 09E0     		b	.L288
 6032              	.L287:
2675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
2677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFFU);
 6033              		.loc 1 2678 0
 6034 0078 7B68     		ldr	r3, [r7, #4]
 6035 007a DB6C     		ldr	r3, [r3, #76]
 6036 007c 591C     		adds	r1, r3, #1
 6037 007e 7A68     		ldr	r2, [r7, #4]
 6038 0080 D164     		str	r1, [r2, #76]
 6039 0082 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6040 0084 7B68     		ldr	r3, [r7, #4]
 6041 0086 1B68     		ldr	r3, [r3]
 6042 0088 92B2     		uxth	r2, r2
 6043 008a 1A85     		strh	r2, [r3, #40]	@ movhi
 6044              	.L288:
2679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount--;
 6045              		.loc 1 2680 0
 6046 008c 7B68     		ldr	r3, [r7, #4]
 6047 008e B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 6048 0092 9BB2     		uxth	r3, r3
 6049 0094 013B     		subs	r3, r3, #1
 6050 0096 9AB2     		uxth	r2, r3
 6051 0098 7B68     		ldr	r3, [r7, #4]
 6052 009a A3F85220 		strh	r2, [r3, #82]	@ movhi
2681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_OK;
 6053              		.loc 1 2682 0
 6054 009e 0023     		movs	r3, #0
 6055 00a0 00E0     		b	.L286
 6056              	.L284:
2683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 6057              		.loc 1 2687 0
 6058 00a2 0223     		movs	r3, #2
 6059              	.L286:
2688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 6060              		.loc 1 2689 0
 6061 00a4 1846     		mov	r0, r3
 6062 00a6 1437     		adds	r7, r7, #20
 6063              	.LCFI301:
 6064              		.cfi_def_cfa_offset 4
 6065 00a8 BD46     		mov	sp, r7
 6066              	.LCFI302:
 6067              		.cfi_def_cfa_register 13
 6068              		@ sp needed
 6069 00aa 5DF8047B 		ldr	r7, [sp], #4
 6070              	.LCFI303:
 6071              		.cfi_restore 7
ARM GAS  /tmp/cc3f4e78.s 			page 153


 6072              		.cfi_def_cfa_offset 0
 6073 00ae 7047     		bx	lr
 6074              		.cfi_endproc
 6075              	.LFE750:
 6077              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 6078              		.align	1
 6079              		.global	UART_EndTransmit_IT
 6080              		.syntax unified
 6081              		.thumb
 6082              		.thumb_func
 6083              		.fpu fpv4-sp-d16
 6085              	UART_EndTransmit_IT:
 6086              	.LFB751:
2690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
2693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
2694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *               the configuration information for the specified UART module.
2695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 6087              		.loc 1 2698 0
 6088              		.cfi_startproc
 6089              		@ args = 0, pretend = 0, frame = 8
 6090              		@ frame_needed = 1, uses_anonymous_args = 0
 6091 0000 80B5     		push	{r7, lr}
 6092              	.LCFI304:
 6093              		.cfi_def_cfa_offset 8
 6094              		.cfi_offset 7, -8
 6095              		.cfi_offset 14, -4
 6096 0002 82B0     		sub	sp, sp, #8
 6097              	.LCFI305:
 6098              		.cfi_def_cfa_offset 16
 6099 0004 00AF     		add	r7, sp, #0
 6100              	.LCFI306:
 6101              		.cfi_def_cfa_register 7
 6102 0006 7860     		str	r0, [r7, #4]
2699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
2700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 6103              		.loc 1 2700 0
 6104 0008 7B68     		ldr	r3, [r7, #4]
 6105 000a 1B68     		ldr	r3, [r3]
 6106 000c 1A68     		ldr	r2, [r3]
 6107 000e 7B68     		ldr	r3, [r7, #4]
 6108 0010 1B68     		ldr	r3, [r3]
 6109 0012 22F04002 		bic	r2, r2, #64
 6110 0016 1A60     		str	r2, [r3]
2701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6111              		.loc 1 2703 0
 6112 0018 7B68     		ldr	r3, [r7, #4]
 6113 001a 2022     		movs	r2, #32
 6114 001c 83F86920 		strb	r2, [r3, #105]
2704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
ARM GAS  /tmp/cc3f4e78.s 			page 154


 6115              		.loc 1 2705 0
 6116 0020 7868     		ldr	r0, [r7, #4]
 6117 0022 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
2706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 6118              		.loc 1 2707 0
 6119 0026 0023     		movs	r3, #0
2708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 6120              		.loc 1 2708 0
 6121 0028 1846     		mov	r0, r3
 6122 002a 0837     		adds	r7, r7, #8
 6123              	.LCFI307:
 6124              		.cfi_def_cfa_offset 8
 6125 002c BD46     		mov	sp, r7
 6126              	.LCFI308:
 6127              		.cfi_def_cfa_register 13
 6128              		@ sp needed
 6129 002e 80BD     		pop	{r7, pc}
 6130              		.cfi_endproc
 6131              	.LFE751:
 6133              		.section	.text.UART_Receive_IT,"ax",%progbits
 6134              		.align	1
 6135              		.global	UART_Receive_IT
 6136              		.syntax unified
 6137              		.thumb
 6138              		.thumb_func
 6139              		.fpu fpv4-sp-d16
 6141              	UART_Receive_IT:
 6142              	.LFB752:
2709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Receive an amount of data in interrupt mode.
2712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
2714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 6143              		.loc 1 2718 0
 6144              		.cfi_startproc
 6145              		@ args = 0, pretend = 0, frame = 16
 6146              		@ frame_needed = 1, uses_anonymous_args = 0
 6147 0000 90B5     		push	{r4, r7, lr}
 6148              	.LCFI309:
 6149              		.cfi_def_cfa_offset 12
 6150              		.cfi_offset 4, -12
 6151              		.cfi_offset 7, -8
 6152              		.cfi_offset 14, -4
 6153 0002 85B0     		sub	sp, sp, #20
 6154              	.LCFI310:
 6155              		.cfi_def_cfa_offset 32
 6156 0004 00AF     		add	r7, sp, #0
 6157              	.LCFI311:
 6158              		.cfi_def_cfa_register 7
 6159 0006 7860     		str	r0, [r7, #4]
2719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
ARM GAS  /tmp/cc3f4e78.s 			page 155


2720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 6160              		.loc 1 2720 0
 6161 0008 7B68     		ldr	r3, [r7, #4]
 6162 000a B3F85C30 		ldrh	r3, [r3, #92]	@ movhi
 6163 000e FB81     		strh	r3, [r7, #14]	@ movhi
2721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t  uhdata;
2722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 6164              		.loc 1 2724 0
 6165 0010 7B68     		ldr	r3, [r7, #4]
 6166 0012 93F86A30 		ldrb	r3, [r3, #106]
 6167 0016 DBB2     		uxtb	r3, r3
 6168 0018 222B     		cmp	r3, #34
 6169 001a 4ED1     		bne	.L292
2725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 6170              		.loc 1 2726 0
 6171 001c 7B68     		ldr	r3, [r7, #4]
 6172 001e 1B68     		ldr	r3, [r3]
 6173 0020 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 6174 0022 BB81     		strh	r3, [r7, #12]	@ movhi
2727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 6175              		.loc 1 2727 0
 6176 0024 7B68     		ldr	r3, [r7, #4]
 6177 0026 9B68     		ldr	r3, [r3, #8]
 6178 0028 B3F5805F 		cmp	r3, #4096
 6179 002c 12D1     		bne	.L293
 6180              		.loc 1 2727 0 is_stmt 0 discriminator 1
 6181 002e 7B68     		ldr	r3, [r7, #4]
 6182 0030 1B69     		ldr	r3, [r3, #16]
 6183 0032 002B     		cmp	r3, #0
 6184 0034 0ED1     		bne	.L293
2728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr ;
 6185              		.loc 1 2729 0 is_stmt 1
 6186 0036 7B68     		ldr	r3, [r7, #4]
 6187 0038 5B6D     		ldr	r3, [r3, #84]
 6188 003a BB60     		str	r3, [r7, #8]
2730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
 6189              		.loc 1 2730 0
 6190 003c BA89     		ldrh	r2, [r7, #12]	@ movhi
 6191 003e FB89     		ldrh	r3, [r7, #14]	@ movhi
 6192 0040 1340     		ands	r3, r3, r2
 6193 0042 9AB2     		uxth	r2, r3
 6194 0044 BB68     		ldr	r3, [r7, #8]
 6195 0046 1A80     		strh	r2, [r3]	@ movhi
2731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->pRxBuffPtr +=2U;
 6196              		.loc 1 2731 0
 6197 0048 7B68     		ldr	r3, [r7, #4]
 6198 004a 5B6D     		ldr	r3, [r3, #84]
 6199 004c 9A1C     		adds	r2, r3, #2
 6200 004e 7B68     		ldr	r3, [r7, #4]
 6201 0050 5A65     		str	r2, [r3, #84]
 6202 0052 0BE0     		b	.L294
 6203              	.L293:
2732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
ARM GAS  /tmp/cc3f4e78.s 			page 156


2733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
2734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       *huart->pRxBuffPtr++ = (uint8_t)(uhdata & (uint8_t)uhMask);
 6204              		.loc 1 2735 0
 6205 0054 BB89     		ldrh	r3, [r7, #12]	@ movhi
 6206 0056 D9B2     		uxtb	r1, r3
 6207 0058 FB89     		ldrh	r3, [r7, #14]	@ movhi
 6208 005a DAB2     		uxtb	r2, r3
 6209 005c 7B68     		ldr	r3, [r7, #4]
 6210 005e 5B6D     		ldr	r3, [r3, #84]
 6211 0060 5C1C     		adds	r4, r3, #1
 6212 0062 7868     		ldr	r0, [r7, #4]
 6213 0064 4465     		str	r4, [r0, #84]
 6214 0066 0A40     		ands	r2, r2, r1
 6215 0068 D2B2     		uxtb	r2, r2
 6216 006a 1A70     		strb	r2, [r3]
 6217              	.L294:
2736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(--huart->RxXferCount == 0U)
 6218              		.loc 1 2738 0
 6219 006c 7B68     		ldr	r3, [r7, #4]
 6220 006e B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 6221 0072 9BB2     		uxth	r3, r3
 6222 0074 013B     		subs	r3, r3, #1
 6223 0076 9BB2     		uxth	r3, r3
 6224 0078 7A68     		ldr	r2, [r7, #4]
 6225 007a 1946     		mov	r1, r3	@ movhi
 6226 007c A2F85A10 		strh	r1, [r2, #90]	@ movhi
 6227 0080 002B     		cmp	r3, #0
 6228 0082 18D1     		bne	.L295
2739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
2741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 6229              		.loc 1 2741 0
 6230 0084 7B68     		ldr	r3, [r7, #4]
 6231 0086 1B68     		ldr	r3, [r3]
 6232 0088 1A68     		ldr	r2, [r3]
 6233 008a 7B68     		ldr	r3, [r7, #4]
 6234 008c 1B68     		ldr	r3, [r3]
 6235 008e 22F49072 		bic	r2, r2, #288
 6236 0092 1A60     		str	r2, [r3]
2742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 6237              		.loc 1 2744 0
 6238 0094 7B68     		ldr	r3, [r7, #4]
 6239 0096 1B68     		ldr	r3, [r3]
 6240 0098 9A68     		ldr	r2, [r3, #8]
 6241 009a 7B68     		ldr	r3, [r7, #4]
 6242 009c 1B68     		ldr	r3, [r3]
 6243 009e 22F00102 		bic	r2, r2, #1
 6244 00a2 9A60     		str	r2, [r3, #8]
2745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
2747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 6245              		.loc 1 2747 0
ARM GAS  /tmp/cc3f4e78.s 			page 157


 6246 00a4 7B68     		ldr	r3, [r7, #4]
 6247 00a6 2022     		movs	r2, #32
 6248 00a8 83F86A20 		strb	r2, [r3, #106]
2748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 6249              		.loc 1 2749 0
 6250 00ac 7868     		ldr	r0, [r7, #4]
 6251 00ae FFF7FEFF 		bl	HAL_UART_RxCpltCallback
2750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_OK;
 6252              		.loc 1 2751 0
 6253 00b2 0023     		movs	r3, #0
 6254 00b4 0AE0     		b	.L296
 6255              	.L295:
2752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 6256              		.loc 1 2754 0
 6257 00b6 0023     		movs	r3, #0
 6258 00b8 08E0     		b	.L296
 6259              	.L292:
2755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
2759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 6260              		.loc 1 2759 0
 6261 00ba 7B68     		ldr	r3, [r7, #4]
 6262 00bc 1B68     		ldr	r3, [r3]
 6263 00be 9A69     		ldr	r2, [r3, #24]
 6264 00c0 7B68     		ldr	r3, [r7, #4]
 6265 00c2 1B68     		ldr	r3, [r3]
 6266 00c4 42F00802 		orr	r2, r2, #8
 6267 00c8 9A61     		str	r2, [r3, #24]
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 6268              		.loc 1 2761 0
 6269 00ca 0223     		movs	r3, #2
 6270              	.L296:
2762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 6271              		.loc 1 2763 0
 6272 00cc 1846     		mov	r0, r3
 6273 00ce 1437     		adds	r7, r7, #20
 6274              	.LCFI312:
 6275              		.cfi_def_cfa_offset 12
 6276 00d0 BD46     		mov	sp, r7
 6277              	.LCFI313:
 6278              		.cfi_def_cfa_register 13
 6279              		@ sp needed
 6280 00d2 90BD     		pop	{r4, r7, pc}
 6281              		.cfi_endproc
 6282              	.LFE752:
 6284              		.section	.text.UART_Wakeup_AddressConfig,"ax",%progbits
 6285              		.align	1
 6286              		.global	UART_Wakeup_AddressConfig
 6287              		.syntax unified
ARM GAS  /tmp/cc3f4e78.s 			page 158


 6288              		.thumb
 6289              		.thumb_func
 6290              		.fpu fpv4-sp-d16
 6292              	UART_Wakeup_AddressConfig:
 6293              	.LFB753:
2764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the UART wake-up from stop mode parameters when triggered by address detectio
2767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param WakeUpSelection UART wake up from stop mode parameters.
2769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void UART_Wakeup_AddressConfig(UART_HandleTypeDef *huart, UART_WakeUpTypeDef WakeUpSelection)
2772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 6294              		.loc 1 2772 0
 6295              		.cfi_startproc
 6296              		@ args = 0, pretend = 0, frame = 16
 6297              		@ frame_needed = 1, uses_anonymous_args = 0
 6298              		@ link register save eliminated.
 6299 0000 80B4     		push	{r7}
 6300              	.LCFI314:
 6301              		.cfi_def_cfa_offset 4
 6302              		.cfi_offset 7, -4
 6303 0002 85B0     		sub	sp, sp, #20
 6304              	.LCFI315:
 6305              		.cfi_def_cfa_offset 24
 6306 0004 00AF     		add	r7, sp, #0
 6307              	.LCFI316:
 6308              		.cfi_def_cfa_register 7
 6309 0006 F860     		str	r0, [r7, #12]
 6310 0008 3B1D     		adds	r3, r7, #4
 6311 000a 83E80600 		stm	r3, {r1, r2}
2773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ADDRESSLENGTH_DETECT(WakeUpSelection.AddressLength));
2774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the USART address length */
2776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADDM7, WakeUpSelection.AddressLength);
 6312              		.loc 1 2776 0
 6313 000e FB68     		ldr	r3, [r7, #12]
 6314 0010 1B68     		ldr	r3, [r3]
 6315 0012 5B68     		ldr	r3, [r3, #4]
 6316 0014 23F01002 		bic	r2, r3, #16
 6317 0018 3B89     		ldrh	r3, [r7, #8]
 6318 001a 1946     		mov	r1, r3
 6319 001c FB68     		ldr	r3, [r7, #12]
 6320 001e 1B68     		ldr	r3, [r3]
 6321 0020 0A43     		orrs	r2, r2, r1
 6322 0022 5A60     		str	r2, [r3, #4]
2777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the USART address node */
2779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)WakeUpSelection.Address << UART_CR2_AD
 6323              		.loc 1 2779 0
 6324 0024 FB68     		ldr	r3, [r7, #12]
 6325 0026 1B68     		ldr	r3, [r3]
 6326 0028 5B68     		ldr	r3, [r3, #4]
 6327 002a 23F07F41 		bic	r1, r3, #-16777216
 6328 002e BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 6329 0030 1A06     		lsls	r2, r3, #24
ARM GAS  /tmp/cc3f4e78.s 			page 159


 6330 0032 FB68     		ldr	r3, [r7, #12]
 6331 0034 1B68     		ldr	r3, [r3]
 6332 0036 0A43     		orrs	r2, r2, r1
 6333 0038 5A60     		str	r2, [r3, #4]
2780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 6334              		.loc 1 2780 0
 6335 003a 00BF     		nop
 6336 003c 1437     		adds	r7, r7, #20
 6337              	.LCFI317:
 6338              		.cfi_def_cfa_offset 4
 6339 003e BD46     		mov	sp, r7
 6340              	.LCFI318:
 6341              		.cfi_def_cfa_register 13
 6342              		@ sp needed
 6343 0040 5DF8047B 		ldr	r7, [sp], #4
 6344              	.LCFI319:
 6345              		.cfi_restore 7
 6346              		.cfi_def_cfa_offset 0
 6347 0044 7047     		bx	lr
 6348              		.cfi_endproc
 6349              	.LFE753:
 6351              		.text
 6352              	.Letext0:
 6353              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 6354              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 6355              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 6356              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 6357              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 6358              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 6359              		.file 8 "/usr/arm-none-eabi/include/sys/lock.h"
 6360              		.file 9 "/usr/arm-none-eabi/include/sys/_types.h"
 6361              		.file 10 "/usr/lib/gcc/arm-none-eabi/7.3.0/include/stddef.h"
 6362              		.file 11 "/usr/arm-none-eabi/include/sys/reent.h"
 6363              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 6364              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 6365              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 6366              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_ll_dma.h"
ARM GAS  /tmp/cc3f4e78.s 			page 160


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_hal_uart.c
     /tmp/cc3f4e78.s:18     .rodata.CHANNEL_OFFSET_TAB:0000000000000000 $d
     /tmp/cc3f4e78.s:21     .rodata.CHANNEL_OFFSET_TAB:0000000000000000 CHANNEL_OFFSET_TAB
     /tmp/cc3f4e78.s:30     .text.HAL_UART_Init:0000000000000000 $t
     /tmp/cc3f4e78.s:37     .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/cc3f4e78.s:692    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/cc3f4e78.s:4305   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/cc3f4e78.s:4722   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
     /tmp/cc3f4e78.s:4925   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/cc3f4e78.s:152    .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/cc3f4e78.s:159    .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/cc3f4e78.s:281    .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/cc3f4e78.s:288    .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/cc3f4e78.s:439    .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/cc3f4e78.s:446    .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/cc3f4e78.s:589    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/cc3f4e78.s:596    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/cc3f4e78.s:735    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/cc3f4e78.s:685    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/cc3f4e78.s:728    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/cc3f4e78.s:771    .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/cc3f4e78.s:778    .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/cc3f4e78.s:5033   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/cc3f4e78.s:967    .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/cc3f4e78.s:974    .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/cc3f4e78.s:1224   .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/cc3f4e78.s:1231   .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/cc3f4e78.s:1341   .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/cc3f4e78.s:1348   .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/cc3f4e78.s:1531   .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/cc3f4e78.s:1538   .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/cc3f4e78.s:1680   .text.HAL_UART_Transmit_DMA:00000000000000cc $d
     /tmp/cc3f4e78.s:5262   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/cc3f4e78.s:5338   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/cc3f4e78.s:5513   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/cc3f4e78.s:1687   .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/cc3f4e78.s:1694   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/cc3f4e78.s:1843   .text.HAL_UART_Receive_DMA:00000000000000dc $d
     /tmp/cc3f4e78.s:5383   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/cc3f4e78.s:5468   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/cc3f4e78.s:1850   .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/cc3f4e78.s:1857   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/cc3f4e78.s:1975   .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/cc3f4e78.s:1982   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/cc3f4e78.s:2089   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/cc3f4e78.s:2096   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/cc3f4e78.s:5146   .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/cc3f4e78.s:5200   .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/cc3f4e78.s:2204   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/cc3f4e78.s:2211   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/cc3f4e78.s:2348   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/cc3f4e78.s:2355   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/cc3f4e78.s:2436   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/cc3f4e78.s:2443   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/cc3f4e78.s:2537   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/cc3f4e78.s:2544   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
ARM GAS  /tmp/cc3f4e78.s 			page 161


     /tmp/cc3f4e78.s:3615   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/cc3f4e78.s:2760   .text.HAL_UART_Abort_IT:000000000000014c $d
     /tmp/cc3f4e78.s:5659   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/cc3f4e78.s:5750   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/cc3f4e78.s:2766   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/cc3f4e78.s:2773   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/cc3f4e78.s:3658   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/cc3f4e78.s:2883   .text.HAL_UART_AbortTransmit_IT:00000000000000a0 $d
     /tmp/cc3f4e78.s:5841   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/cc3f4e78.s:2888   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/cc3f4e78.s:2895   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/cc3f4e78.s:3701   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/cc3f4e78.s:3023   .text.HAL_UART_AbortReceive_IT:00000000000000c0 $d
     /tmp/cc3f4e78.s:5894   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/cc3f4e78.s:3028   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/cc3f4e78.s:3035   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/cc3f4e78.s:6141   .text.UART_Receive_IT:0000000000000000 UART_Receive_IT
     /tmp/cc3f4e78.s:3572   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/cc3f4e78.s:5953   .text.UART_Transmit_IT:0000000000000000 UART_Transmit_IT
     /tmp/cc3f4e78.s:6085   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/cc3f4e78.s:3388   .text.HAL_UART_IRQHandler:0000000000000240 $d
     /tmp/cc3f4e78.s:5606   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/cc3f4e78.s:3393   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/cc3f4e78.s:3400   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/cc3f4e78.s:3436   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/cc3f4e78.s:3443   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/cc3f4e78.s:3479   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/cc3f4e78.s:3486   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/cc3f4e78.s:3522   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/cc3f4e78.s:3529   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/cc3f4e78.s:3565   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/cc3f4e78.s:3608   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/cc3f4e78.s:3651   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/cc3f4e78.s:3694   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/cc3f4e78.s:3737   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/cc3f4e78.s:3744   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/cc3f4e78.s:3810   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
     /tmp/cc3f4e78.s:3817   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/cc3f4e78.s:3883   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/cc3f4e78.s:3890   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/cc3f4e78.s:3934   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/cc3f4e78.s:3941   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/cc3f4e78.s:4021   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/cc3f4e78.s:4028   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/cc3f4e78.s:4108   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/cc3f4e78.s:4115   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/cc3f4e78.s:4187   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/cc3f4e78.s:4194   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/cc3f4e78.s:4252   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/cc3f4e78.s:4259   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/cc3f4e78.s:4298   .text.UART_SetConfig:0000000000000000 $t
     /tmp/cc3f4e78.s:4406   .text.UART_SetConfig:000000000000009c $d
     /tmp/cc3f4e78.s:4410   .text.UART_SetConfig:00000000000000ac $t
     /tmp/cc3f4e78.s:4477   .text.UART_SetConfig:0000000000000108 $d
     /tmp/cc3f4e78.s:4486   .text.UART_SetConfig:000000000000012c $t
     /tmp/cc3f4e78.s:4592   .text.UART_SetConfig:00000000000001e8 $d
     /tmp/cc3f4e78.s:4601   .text.UART_SetConfig:000000000000020c $t
ARM GAS  /tmp/cc3f4e78.s 			page 162


     /tmp/cc3f4e78.s:4706   .text.UART_SetConfig:00000000000002b8 $d
     /tmp/cc3f4e78.s:4715   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/cc3f4e78.s:4918   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/cc3f4e78.s:5026   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/cc3f4e78.s:5140   .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/cc3f4e78.s:5194   .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/cc3f4e78.s:5256   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/cc3f4e78.s:5332   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/cc3f4e78.s:5377   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/cc3f4e78.s:5462   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/cc3f4e78.s:5507   .text.UART_DMAError:0000000000000000 $t
     /tmp/cc3f4e78.s:5600   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/cc3f4e78.s:5653   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/cc3f4e78.s:5744   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/cc3f4e78.s:5835   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/cc3f4e78.s:5888   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/cc3f4e78.s:5946   .text.UART_Transmit_IT:0000000000000000 $t
     /tmp/cc3f4e78.s:6078   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/cc3f4e78.s:6134   .text.UART_Receive_IT:0000000000000000 $t
     /tmp/cc3f4e78.s:6285   .text.UART_Wakeup_AddressConfig:0000000000000000 $t
     /tmp/cc3f4e78.s:6292   .text.UART_Wakeup_AddressConfig:0000000000000000 UART_Wakeup_AddressConfig

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetSysClockFreq
