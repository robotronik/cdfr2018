ARM GAS  /tmp/ccinMcHI.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 2
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f3xx_hal_uart.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  21              		.align	2
  22              		.weak	HAL_UART_MspInit
  23              		.thumb
  24              		.thumb_func
  26              	HAL_UART_MspInit:
  27              	.LFB697:
  28              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @file    stm32f3xx_hal_uart.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   [..]
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) UART pins configuration:
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) UART interrupts handling:
ARM GAS  /tmp/ccinMcHI.s 			page 2


  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                 RXNE interrupt and Error Interrupts) are managed using the macros
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                 __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit and receive 
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         the HAL_UART_Init() API.
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    [..]
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (@) These APIs (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_MultiProcessor_Init(),
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         also configure the low level Hardware (GPIO, CLOCK, CORTEX...etc) by
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    [..]
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    [..] Three operation modes are available within this driver :
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      *** Polling mode IO operation ***
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      =================================
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      *** Interrupt mode IO operation ***
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      ===================================
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT()
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT()
  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
ARM GAS  /tmp/ccinMcHI.s 			page 3


  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      *** DMA mode IO operation ***
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      ==============================
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA()
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA()
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      *** UART HAL driver macros list ***
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      =============================================
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   @endverbatim
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @attention
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      without specific prior written permission.
 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
ARM GAS  /tmp/ccinMcHI.s 			page 4


 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #include "stm32f3xx_hal.h"
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @addtogroup STM32F3xx_HAL_Driver
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART UART
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief UART HAL module driver
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #define UART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                                      USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8)) /*!< UART or U
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
ARM GAS  /tmp/ccinMcHI.s 			page 5


 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** ===============================================================================
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     in asynchronous mode.
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Baud Rate
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Word Length
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Stop Bit
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Parity
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Hardware flow control
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Receiver/transmitter modes
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Over Sampling Method
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) One-Bit Sampling Method
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) data logical level inversion
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) RX and TX pins swap
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) RX overrun detection disabling
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) DMA disabling on RX error
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) MSB first on communication line
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) auto Baud rate detection
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init()
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     API follow respectively the UART asynchronous, UART Half duplex, UART LIN mode and
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     multiprocessor configuration procedures (details for the procedures are available in reference 
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /*
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   Additional Table: If the parity is enabled, then the MSB bit of the data written
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     in the data register is transmitted but is changed by the parity bit.
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     According to device capability (support or not of 7-bit word length),
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     frame length is either defined by the M bit (8-bits or 9-bits)
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     or by the M1 and M0 bits (7-bit, 8-bit or 9-bit).
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     Possible UART frame formats are as listed in the following table:
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccinMcHI.s 			page 6


 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       Table 1. UART frame format.             
 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |       M bit       |  PCE bit  |             UART frame                |
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |         0         |     0     |    | SB |    8-bit data   | STB |     |
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |         0         |     1     |    | SB | 7-bit data | PB | STB |     |
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |         1         |     0     |    | SB |    9-bit data   | STB |     |
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |         1         |     1     |    | SB | 8-bit data | PB | STB |     |
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    0    |    0    |     0     |    | SB |    8 bit data   | STB |     |
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    0    |    0    |     1     |    | SB | 7 bit data | PB | STB |     |
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    0    |    1    |     0     |    | SB |    9 bit data   | STB |     |
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    0    |    1    |     1     |    | SB | 8 bit data | PB | STB |     |
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    1    |    0    |     0     |    | SB |    7 bit data   | STB |     |
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    1    |    0    |     1     |    | SB | 6 bit data | PB | STB |     |
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check the parameters */
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check the parameters */
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
ARM GAS  /tmp/ccinMcHI.s 			page 7


 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Peripheral */
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check UART instance */
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccinMcHI.s 			page 8


 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Peripheral */
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle .
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param BreakDetectLength specifies the LIN break detection length.
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        This parameter can be one of the following values:
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the LIN UART instance */
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
ARM GAS  /tmp/ccinMcHI.s 			page 9


 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the Break detection length parameter */
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->Init.WordLength != UART_WORDLENGTH_8B)
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Peripheral */
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
ARM GAS  /tmp/ccinMcHI.s 			page 10


 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Address UART node address (4-, 6-, 7- or 8-bit long).
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param WakeUpMethod specifies the UART wakeup method.
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        This parameter can be one of the following values:
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the wake up method parameter */
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
ARM GAS  /tmp/ccinMcHI.s 			page 11


 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Peripheral */
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DeInit the low level hardware */
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlock */
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccinMcHI.s 			page 12


 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
  29              		.loc 1 610 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE697:
  39 0002 00BF     		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
  40              		.align	2
  41              		.weak	HAL_UART_MspDeInit
  42              		.thumb
  43              		.thumb_func
  45              	HAL_UART_MspDeInit:
  46              	.LFB698:
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
  47              		.loc 1 625 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52              	.LVL1:
  53 0000 7047     		bx	lr
  54              		.cfi_endproc
  55              	.LFE698:
  57 0002 00BF     		.section	.text.HAL_UART_DeInit,"ax",%progbits
  58              		.align	2
  59              		.global	HAL_UART_DeInit
  60              		.thumb
  61              		.thumb_func
  63              	HAL_UART_DeInit:
  64              	.LFB696:
ARM GAS  /tmp/ccinMcHI.s 			page 13


 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
  65              		.loc 1 572 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69              	.LVL2:
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
  70              		.loc 1 574 0
  71 0000 C0B1     		cbz	r0, .L5
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
  72              		.loc 1 572 0
  73 0002 38B5     		push	{r3, r4, r5, lr}
  74              	.LCFI0:
  75              		.cfi_def_cfa_offset 16
  76              		.cfi_offset 3, -16
  77              		.cfi_offset 4, -12
  78              		.cfi_offset 5, -8
  79              		.cfi_offset 14, -4
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  80              		.loc 1 582 0
  81 0004 2422     		movs	r2, #36
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  82              		.loc 1 585 0
  83 0006 0368     		ldr	r3, [r0]
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  84              		.loc 1 582 0
  85 0008 80F86920 		strb	r2, [r0, #105]
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  86              		.loc 1 585 0
  87 000c 1A68     		ldr	r2, [r3]
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
  88              		.loc 1 587 0
  89 000e 0025     		movs	r5, #0
  90 0010 0446     		mov	r4, r0
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  91              		.loc 1 585 0
  92 0012 22F00102 		bic	r2, r2, #1
  93 0016 1A60     		str	r2, [r3]
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
  94              		.loc 1 587 0
  95 0018 1D60     		str	r5, [r3]
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
  96              		.loc 1 588 0
  97 001a 5D60     		str	r5, [r3, #4]
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  98              		.loc 1 589 0
  99 001c 9D60     		str	r5, [r3, #8]
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 100              		.loc 1 592 0
 101 001e FFF7FEFF 		bl	HAL_UART_MspDeInit
 102              	.LVL3:
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 103              		.loc 1 594 0
 104 0022 E566     		str	r5, [r4, #108]
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 105              		.loc 1 599 0
 106 0024 84F86850 		strb	r5, [r4, #104]
ARM GAS  /tmp/ccinMcHI.s 			page 14


 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 107              		.loc 1 595 0
 108 0028 84F86950 		strb	r5, [r4, #105]
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 109              		.loc 1 601 0
 110 002c 2846     		mov	r0, r5
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 111              		.loc 1 596 0
 112 002e 84F86A50 		strb	r5, [r4, #106]
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 113              		.loc 1 601 0
 114 0032 38BD     		pop	{r3, r4, r5, pc}
 115              	.LVL4:
 116              	.L5:
 117              	.LCFI1:
 118              		.cfi_def_cfa_offset 0
 119              		.cfi_restore 3
 120              		.cfi_restore 4
 121              		.cfi_restore 5
 122              		.cfi_restore 14
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 123              		.loc 1 576 0
 124 0034 0120     		movs	r0, #1
 125              	.LVL5:
 126 0036 7047     		bx	lr
 127              		.cfi_endproc
 128              	.LFE696:
 130              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 131              		.align	2
 132              		.global	HAL_UART_Transmit_IT
 133              		.thumb
 134              		.thumb_func
 136              	HAL_UART_Transmit_IT:
 137              	.LFB701:
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                       ##### IO operation functions #####
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     and Half duplex data transfers.
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) There are two mode of transfer:
ARM GAS  /tmp/ccinMcHI.s 			page 15


 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (++) Blocking mode: The communication is performed in polling mode.
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            after finishing transfer.
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (++) Non-Blocking mode: The communication is performed using Interrupts
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The end of the data processing will be indicated through the
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            using DMA mode.
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Blocking mode API's are :
 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Transmit()
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Receive()
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Transmit_IT()
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Receive_IT()
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_IRQHandler()
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Transmit_DMA()
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Receive_DMA()
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_DMAPause()
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_DMAResume()
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_DMAStop()
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_TxHalfCpltCallback()
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_TxCpltCallback()
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_RxHalfCpltCallback()
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_RxCpltCallback()
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_ErrorCallback()
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Abort()
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortTransmit()
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortReceive()
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Abort_IT()
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortTransmit_IT()
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortReceive_IT()
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortCpltCallback()
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortTransmitCpltCallback()
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortReceiveCpltCallback()
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         Errors are handled as follows :
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Error is considered as Recoverable and non blocking : Transfer could go till end, but 
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in In
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              Received character is then retrieved and stored in Rx buffer, Error code is set to all
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UA
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              If user wants to abort it, Abort services should be called by user.
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Error is considered as Blocking : Transfer could not be completed properly and is abor
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
ARM GAS  /tmp/ccinMcHI.s 			page 16


 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() u
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData Pointer to data buffer.
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size Amount of data to be sent.
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Timeout Timeout duration.
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart = 0U;
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return  HAL_ERROR;
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     tickstart = HAL_GetTick();
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount--;
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pData += 2U;
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
ARM GAS  /tmp/ccinMcHI.s 			page 17


 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData pointer to data buffer.
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size amount of data to be received.
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Timeout Timeout duration.
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t uhMask;
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart = 0U;
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return  HAL_ERROR;
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     tickstart = HAL_GetTick();
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
ARM GAS  /tmp/ccinMcHI.s 			page 18


 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* as long as data have to be received */
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxXferCount--;
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         tmp = (uint16_t*) pData ;
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pData +=2U;
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData pointer to data buffer.
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size amount of data to be sent.
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 138              		.loc 1 864 0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142              		@ link register save eliminated.
 143              	.LVL6:
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 144              		.loc 1 866 0
 145 0000 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 146 0004 202B     		cmp	r3, #32
 147 0006 01D0     		beq	.L17
ARM GAS  /tmp/ccinMcHI.s 			page 19


 148              	.L14:
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Transmit Data Register Empty Interrupt */
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 149              		.loc 1 893 0
 150 0008 0220     		movs	r0, #2
 151              	.LVL7:
 152 000a 7047     		bx	lr
 153              	.LVL8:
 154              	.L17:
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 155              		.loc 1 868 0
 156 000c C9B1     		cbz	r1, .L13
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 157              		.loc 1 868 0 is_stmt 0 discriminator 1
 158 000e C2B1     		cbz	r2, .L13
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 159              		.loc 1 874 0 is_stmt 1
 160 0010 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 161 0014 012B     		cmp	r3, #1
 162 0016 F7D0     		beq	.L14
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 163              		.loc 1 864 0 discriminator 2
 164 0018 30B4     		push	{r4, r5}
 165              	.LCFI2:
 166              		.cfi_def_cfa_offset 8
 167              		.cfi_offset 4, -8
 168              		.cfi_offset 5, -4
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 169              		.loc 1 880 0 discriminator 2
 170 001a 0023     		movs	r3, #0
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 171              		.loc 1 887 0 discriminator 2
ARM GAS  /tmp/ccinMcHI.s 			page 20


 172 001c 0568     		ldr	r5, [r0]
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 173              		.loc 1 878 0 discriminator 2
 174 001e A0F85220 		strh	r2, [r0, #82]	@ movhi
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 175              		.loc 1 881 0 discriminator 2
 176 0022 2124     		movs	r4, #33
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 177              		.loc 1 880 0 discriminator 2
 178 0024 C366     		str	r3, [r0, #108]
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 179              		.loc 1 881 0 discriminator 2
 180 0026 80F86940 		strb	r4, [r0, #105]
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 181              		.loc 1 887 0 discriminator 2
 182 002a 2C68     		ldr	r4, [r5]
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 183              		.loc 1 876 0 discriminator 2
 184 002c C164     		str	r1, [r0, #76]
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 185              		.loc 1 887 0 discriminator 2
 186 002e 44F08001 		orr	r1, r4, #128
 187              	.LVL9:
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 188              		.loc 1 877 0 discriminator 2
 189 0032 A0F85020 		strh	r2, [r0, #80]	@ movhi
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 190              		.loc 1 884 0 discriminator 2
 191 0036 80F86830 		strb	r3, [r0, #104]
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 192              		.loc 1 889 0 discriminator 2
 193 003a 1846     		mov	r0, r3
 194              	.LVL10:
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 195              		.loc 1 887 0 discriminator 2
 196 003c 2960     		str	r1, [r5]
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 197              		.loc 1 895 0 discriminator 2
 198 003e 30BC     		pop	{r4, r5}
 199              	.LCFI3:
 200              		.cfi_restore 5
 201              		.cfi_restore 4
 202              		.cfi_def_cfa_offset 0
 203 0040 7047     		bx	lr
 204              	.LVL11:
 205              	.L13:
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 206              		.loc 1 870 0
 207 0042 0120     		movs	r0, #1
 208              	.LVL12:
 209 0044 7047     		bx	lr
 210              		.cfi_endproc
 211              	.LFE701:
 213 0046 00BF     		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 214              		.align	2
 215              		.global	HAL_UART_Receive_IT
ARM GAS  /tmp/ccinMcHI.s 			page 21


 216              		.thumb
 217              		.thumb_func
 219              	HAL_UART_Receive_IT:
 220              	.LFB702:
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData pointer to data buffer.
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size amount of data to be received.
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 221              		.loc 1 905 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              		@ link register save eliminated.
 226              	.LVL13:
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 227              		.loc 1 907 0
 228 0000 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 229 0004 202B     		cmp	r3, #32
 230 0006 01D0     		beq	.L35
 231              	.L28:
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Parity Error and Data Register not empty Interrupts */
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
ARM GAS  /tmp/ccinMcHI.s 			page 22


 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 232              		.loc 1 940 0
 233 0008 0220     		movs	r0, #2
 234              	.LVL14:
 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 235              		.loc 1 942 0
 236 000a 7047     		bx	lr
 237              	.LVL15:
 238              	.L35:
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 239              		.loc 1 909 0
 240 000c 49B3     		cbz	r1, .L27
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 241              		.loc 1 909 0 is_stmt 0 discriminator 1
 242 000e 42B3     		cbz	r2, .L27
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 243              		.loc 1 915 0 is_stmt 1
 244 0010 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 245 0014 012B     		cmp	r3, #1
 246 0016 F7D0     		beq	.L28
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 247              		.loc 1 922 0 discriminator 2
 248 0018 8368     		ldr	r3, [r0, #8]
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 249              		.loc 1 917 0 discriminator 2
 250 001a 4165     		str	r1, [r0, #84]
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 251              		.loc 1 922 0 discriminator 2
 252 001c B3F5805F 		cmp	r3, #4096
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 253              		.loc 1 915 0 discriminator 2
 254 0020 4FF00101 		mov	r1, #1
 255              	.LVL16:
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 256              		.loc 1 918 0 discriminator 2
 257 0024 A0F85820 		strh	r2, [r0, #88]	@ movhi
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 258              		.loc 1 919 0 discriminator 2
 259 0028 A0F85A20 		strh	r2, [r0, #90]	@ movhi
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 260              		.loc 1 915 0 discriminator 2
 261 002c 80F86810 		strb	r1, [r0, #104]
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 262              		.loc 1 922 0 discriminator 2
 263 0030 27D0     		beq	.L36
 264 0032 C3B9     		cbnz	r3, .L23
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 265              		.loc 1 922 0 is_stmt 0 discriminator 5
 266 0034 0369     		ldr	r3, [r0, #16]
 267 0036 03B3     		cbz	r3, .L21
 268              	.L24:
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 269              		.loc 1 922 0 discriminator 8
 270 0038 7F23     		movs	r3, #127
ARM GAS  /tmp/ccinMcHI.s 			page 23


 271 003a A0F85C30 		strh	r3, [r0, #92]	@ movhi
 272              	.L22:
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 273              		.loc 1 931 0 is_stmt 1
 274 003e 0268     		ldr	r2, [r0]
 275              	.LVL17:
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 276              		.loc 1 924 0
 277 0040 0023     		movs	r3, #0
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 278              		.loc 1 925 0
 279 0042 2221     		movs	r1, #34
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 280              		.loc 1 924 0
 281 0044 C366     		str	r3, [r0, #108]
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 282              		.loc 1 925 0
 283 0046 80F86A10 		strb	r1, [r0, #106]
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 284              		.loc 1 931 0
 285 004a 9168     		ldr	r1, [r2, #8]
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 286              		.loc 1 928 0
 287 004c 80F86830 		strb	r3, [r0, #104]
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 288              		.loc 1 931 0
 289 0050 41F00101 		orr	r1, r1, #1
 290 0054 9160     		str	r1, [r2, #8]
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 291              		.loc 1 934 0
 292 0056 1168     		ldr	r1, [r2]
 293 0058 41F49071 		orr	r1, r1, #288
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 294              		.loc 1 936 0
 295 005c 1846     		mov	r0, r3
 296              	.LVL18:
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 297              		.loc 1 934 0
 298 005e 1160     		str	r1, [r2]
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 299              		.loc 1 936 0
 300 0060 7047     		bx	lr
 301              	.LVL19:
 302              	.L27:
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 303              		.loc 1 911 0
 304 0062 0120     		movs	r0, #1
 305              	.LVL20:
 306 0064 7047     		bx	lr
 307              	.LVL21:
 308              	.L23:
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 309              		.loc 1 922 0 discriminator 6
 310 0066 B3F1805F 		cmp	r3, #268435456
 311 006a E8D1     		bne	.L22
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 312              		.loc 1 922 0 is_stmt 0 discriminator 9
ARM GAS  /tmp/ccinMcHI.s 			page 24


 313 006c 0369     		ldr	r3, [r0, #16]
 314 006e 002B     		cmp	r3, #0
 315 0070 E2D0     		beq	.L24
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 316              		.loc 1 922 0 discriminator 11
 317 0072 3F23     		movs	r3, #63
 318 0074 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 319 0078 E1E7     		b	.L22
 320              	.L21:
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 321              		.loc 1 922 0 discriminator 4
 322 007a FF23     		movs	r3, #255
 323 007c A0F85C30 		strh	r3, [r0, #92]	@ movhi
 324 0080 DDE7     		b	.L22
 325              	.L36:
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 326              		.loc 1 922 0 discriminator 1
 327 0082 0369     		ldr	r3, [r0, #16]
 328 0084 002B     		cmp	r3, #0
 329 0086 F8D1     		bne	.L21
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 330              		.loc 1 922 0 discriminator 3
 331 0088 40F2FF13 		movw	r3, #511
 332 008c A0F85C30 		strh	r3, [r0, #92]	@ movhi
 333 0090 D5E7     		b	.L22
 334              		.cfi_endproc
 335              	.LFE702:
 337 0092 00BF     		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 338              		.align	2
 339              		.global	HAL_UART_Transmit_DMA
 340              		.thumb
 341              		.thumb_func
 343              	HAL_UART_Transmit_DMA:
 344              	.LFB703:
 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData pointer to data buffer.
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size amount of data to be sent.
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note This function starts a DMA transfer in interrupt mode meaning that
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *       DMA half transfer complete, DMA transfer complete and DMA transfer
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *       error interrupts are enabled
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 345              		.loc 1 955 0 is_stmt 1
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              	.LVL22:
 350 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 351              	.LCFI4:
 352              		.cfi_def_cfa_offset 32
 353              		.cfi_offset 3, -32
 354              		.cfi_offset 4, -28
ARM GAS  /tmp/ccinMcHI.s 			page 25


 355              		.cfi_offset 5, -24
 356              		.cfi_offset 6, -20
 357              		.cfi_offset 7, -16
 358              		.cfi_offset 8, -12
 359              		.cfi_offset 9, -8
 360              		.cfi_offset 14, -4
 361              		.loc 1 955 0
 362 0004 0446     		mov	r4, r0
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if UART instance supports continuous communication using DMA */
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_DMA_INSTANCE(huart->Instance));
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 363              		.loc 1 960 0
 364 0006 90F86900 		ldrb	r0, [r0, #105]	@ zero_extendqisi2
 365              	.LVL23:
 366 000a 2028     		cmp	r0, #32
 367 000c 02D0     		beq	.L44
 368              	.L42:
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the DMA error callback */
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the DMA abort callback */
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->TDR, S
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
ARM GAS  /tmp/ccinMcHI.s 			page 26


 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 369              		.loc 1 1006 0
 370 000e 0220     		movs	r0, #2
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 371              		.loc 1 1008 0
 372 0010 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 373              	.LVL24:
 374              	.L44:
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 375              		.loc 1 962 0
 376 0014 99B3     		cbz	r1, .L41
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 377              		.loc 1 962 0 is_stmt 0 discriminator 1
 378 0016 92B3     		cbz	r2, .L41
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 379              		.loc 1 968 0 is_stmt 1
 380 0018 94F86800 		ldrb	r0, [r4, #104]	@ zero_extendqisi2
 381 001c 0128     		cmp	r0, #1
 382 001e F6D0     		beq	.L42
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 383              		.loc 1 978 0 discriminator 2
 384 0020 266E     		ldr	r6, [r4, #96]
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 385              		.loc 1 990 0 discriminator 2
 386 0022 2768     		ldr	r7, [r4]
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 387              		.loc 1 981 0 discriminator 2
 388 0024 DFF85CC0 		ldr	ip, .L45
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 389              		.loc 1 984 0 discriminator 2
 390 0028 DFF85CE0 		ldr	lr, .L45+4
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 391              		.loc 1 978 0 discriminator 2
 392 002c DFF85C80 		ldr	r8, .L45+8
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 393              		.loc 1 972 0 discriminator 2
 394 0030 A4F85220 		strh	r2, [r4, #82]	@ movhi
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 395              		.loc 1 974 0 discriminator 2
 396 0034 0025     		movs	r5, #0
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 397              		.loc 1 968 0 discriminator 2
 398 0036 4FF00109 		mov	r9, #1
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 399              		.loc 1 975 0 discriminator 2
 400 003a 2120     		movs	r0, #33
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 401              		.loc 1 971 0 discriminator 2
 402 003c A4F85020 		strh	r2, [r4, #80]	@ movhi
ARM GAS  /tmp/ccinMcHI.s 			page 27


 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 403              		.loc 1 974 0 discriminator 2
 404 0040 E566     		str	r5, [r4, #108]
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 405              		.loc 1 970 0 discriminator 2
 406 0042 E164     		str	r1, [r4, #76]
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 407              		.loc 1 975 0 discriminator 2
 408 0044 84F86900 		strb	r0, [r4, #105]
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 409              		.loc 1 968 0 discriminator 2
 410 0048 84F86890 		strb	r9, [r4, #104]
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 411              		.loc 1 990 0 discriminator 2
 412 004c 1346     		mov	r3, r2
 413 004e 3046     		mov	r0, r6
 414 0050 07F12802 		add	r2, r7, #40
 415              	.LVL25:
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 416              		.loc 1 987 0 discriminator 2
 417 0054 7563     		str	r5, [r6, #52]
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 418              		.loc 1 978 0 discriminator 2
 419 0056 C6F82880 		str	r8, [r6, #40]
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 420              		.loc 1 981 0 discriminator 2
 421 005a C6F82CC0 		str	ip, [r6, #44]
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 422              		.loc 1 984 0 discriminator 2
 423 005e C6F830E0 		str	lr, [r6, #48]
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 424              		.loc 1 990 0 discriminator 2
 425 0062 FFF7FEFF 		bl	HAL_DMA_Start_IT
 426              	.LVL26:
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 427              		.loc 1 993 0 discriminator 2
 428 0066 2368     		ldr	r3, [r4]
 429 0068 4022     		movs	r2, #64
 430 006a 1A62     		str	r2, [r3, #32]
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 431              		.loc 1 1000 0 discriminator 2
 432 006c 9A68     		ldr	r2, [r3, #8]
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 433              		.loc 1 996 0 discriminator 2
 434 006e 84F86850 		strb	r5, [r4, #104]
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 435              		.loc 1 1000 0 discriminator 2
 436 0072 42F08002 		orr	r2, r2, #128
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 437              		.loc 1 1002 0 discriminator 2
 438 0076 2846     		mov	r0, r5
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 439              		.loc 1 1000 0 discriminator 2
 440 0078 9A60     		str	r2, [r3, #8]
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 441              		.loc 1 1002 0 discriminator 2
 442 007a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
ARM GAS  /tmp/ccinMcHI.s 			page 28


 443              	.LVL27:
 444              	.L41:
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 445              		.loc 1 964 0
 446 007e 0120     		movs	r0, #1
 447 0080 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 448              	.LVL28:
 449              	.L46:
 450              		.align	2
 451              	.L45:
 452 0084 00000000 		.word	UART_DMATxHalfCplt
 453 0088 00000000 		.word	UART_DMAError
 454 008c 00000000 		.word	UART_DMATransmitCplt
 455              		.cfi_endproc
 456              	.LFE703:
 458              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 459              		.align	2
 460              		.global	HAL_UART_Receive_DMA
 461              		.thumb
 462              		.thumb_func
 464              	HAL_UART_Receive_DMA:
 465              	.LFB704:
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData pointer to data buffer.
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size amount of data to be received.
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         the parity bit (MSB position).
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note This function starts a DMA transfer in interrupt mode meaning that
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *       DMA half transfer complete, DMA transfer complete and DMA transfer
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *       error interrupts are enabled
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 466              		.loc 1 1023 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470              	.LVL29:
 471 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 472              	.LCFI5:
 473              		.cfi_def_cfa_offset 32
 474              		.cfi_offset 3, -32
 475              		.cfi_offset 4, -28
 476              		.cfi_offset 5, -24
 477              		.cfi_offset 6, -20
 478              		.cfi_offset 7, -16
 479              		.cfi_offset 8, -12
 480              		.cfi_offset 9, -8
 481              		.cfi_offset 14, -4
 482              		.loc 1 1023 0
 483 0004 0446     		mov	r4, r0
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if UART instance supports continuous communication using DMA */
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_DMA_INSTANCE(huart->Instance));
ARM GAS  /tmp/ccinMcHI.s 			page 29


1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 484              		.loc 1 1028 0
 485 0006 90F86A00 		ldrb	r0, [r0, #106]	@ zero_extendqisi2
 486              	.LVL30:
 487 000a 2028     		cmp	r0, #32
 488 000c 02D0     		beq	.L54
 489              	.LVL31:
 490              	.L52:
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the DMA error callback */
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the DMA abort callback */
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the DMA channel */
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuffPtr, S
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
ARM GAS  /tmp/ccinMcHI.s 			page 30


1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 491              		.loc 1 1076 0
 492 000e 0220     		movs	r0, #2
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 493              		.loc 1 1078 0
 494 0010 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 495              	.LVL32:
 496              	.L54:
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 497              		.loc 1 1030 0
 498 0014 0029     		cmp	r1, #0
 499 0016 39D0     		beq	.L51
 500 0018 1346     		mov	r3, r2
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 501              		.loc 1 1030 0 is_stmt 0 discriminator 1
 502 001a 002A     		cmp	r2, #0
 503 001c 36D0     		beq	.L51
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 504              		.loc 1 1036 0 is_stmt 1
 505 001e 94F86820 		ldrb	r2, [r4, #104]	@ zero_extendqisi2
 506              	.LVL33:
 507 0022 012A     		cmp	r2, #1
 508 0024 F3D0     		beq	.L52
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 509              		.loc 1 1045 0 discriminator 2
 510 0026 666E     		ldr	r6, [r4, #100]
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 511              		.loc 1 1057 0 discriminator 2
 512 0028 2768     		ldr	r7, [r4]
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 513              		.loc 1 1048 0 discriminator 2
 514 002a DFF868C0 		ldr	ip, .L55
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 515              		.loc 1 1051 0 discriminator 2
 516 002e DFF868E0 		ldr	lr, .L55+4
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 517              		.loc 1 1045 0 discriminator 2
 518 0032 DFF86880 		ldr	r8, .L55+8
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 519              		.loc 1 1038 0 discriminator 2
 520 0036 6165     		str	r1, [r4, #84]
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 521              		.loc 1 1041 0 discriminator 2
 522 0038 0025     		movs	r5, #0
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 523              		.loc 1 1036 0 discriminator 2
 524 003a 4FF00109 		mov	r9, #1
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 525              		.loc 1 1042 0 discriminator 2
 526 003e 2220     		movs	r0, #34
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 527              		.loc 1 1039 0 discriminator 2
 528 0040 A4F85830 		strh	r3, [r4, #88]	@ movhi
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 529              		.loc 1 1041 0 discriminator 2
 530 0044 E566     		str	r5, [r4, #108]
ARM GAS  /tmp/ccinMcHI.s 			page 31


1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 531              		.loc 1 1036 0 discriminator 2
 532 0046 84F86890 		strb	r9, [r4, #104]
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 533              		.loc 1 1042 0 discriminator 2
 534 004a 84F86A00 		strb	r0, [r4, #106]
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 535              		.loc 1 1057 0 discriminator 2
 536 004e 0A46     		mov	r2, r1
 537 0050 3046     		mov	r0, r6
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 538              		.loc 1 1054 0 discriminator 2
 539 0052 7563     		str	r5, [r6, #52]
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 540              		.loc 1 1045 0 discriminator 2
 541 0054 C6F82880 		str	r8, [r6, #40]
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 542              		.loc 1 1048 0 discriminator 2
 543 0058 C6F82CC0 		str	ip, [r6, #44]
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 544              		.loc 1 1051 0 discriminator 2
 545 005c C6F830E0 		str	lr, [r6, #48]
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 546              		.loc 1 1057 0 discriminator 2
 547 0060 07F12401 		add	r1, r7, #36
 548              	.LVL34:
 549 0064 FFF7FEFF 		bl	HAL_DMA_Start_IT
 550              	.LVL35:
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 551              		.loc 1 1063 0 discriminator 2
 552 0068 2368     		ldr	r3, [r4]
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 553              		.loc 1 1060 0 discriminator 2
 554 006a 84F86850 		strb	r5, [r4, #104]
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 555              		.loc 1 1063 0 discriminator 2
 556 006e 1A68     		ldr	r2, [r3]
 557 0070 42F48072 		orr	r2, r2, #256
 558 0074 1A60     		str	r2, [r3]
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 559              		.loc 1 1066 0 discriminator 2
 560 0076 9A68     		ldr	r2, [r3, #8]
 561 0078 42EA0902 		orr	r2, r2, r9
 562 007c 9A60     		str	r2, [r3, #8]
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 563              		.loc 1 1070 0 discriminator 2
 564 007e 9A68     		ldr	r2, [r3, #8]
 565 0080 42F04002 		orr	r2, r2, #64
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 566              		.loc 1 1072 0 discriminator 2
 567 0084 2846     		mov	r0, r5
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 568              		.loc 1 1070 0 discriminator 2
 569 0086 9A60     		str	r2, [r3, #8]
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 570              		.loc 1 1072 0 discriminator 2
 571 0088 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
ARM GAS  /tmp/ccinMcHI.s 			page 32


 572              	.LVL36:
 573              	.L51:
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 574              		.loc 1 1032 0
 575 008c 0120     		movs	r0, #1
 576 008e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 577              	.LVL37:
 578              	.L56:
 579 0092 00BF     		.align	2
 580              	.L55:
 581 0094 00000000 		.word	UART_DMARxHalfCplt
 582 0098 00000000 		.word	UART_DMAError
 583 009c 00000000 		.word	UART_DMAReceiveCplt
 584              		.cfi_endproc
 585              	.LFE704:
 587              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 588              		.align	2
 589              		.global	HAL_UART_DMAPause
 590              		.thumb
 591              		.thumb_func
 593              	HAL_UART_DMAPause:
 594              	.LFB705:
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Pause the DMA Transfer.
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 595              		.loc 1 1086 0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599              		@ link register save eliminated.
 600              	.LVL38:
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 601              		.loc 1 1088 0
 602 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 603 0004 012B     		cmp	r3, #1
 604 0006 0FD0     		beq	.L61
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
 605              		.loc 1 1090 0 discriminator 2
 606 0008 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 607              		.loc 1 1088 0 discriminator 2
 608 000c 0122     		movs	r2, #1
 609              		.loc 1 1090 0 discriminator 2
 610 000e 212B     		cmp	r3, #33
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 611              		.loc 1 1088 0 discriminator 2
 612 0010 80F86820 		strb	r2, [r0, #104]
 613              		.loc 1 1090 0 discriminator 2
 614 0014 1BD0     		beq	.L68
 615              	.L59:
ARM GAS  /tmp/ccinMcHI.s 			page 33


1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
 616              		.loc 1 1096 0
 617 0016 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 618 001a 222B     		cmp	r3, #34
 619 001c 06D0     		beq	.L69
 620              	.L60:
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 621              		.loc 1 1108 0
 622 001e 0023     		movs	r3, #0
 623 0020 80F86830 		strb	r3, [r0, #104]
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 624              		.loc 1 1110 0
 625 0024 1846     		mov	r0, r3
 626              	.LVL39:
 627 0026 7047     		bx	lr
 628              	.LVL40:
 629              	.L61:
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 630              		.loc 1 1088 0
 631 0028 0220     		movs	r0, #2
 632              	.LVL41:
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 633              		.loc 1 1111 0
 634 002a 7047     		bx	lr
 635              	.LVL42:
 636              	.L69:
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 637              		.loc 1 1097 0 discriminator 1
 638 002c 0368     		ldr	r3, [r0]
 639 002e 9A68     		ldr	r2, [r3, #8]
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 640              		.loc 1 1096 0 discriminator 1
 641 0030 5206     		lsls	r2, r2, #25
 642 0032 F4D5     		bpl	.L60
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 643              		.loc 1 1100 0
 644 0034 1A68     		ldr	r2, [r3]
 645 0036 22F48072 		bic	r2, r2, #256
 646 003a 1A60     		str	r2, [r3]
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccinMcHI.s 			page 34


 647              		.loc 1 1101 0
 648 003c 9A68     		ldr	r2, [r3, #8]
 649 003e 22F00102 		bic	r2, r2, #1
 650 0042 9A60     		str	r2, [r3, #8]
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 651              		.loc 1 1104 0
 652 0044 9A68     		ldr	r2, [r3, #8]
 653 0046 22F04002 		bic	r2, r2, #64
 654 004a 9A60     		str	r2, [r3, #8]
 655 004c E7E7     		b	.L60
 656              	.L68:
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 657              		.loc 1 1091 0 discriminator 1
 658 004e 0368     		ldr	r3, [r0]
 659 0050 9A68     		ldr	r2, [r3, #8]
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 660              		.loc 1 1090 0 discriminator 1
 661 0052 1106     		lsls	r1, r2, #24
 662 0054 DFD5     		bpl	.L59
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 663              		.loc 1 1094 0
 664 0056 9A68     		ldr	r2, [r3, #8]
 665 0058 22F08002 		bic	r2, r2, #128
 666 005c 9A60     		str	r2, [r3, #8]
 667 005e DAE7     		b	.L59
 668              		.cfi_endproc
 669              	.LFE705:
 671              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 672              		.align	2
 673              		.global	HAL_UART_DMAResume
 674              		.thumb
 675              		.thumb_func
 677              	HAL_UART_DMAResume:
 678              	.LFB706:
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Resume the DMA Transfer.
1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 679              		.loc 1 1119 0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 0
 682              		@ frame_needed = 0, uses_anonymous_args = 0
 683              		@ link register save eliminated.
 684              	.LVL43:
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 685              		.loc 1 1121 0
 686 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 687 0004 012B     		cmp	r3, #1
 688 0006 0FD0     		beq	.L74
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
 689              		.loc 1 1123 0 discriminator 2
ARM GAS  /tmp/ccinMcHI.s 			page 35


 690 0008 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 691              		.loc 1 1121 0 discriminator 2
 692 000c 0122     		movs	r2, #1
 693              		.loc 1 1123 0 discriminator 2
 694 000e 212B     		cmp	r3, #33
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 695              		.loc 1 1121 0 discriminator 2
 696 0010 80F86820 		strb	r2, [r0, #104]
 697              		.loc 1 1123 0 discriminator 2
 698 0014 1ED0     		beq	.L75
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 699              		.loc 1 1128 0
 700 0016 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 701 001a 222B     		cmp	r3, #34
 702 001c 06D0     		beq	.L76
 703              	.L73:
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 704              		.loc 1 1142 0
 705 001e 0023     		movs	r3, #0
 706 0020 80F86830 		strb	r3, [r0, #104]
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 707              		.loc 1 1144 0
 708 0024 1846     		mov	r0, r3
 709              	.LVL44:
 710 0026 7047     		bx	lr
 711              	.LVL45:
 712              	.L74:
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 713              		.loc 1 1121 0
 714 0028 0220     		movs	r0, #2
 715              	.LVL46:
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 716              		.loc 1 1145 0
 717 002a 7047     		bx	lr
 718              	.LVL47:
 719              	.L76:
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 720              		.loc 1 1131 0
ARM GAS  /tmp/ccinMcHI.s 			page 36


 721 002c 0368     		ldr	r3, [r0]
 722 002e 0822     		movs	r2, #8
 723 0030 1A62     		str	r2, [r3, #32]
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 724              		.loc 1 1134 0
 725 0032 1A68     		ldr	r2, [r3]
 726 0034 42F48072 		orr	r2, r2, #256
 727 0038 1A60     		str	r2, [r3]
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 728              		.loc 1 1135 0
 729 003a 9A68     		ldr	r2, [r3, #8]
 730 003c 42F00102 		orr	r2, r2, #1
 731 0040 9A60     		str	r2, [r3, #8]
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 732              		.loc 1 1138 0
 733 0042 9A68     		ldr	r2, [r3, #8]
 734 0044 42F04002 		orr	r2, r2, #64
 735 0048 9A60     		str	r2, [r3, #8]
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 736              		.loc 1 1142 0
 737 004a 0023     		movs	r3, #0
 738 004c 80F86830 		strb	r3, [r0, #104]
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 739              		.loc 1 1144 0
 740 0050 1846     		mov	r0, r3
 741              	.LVL48:
 742 0052 7047     		bx	lr
 743              	.LVL49:
 744              	.L75:
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 745              		.loc 1 1126 0
 746 0054 0268     		ldr	r2, [r0]
 747 0056 9368     		ldr	r3, [r2, #8]
 748 0058 43F08003 		orr	r3, r3, #128
 749 005c 9360     		str	r3, [r2, #8]
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 750              		.loc 1 1128 0
 751 005e 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 752 0062 222B     		cmp	r3, #34
 753 0064 DBD1     		bne	.L73
 754 0066 E1E7     		b	.L76
 755              		.cfi_endproc
 756              	.LFE706:
 758              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 759              		.align	2
 760              		.global	HAL_UART_DMAStop
 761              		.thumb
 762              		.thumb_func
 764              	HAL_UART_DMAStop:
 765              	.LFB707:
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Stop the DMA Transfer.
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
ARM GAS  /tmp/ccinMcHI.s 			page 37


1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 766              		.loc 1 1153 0
 767              		.cfi_startproc
 768              		@ args = 0, pretend = 0, frame = 0
 769              		@ frame_needed = 0, uses_anonymous_args = 0
 770              	.LVL50:
1154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback: 
1157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete  
1158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of 
1159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
 771              		.loc 1 1162 0
 772 0000 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 773 0004 212B     		cmp	r3, #33
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 774              		.loc 1 1153 0
 775 0006 10B5     		push	{r4, lr}
 776              	.LCFI6:
 777              		.cfi_def_cfa_offset 8
 778              		.cfi_offset 4, -8
 779              		.cfi_offset 14, -4
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 780              		.loc 1 1153 0
 781 0008 0446     		mov	r4, r0
 782              		.loc 1 1162 0
 783 000a 1FD0     		beq	.L95
 784              	.LVL51:
 785              	.L78:
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
 786              		.loc 1 1177 0
 787 000c 94F86A30 		ldrb	r3, [r4, #106]	@ zero_extendqisi2
 788 0010 222B     		cmp	r3, #34
 789 0012 01D0     		beq	.L96
 790              	.L80:
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
ARM GAS  /tmp/ccinMcHI.s 			page 38


1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 791              		.loc 1 1192 0
 792 0014 0020     		movs	r0, #0
 793 0016 10BD     		pop	{r4, pc}
 794              	.LVL52:
 795              	.L96:
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 796              		.loc 1 1178 0 discriminator 1
 797 0018 2368     		ldr	r3, [r4]
 798 001a 9A68     		ldr	r2, [r3, #8]
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 799              		.loc 1 1177 0 discriminator 1
 800 001c 5206     		lsls	r2, r2, #25
 801 001e F9D5     		bpl	.L80
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 802              		.loc 1 1180 0
 803 0020 9A68     		ldr	r2, [r3, #8]
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 804              		.loc 1 1183 0
 805 0022 606E     		ldr	r0, [r4, #100]
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 806              		.loc 1 1180 0
 807 0024 22F04002 		bic	r2, r2, #64
 808 0028 9A60     		str	r2, [r3, #8]
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 809              		.loc 1 1183 0
 810 002a 10B1     		cbz	r0, .L81
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 811              		.loc 1 1185 0
 812 002c FFF7FEFF 		bl	HAL_DMA_Abort
 813              	.LVL53:
 814 0030 2368     		ldr	r3, [r4]
 815              	.L81:
 816              	.LVL54:
 817              	.LBB14:
 818              	.LBB15:
1193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/ccinMcHI.s 			page 39


1205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U; 
1246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U; 
1247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Handle ErrorCode to No Error */
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
ARM GAS  /tmp/ccinMcHI.s 			page 40


1262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Tx transfer counter */
1295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U; 
1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
ARM GAS  /tmp/ccinMcHI.s 			page 41


1319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Rx transfer counter */
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U; 
1339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      before any call to DMA Abort functions */
1373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->hdmatx != NULL)
1375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
ARM GAS  /tmp/ccinMcHI.s 			page 42


1376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        Otherwise, set it to NULL */
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->hdmarx != NULL)
1389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        Otherwise, set it to NULL */
1392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised : 
1412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA TX */
1415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 0U;
1422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
ARM GAS  /tmp/ccinMcHI.s 			page 43


1433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised : 
1435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA RX */
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 1U;
1442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 0U;
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (abortcplt == 1U)
1452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U; 
1455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
1456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset errorCode */
1458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
ARM GAS  /tmp/ccinMcHI.s 			page 44


1490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
1504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA TX */
1506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
1510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Reset Tx transfer counter */
1515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount = 0U; 
1516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
1519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
1522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset Tx transfer counter */
1527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U; 
1528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
1534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
ARM GAS  /tmp/ccinMcHI.s 			page 45


1547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
1570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA RX */
1572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
1576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Reset Rx transfer counter */
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxXferCount = 0U; 
1582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
1584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
1585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
1588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
1591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset Rx transfer counter */
1596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U; 
1597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccinMcHI.s 			page 46


1604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
1606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Handle UART interrupt request.
1613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
1619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
1620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr3its;
1621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t errorflags;
1622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* If no error occurs */
1624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
1625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (errorflags == RESET)
1626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       UART_Receive_IT(huart);
1631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
1632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }  
1634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* If some errors occur */
1636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   cr3its = READ_REG(huart->Instance->CR3);
1637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(   (errorflags != RESET)
1638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
1639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
1640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
1643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_PEF);
1645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
1647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
1650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_FEF);
1653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
1655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
1658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_NEF);
ARM GAS  /tmp/ccinMcHI.s 			page 47


1661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
1663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
1665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
1666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_ORE) != RESET) &&
1667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
1668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_OREF);
1670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
1672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
1675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
1676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
1678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         UART_Receive_IT(huart);
1681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          consider error as blocking */
1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) ||
1686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {  
1688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         UART_EndRxTransfer(huart);
1692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           if(huart->hdmarx != NULL)
1700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           {
1701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /* Set the UART DMA Abort callback : 
1702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
1704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /* Abort DMA RX */
1706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             {
1708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
1710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             }
1711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           }
1712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           else
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           {
1714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /* Call user error callback */
1715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
1716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           }
1717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
ARM GAS  /tmp/ccinMcHI.s 			page 48


1718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         else
1719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Call user error callback */
1721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
1722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Non Blocking error : transfer could go on. 
1727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Error is notified to user through user error callback */
1728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
1729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
1730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
1733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   } /* End if some error occurs */
1735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
1737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(((isrflags & USART_ISR_WUF) != RESET) && ((cr3its & USART_CR3_WUFIE) != RESET))
1738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_WUF);
1740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
1741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
1744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
1745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(((isrflags & USART_ISR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
1749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_Transmit_IT(huart);
1751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
1752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
1755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(((isrflags & USART_ISR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
1756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
1758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
1759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
1765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
ARM GAS  /tmp/ccinMcHI.s 			page 49


1775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
1780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
1790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Rx Transfer completed callback.
1795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
1805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
1810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
1820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief UART error callback.
1825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
ARM GAS  /tmp/ccinMcHI.s 			page 50


1832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
1835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback (UART_HandleTypeDef *huart)
1844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
1850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback (UART_HandleTypeDef *huart)
1859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
1865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
1870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback (UART_HandleTypeDef *huart)
1874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
1880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
1885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
1888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  @brief   UART control functions
ARM GAS  /tmp/ccinMcHI.s 			page 51


1889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
1890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
1891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
1892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
1894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
1895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
1896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
1897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
1898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
1899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
1900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
1901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
1902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
1903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
1904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Enable UART in mute mode (does not mean UART enters mute mode;
1908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
1909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
1913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
1920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
1921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
1929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
1930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
1934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    /* Disable USART mute mode by clearing the MME bit in the CR1 register */
1941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
1942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
ARM GAS  /tmp/ccinMcHI.s 			page 52


1946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
1950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
1951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
1957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
1961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
1965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear TE and RE bits */
1971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
1972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
1973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
1974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
1978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
1985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status.
1987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
1989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear TE and RE bits */
1995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
1996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
1997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
1998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
2001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccinMcHI.s 			page 53


2003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Transmit break characters.
2009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
2015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
2019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Send break characters */
2023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->RQR |= UART_SENDBREAK_REQUEST;
2024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
2028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  *  @brief   UART Peripheral State functions
2040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  *
2041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
2042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ==============================================================================
2043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ==============================================================================
2045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
2046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides functions allowing to :
2047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) Return the UART handle state.
2048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) Return the UART handle error code
2049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
2051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
2052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Return the UART handle state.
2056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *               the configuration information for the specified UART.
2058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL state
2059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
ARM GAS  /tmp/ccinMcHI.s 			page 54


2060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
2063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   temp1 = huart->gState;
2064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   temp2 = huart->RxState;
2065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *               the configuration information for the specified UART.
2073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval UART Error Code
2074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return huart->ErrorCode;
2078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
2089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
2099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
2100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
2101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t usartdiv                   = 0x0000U;
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
2105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
ARM GAS  /tmp/ccinMcHI.s 			page 55


2117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  the UART Word Length, Parity, Mode and oversampling:
2118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set the M bits according to huart->Init.WordLength value
2119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set PCE and PS bits according to huart->Init.Parity value
2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set TE and RE bits according to huart->Init.Mode value
2121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set OVER8 bit according to huart->Init.OverSampling value */
2122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
2123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
2124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    * to huart->Init.StopBits value */
2128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
2129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Configure
2132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    * - UART HardWare Flow Control: set CTSE and RTSE bits according
2133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *   to huart->Init.HwFlowCtl value
2134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    * - one-bit sampling method versus three samples' majority rule according
2135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *   to huart->Init.OneBitSampling */
2136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl | huart->Init.OneBitSampling ;
2137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
2138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
2141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
2143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
2144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (clocksource)
2146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
2149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
2152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
2155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
2158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
2161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default:
2164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         ret = HAL_ERROR;
2165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     brrtemp = usartdiv & 0xFFF0U;
2169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
2170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
2171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
ARM GAS  /tmp/ccinMcHI.s 			page 56


2174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (clocksource)
2175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.B
2178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.B
2181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
2184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Ini
2187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
2190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default:
2193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         ret = HAL_ERROR;
2194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return ret;
2199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
2204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
2208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
2210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
2211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
2213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
2214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
2216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
2217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
2220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
2221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
2223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
2224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure data inversion */
2227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
2228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
2230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
ARM GAS  /tmp/ccinMcHI.s 			page 57


2231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
2234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
2235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
2237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
2238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
2241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
2242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
2244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
2245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
2248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
2249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
2251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
2252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
2255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
2256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
2258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
2259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
2260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
2261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
2262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
2264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
2265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
2269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
2270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
2272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
2273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Check the UART Idle State.
2278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
2282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart = 0U;
2284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
2286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccinMcHI.s 			page 58


2288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
2289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tickstart = HAL_GetTick();
2290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
2292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
2293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Wait until TEACK flag is set */
2295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
2296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Timeout Occured */
2298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
2299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if the Receiver is enabled */
2302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
2303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Wait until REACK flag is set */
2305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
2306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Timeout Occured */
2308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
2309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Initialize the UART State */
2313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
2317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
2324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  Flag Specifies the UART flag to check
2326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  Status Flag status (SET or RESET)
2327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  Tickstart Tick start value
2328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  Timeout Timeout duration
2329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
2332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Wait until flag is set */
2334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
2335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check for the Timeout */
2337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
2338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) > Timeout))
2340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
2343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccinMcHI.s 			page 59


2345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
2346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Process Unlocked */
2349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         __HAL_UNLOCK(huart);
2350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
2351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
2367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 819              		.loc 1 2381 0
 820 0032 1A68     		ldr	r2, [r3]
 821 0034 22F49072 		bic	r2, r2, #288
 822 0038 1A60     		str	r2, [r3]
2382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 823              		.loc 1 2382 0
 824 003a 9A68     		ldr	r2, [r3, #8]
2383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 825              		.loc 1 2385 0
 826 003c 2021     		movs	r1, #32
2382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 827              		.loc 1 2382 0
 828 003e 22F00102 		bic	r2, r2, #1
 829 0042 9A60     		str	r2, [r3, #8]
 830              	.LBE15:
 831              	.LBE14:
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 832              		.loc 1 1192 0
ARM GAS  /tmp/ccinMcHI.s 			page 60


 833 0044 0020     		movs	r0, #0
 834              	.LBB17:
 835              	.LBB16:
 836              		.loc 1 2385 0
 837 0046 84F86A10 		strb	r1, [r4, #106]
 838              	.LBE16:
 839              	.LBE17:
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 840              		.loc 1 1192 0
 841 004a 10BD     		pop	{r4, pc}
 842              	.LVL55:
 843              	.L95:
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 844              		.loc 1 1163 0 discriminator 1
 845 004c 0368     		ldr	r3, [r0]
 846 004e 9A68     		ldr	r2, [r3, #8]
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 847              		.loc 1 1162 0 discriminator 1
 848 0050 1106     		lsls	r1, r2, #24
 849 0052 DBD5     		bpl	.L78
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 850              		.loc 1 1165 0
 851 0054 9A68     		ldr	r2, [r3, #8]
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 852              		.loc 1 1168 0
 853 0056 006E     		ldr	r0, [r0, #96]
 854              	.LVL56:
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 855              		.loc 1 1165 0
 856 0058 22F08002 		bic	r2, r2, #128
 857 005c 9A60     		str	r2, [r3, #8]
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 858              		.loc 1 1168 0
 859 005e 10B1     		cbz	r0, .L79
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 860              		.loc 1 1170 0
 861 0060 FFF7FEFF 		bl	HAL_DMA_Abort
 862              	.LVL57:
 863 0064 2368     		ldr	r3, [r4]
 864              	.L79:
 865              	.LVL58:
 866              	.LBB18:
 867              	.LBB19:
2366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 868              		.loc 1 2366 0
 869 0066 1A68     		ldr	r2, [r3]
2369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 870              		.loc 1 2369 0
 871 0068 2021     		movs	r1, #32
2366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 872              		.loc 1 2366 0
 873 006a 22F0C002 		bic	r2, r2, #192
 874 006e 1A60     		str	r2, [r3]
2369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 875              		.loc 1 2369 0
 876 0070 84F86910 		strb	r1, [r4, #105]
 877 0074 CAE7     		b	.L78
ARM GAS  /tmp/ccinMcHI.s 			page 61


 878              	.LBE19:
 879              	.LBE18:
 880              		.cfi_endproc
 881              	.LFE707:
 883 0076 00BF     		.section	.text.HAL_UART_Abort,"ax",%progbits
 884              		.align	2
 885              		.global	HAL_UART_Abort
 886              		.thumb
 887              		.thumb_func
 889              	HAL_UART_Abort:
 890              	.LFB708:
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 891              		.loc 1 1207 0
 892              		.cfi_startproc
 893              		@ args = 0, pretend = 0, frame = 0
 894              		@ frame_needed = 0, uses_anonymous_args = 0
 895              	.LVL59:
 896 0000 38B5     		push	{r3, r4, r5, lr}
 897              	.LCFI7:
 898              		.cfi_def_cfa_offset 16
 899              		.cfi_offset 3, -16
 900              		.cfi_offset 4, -12
 901              		.cfi_offset 5, -8
 902              		.cfi_offset 14, -4
1209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 903              		.loc 1 1209 0
 904 0002 0368     		ldr	r3, [r0]
 905 0004 1A68     		ldr	r2, [r3]
 906 0006 22F4F072 		bic	r2, r2, #480
 907 000a 1A60     		str	r2, [r3]
1210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 908              		.loc 1 1210 0
 909 000c 9A68     		ldr	r2, [r3, #8]
 910 000e 22F00102 		bic	r2, r2, #1
 911 0012 9A60     		str	r2, [r3, #8]
1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 912              		.loc 1 1213 0
 913 0014 9A68     		ldr	r2, [r3, #8]
 914 0016 1106     		lsls	r1, r2, #24
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 915              		.loc 1 1207 0
 916 0018 0446     		mov	r4, r0
1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 917              		.loc 1 1213 0
 918 001a 0AD5     		bpl	.L98
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 919              		.loc 1 1215 0
 920 001c 9A68     		ldr	r2, [r3, #8]
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 921              		.loc 1 1218 0
 922 001e 006E     		ldr	r0, [r0, #96]
 923              	.LVL60:
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 924              		.loc 1 1215 0
 925 0020 22F08002 		bic	r2, r2, #128
 926 0024 9A60     		str	r2, [r3, #8]
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
ARM GAS  /tmp/ccinMcHI.s 			page 62


 927              		.loc 1 1218 0
 928 0026 20B1     		cbz	r0, .L98
1222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 929              		.loc 1 1222 0
 930 0028 0023     		movs	r3, #0
 931 002a 4363     		str	r3, [r0, #52]
1224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 932              		.loc 1 1224 0
 933 002c FFF7FEFF 		bl	HAL_DMA_Abort
 934              	.LVL61:
 935 0030 2368     		ldr	r3, [r4]
 936              	.L98:
1229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 937              		.loc 1 1229 0
 938 0032 9A68     		ldr	r2, [r3, #8]
 939 0034 5206     		lsls	r2, r2, #25
 940 0036 0AD5     		bpl	.L99
1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 941              		.loc 1 1231 0
 942 0038 9A68     		ldr	r2, [r3, #8]
1234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 943              		.loc 1 1234 0
 944 003a 606E     		ldr	r0, [r4, #100]
1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 945              		.loc 1 1231 0
 946 003c 22F04002 		bic	r2, r2, #64
 947 0040 9A60     		str	r2, [r3, #8]
1234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 948              		.loc 1 1234 0
 949 0042 20B1     		cbz	r0, .L99
1238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 950              		.loc 1 1238 0
 951 0044 0023     		movs	r3, #0
 952 0046 4363     		str	r3, [r0, #52]
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 953              		.loc 1 1240 0
 954 0048 FFF7FEFF 		bl	HAL_DMA_Abort
 955              	.LVL62:
 956 004c 2368     		ldr	r3, [r4]
 957              	.L99:
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U; 
 958              		.loc 1 1245 0
 959 004e 0022     		movs	r2, #0
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 960              		.loc 1 1252 0
 961 0050 2021     		movs	r1, #32
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 962              		.loc 1 1249 0
 963 0052 0F25     		movs	r5, #15
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U; 
 964              		.loc 1 1245 0
 965 0054 A4F85220 		strh	r2, [r4, #82]	@ movhi
1259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 966              		.loc 1 1259 0
 967 0058 1046     		mov	r0, r2
1246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 968              		.loc 1 1246 0
ARM GAS  /tmp/ccinMcHI.s 			page 63


 969 005a A4F85A20 		strh	r2, [r4, #90]	@ movhi
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 970              		.loc 1 1249 0
 971 005e 1D62     		str	r5, [r3, #32]
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 972              		.loc 1 1252 0
 973 0060 84F86910 		strb	r1, [r4, #105]
1253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 974              		.loc 1 1253 0
 975 0064 84F86A10 		strb	r1, [r4, #106]
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 976              		.loc 1 1256 0
 977 0068 E266     		str	r2, [r4, #108]
1259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 978              		.loc 1 1259 0
 979 006a 38BD     		pop	{r3, r4, r5, pc}
 980              		.cfi_endproc
 981              	.LFE708:
 983              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 984              		.align	2
 985              		.global	HAL_UART_AbortTransmit
 986              		.thumb
 987              		.thumb_func
 989              	HAL_UART_AbortTransmit:
 990              	.LFB709:
1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 991              		.loc 1 1274 0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 0
 994              		@ frame_needed = 0, uses_anonymous_args = 0
 995              	.LVL63:
1276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 996              		.loc 1 1276 0
 997 0000 0368     		ldr	r3, [r0]
 998 0002 1A68     		ldr	r2, [r3]
 999 0004 22F0C002 		bic	r2, r2, #192
1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 1000              		.loc 1 1274 0
 1001 0008 10B5     		push	{r4, lr}
 1002              	.LCFI8:
 1003              		.cfi_def_cfa_offset 8
 1004              		.cfi_offset 4, -8
 1005              		.cfi_offset 14, -4
1276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1006              		.loc 1 1276 0
 1007 000a 1A60     		str	r2, [r3]
1279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1008              		.loc 1 1279 0
 1009 000c 9A68     		ldr	r2, [r3, #8]
 1010 000e 1206     		lsls	r2, r2, #24
1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 1011              		.loc 1 1274 0
 1012 0010 0446     		mov	r4, r0
1279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1013              		.loc 1 1279 0
 1014 0012 09D5     		bpl	.L115
1281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccinMcHI.s 			page 64


 1015              		.loc 1 1281 0
 1016 0014 9A68     		ldr	r2, [r3, #8]
1284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1017              		.loc 1 1284 0
 1018 0016 006E     		ldr	r0, [r0, #96]
 1019              	.LVL64:
1281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1020              		.loc 1 1281 0
 1021 0018 22F08002 		bic	r2, r2, #128
 1022 001c 9A60     		str	r2, [r3, #8]
1284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1023              		.loc 1 1284 0
 1024 001e 18B1     		cbz	r0, .L115
1288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1025              		.loc 1 1288 0
 1026 0020 0023     		movs	r3, #0
 1027 0022 4363     		str	r3, [r0, #52]
1290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1028              		.loc 1 1290 0
 1029 0024 FFF7FEFF 		bl	HAL_DMA_Abort
 1030              	.LVL65:
 1031              	.L115:
1295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1032              		.loc 1 1295 0
 1033 0028 0020     		movs	r0, #0
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1034              		.loc 1 1298 0
 1035 002a 2023     		movs	r3, #32
1295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1036              		.loc 1 1295 0
 1037 002c A4F85200 		strh	r0, [r4, #82]	@ movhi
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1038              		.loc 1 1298 0
 1039 0030 84F86930 		strb	r3, [r4, #105]
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1040              		.loc 1 1301 0
 1041 0034 10BD     		pop	{r4, pc}
 1042              		.cfi_endproc
 1043              	.LFE709:
 1045 0036 00BF     		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 1046              		.align	2
 1047              		.global	HAL_UART_AbortReceive
 1048              		.thumb
 1049              		.thumb_func
 1051              	HAL_UART_AbortReceive:
 1052              	.LFB710:
1316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1053              		.loc 1 1316 0
 1054              		.cfi_startproc
 1055              		@ args = 0, pretend = 0, frame = 0
 1056              		@ frame_needed = 0, uses_anonymous_args = 0
 1057              	.LVL66:
1318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1058              		.loc 1 1318 0
 1059 0000 0368     		ldr	r3, [r0]
 1060 0002 1A68     		ldr	r2, [r3]
 1061 0004 22F49072 		bic	r2, r2, #288
ARM GAS  /tmp/ccinMcHI.s 			page 65


1316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1062              		.loc 1 1316 0
 1063 0008 10B5     		push	{r4, lr}
 1064              	.LCFI9:
 1065              		.cfi_def_cfa_offset 8
 1066              		.cfi_offset 4, -8
 1067              		.cfi_offset 14, -4
1318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1068              		.loc 1 1318 0
 1069 000a 1A60     		str	r2, [r3]
1319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1070              		.loc 1 1319 0
 1071 000c 9A68     		ldr	r2, [r3, #8]
 1072 000e 22F00102 		bic	r2, r2, #1
 1073 0012 9A60     		str	r2, [r3, #8]
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1074              		.loc 1 1322 0
 1075 0014 9A68     		ldr	r2, [r3, #8]
 1076 0016 5206     		lsls	r2, r2, #25
1316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1077              		.loc 1 1316 0
 1078 0018 0446     		mov	r4, r0
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1079              		.loc 1 1322 0
 1080 001a 0AD5     		bpl	.L122
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1081              		.loc 1 1324 0
 1082 001c 9A68     		ldr	r2, [r3, #8]
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1083              		.loc 1 1327 0
 1084 001e 406E     		ldr	r0, [r0, #100]
 1085              	.LVL67:
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1086              		.loc 1 1324 0
 1087 0020 22F04002 		bic	r2, r2, #64
 1088 0024 9A60     		str	r2, [r3, #8]
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1089              		.loc 1 1327 0
 1090 0026 20B1     		cbz	r0, .L122
1331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1091              		.loc 1 1331 0
 1092 0028 0023     		movs	r3, #0
 1093 002a 4363     		str	r3, [r0, #52]
1333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1094              		.loc 1 1333 0
 1095 002c FFF7FEFF 		bl	HAL_DMA_Abort
 1096              	.LVL68:
 1097 0030 2368     		ldr	r3, [r4]
 1098              	.L122:
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1099              		.loc 1 1338 0
 1100 0032 0020     		movs	r0, #0
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1101              		.loc 1 1341 0
 1102 0034 0F21     		movs	r1, #15
1344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1103              		.loc 1 1344 0
ARM GAS  /tmp/ccinMcHI.s 			page 66


 1104 0036 2022     		movs	r2, #32
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1105              		.loc 1 1338 0
 1106 0038 A4F85A00 		strh	r0, [r4, #90]	@ movhi
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1107              		.loc 1 1341 0
 1108 003c 1962     		str	r1, [r3, #32]
1344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1109              		.loc 1 1344 0
 1110 003e 84F86A20 		strb	r2, [r4, #106]
1347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1111              		.loc 1 1347 0
 1112 0042 10BD     		pop	{r4, pc}
 1113              		.cfi_endproc
 1114              	.LFE710:
 1116              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1117              		.align	2
 1118              		.weak	HAL_UART_TxCpltCallback
 1119              		.thumb
 1120              		.thumb_func
 1122              	HAL_UART_TxCpltCallback:
 1123              	.LFB715:
1769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1124              		.loc 1 1769 0
 1125              		.cfi_startproc
 1126              		@ args = 0, pretend = 0, frame = 0
 1127              		@ frame_needed = 0, uses_anonymous_args = 0
 1128              		@ link register save eliminated.
 1129              	.LVL69:
 1130 0000 7047     		bx	lr
 1131              		.cfi_endproc
 1132              	.LFE715:
 1134 0002 00BF     		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 1135              		.align	2
 1136              		.thumb
 1137              		.thumb_func
 1139              	UART_DMATransmitCplt:
 1140              	.LFB737:
2386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
2391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1141              		.loc 1 2395 0
 1142              		.cfi_startproc
 1143              		@ args = 0, pretend = 0, frame = 0
 1144              		@ frame_needed = 0, uses_anonymous_args = 0
 1145              	.LVL70:
 1146              		.loc 1 2395 0
 1147 0000 08B5     		push	{r3, lr}
 1148              	.LCFI10:
 1149              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccinMcHI.s 			page 67


 1150              		.cfi_offset 3, -8
 1151              		.cfi_offset 14, -4
2396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Normal mode */
2399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 1152              		.loc 1 2399 0
 1153 0002 0368     		ldr	r3, [r0]
2396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1154              		.loc 1 2396 0
 1155 0004 406A     		ldr	r0, [r0, #36]
 1156              	.LVL71:
 1157              		.loc 1 2399 0
 1158 0006 1B68     		ldr	r3, [r3]
 1159 0008 13F02003 		ands	r3, r3, #32
 1160 000c 0BD1     		bne	.L132
2400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U;
2402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
2404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
2405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1161              		.loc 1 2405 0
 1162 000e 0268     		ldr	r2, [r0]
2401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1163              		.loc 1 2401 0
 1164 0010 A0F85230 		strh	r3, [r0, #82]	@ movhi
 1165              		.loc 1 2405 0
 1166 0014 9368     		ldr	r3, [r2, #8]
 1167 0016 23F08003 		bic	r3, r3, #128
 1168 001a 9360     		str	r3, [r2, #8]
2406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 1169              		.loc 1 2408 0
 1170 001c 1368     		ldr	r3, [r2]
 1171 001e 43F04003 		orr	r3, r3, #64
 1172 0022 1360     		str	r3, [r2]
 1173 0024 08BD     		pop	{r3, pc}
 1174              	.L132:
2409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Circular mode */
2411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
 1175              		.loc 1 2413 0
 1176 0026 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1177              	.LVL72:
 1178 002a 08BD     		pop	{r3, pc}
 1179              		.cfi_endproc
 1180              	.LFE737:
 1182              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 1183              		.align	2
 1184              		.weak	HAL_UART_TxHalfCpltCallback
 1185              		.thumb
 1186              		.thumb_func
 1188              	HAL_UART_TxHalfCpltCallback:
ARM GAS  /tmp/ccinMcHI.s 			page 68


 1189              	.LFB716:
1784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1190              		.loc 1 1784 0
 1191              		.cfi_startproc
 1192              		@ args = 0, pretend = 0, frame = 0
 1193              		@ frame_needed = 0, uses_anonymous_args = 0
 1194              		@ link register save eliminated.
 1195              	.LVL73:
 1196 0000 7047     		bx	lr
 1197              		.cfi_endproc
 1198              	.LFE716:
 1200 0002 00BF     		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 1201              		.align	2
 1202              		.thumb
 1203              		.thumb_func
 1205              	UART_DMATxHalfCplt:
 1206              	.LFB738:
2414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
2420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1207              		.loc 1 2424 0
 1208              		.cfi_startproc
 1209              		@ args = 0, pretend = 0, frame = 0
 1210              		@ frame_needed = 0, uses_anonymous_args = 0
 1211              	.LVL74:
 1212              		.loc 1 2424 0
 1213 0000 08B5     		push	{r3, lr}
 1214              	.LCFI11:
 1215              		.cfi_def_cfa_offset 8
 1216              		.cfi_offset 3, -8
 1217              		.cfi_offset 14, -4
2425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 1218              		.loc 1 2427 0
 1219 0002 406A     		ldr	r0, [r0, #36]
 1220              	.LVL75:
 1221 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 1222              	.LVL76:
 1223 0008 08BD     		pop	{r3, pc}
 1224              		.cfi_endproc
 1225              	.LFE738:
 1227 000a 00BF     		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1228              		.align	2
 1229              		.weak	HAL_UART_RxCpltCallback
 1230              		.thumb
 1231              		.thumb_func
 1233              	HAL_UART_RxCpltCallback:
 1234              	.LFB717:
ARM GAS  /tmp/ccinMcHI.s 			page 69


1799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1235              		.loc 1 1799 0
 1236              		.cfi_startproc
 1237              		@ args = 0, pretend = 0, frame = 0
 1238              		@ frame_needed = 0, uses_anonymous_args = 0
 1239              		@ link register save eliminated.
 1240              	.LVL77:
 1241 0000 7047     		bx	lr
 1242              		.cfi_endproc
 1243              	.LFE717:
 1245 0002 00BF     		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 1246              		.align	2
 1247              		.thumb
 1248              		.thumb_func
 1250              	UART_DMAReceiveCplt:
 1251              	.LFB739:
2428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
2432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1252              		.loc 1 2436 0
 1253              		.cfi_startproc
 1254              		@ args = 0, pretend = 0, frame = 0
 1255              		@ frame_needed = 0, uses_anonymous_args = 0
 1256              	.LVL78:
 1257              		.loc 1 2436 0
 1258 0000 08B5     		push	{r3, lr}
 1259              	.LCFI12:
 1260              		.cfi_def_cfa_offset 8
 1261              		.cfi_offset 3, -8
 1262              		.cfi_offset 14, -4
2437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Normal mode */
2440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 1263              		.loc 1 2440 0
 1264 0002 0368     		ldr	r3, [r0]
2437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1265              		.loc 1 2437 0
 1266 0004 406A     		ldr	r0, [r0, #36]
 1267              	.LVL79:
 1268              		.loc 1 2440 0
 1269 0006 1B68     		ldr	r3, [r3]
 1270 0008 13F02003 		ands	r3, r3, #32
 1271 000c 11D1     		bne	.L140
2441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
2443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1272              		.loc 1 2445 0
 1273 000e 0268     		ldr	r2, [r0]
ARM GAS  /tmp/ccinMcHI.s 			page 70


2442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1274              		.loc 1 2442 0
 1275 0010 A0F85A30 		strh	r3, [r0, #90]	@ movhi
 1276              		.loc 1 2445 0
 1277 0014 1368     		ldr	r3, [r2]
 1278 0016 23F48073 		bic	r3, r3, #256
 1279 001a 1360     		str	r3, [r2]
2446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1280              		.loc 1 2446 0
 1281 001c 9368     		ldr	r3, [r2, #8]
 1282 001e 23F00103 		bic	r3, r3, #1
 1283 0022 9360     		str	r3, [r2, #8]
2447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
2450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1284              		.loc 1 2450 0
 1285 0024 9368     		ldr	r3, [r2, #8]
2451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1286              		.loc 1 2453 0
 1287 0026 2021     		movs	r1, #32
2450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1288              		.loc 1 2450 0
 1289 0028 23F04003 		bic	r3, r3, #64
 1290 002c 9360     		str	r3, [r2, #8]
 1291              		.loc 1 2453 0
 1292 002e 80F86A10 		strb	r1, [r0, #106]
 1293              	.L140:
2454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 1294              		.loc 1 2456 0
 1295 0032 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1296              	.LVL80:
 1297 0036 08BD     		pop	{r3, pc}
 1298              		.cfi_endproc
 1299              	.LFE739:
 1301              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 1302              		.align	2
 1303              		.weak	HAL_UART_RxHalfCpltCallback
 1304              		.thumb
 1305              		.thumb_func
 1307              	HAL_UART_RxHalfCpltCallback:
 1308              	.LFB718:
1814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1309              		.loc 1 1814 0
 1310              		.cfi_startproc
 1311              		@ args = 0, pretend = 0, frame = 0
 1312              		@ frame_needed = 0, uses_anonymous_args = 0
 1313              		@ link register save eliminated.
 1314              	.LVL81:
 1315 0000 7047     		bx	lr
 1316              		.cfi_endproc
 1317              	.LFE718:
 1319 0002 00BF     		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
ARM GAS  /tmp/ccinMcHI.s 			page 71


 1320              		.align	2
 1321              		.thumb
 1322              		.thumb_func
 1324              	UART_DMARxHalfCplt:
 1325              	.LFB740:
2457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
2461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1326              		.loc 1 2465 0
 1327              		.cfi_startproc
 1328              		@ args = 0, pretend = 0, frame = 0
 1329              		@ frame_needed = 0, uses_anonymous_args = 0
 1330              	.LVL82:
 1331              		.loc 1 2465 0
 1332 0000 08B5     		push	{r3, lr}
 1333              	.LCFI13:
 1334              		.cfi_def_cfa_offset 8
 1335              		.cfi_offset 3, -8
 1336              		.cfi_offset 14, -4
2466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
 1337              		.loc 1 2468 0
 1338 0002 406A     		ldr	r0, [r0, #36]
 1339              	.LVL83:
 1340 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 1341              	.LVL84:
 1342 0008 08BD     		pop	{r3, pc}
 1343              		.cfi_endproc
 1344              	.LFE740:
 1346 000a 00BF     		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 1347              		.align	2
 1348              		.weak	HAL_UART_ErrorCallback
 1349              		.thumb
 1350              		.thumb_func
 1352              	HAL_UART_ErrorCallback:
 1353              	.LFB719:
1829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1354              		.loc 1 1829 0
 1355              		.cfi_startproc
 1356              		@ args = 0, pretend = 0, frame = 0
 1357              		@ frame_needed = 0, uses_anonymous_args = 0
 1358              		@ link register save eliminated.
 1359              	.LVL85:
 1360 0000 7047     		bx	lr
 1361              		.cfi_endproc
 1362              	.LFE719:
 1364 0002 00BF     		.section	.text.UART_DMAError,"ax",%progbits
 1365              		.align	2
 1366              		.thumb
 1367              		.thumb_func
ARM GAS  /tmp/ccinMcHI.s 			page 72


 1369              	UART_DMAError:
 1370              	.LFB741:
2469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART communication error callback.
2473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1371              		.loc 1 2477 0
 1372              		.cfi_startproc
 1373              		@ args = 0, pretend = 0, frame = 0
 1374              		@ frame_needed = 0, uses_anonymous_args = 0
 1375              	.LVL86:
2478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1376              		.loc 1 2478 0
 1377 0000 406A     		ldr	r0, [r0, #36]
 1378              	.LVL87:
2477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1379              		.loc 1 2477 0
 1380 0002 08B5     		push	{r3, lr}
 1381              	.LCFI14:
 1382              		.cfi_def_cfa_offset 8
 1383              		.cfi_offset 3, -8
 1384              		.cfi_offset 14, -4
2479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (  (huart->gState == HAL_UART_STATE_BUSY_TX)
 1385              		.loc 1 2481 0
 1386 0004 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 1387 0008 212B     		cmp	r3, #33
 1388 000a 1DD0     		beq	.L156
 1389              	.L147:
2482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) )
2483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U;
2485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTxTransfer(huart);
2486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (  (huart->RxState == HAL_UART_STATE_BUSY_RX)
 1390              		.loc 1 2489 0
 1391 000c 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 1392 0010 222B     		cmp	r3, #34
 1393 0012 06D0     		beq	.L157
 1394              	.L148:
2490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) )
2491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
2493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndRxTransfer(huart);
2494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 1395              		.loc 1 2496 0
 1396 0014 C36E     		ldr	r3, [r0, #108]
ARM GAS  /tmp/ccinMcHI.s 			page 73


 1397 0016 43F01003 		orr	r3, r3, #16
 1398 001a C366     		str	r3, [r0, #108]
2497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 1399              		.loc 1 2497 0
 1400 001c FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1401              	.LVL88:
 1402 0020 08BD     		pop	{r3, pc}
 1403              	.LVL89:
 1404              	.L157:
2490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) )
 1405              		.loc 1 2490 0
 1406 0022 0368     		ldr	r3, [r0]
 1407 0024 9A68     		ldr	r2, [r3, #8]
 1408 0026 5206     		lsls	r2, r2, #25
 1409 0028 F4D5     		bpl	.L148
2492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 1410              		.loc 1 2492 0
 1411 002a 0022     		movs	r2, #0
 1412 002c A0F85A20 		strh	r2, [r0, #90]	@ movhi
 1413              	.LVL90:
 1414              	.LBB20:
 1415              	.LBB21:
2381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1416              		.loc 1 2381 0
 1417 0030 1A68     		ldr	r2, [r3]
 1418 0032 22F49072 		bic	r2, r2, #288
 1419 0036 1A60     		str	r2, [r3]
2382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1420              		.loc 1 2382 0
 1421 0038 9A68     		ldr	r2, [r3, #8]
2385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1422              		.loc 1 2385 0
 1423 003a 2021     		movs	r1, #32
2382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1424              		.loc 1 2382 0
 1425 003c 22F00102 		bic	r2, r2, #1
 1426 0040 9A60     		str	r2, [r3, #8]
2385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1427              		.loc 1 2385 0
 1428 0042 80F86A10 		strb	r1, [r0, #106]
 1429 0046 E5E7     		b	.L148
 1430              	.LVL91:
 1431              	.L156:
 1432              	.LBE21:
 1433              	.LBE20:
2482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1434              		.loc 1 2482 0
 1435 0048 0368     		ldr	r3, [r0]
 1436 004a 9A68     		ldr	r2, [r3, #8]
 1437 004c 1106     		lsls	r1, r2, #24
 1438 004e DDD5     		bpl	.L147
2484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 1439              		.loc 1 2484 0
 1440 0050 0022     		movs	r2, #0
 1441 0052 A0F85220 		strh	r2, [r0, #82]	@ movhi
 1442              	.LVL92:
 1443              	.LBB22:
ARM GAS  /tmp/ccinMcHI.s 			page 74


 1444              	.LBB23:
2366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1445              		.loc 1 2366 0
 1446 0056 1A68     		ldr	r2, [r3]
2369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1447              		.loc 1 2369 0
 1448 0058 2021     		movs	r1, #32
2366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1449              		.loc 1 2366 0
 1450 005a 22F0C002 		bic	r2, r2, #192
 1451 005e 1A60     		str	r2, [r3]
2369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1452              		.loc 1 2369 0
 1453 0060 80F86910 		strb	r1, [r0, #105]
 1454 0064 D2E7     		b	.L147
 1455              	.LBE23:
 1456              	.LBE22:
 1457              		.cfi_endproc
 1458              	.LFE741:
 1460 0066 00BF     		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 1461              		.align	2
 1462              		.thumb
 1463              		.thumb_func
 1465              	UART_DMAAbortOnError:
 1466              	.LFB742:
2498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1467              		.loc 1 2507 0
 1468              		.cfi_startproc
 1469              		@ args = 0, pretend = 0, frame = 0
 1470              		@ frame_needed = 0, uses_anonymous_args = 0
 1471              	.LVL93:
 1472 0000 08B5     		push	{r3, lr}
 1473              	.LCFI15:
 1474              		.cfi_def_cfa_offset 8
 1475              		.cfi_offset 3, -8
 1476              		.cfi_offset 14, -4
2508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1477              		.loc 1 2508 0
 1478 0002 436A     		ldr	r3, [r0, #36]
 1479              	.LVL94:
2509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1480              		.loc 1 2509 0
 1481 0004 0022     		movs	r2, #0
 1482 0006 A3F85A20 		strh	r2, [r3, #90]	@ movhi
2510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
2511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 1483              		.loc 1 2512 0
ARM GAS  /tmp/ccinMcHI.s 			page 75


 1484 000a 1846     		mov	r0, r3
 1485              	.LVL95:
2510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
 1486              		.loc 1 2510 0
 1487 000c A3F85220 		strh	r2, [r3, #82]	@ movhi
 1488              		.loc 1 2512 0
 1489 0010 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1490              	.LVL96:
 1491 0014 08BD     		pop	{r3, pc}
 1492              		.cfi_endproc
 1493              	.LFE742:
 1495 0016 00BF     		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 1496              		.align	2
 1497              		.weak	HAL_UART_AbortCpltCallback
 1498              		.thumb
 1499              		.thumb_func
 1501              	HAL_UART_AbortCpltCallback:
 1502              	.LFB720:
1844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1503              		.loc 1 1844 0
 1504              		.cfi_startproc
 1505              		@ args = 0, pretend = 0, frame = 0
 1506              		@ frame_needed = 0, uses_anonymous_args = 0
 1507              		@ link register save eliminated.
 1508              	.LVL97:
 1509 0000 7047     		bx	lr
 1510              		.cfi_endproc
 1511              	.LFE720:
 1513 0002 00BF     		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 1514              		.align	2
 1515              		.global	HAL_UART_Abort_IT
 1516              		.thumb
 1517              		.thumb_func
 1519              	HAL_UART_Abort_IT:
 1520              	.LFB711:
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 1521              		.loc 1 1364 0
 1522              		.cfi_startproc
 1523              		@ args = 0, pretend = 0, frame = 0
 1524              		@ frame_needed = 0, uses_anonymous_args = 0
 1525              	.LVL98:
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 1526              		.loc 1 1364 0
 1527 0000 38B5     		push	{r3, r4, r5, lr}
 1528              	.LCFI16:
 1529              		.cfi_def_cfa_offset 16
 1530              		.cfi_offset 3, -16
 1531              		.cfi_offset 4, -12
 1532              		.cfi_offset 5, -8
 1533              		.cfi_offset 14, -4
1368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1534              		.loc 1 1368 0
 1535 0002 0368     		ldr	r3, [r0]
 1536 0004 1A68     		ldr	r2, [r3]
 1537 0006 22F4F072 		bic	r2, r2, #480
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 1538              		.loc 1 1364 0
ARM GAS  /tmp/ccinMcHI.s 			page 76


 1539 000a 0446     		mov	r4, r0
1374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1540              		.loc 1 1374 0
 1541 000c 006E     		ldr	r0, [r0, #96]
 1542              	.LVL99:
1368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1543              		.loc 1 1368 0
 1544 000e 1A60     		str	r2, [r3]
1369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1545              		.loc 1 1369 0
 1546 0010 9A68     		ldr	r2, [r3, #8]
 1547 0012 22F00102 		bic	r2, r2, #1
 1548 0016 9A60     		str	r2, [r3, #8]
1374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1549              		.loc 1 1374 0
 1550 0018 28B1     		cbz	r0, .L162
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1551              		.loc 1 1378 0
 1552 001a 9A68     		ldr	r2, [r3, #8]
 1553 001c 12F08002 		ands	r2, r2, #128
1380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1554              		.loc 1 1380 0
 1555 0020 18BF     		it	ne
 1556 0022 244A     		ldrne	r2, .L190
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1557              		.loc 1 1384 0
 1558 0024 4263     		str	r2, [r0, #52]
 1559              	.L162:
1388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1560              		.loc 1 1388 0
 1561 0026 616E     		ldr	r1, [r4, #100]
 1562 0028 29B1     		cbz	r1, .L164
1392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1563              		.loc 1 1392 0
 1564 002a 9A68     		ldr	r2, [r3, #8]
 1565 002c 12F04002 		ands	r2, r2, #64
1394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1566              		.loc 1 1394 0
 1567 0030 18BF     		it	ne
 1568 0032 214A     		ldrne	r2, .L190+4
1398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1569              		.loc 1 1398 0
 1570 0034 4A63     		str	r2, [r1, #52]
 1571              	.L164:
1403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1572              		.loc 1 1403 0
 1573 0036 9A68     		ldr	r2, [r3, #8]
 1574 0038 1506     		lsls	r5, r2, #24
 1575 003a 17D5     		bpl	.L166
1406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1576              		.loc 1 1406 0
 1577 003c 9A68     		ldr	r2, [r3, #8]
 1578 003e 22F08002 		bic	r2, r2, #128
 1579 0042 9A60     		str	r2, [r3, #8]
1409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1580              		.loc 1 1409 0
 1581 0044 90B1     		cbz	r0, .L166
ARM GAS  /tmp/ccinMcHI.s 			page 77


1415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1582              		.loc 1 1415 0
 1583 0046 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1584              	.LVL100:
 1585 004a 58B9     		cbnz	r0, .L189
 1586              	.LVL101:
1427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1587              		.loc 1 1427 0
 1588 004c 2368     		ldr	r3, [r4]
 1589 004e 9A68     		ldr	r2, [r3, #8]
 1590 0050 5206     		lsls	r2, r2, #25
 1591 0052 05D5     		bpl	.L187
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1592              		.loc 1 1429 0
 1593 0054 9A68     		ldr	r2, [r3, #8]
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1594              		.loc 1 1432 0
 1595 0056 606E     		ldr	r0, [r4, #100]
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1596              		.loc 1 1429 0
 1597 0058 22F04002 		bic	r2, r2, #64
 1598 005c 9A60     		str	r2, [r3, #8]
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1599              		.loc 1 1432 0
 1600 005e 70B9     		cbnz	r0, .L174
 1601              	.LVL102:
 1602              	.L187:
1472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1603              		.loc 1 1472 0
 1604 0060 0020     		movs	r0, #0
 1605 0062 38BD     		pop	{r3, r4, r5, pc}
 1606              	.LVL103:
 1607              	.L189:
1417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 1608              		.loc 1 1417 0
 1609 0064 226E     		ldr	r2, [r4, #96]
 1610 0066 2368     		ldr	r3, [r4]
 1611 0068 0021     		movs	r1, #0
 1612 006a 5163     		str	r1, [r2, #52]
 1613              	.L166:
1427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1614              		.loc 1 1427 0
 1615 006c 9A68     		ldr	r2, [r3, #8]
 1616 006e 5106     		lsls	r1, r2, #25
 1617 0070 0DD5     		bpl	.L171
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1618              		.loc 1 1429 0
 1619 0072 9A68     		ldr	r2, [r3, #8]
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1620              		.loc 1 1432 0
 1621 0074 606E     		ldr	r0, [r4, #100]
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1622              		.loc 1 1429 0
 1623 0076 22F04002 		bic	r2, r2, #64
 1624 007a 9A60     		str	r2, [r3, #8]
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1625              		.loc 1 1432 0
ARM GAS  /tmp/ccinMcHI.s 			page 78


 1626 007c 38B1     		cbz	r0, .L171
 1627              	.LVL104:
 1628              	.L174:
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1629              		.loc 1 1438 0
 1630 007e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1631              	.LVL105:
 1632 0082 0028     		cmp	r0, #0
 1633 0084 ECD0     		beq	.L187
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 1U;
 1634              		.loc 1 1440 0
 1635 0086 626E     		ldr	r2, [r4, #100]
 1636 0088 2368     		ldr	r3, [r4]
 1637 008a 0021     		movs	r1, #0
 1638 008c 5163     		str	r1, [r2, #52]
 1639              	.LVL106:
 1640              	.L171:
1454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
 1641              		.loc 1 1454 0
 1642 008e 0022     		movs	r2, #0
1464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1643              		.loc 1 1464 0
 1644 0090 2021     		movs	r1, #32
1461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1645              		.loc 1 1461 0
 1646 0092 0F25     		movs	r5, #15
1454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
 1647              		.loc 1 1454 0
 1648 0094 A4F85220 		strh	r2, [r4, #82]	@ movhi
1468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1649              		.loc 1 1468 0
 1650 0098 2046     		mov	r0, r4
1455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1651              		.loc 1 1455 0
 1652 009a A4F85A20 		strh	r2, [r4, #90]	@ movhi
1458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1653              		.loc 1 1458 0
 1654 009e E266     		str	r2, [r4, #108]
1461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1655              		.loc 1 1461 0
 1656 00a0 1D62     		str	r5, [r3, #32]
1464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1657              		.loc 1 1464 0
 1658 00a2 84F86910 		strb	r1, [r4, #105]
1465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1659              		.loc 1 1465 0
 1660 00a6 84F86A10 		strb	r1, [r4, #106]
1468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1661              		.loc 1 1468 0
 1662 00aa FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 1663              	.LVL107:
1472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1664              		.loc 1 1472 0
 1665 00ae 0020     		movs	r0, #0
 1666 00b0 38BD     		pop	{r3, r4, r5, pc}
 1667              	.LVL108:
 1668              	.L191:
ARM GAS  /tmp/ccinMcHI.s 			page 79


 1669 00b2 00BF     		.align	2
 1670              	.L190:
 1671 00b4 00000000 		.word	UART_DMATxAbortCallback
 1672 00b8 00000000 		.word	UART_DMARxAbortCallback
 1673              		.cfi_endproc
 1674              	.LFE711:
 1676              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 1677              		.align	2
 1678              		.thumb
 1679              		.thumb_func
 1681              	UART_DMARxAbortCallback:
 1682              	.LFB744:
2513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
2526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
2528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->hdmarx != NULL)
2531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx->XferAbortCallback != NULL)
2533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
2535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
2540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
2541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset errorCode */
2543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
2547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
2553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
ARM GAS  /tmp/ccinMcHI.s 			page 80


2558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1683              		.loc 1 2566 0
 1684              		.cfi_startproc
 1685              		@ args = 0, pretend = 0, frame = 0
 1686              		@ frame_needed = 0, uses_anonymous_args = 0
 1687              	.LVL109:
 1688 0000 38B5     		push	{r3, r4, r5, lr}
 1689              	.LCFI17:
 1690              		.cfi_def_cfa_offset 16
 1691              		.cfi_offset 3, -16
 1692              		.cfi_offset 4, -12
 1693              		.cfi_offset 5, -8
 1694              		.cfi_offset 14, -4
2567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 1695              		.loc 1 2567 0
 1696 0002 436A     		ldr	r3, [r0, #36]
 1697              	.LVL110:
2568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 1698              		.loc 1 2569 0
 1699 0004 596E     		ldr	r1, [r3, #100]
2570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->hdmatx != NULL)
 1700              		.loc 1 2572 0
 1701 0006 1A6E     		ldr	r2, [r3, #96]
2569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1702              		.loc 1 2569 0
 1703 0008 0020     		movs	r0, #0
 1704              	.LVL111:
 1705 000a 4863     		str	r0, [r1, #52]
 1706              		.loc 1 2572 0
 1707 000c 12B1     		cbz	r2, .L193
2573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx->XferAbortCallback != NULL)
 1708              		.loc 1 2574 0
 1709 000e 526B     		ldr	r2, [r2, #52]
 1710 0010 02B1     		cbz	r2, .L193
 1711 0012 38BD     		pop	{r3, r4, r5, pc}
 1712              	.LVL112:
 1713              	.L193:
2575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
2577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
2582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
ARM GAS  /tmp/ccinMcHI.s 			page 81


2583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset errorCode */
2585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 1714              		.loc 1 2588 0
 1715 0014 1C68     		ldr	r4, [r3]
2581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1716              		.loc 1 2581 0
 1717 0016 0022     		movs	r2, #0
2589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 1718              		.loc 1 2591 0
 1719 0018 2021     		movs	r1, #32
2588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1720              		.loc 1 2588 0
 1721 001a 0F25     		movs	r5, #15
2581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1722              		.loc 1 2581 0
 1723 001c A3F85220 		strh	r2, [r3, #82]	@ movhi
2592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
2595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 1724              		.loc 1 2595 0
 1725 0020 1846     		mov	r0, r3
2582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1726              		.loc 1 2582 0
 1727 0022 A3F85A20 		strh	r2, [r3, #90]	@ movhi
2585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1728              		.loc 1 2585 0
 1729 0026 DA66     		str	r2, [r3, #108]
2588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1730              		.loc 1 2588 0
 1731 0028 2562     		str	r5, [r4, #32]
2591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1732              		.loc 1 2591 0
 1733 002a 83F86910 		strb	r1, [r3, #105]
2592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1734              		.loc 1 2592 0
 1735 002e 83F86A10 		strb	r1, [r3, #106]
 1736              		.loc 1 2595 0
 1737 0032 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 1738              	.LVL113:
 1739 0036 38BD     		pop	{r3, r4, r5, pc}
 1740              		.cfi_endproc
 1741              	.LFE744:
 1743              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 1744              		.align	2
 1745              		.thumb
 1746              		.thumb_func
 1748              	UART_DMATxAbortCallback:
 1749              	.LFB743:
2524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 1750              		.loc 1 2524 0
ARM GAS  /tmp/ccinMcHI.s 			page 82


 1751              		.cfi_startproc
 1752              		@ args = 0, pretend = 0, frame = 0
 1753              		@ frame_needed = 0, uses_anonymous_args = 0
 1754              	.LVL114:
 1755 0000 38B5     		push	{r3, r4, r5, lr}
 1756              	.LCFI18:
 1757              		.cfi_def_cfa_offset 16
 1758              		.cfi_offset 3, -16
 1759              		.cfi_offset 4, -12
 1760              		.cfi_offset 5, -8
 1761              		.cfi_offset 14, -4
2525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 1762              		.loc 1 2525 0
 1763 0002 436A     		ldr	r3, [r0, #36]
 1764              	.LVL115:
2527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1765              		.loc 1 2527 0
 1766 0004 196E     		ldr	r1, [r3, #96]
2530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1767              		.loc 1 2530 0
 1768 0006 5A6E     		ldr	r2, [r3, #100]
2527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1769              		.loc 1 2527 0
 1770 0008 0020     		movs	r0, #0
 1771              	.LVL116:
 1772 000a 4863     		str	r0, [r1, #52]
2530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1773              		.loc 1 2530 0
 1774 000c 12B1     		cbz	r2, .L200
2532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1775              		.loc 1 2532 0
 1776 000e 526B     		ldr	r2, [r2, #52]
 1777 0010 02B1     		cbz	r2, .L200
 1778 0012 38BD     		pop	{r3, r4, r5, pc}
 1779              	.LVL117:
 1780              	.L200:
2546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1781              		.loc 1 2546 0
 1782 0014 1C68     		ldr	r4, [r3]
2539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1783              		.loc 1 2539 0
 1784 0016 0022     		movs	r2, #0
2549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1785              		.loc 1 2549 0
 1786 0018 2021     		movs	r1, #32
2546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1787              		.loc 1 2546 0
 1788 001a 0F25     		movs	r5, #15
2539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1789              		.loc 1 2539 0
 1790 001c A3F85220 		strh	r2, [r3, #82]	@ movhi
2553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1791              		.loc 1 2553 0
 1792 0020 1846     		mov	r0, r3
2540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1793              		.loc 1 2540 0
 1794 0022 A3F85A20 		strh	r2, [r3, #90]	@ movhi
ARM GAS  /tmp/ccinMcHI.s 			page 83


2543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1795              		.loc 1 2543 0
 1796 0026 DA66     		str	r2, [r3, #108]
2546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1797              		.loc 1 2546 0
 1798 0028 2562     		str	r5, [r4, #32]
2549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1799              		.loc 1 2549 0
 1800 002a 83F86910 		strb	r1, [r3, #105]
2550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1801              		.loc 1 2550 0
 1802 002e 83F86A10 		strb	r1, [r3, #106]
2553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1803              		.loc 1 2553 0
 1804 0032 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 1805              	.LVL118:
 1806 0036 38BD     		pop	{r3, r4, r5, pc}
 1807              		.cfi_endproc
 1808              	.LFE743:
 1810              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 1811              		.align	2
 1812              		.weak	HAL_UART_AbortTransmitCpltCallback
 1813              		.thumb
 1814              		.thumb_func
 1816              	HAL_UART_AbortTransmitCpltCallback:
 1817              	.LFB721:
1859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1818              		.loc 1 1859 0
 1819              		.cfi_startproc
 1820              		@ args = 0, pretend = 0, frame = 0
 1821              		@ frame_needed = 0, uses_anonymous_args = 0
 1822              		@ link register save eliminated.
 1823              	.LVL119:
 1824 0000 7047     		bx	lr
 1825              		.cfi_endproc
 1826              	.LFE721:
 1828 0002 00BF     		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 1829              		.align	2
 1830              		.global	HAL_UART_AbortTransmit_IT
 1831              		.thumb
 1832              		.thumb_func
 1834              	HAL_UART_AbortTransmit_IT:
 1835              	.LFB712:
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 1836              		.loc 1 1489 0
 1837              		.cfi_startproc
 1838              		@ args = 0, pretend = 0, frame = 0
 1839              		@ frame_needed = 0, uses_anonymous_args = 0
 1840              	.LVL120:
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1841              		.loc 1 1491 0
 1842 0000 0368     		ldr	r3, [r0]
 1843 0002 1A68     		ldr	r2, [r3]
 1844 0004 22F0C002 		bic	r2, r2, #192
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 1845              		.loc 1 1489 0
 1846 0008 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccinMcHI.s 			page 84


 1847              	.LCFI19:
 1848              		.cfi_def_cfa_offset 8
 1849              		.cfi_offset 4, -8
 1850              		.cfi_offset 14, -4
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1851              		.loc 1 1491 0
 1852 000a 1A60     		str	r2, [r3]
1494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1853              		.loc 1 1494 0
 1854 000c 9A68     		ldr	r2, [r3, #8]
 1855 000e 12F08002 		ands	r2, r2, #128
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 1856              		.loc 1 1489 0
 1857 0012 0446     		mov	r4, r0
1494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1858              		.loc 1 1494 0
 1859 0014 0DD0     		beq	.L208
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1860              		.loc 1 1496 0
 1861 0016 9A68     		ldr	r2, [r3, #8]
1499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1862              		.loc 1 1499 0
 1863 0018 016E     		ldr	r1, [r0, #96]
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1864              		.loc 1 1496 0
 1865 001a 22F08002 		bic	r2, r2, #128
 1866 001e 9A60     		str	r2, [r3, #8]
1499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1867              		.loc 1 1499 0
 1868 0020 A9B1     		cbz	r1, .L209
1503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1869              		.loc 1 1503 0
 1870 0022 0F4B     		ldr	r3, .L216
 1871 0024 4B63     		str	r3, [r1, #52]
1506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1872              		.loc 1 1506 0
 1873 0026 0846     		mov	r0, r1
 1874              	.LVL121:
 1875 0028 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1876              	.LVL122:
 1877 002c 50B9     		cbnz	r0, .L215
 1878              	.L210:
1537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1879              		.loc 1 1537 0
 1880 002e 0020     		movs	r0, #0
 1881 0030 10BD     		pop	{r4, pc}
 1882              	.LVL123:
 1883              	.L208:
1530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1884              		.loc 1 1530 0
 1885 0032 2023     		movs	r3, #32
1527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1886              		.loc 1 1527 0
 1887 0034 A0F85220 		strh	r2, [r0, #82]	@ movhi
1530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1888              		.loc 1 1530 0
 1889 0038 80F86930 		strb	r3, [r0, #105]
ARM GAS  /tmp/ccinMcHI.s 			page 85


1533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1890              		.loc 1 1533 0
 1891 003c FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 1892              	.LVL124:
1537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1893              		.loc 1 1537 0
 1894 0040 0020     		movs	r0, #0
 1895 0042 10BD     		pop	{r4, pc}
 1896              	.LVL125:
 1897              	.L215:
1509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 1898              		.loc 1 1509 0
 1899 0044 206E     		ldr	r0, [r4, #96]
 1900 0046 436B     		ldr	r3, [r0, #52]
 1901 0048 9847     		blx	r3
 1902              	.LVL126:
1537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1903              		.loc 1 1537 0
 1904 004a 0020     		movs	r0, #0
 1905 004c 10BD     		pop	{r4, pc}
 1906              	.LVL127:
 1907              	.L209:
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1908              		.loc 1 1518 0
 1909 004e 2023     		movs	r3, #32
1515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1910              		.loc 1 1515 0
 1911 0050 A0F85210 		strh	r1, [r0, #82]	@ movhi
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1912              		.loc 1 1518 0
 1913 0054 80F86930 		strb	r3, [r0, #105]
1521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1914              		.loc 1 1521 0
 1915 0058 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 1916              	.LVL128:
 1917 005c E7E7     		b	.L210
 1918              	.L217:
 1919 005e 00BF     		.align	2
 1920              	.L216:
 1921 0060 00000000 		.word	UART_DMATxOnlyAbortCallback
 1922              		.cfi_endproc
 1923              	.LFE712:
 1925              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 1926              		.align	2
 1927              		.thumb
 1928              		.thumb_func
 1930              	UART_DMATxOnlyAbortCallback:
 1931              	.LFB745:
2596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
ARM GAS  /tmp/ccinMcHI.s 			page 86


2605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1932              		.loc 1 2608 0
 1933              		.cfi_startproc
 1934              		@ args = 0, pretend = 0, frame = 0
 1935              		@ frame_needed = 0, uses_anonymous_args = 0
 1936              	.LVL129:
 1937 0000 08B5     		push	{r3, lr}
 1938              	.LCFI20:
 1939              		.cfi_def_cfa_offset 8
 1940              		.cfi_offset 3, -8
 1941              		.cfi_offset 14, -4
2609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1942              		.loc 1 2609 0
 1943 0002 436A     		ldr	r3, [r0, #36]
 1944              	.LVL130:
2610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
 1945              		.loc 1 2611 0
 1946 0004 0021     		movs	r1, #0
2612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 1947              		.loc 1 2614 0
 1948 0006 2022     		movs	r2, #32
2611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1949              		.loc 1 2611 0
 1950 0008 A3F85210 		strh	r1, [r3, #82]	@ movhi
2615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
2617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 1951              		.loc 1 2617 0
 1952 000c 1846     		mov	r0, r3
 1953              	.LVL131:
2614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1954              		.loc 1 2614 0
 1955 000e 83F86920 		strb	r2, [r3, #105]
 1956              		.loc 1 2617 0
 1957 0012 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 1958              	.LVL132:
 1959 0016 08BD     		pop	{r3, pc}
 1960              		.cfi_endproc
 1961              	.LFE745:
 1963              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 1964              		.align	2
 1965              		.weak	HAL_UART_AbortReceiveCpltCallback
 1966              		.thumb
 1967              		.thumb_func
 1969              	HAL_UART_AbortReceiveCpltCallback:
 1970              	.LFB722:
1874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1971              		.loc 1 1874 0
 1972              		.cfi_startproc
 1973              		@ args = 0, pretend = 0, frame = 0
 1974              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccinMcHI.s 			page 87


 1975              		@ link register save eliminated.
 1976              	.LVL133:
 1977 0000 7047     		bx	lr
 1978              		.cfi_endproc
 1979              	.LFE722:
 1981 0002 00BF     		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 1982              		.align	2
 1983              		.global	HAL_UART_AbortReceive_IT
 1984              		.thumb
 1985              		.thumb_func
 1987              	HAL_UART_AbortReceive_IT:
 1988              	.LFB713:
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1989              		.loc 1 1554 0
 1990              		.cfi_startproc
 1991              		@ args = 0, pretend = 0, frame = 0
 1992              		@ frame_needed = 0, uses_anonymous_args = 0
 1993              	.LVL134:
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1994              		.loc 1 1554 0
 1995 0000 38B5     		push	{r3, r4, r5, lr}
 1996              	.LCFI21:
 1997              		.cfi_def_cfa_offset 16
 1998              		.cfi_offset 3, -16
 1999              		.cfi_offset 4, -12
 2000              		.cfi_offset 5, -8
 2001              		.cfi_offset 14, -4
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2002              		.loc 1 1556 0
 2003 0002 0368     		ldr	r3, [r0]
 2004 0004 1A68     		ldr	r2, [r3]
 2005 0006 22F49072 		bic	r2, r2, #288
 2006 000a 1A60     		str	r2, [r3]
1557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2007              		.loc 1 1557 0
 2008 000c 9A68     		ldr	r2, [r3, #8]
 2009 000e 22F00102 		bic	r2, r2, #1
 2010 0012 9A60     		str	r2, [r3, #8]
1560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2011              		.loc 1 1560 0
 2012 0014 9A68     		ldr	r2, [r3, #8]
 2013 0016 12F04002 		ands	r2, r2, #64
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2014              		.loc 1 1554 0
 2015 001a 0446     		mov	r4, r0
1560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2016              		.loc 1 1560 0
 2017 001c 0DD0     		beq	.L222
1562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2018              		.loc 1 1562 0
 2019 001e 9A68     		ldr	r2, [r3, #8]
1565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2020              		.loc 1 1565 0
 2021 0020 416E     		ldr	r1, [r0, #100]
1562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2022              		.loc 1 1562 0
 2023 0022 22F04002 		bic	r2, r2, #64
ARM GAS  /tmp/ccinMcHI.s 			page 88


 2024 0026 9A60     		str	r2, [r3, #8]
1565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2025              		.loc 1 1565 0
 2026 0028 B9B1     		cbz	r1, .L223
1569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2027              		.loc 1 1569 0
 2028 002a 114B     		ldr	r3, .L230
 2029 002c 4B63     		str	r3, [r1, #52]
1572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 2030              		.loc 1 1572 0
 2031 002e 0846     		mov	r0, r1
 2032              	.LVL135:
 2033 0030 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2034              	.LVL136:
 2035 0034 60B9     		cbnz	r0, .L229
 2036              	.L224:
1609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2037              		.loc 1 1609 0
 2038 0036 0020     		movs	r0, #0
 2039 0038 38BD     		pop	{r3, r4, r5, pc}
 2040              	.LVL137:
 2041              	.L222:
1602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2042              		.loc 1 1602 0
 2043 003a 2021     		movs	r1, #32
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2044              		.loc 1 1599 0
 2045 003c 0F25     		movs	r5, #15
1596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2046              		.loc 1 1596 0
 2047 003e A0F85A20 		strh	r2, [r0, #90]	@ movhi
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2048              		.loc 1 1599 0
 2049 0042 1D62     		str	r5, [r3, #32]
1602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2050              		.loc 1 1602 0
 2051 0044 80F86A10 		strb	r1, [r0, #106]
1605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2052              		.loc 1 1605 0
 2053 0048 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2054              	.LVL138:
1609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2055              		.loc 1 1609 0
 2056 004c 0020     		movs	r0, #0
 2057 004e 38BD     		pop	{r3, r4, r5, pc}
 2058              	.LVL139:
 2059              	.L229:
1575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 2060              		.loc 1 1575 0
 2061 0050 606E     		ldr	r0, [r4, #100]
 2062 0052 436B     		ldr	r3, [r0, #52]
 2063 0054 9847     		blx	r3
 2064              	.LVL140:
1609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2065              		.loc 1 1609 0
 2066 0056 0020     		movs	r0, #0
 2067 0058 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccinMcHI.s 			page 89


 2068              	.LVL141:
 2069              	.L223:
1584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2070              		.loc 1 1584 0
 2071 005a 0F25     		movs	r5, #15
1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2072              		.loc 1 1587 0
 2073 005c 2022     		movs	r2, #32
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2074              		.loc 1 1581 0
 2075 005e A0F85A10 		strh	r1, [r0, #90]	@ movhi
1584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2076              		.loc 1 1584 0
 2077 0062 1D62     		str	r5, [r3, #32]
1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2078              		.loc 1 1587 0
 2079 0064 80F86A20 		strb	r2, [r0, #106]
1590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 2080              		.loc 1 1590 0
 2081 0068 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2082              	.LVL142:
 2083 006c E3E7     		b	.L224
 2084              	.L231:
 2085 006e 00BF     		.align	2
 2086              	.L230:
 2087 0070 00000000 		.word	UART_DMARxOnlyAbortCallback
 2088              		.cfi_endproc
 2089              	.LFE713:
 2091              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 2092              		.align	2
 2093              		.thumb
 2094              		.thumb_func
 2096              	UART_DMARxOnlyAbortCallback:
 2097              	.LFB746:
2618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 2098              		.loc 1 2629 0
 2099              		.cfi_startproc
 2100              		@ args = 0, pretend = 0, frame = 0
 2101              		@ frame_needed = 0, uses_anonymous_args = 0
 2102              	.LVL143:
2630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2103              		.loc 1 2630 0
 2104 0000 436A     		ldr	r3, [r0, #36]
 2105              	.LVL144:
2629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2106              		.loc 1 2629 0
ARM GAS  /tmp/ccinMcHI.s 			page 90


 2107 0002 10B5     		push	{r4, lr}
 2108              	.LCFI22:
 2109              		.cfi_def_cfa_offset 8
 2110              		.cfi_offset 4, -8
 2111              		.cfi_offset 14, -4
2631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
2633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 2112              		.loc 1 2635 0
 2113 0004 1968     		ldr	r1, [r3]
2632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2114              		.loc 1 2632 0
 2115 0006 0020     		movs	r0, #0
 2116              	.LVL145:
 2117              		.loc 1 2635 0
 2118 0008 0F24     		movs	r4, #15
2636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2119              		.loc 1 2638 0
 2120 000a 2022     		movs	r2, #32
2632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2121              		.loc 1 2632 0
 2122 000c A3F85A00 		strh	r0, [r3, #90]	@ movhi
2635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2123              		.loc 1 2635 0
 2124 0010 0C62     		str	r4, [r1, #32]
2639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
2641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 2125              		.loc 1 2641 0
 2126 0012 1846     		mov	r0, r3
2638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2127              		.loc 1 2638 0
 2128 0014 83F86A20 		strb	r2, [r3, #106]
 2129              		.loc 1 2641 0
 2130 0018 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2131              	.LVL146:
 2132 001c 10BD     		pop	{r4, pc}
 2133              		.cfi_endproc
 2134              	.LFE746:
 2136              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 2137              		.align	2
 2138              		.global	HAL_MultiProcessor_EnterMuteMode
 2139              		.thumb
 2140              		.thumb_func
 2142              	HAL_MultiProcessor_EnterMuteMode:
 2143              	.LFB725:
1955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 2144              		.loc 1 1955 0
 2145              		.cfi_startproc
 2146              		@ args = 0, pretend = 0, frame = 0
 2147              		@ frame_needed = 0, uses_anonymous_args = 0
 2148              		@ link register save eliminated.
 2149              	.LVL147:
ARM GAS  /tmp/ccinMcHI.s 			page 91


1956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2150              		.loc 1 1956 0
 2151 0000 0268     		ldr	r2, [r0]
 2152 0002 9369     		ldr	r3, [r2, #24]
 2153 0004 43F00403 		orr	r3, r3, #4
 2154 0008 9361     		str	r3, [r2, #24]
 2155 000a 7047     		bx	lr
 2156              		.cfi_endproc
 2157              	.LFE725:
 2159              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 2160              		.align	2
 2161              		.global	HAL_HalfDuplex_EnableTransmitter
 2162              		.thumb
 2163              		.thumb_func
 2165              	HAL_HalfDuplex_EnableTransmitter:
 2166              	.LFB726:
1965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 2167              		.loc 1 1965 0
 2168              		.cfi_startproc
 2169              		@ args = 0, pretend = 0, frame = 0
 2170              		@ frame_needed = 0, uses_anonymous_args = 0
 2171              		@ link register save eliminated.
 2172              	.LVL148:
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2173              		.loc 1 1967 0
 2174 0000 90F86820 		ldrb	r2, [r0, #104]	@ zero_extendqisi2
 2175 0004 012A     		cmp	r2, #1
1965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 2176              		.loc 1 1965 0
 2177 0006 0346     		mov	r3, r0
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2178              		.loc 1 1967 0
 2179 0008 15D0     		beq	.L237
1971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
 2180              		.loc 1 1971 0 discriminator 2
 2181 000a 0268     		ldr	r2, [r0]
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2182              		.loc 1 1968 0 discriminator 2
 2183 000c 2421     		movs	r1, #36
1965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 2184              		.loc 1 1965 0 discriminator 2
 2185 000e 30B4     		push	{r4, r5}
 2186              	.LCFI23:
 2187              		.cfi_def_cfa_offset 8
 2188              		.cfi_offset 4, -8
 2189              		.cfi_offset 5, -4
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2190              		.loc 1 1968 0 discriminator 2
 2191 0010 80F86910 		strb	r1, [r0, #105]
1971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
 2192              		.loc 1 1971 0 discriminator 2
 2193 0014 1168     		ldr	r1, [r2]
 2194 0016 21F00C01 		bic	r1, r1, #12
 2195 001a 1160     		str	r1, [r2]
1973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2196              		.loc 1 1973 0 discriminator 2
 2197 001c 1168     		ldr	r1, [r2]
ARM GAS  /tmp/ccinMcHI.s 			page 92


1978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2198              		.loc 1 1978 0 discriminator 2
 2199 001e 0024     		movs	r4, #0
1975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2200              		.loc 1 1975 0 discriminator 2
 2201 0020 2025     		movs	r5, #32
1973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2202              		.loc 1 1973 0 discriminator 2
 2203 0022 41F00801 		orr	r1, r1, #8
 2204 0026 1160     		str	r1, [r2]
1980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2205              		.loc 1 1980 0 discriminator 2
 2206 0028 2046     		mov	r0, r4
 2207              	.LVL149:
1975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2208              		.loc 1 1975 0 discriminator 2
 2209 002a 83F86950 		strb	r5, [r3, #105]
1978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2210              		.loc 1 1978 0 discriminator 2
 2211 002e 83F86840 		strb	r4, [r3, #104]
1981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2212              		.loc 1 1981 0 discriminator 2
 2213 0032 30BC     		pop	{r4, r5}
 2214              	.LCFI24:
 2215              		.cfi_restore 5
 2216              		.cfi_restore 4
 2217              		.cfi_def_cfa_offset 0
 2218 0034 7047     		bx	lr
 2219              	.LVL150:
 2220              	.L237:
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2221              		.loc 1 1967 0
 2222 0036 0220     		movs	r0, #2
 2223              	.LVL151:
 2224 0038 7047     		bx	lr
 2225              		.cfi_endproc
 2226              	.LFE726:
 2228 003a 00BF     		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 2229              		.align	2
 2230              		.global	HAL_HalfDuplex_EnableReceiver
 2231              		.thumb
 2232              		.thumb_func
 2234              	HAL_HalfDuplex_EnableReceiver:
 2235              	.LFB727:
1989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 2236              		.loc 1 1989 0
 2237              		.cfi_startproc
 2238              		@ args = 0, pretend = 0, frame = 0
 2239              		@ frame_needed = 0, uses_anonymous_args = 0
 2240              		@ link register save eliminated.
 2241              	.LVL152:
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2242              		.loc 1 1991 0
 2243 0000 90F86820 		ldrb	r2, [r0, #104]	@ zero_extendqisi2
 2244 0004 012A     		cmp	r2, #1
1989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 2245              		.loc 1 1989 0
ARM GAS  /tmp/ccinMcHI.s 			page 93


 2246 0006 0346     		mov	r3, r0
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2247              		.loc 1 1991 0
 2248 0008 15D0     		beq	.L242
1995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
 2249              		.loc 1 1995 0 discriminator 2
 2250 000a 0268     		ldr	r2, [r0]
1992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2251              		.loc 1 1992 0 discriminator 2
 2252 000c 2421     		movs	r1, #36
1989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 2253              		.loc 1 1989 0 discriminator 2
 2254 000e 30B4     		push	{r4, r5}
 2255              	.LCFI25:
 2256              		.cfi_def_cfa_offset 8
 2257              		.cfi_offset 4, -8
 2258              		.cfi_offset 5, -4
1992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2259              		.loc 1 1992 0 discriminator 2
 2260 0010 80F86910 		strb	r1, [r0, #105]
1995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
 2261              		.loc 1 1995 0 discriminator 2
 2262 0014 1168     		ldr	r1, [r2]
 2263 0016 21F00C01 		bic	r1, r1, #12
 2264 001a 1160     		str	r1, [r2]
1997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2265              		.loc 1 1997 0 discriminator 2
 2266 001c 1168     		ldr	r1, [r2]
2001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2267              		.loc 1 2001 0 discriminator 2
 2268 001e 0024     		movs	r4, #0
1999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
 2269              		.loc 1 1999 0 discriminator 2
 2270 0020 2025     		movs	r5, #32
1997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2271              		.loc 1 1997 0 discriminator 2
 2272 0022 41F00401 		orr	r1, r1, #4
 2273 0026 1160     		str	r1, [r2]
2003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2274              		.loc 1 2003 0 discriminator 2
 2275 0028 2046     		mov	r0, r4
 2276              	.LVL153:
1999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
 2277              		.loc 1 1999 0 discriminator 2
 2278 002a 83F86950 		strb	r5, [r3, #105]
2001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2279              		.loc 1 2001 0 discriminator 2
 2280 002e 83F86840 		strb	r4, [r3, #104]
2004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2281              		.loc 1 2004 0 discriminator 2
 2282 0032 30BC     		pop	{r4, r5}
 2283              	.LCFI26:
 2284              		.cfi_restore 5
 2285              		.cfi_restore 4
 2286              		.cfi_def_cfa_offset 0
 2287 0034 7047     		bx	lr
 2288              	.LVL154:
ARM GAS  /tmp/ccinMcHI.s 			page 94


 2289              	.L242:
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2290              		.loc 1 1991 0
 2291 0036 0220     		movs	r0, #2
 2292              	.LVL155:
 2293 0038 7047     		bx	lr
 2294              		.cfi_endproc
 2295              	.LFE727:
 2297 003a 00BF     		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 2298              		.align	2
 2299              		.global	HAL_LIN_SendBreak
 2300              		.thumb
 2301              		.thumb_func
 2303              	HAL_LIN_SendBreak:
 2304              	.LFB728:
2013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
 2305              		.loc 1 2013 0
 2306              		.cfi_startproc
 2307              		@ args = 0, pretend = 0, frame = 0
 2308              		@ frame_needed = 0, uses_anonymous_args = 0
 2309              		@ link register save eliminated.
 2310              	.LVL156:
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2311              		.loc 1 2018 0
 2312 0000 90F86820 		ldrb	r2, [r0, #104]	@ zero_extendqisi2
 2313 0004 012A     		cmp	r2, #1
2013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
 2314              		.loc 1 2013 0
 2315 0006 0346     		mov	r3, r0
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2316              		.loc 1 2018 0
 2317 0008 12D0     		beq	.L247
2023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2318              		.loc 1 2023 0 discriminator 2
 2319 000a 0068     		ldr	r0, [r0]
 2320              	.LVL157:
2020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2321              		.loc 1 2020 0 discriminator 2
 2322 000c 2422     		movs	r2, #36
2013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
 2323              		.loc 1 2013 0 discriminator 2
 2324 000e 10B4     		push	{r4}
 2325              	.LCFI27:
 2326              		.cfi_def_cfa_offset 4
 2327              		.cfi_offset 4, -4
2020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2328              		.loc 1 2020 0 discriminator 2
 2329 0010 83F86920 		strb	r2, [r3, #105]
2023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2330              		.loc 1 2023 0 discriminator 2
 2331 0014 8269     		ldr	r2, [r0, #24]
2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2332              		.loc 1 2025 0 discriminator 2
 2333 0016 2024     		movs	r4, #32
2028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2334              		.loc 1 2028 0 discriminator 2
 2335 0018 0021     		movs	r1, #0
ARM GAS  /tmp/ccinMcHI.s 			page 95


2023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2336              		.loc 1 2023 0 discriminator 2
 2337 001a 42F00202 		orr	r2, r2, #2
 2338 001e 8261     		str	r2, [r0, #24]
2030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2339              		.loc 1 2030 0 discriminator 2
 2340 0020 0846     		mov	r0, r1
2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2341              		.loc 1 2025 0 discriminator 2
 2342 0022 83F86940 		strb	r4, [r3, #105]
2028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2343              		.loc 1 2028 0 discriminator 2
 2344 0026 83F86810 		strb	r1, [r3, #104]
2031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2345              		.loc 1 2031 0 discriminator 2
 2346 002a 5DF8044B 		ldr	r4, [sp], #4
 2347              	.LCFI28:
 2348              		.cfi_restore 4
 2349              		.cfi_def_cfa_offset 0
 2350 002e 7047     		bx	lr
 2351              	.LVL158:
 2352              	.L247:
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2353              		.loc 1 2018 0
 2354 0030 0220     		movs	r0, #2
 2355              	.LVL159:
 2356 0032 7047     		bx	lr
 2357              		.cfi_endproc
 2358              	.LFE728:
 2360              		.section	.text.HAL_UART_GetState,"ax",%progbits
 2361              		.align	2
 2362              		.global	HAL_UART_GetState
 2363              		.thumb
 2364              		.thumb_func
 2366              	HAL_UART_GetState:
 2367              	.LFB729:
2061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 2368              		.loc 1 2061 0
 2369              		.cfi_startproc
 2370              		@ args = 0, pretend = 0, frame = 0
 2371              		@ frame_needed = 0, uses_anonymous_args = 0
 2372              		@ link register save eliminated.
 2373              	.LVL160:
2063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   temp2 = huart->RxState;
 2374              		.loc 1 2063 0
 2375 0000 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 2376              	.LVL161:
2064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2377              		.loc 1 2064 0
 2378 0004 90F86A00 		ldrb	r0, [r0, #106]	@ zero_extendqisi2
 2379              	.LVL162:
2067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2380              		.loc 1 2067 0
 2381 0008 1843     		orrs	r0, r0, r3
 2382              	.LVL163:
 2383 000a 7047     		bx	lr
 2384              		.cfi_endproc
ARM GAS  /tmp/ccinMcHI.s 			page 96


 2385              	.LFE729:
 2387              		.section	.text.HAL_UART_GetError,"ax",%progbits
 2388              		.align	2
 2389              		.global	HAL_UART_GetError
 2390              		.thumb
 2391              		.thumb_func
 2393              	HAL_UART_GetError:
 2394              	.LFB730:
2076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return huart->ErrorCode;
 2395              		.loc 1 2076 0
 2396              		.cfi_startproc
 2397              		@ args = 0, pretend = 0, frame = 0
 2398              		@ frame_needed = 0, uses_anonymous_args = 0
 2399              		@ link register save eliminated.
 2400              	.LVL164:
2077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2401              		.loc 1 2077 0
 2402 0000 C06E     		ldr	r0, [r0, #108]
 2403              	.LVL165:
2078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 2404              		.loc 1 2078 0
 2405 0002 7047     		bx	lr
 2406              		.cfi_endproc
 2407              	.LFE730:
 2409              		.section	.text.UART_SetConfig,"ax",%progbits
 2410              		.align	2
 2411              		.global	UART_SetConfig
 2412              		.thumb
 2413              		.thumb_func
 2415              	UART_SetConfig:
 2416              	.LFB731:
2097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
 2417              		.loc 1 2097 0
 2418              		.cfi_startproc
 2419              		@ args = 0, pretend = 0, frame = 8
 2420              		@ frame_needed = 0, uses_anonymous_args = 0
 2421              	.LVL166:
 2422 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2423              	.LCFI29:
 2424              		.cfi_def_cfa_offset 24
 2425              		.cfi_offset 4, -24
 2426              		.cfi_offset 5, -20
 2427              		.cfi_offset 6, -16
 2428              		.cfi_offset 7, -12
 2429              		.cfi_offset 8, -8
 2430              		.cfi_offset 14, -4
 2431 0004 0546     		mov	r5, r0
 2432 0006 82B0     		sub	sp, sp, #8
 2433              	.LCFI30:
 2434              		.cfi_def_cfa_offset 32
2122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2435              		.loc 1 2122 0
 2436 0008 6969     		ldr	r1, [r5, #20]
 2437 000a 8068     		ldr	r0, [r0, #8]
 2438              	.LVL167:
 2439 000c 0191     		str	r1, [sp, #4]
 2440 000e 2969     		ldr	r1, [r5, #16]
ARM GAS  /tmp/ccinMcHI.s 			page 97


2123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2441              		.loc 1 2123 0
 2442 0010 2C68     		ldr	r4, [r5]
2122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2443              		.loc 1 2122 0
 2444 0012 EE69     		ldr	r6, [r5, #28]
 2445              	.LVL168:
2123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2446              		.loc 1 2123 0
 2447 0014 D4F80080 		ldr	r8, [r4]
 2448 0018 694A     		ldr	r2, .L289
2128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2449              		.loc 1 2128 0
 2450 001a EB68     		ldr	r3, [r5, #12]
2136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 2451              		.loc 1 2136 0
 2452 001c D5F820C0 		ldr	ip, [r5, #32]
 2453 0020 D5F818E0 		ldr	lr, [r5, #24]
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2454              		.loc 1 2140 0
 2455 0024 674F     		ldr	r7, .L289+4
2122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2456              		.loc 1 2122 0
 2457 0026 0843     		orrs	r0, r0, r1
 2458 0028 0199     		ldr	r1, [sp, #4]
 2459 002a 0143     		orrs	r1, r1, r0
 2460 002c 3143     		orrs	r1, r1, r6
2123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2461              		.loc 1 2123 0
 2462 002e 08EA0202 		and	r2, r8, r2
 2463 0032 0A43     		orrs	r2, r2, r1
 2464 0034 2260     		str	r2, [r4]
 2465              	.LVL169:
2128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2466              		.loc 1 2128 0
 2467 0036 6268     		ldr	r2, [r4, #4]
 2468 0038 22F44052 		bic	r2, r2, #12288
 2469 003c 1343     		orrs	r3, r3, r2
 2470 003e 6360     		str	r3, [r4, #4]
 2471              	.LVL170:
2137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2472              		.loc 1 2137 0
 2473 0040 A368     		ldr	r3, [r4, #8]
2136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 2474              		.loc 1 2136 0
 2475 0042 4CEA0E02 		orr	r2, ip, lr
2137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2476              		.loc 1 2137 0
 2477 0046 23F43063 		bic	r3, r3, #2816
 2478 004a 1343     		orrs	r3, r3, r2
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2479              		.loc 1 2140 0
 2480 004c BC42     		cmp	r4, r7
2137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2481              		.loc 1 2137 0
 2482 004e A360     		str	r3, [r4, #8]
 2483              	.LVL171:
ARM GAS  /tmp/ccinMcHI.s 			page 98


2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2484              		.loc 1 2140 0
 2485 0050 23D0     		beq	.L287
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2486              		.loc 1 2140 0 is_stmt 0 discriminator 2
 2487 0052 5D4B     		ldr	r3, .L289+8
 2488 0054 9C42     		cmp	r4, r3
 2489 0056 10D0     		beq	.L256
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2490              		.loc 1 2140 0 discriminator 9
 2491 0058 03F58063 		add	r3, r3, #1024
 2492 005c 9C42     		cmp	r4, r3
 2493 005e 0CD0     		beq	.L256
2143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2494              		.loc 1 2143 0 is_stmt 1
 2495 0060 B6F5004F 		cmp	r6, #32768
 2496 0064 03D0     		beq	.L274
 2497              	.LVL172:
 2498              	.L283:
2193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2499              		.loc 1 2193 0
 2500 0066 0120     		movs	r0, #1
 2501              	.LVL173:
2200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2502              		.loc 1 2200 0
 2503 0068 02B0     		add	sp, sp, #8
 2504              	.LCFI31:
 2505              		.cfi_remember_state
 2506              		.cfi_def_cfa_offset 24
 2507              		@ sp needed
 2508 006a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2509              	.LVL174:
 2510              	.L274:
 2511              	.LCFI32:
 2512              		.cfi_restore_state
2143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2513              		.loc 1 2143 0
 2514 006e 0023     		movs	r3, #0
2164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2515              		.loc 1 2164 0
 2516 0070 0120     		movs	r0, #1
 2517              	.LVL175:
 2518              	.L258:
2170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2519              		.loc 1 2170 0
 2520 0072 E360     		str	r3, [r4, #12]
2200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2521              		.loc 1 2200 0
 2522 0074 02B0     		add	sp, sp, #8
 2523              	.LCFI33:
 2524              		.cfi_remember_state
 2525              		.cfi_def_cfa_offset 24
 2526              		@ sp needed
 2527 0076 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2528              	.LVL176:
 2529              	.L256:
 2530              	.LCFI34:
ARM GAS  /tmp/ccinMcHI.s 			page 99


 2531              		.cfi_restore_state
2143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2532              		.loc 1 2143 0
 2533 007a B6F5004F 		cmp	r6, #32768
 2534 007e 71D0     		beq	.L259
 2535              	.LVL177:
 2536              	.L266:
2177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2537              		.loc 1 2177 0
 2538 0080 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2539              	.LVL178:
 2540 0084 6B68     		ldr	r3, [r5, #4]
 2541 0086 00EB5300 		add	r0, r0, r3, lsr #1
 2542 008a B0FBF3F0 		udiv	r0, r0, r3
 2543 008e 80B2     		uxth	r0, r0
 2544 0090 E060     		str	r0, [r4, #12]
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2545              		.loc 1 2102 0
 2546 0092 0020     		movs	r0, #0
2200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2547              		.loc 1 2200 0
 2548 0094 02B0     		add	sp, sp, #8
 2549              	.LCFI35:
 2550              		.cfi_remember_state
 2551              		.cfi_def_cfa_offset 24
 2552              		@ sp needed
 2553 0096 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2554              	.LVL179:
 2555              	.L287:
 2556              	.LCFI36:
 2557              		.cfi_restore_state
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2558              		.loc 1 2140 0 discriminator 1
 2559 009a 4C4B     		ldr	r3, .L289+12
 2560 009c 4C4A     		ldr	r2, .L289+16
 2561 009e 1B6B     		ldr	r3, [r3, #48]
 2562 00a0 03F00303 		and	r3, r3, #3
2143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2563              		.loc 1 2143 0 discriminator 1
 2564 00a4 B6F5004F 		cmp	r6, #32768
 2565 00a8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2566              	.LVL180:
 2567 00aa 44D0     		beq	.L288
2174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2568              		.loc 1 2174 0
 2569 00ac 082B     		cmp	r3, #8
 2570 00ae DAD8     		bhi	.L283
 2571 00b0 01A2     		adr	r2, .L267
 2572 00b2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2573 00b6 00BF     		.p2align 2
 2574              	.L267:
 2575 00b8 81000000 		.word	.L266+1
 2576 00bc 31010000 		.word	.L268+1
 2577 00c0 13010000 		.word	.L269+1
 2578 00c4 67000000 		.word	.L283+1
 2579 00c8 F7000000 		.word	.L270+1
 2580 00cc 67000000 		.word	.L283+1
ARM GAS  /tmp/ccinMcHI.s 			page 100


 2581 00d0 67000000 		.word	.L283+1
 2582 00d4 67000000 		.word	.L283+1
 2583 00d8 DD000000 		.word	.L271+1
 2584              		.p2align 1
 2585              	.L271:
2189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2586              		.loc 1 2189 0
 2587 00dc 6A68     		ldr	r2, [r5, #4]
 2588 00de 3949     		ldr	r1, .L289+4
 2589 00e0 5308     		lsrs	r3, r2, #1
 2590              	.LVL181:
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2591              		.loc 1 2102 0
 2592 00e2 0020     		movs	r0, #0
2189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2593              		.loc 1 2189 0
 2594 00e4 03F50043 		add	r3, r3, #32768
 2595 00e8 B3FBF2F3 		udiv	r3, r3, r2
 2596 00ec 9BB2     		uxth	r3, r3
 2597 00ee CB60     		str	r3, [r1, #12]
2200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2598              		.loc 1 2200 0
 2599 00f0 02B0     		add	sp, sp, #8
 2600              	.LCFI37:
 2601              		.cfi_remember_state
 2602              		.cfi_def_cfa_offset 24
 2603              		@ sp needed
 2604 00f2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2605              	.LVL182:
 2606              	.L270:
 2607              	.LCFI38:
 2608              		.cfi_restore_state
2186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2609              		.loc 1 2186 0
 2610 00f6 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2611              	.LVL183:
 2612              	.L284:
 2613 00fa 6B68     		ldr	r3, [r5, #4]
 2614 00fc 314A     		ldr	r2, .L289+4
 2615 00fe 00EB5300 		add	r0, r0, r3, lsr #1
 2616 0102 B0FBF3F0 		udiv	r0, r0, r3
 2617 0106 80B2     		uxth	r0, r0
 2618 0108 D060     		str	r0, [r2, #12]
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2619              		.loc 1 2102 0
 2620 010a 0020     		movs	r0, #0
2200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2621              		.loc 1 2200 0
 2622 010c 02B0     		add	sp, sp, #8
 2623              	.LCFI39:
 2624              		.cfi_remember_state
 2625              		.cfi_def_cfa_offset 24
 2626              		@ sp needed
 2627 010e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2628              	.LVL184:
 2629              	.L269:
 2630              	.LCFI40:
ARM GAS  /tmp/ccinMcHI.s 			page 101


 2631              		.cfi_restore_state
2183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2632              		.loc 1 2183 0
 2633 0112 6968     		ldr	r1, [r5, #4]
 2634 0114 2B48     		ldr	r0, .L289+4
 2635 0116 4A08     		lsrs	r2, r1, #1
 2636 0118 02F5F403 		add	r3, r2, #7995392
 2637              	.LVL185:
 2638 011c 03F59053 		add	r3, r3, #4608
 2639 0120 B3FBF1F3 		udiv	r3, r3, r1
 2640 0124 9BB2     		uxth	r3, r3
 2641 0126 C360     		str	r3, [r0, #12]
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2642              		.loc 1 2102 0
 2643 0128 0020     		movs	r0, #0
2200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2644              		.loc 1 2200 0
 2645 012a 02B0     		add	sp, sp, #8
 2646              	.LCFI41:
 2647              		.cfi_remember_state
 2648              		.cfi_def_cfa_offset 24
 2649              		@ sp needed
 2650 012c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2651              	.LVL186:
 2652              	.L268:
 2653              	.LCFI42:
 2654              		.cfi_restore_state
2180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2655              		.loc 1 2180 0
 2656 0130 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 2657              	.LVL187:
 2658 0134 E1E7     		b	.L284
 2659              	.LVL188:
 2660              	.L288:
2145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2661              		.loc 1 2145 0
 2662 0136 082B     		cmp	r3, #8
 2663 0138 99D8     		bhi	.L274
 2664 013a 01A2     		adr	r2, .L260
 2665 013c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2666              		.p2align 2
 2667              	.L260:
 2668 0140 65010000 		.word	.L259+1
 2669 0144 BB010000 		.word	.L261+1
 2670 0148 9B010000 		.word	.L262+1
 2671 014c 6F000000 		.word	.L274+1
 2672 0150 95010000 		.word	.L263+1
 2673 0154 6F000000 		.word	.L274+1
 2674 0158 6F000000 		.word	.L274+1
 2675 015c 6F000000 		.word	.L274+1
 2676 0160 87010000 		.word	.L264+1
 2677              	.LVL189:
 2678              		.p2align 1
 2679              	.L259:
2148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2680              		.loc 1 2148 0
 2681 0164 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
ARM GAS  /tmp/ccinMcHI.s 			page 102


 2682              	.LVL190:
 2683              	.L285:
2157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2684              		.loc 1 2157 0
 2685 0168 6A68     		ldr	r2, [r5, #4]
 2686 016a 2C68     		ldr	r4, [r5]
 2687 016c 5308     		lsrs	r3, r2, #1
 2688 016e 03EB4000 		add	r0, r3, r0, lsl #1
 2689 0172 B0FBF2F2 		udiv	r2, r0, r2
 2690              	.L282:
2160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2691              		.loc 1 2160 0
 2692 0176 92B2     		uxth	r2, r2
 2693              	.LVL191:
 2694 0178 C2F34203 		ubfx	r3, r2, #1, #3
 2695 017c 22F00F02 		bic	r2, r2, #15
 2696              	.LVL192:
 2697 0180 1343     		orrs	r3, r3, r2
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2698              		.loc 1 2102 0
 2699 0182 0020     		movs	r0, #0
2161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 2700              		.loc 1 2161 0
 2701 0184 75E7     		b	.L258
 2702              	.LVL193:
 2703              	.L264:
2160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2704              		.loc 1 2160 0
 2705 0186 6A68     		ldr	r2, [r5, #4]
 2706 0188 5308     		lsrs	r3, r2, #1
 2707              	.LVL194:
 2708 018a 03F58033 		add	r3, r3, #65536
 2709 018e B3FBF2F2 		udiv	r2, r3, r2
 2710 0192 F0E7     		b	.L282
 2711              	.LVL195:
 2712              	.L263:
2157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2713              		.loc 1 2157 0
 2714 0194 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2715              	.LVL196:
 2716 0198 E6E7     		b	.L285
 2717              	.LVL197:
 2718              	.L262:
2154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2719              		.loc 1 2154 0
 2720 019a 6A68     		ldr	r2, [r5, #4]
 2721 019c 5108     		lsrs	r1, r2, #1
 2722 019e 01F57403 		add	r3, r1, #15990784
 2723              	.LVL198:
 2724 01a2 03F51053 		add	r3, r3, #9216
 2725 01a6 B3FBF2F3 		udiv	r3, r3, r2
 2726 01aa 9AB2     		uxth	r2, r3
 2727              	.LVL199:
 2728 01ac C2F34203 		ubfx	r3, r2, #1, #3
 2729 01b0 22F00F02 		bic	r2, r2, #15
 2730              	.LVL200:
 2731 01b4 1343     		orrs	r3, r3, r2
ARM GAS  /tmp/ccinMcHI.s 			page 103


2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2732              		.loc 1 2102 0
 2733 01b6 0020     		movs	r0, #0
2155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 2734              		.loc 1 2155 0
 2735 01b8 5BE7     		b	.L258
 2736              	.LVL201:
 2737              	.L261:
2151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2738              		.loc 1 2151 0
 2739 01ba FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 2740              	.LVL202:
 2741 01be D3E7     		b	.L285
 2742              	.L290:
 2743              		.align	2
 2744              	.L289:
 2745 01c0 F369FFEF 		.word	-268473869
 2746 01c4 00380140 		.word	1073821696
 2747 01c8 00440040 		.word	1073759232
 2748 01cc 00100240 		.word	1073876992
 2749 01d0 00000000 		.word	.LANCHOR0
 2750              		.cfi_endproc
 2751              	.LFE731:
 2753              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 2754              		.align	2
 2755              		.global	UART_AdvFeatureConfig
 2756              		.thumb
 2757              		.thumb_func
 2759              	UART_AdvFeatureConfig:
 2760              	.LFB732:
2208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 2761              		.loc 1 2208 0
 2762              		.cfi_startproc
 2763              		@ args = 0, pretend = 0, frame = 0
 2764              		@ frame_needed = 0, uses_anonymous_args = 0
 2765              		@ link register save eliminated.
 2766              	.LVL203:
2213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2767              		.loc 1 2213 0
 2768 0000 436A     		ldr	r3, [r0, #36]
 2769 0002 DA07     		lsls	r2, r3, #31
2208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 2770              		.loc 1 2208 0
 2771 0004 10B4     		push	{r4}
 2772              	.LCFI43:
 2773              		.cfi_def_cfa_offset 4
 2774              		.cfi_offset 4, -4
2213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2775              		.loc 1 2213 0
 2776 0006 06D5     		bpl	.L292
2216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2777              		.loc 1 2216 0
 2778 0008 0468     		ldr	r4, [r0]
 2779 000a 826A     		ldr	r2, [r0, #40]
 2780 000c 6168     		ldr	r1, [r4, #4]
 2781 000e 21F40031 		bic	r1, r1, #131072
 2782 0012 0A43     		orrs	r2, r2, r1
ARM GAS  /tmp/ccinMcHI.s 			page 104


 2783 0014 6260     		str	r2, [r4, #4]
 2784              	.L292:
2220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2785              		.loc 1 2220 0
 2786 0016 9C07     		lsls	r4, r3, #30
 2787 0018 06D5     		bpl	.L293
2223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2788              		.loc 1 2223 0
 2789 001a 0468     		ldr	r4, [r0]
 2790 001c C26A     		ldr	r2, [r0, #44]
 2791 001e 6168     		ldr	r1, [r4, #4]
 2792 0020 21F48031 		bic	r1, r1, #65536
 2793 0024 0A43     		orrs	r2, r2, r1
 2794 0026 6260     		str	r2, [r4, #4]
 2795              	.L293:
2227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2796              		.loc 1 2227 0
 2797 0028 5907     		lsls	r1, r3, #29
 2798 002a 06D5     		bpl	.L294
2230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2799              		.loc 1 2230 0
 2800 002c 0468     		ldr	r4, [r0]
 2801 002e 026B     		ldr	r2, [r0, #48]
 2802 0030 6168     		ldr	r1, [r4, #4]
 2803 0032 21F48021 		bic	r1, r1, #262144
 2804 0036 0A43     		orrs	r2, r2, r1
 2805 0038 6260     		str	r2, [r4, #4]
 2806              	.L294:
2234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2807              		.loc 1 2234 0
 2808 003a 1A07     		lsls	r2, r3, #28
 2809 003c 06D5     		bpl	.L295
2237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2810              		.loc 1 2237 0
 2811 003e 0468     		ldr	r4, [r0]
 2812 0040 426B     		ldr	r2, [r0, #52]
 2813 0042 6168     		ldr	r1, [r4, #4]
 2814 0044 21F40041 		bic	r1, r1, #32768
 2815 0048 0A43     		orrs	r2, r2, r1
 2816 004a 6260     		str	r2, [r4, #4]
 2817              	.L295:
2241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2818              		.loc 1 2241 0
 2819 004c DC06     		lsls	r4, r3, #27
 2820 004e 06D5     		bpl	.L296
2244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2821              		.loc 1 2244 0
 2822 0050 0468     		ldr	r4, [r0]
 2823 0052 826B     		ldr	r2, [r0, #56]
 2824 0054 A168     		ldr	r1, [r4, #8]
 2825 0056 21F48051 		bic	r1, r1, #4096
 2826 005a 0A43     		orrs	r2, r2, r1
 2827 005c A260     		str	r2, [r4, #8]
 2828              	.L296:
2248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2829              		.loc 1 2248 0
 2830 005e 9906     		lsls	r1, r3, #26
ARM GAS  /tmp/ccinMcHI.s 			page 105


 2831 0060 06D5     		bpl	.L297
2251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2832              		.loc 1 2251 0
 2833 0062 0468     		ldr	r4, [r0]
 2834 0064 C26B     		ldr	r2, [r0, #60]
 2835 0066 A168     		ldr	r1, [r4, #8]
 2836 0068 21F40051 		bic	r1, r1, #8192
 2837 006c 0A43     		orrs	r2, r2, r1
 2838 006e A260     		str	r2, [r4, #8]
 2839              	.L297:
2255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2840              		.loc 1 2255 0
 2841 0070 5A06     		lsls	r2, r3, #25
 2842 0072 09D5     		bpl	.L299
2259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 2843              		.loc 1 2259 0
 2844 0074 0168     		ldr	r1, [r0]
 2845 0076 046C     		ldr	r4, [r0, #64]
 2846 0078 4A68     		ldr	r2, [r1, #4]
 2847 007a 22F48012 		bic	r2, r2, #1048576
 2848 007e 2243     		orrs	r2, r2, r4
2261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2849              		.loc 1 2261 0
 2850 0080 B4F5801F 		cmp	r4, #1048576
2259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 2851              		.loc 1 2259 0
 2852 0084 4A60     		str	r2, [r1, #4]
2261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2853              		.loc 1 2261 0
 2854 0086 0BD0     		beq	.L324
 2855              	.L299:
2269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2856              		.loc 1 2269 0
 2857 0088 1B06     		lsls	r3, r3, #24
 2858 008a 06D5     		bpl	.L291
2272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2859              		.loc 1 2272 0
 2860 008c 0168     		ldr	r1, [r0]
 2861 008e 826C     		ldr	r2, [r0, #72]
 2862 0090 4B68     		ldr	r3, [r1, #4]
 2863 0092 23F40023 		bic	r3, r3, #524288
 2864 0096 1343     		orrs	r3, r3, r2
 2865 0098 4B60     		str	r3, [r1, #4]
 2866              	.L291:
2274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2867              		.loc 1 2274 0
 2868 009a 5DF8044B 		ldr	r4, [sp], #4
 2869              	.LCFI44:
 2870              		.cfi_remember_state
 2871              		.cfi_restore 4
 2872              		.cfi_def_cfa_offset 0
 2873 009e 7047     		bx	lr
 2874              	.L324:
 2875              	.LCFI45:
 2876              		.cfi_restore_state
2264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 2877              		.loc 1 2264 0
ARM GAS  /tmp/ccinMcHI.s 			page 106


 2878 00a0 4C68     		ldr	r4, [r1, #4]
 2879 00a2 426C     		ldr	r2, [r0, #68]
 2880 00a4 24F4C004 		bic	r4, r4, #6291456
 2881 00a8 2243     		orrs	r2, r2, r4
 2882 00aa 4A60     		str	r2, [r1, #4]
 2883 00ac ECE7     		b	.L299
 2884              		.cfi_endproc
 2885              	.LFE732:
 2887 00ae 00BF     		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 2888              		.align	2
 2889              		.global	UART_WaitOnFlagUntilTimeout
 2890              		.thumb
 2891              		.thumb_func
 2893              	UART_WaitOnFlagUntilTimeout:
 2894              	.LFB734:
2332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Wait until flag is set */
 2895              		.loc 1 2332 0
 2896              		.cfi_startproc
 2897              		@ args = 4, pretend = 0, frame = 0
 2898              		@ frame_needed = 0, uses_anonymous_args = 0
 2899              	.LVL204:
 2900 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2901              	.LCFI46:
 2902              		.cfi_def_cfa_offset 24
 2903              		.cfi_offset 4, -24
 2904              		.cfi_offset 5, -20
 2905              		.cfi_offset 6, -16
 2906              		.cfi_offset 7, -12
 2907              		.cfi_offset 8, -8
 2908              		.cfi_offset 14, -4
2332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Wait until flag is set */
 2909              		.loc 1 2332 0
 2910 0004 069D     		ldr	r5, [sp, #24]
 2911 0006 0746     		mov	r7, r0
 2912 0008 0C46     		mov	r4, r1
 2913 000a 1646     		mov	r6, r2
 2914 000c 9846     		mov	r8, r3
 2915              	.LVL205:
 2916              	.L326:
 2917 000e 3968     		ldr	r1, [r7]
 2918 0010 01E0     		b	.L327
 2919              	.L330:
2337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2920              		.loc 1 2337 0
 2921 0012 6B1C     		adds	r3, r5, #1
 2922 0014 0AD1     		bne	.L338
 2923              	.L327:
2334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2924              		.loc 1 2334 0
 2925 0016 C869     		ldr	r0, [r1, #28]
 2926 0018 2040     		ands	r0, r0, r4
 2927 001a 001B     		subs	r0, r0, r4
 2928 001c B0FA80F0 		clz	r0, r0
 2929 0020 4009     		lsrs	r0, r0, #5
 2930 0022 8642     		cmp	r6, r0
 2931 0024 F5D0     		beq	.L330
2354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
ARM GAS  /tmp/ccinMcHI.s 			page 107


 2932              		.loc 1 2354 0
 2933 0026 0020     		movs	r0, #0
2355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2934              		.loc 1 2355 0
 2935 0028 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2936              	.LVL206:
 2937              	.L338:
2339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 2938              		.loc 1 2339 0
 2939 002c 35B1     		cbz	r5, .L328
2339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 2940              		.loc 1 2339 0 is_stmt 0 discriminator 1
 2941 002e FFF7FEFF 		bl	HAL_GetTick
 2942              	.LVL207:
 2943 0032 C8EB0000 		rsb	r0, r8, r0
 2944 0036 8542     		cmp	r5, r0
 2945 0038 E9D2     		bcs	.L326
 2946 003a 3968     		ldr	r1, [r7]
 2947              	.L328:
 2948              	.LVL208:
 2949              	.LBB26:
 2950              	.LBB27:
2342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2951              		.loc 1 2342 0 is_stmt 1
 2952 003c 0B68     		ldr	r3, [r1]
 2953 003e 23F4D073 		bic	r3, r3, #416
 2954 0042 0B60     		str	r3, [r1]
2343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2955              		.loc 1 2343 0
 2956 0044 8B68     		ldr	r3, [r1, #8]
2345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 2957              		.loc 1 2345 0
 2958 0046 2022     		movs	r2, #32
2343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2959              		.loc 1 2343 0
 2960 0048 23F00103 		bic	r3, r3, #1
2349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
 2961              		.loc 1 2349 0
 2962 004c 0024     		movs	r4, #0
 2963              	.LVL209:
2343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2964              		.loc 1 2343 0
 2965 004e 8B60     		str	r3, [r1, #8]
2349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
 2966              		.loc 1 2349 0
 2967 0050 0320     		movs	r0, #3
2345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 2968              		.loc 1 2345 0
 2969 0052 87F86920 		strb	r2, [r7, #105]
2349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
 2970              		.loc 1 2349 0
 2971 0056 87F86840 		strb	r4, [r7, #104]
2346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2972              		.loc 1 2346 0
 2973 005a 87F86A20 		strb	r2, [r7, #106]
 2974 005e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2975              	.LBE27:
ARM GAS  /tmp/ccinMcHI.s 			page 108


 2976              	.LBE26:
 2977              		.cfi_endproc
 2978              	.LFE734:
 2980 0062 00BF     		.section	.text.HAL_UART_Transmit,"ax",%progbits
 2981              		.align	2
 2982              		.global	HAL_UART_Transmit
 2983              		.thumb
 2984              		.thumb_func
 2986              	HAL_UART_Transmit:
 2987              	.LFB699:
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 2988              		.loc 1 724 0
 2989              		.cfi_startproc
 2990              		@ args = 0, pretend = 0, frame = 8
 2991              		@ frame_needed = 0, uses_anonymous_args = 0
 2992              	.LVL210:
 2993 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2994              	.LCFI47:
 2995              		.cfi_def_cfa_offset 24
 2996              		.cfi_offset 4, -24
 2997              		.cfi_offset 5, -20
 2998              		.cfi_offset 6, -16
 2999              		.cfi_offset 7, -12
 3000              		.cfi_offset 8, -8
 3001              		.cfi_offset 14, -4
 3002 0004 0D46     		mov	r5, r1
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3003              		.loc 1 729 0
 3004 0006 90F86910 		ldrb	r1, [r0, #105]	@ zero_extendqisi2
 3005              	.LVL211:
 3006 000a 2029     		cmp	r1, #32
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 3007              		.loc 1 724 0
 3008 000c 84B0     		sub	sp, sp, #16
 3009              	.LCFI48:
 3010              		.cfi_def_cfa_offset 40
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 3011              		.loc 1 724 0
 3012 000e 0446     		mov	r4, r0
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3013              		.loc 1 729 0
 3014 0010 03D0     		beq	.L352
 3015              	.LVL212:
 3016              	.L350:
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3017              		.loc 1 780 0
 3018 0012 0220     		movs	r0, #2
 3019              	.LVL213:
 3020              	.L340:
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3021              		.loc 1 782 0
 3022 0014 04B0     		add	sp, sp, #16
 3023              	.LCFI49:
 3024              		.cfi_remember_state
 3025              		.cfi_def_cfa_offset 24
 3026              		@ sp needed
 3027 0016 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
ARM GAS  /tmp/ccinMcHI.s 			page 109


 3028              	.LVL214:
 3029              	.L352:
 3030              	.LCFI50:
 3031              		.cfi_restore_state
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3032              		.loc 1 731 0
 3033 001a 8DB3     		cbz	r5, .L349
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3034              		.loc 1 731 0 is_stmt 0 discriminator 1
 3035 001c 82B3     		cbz	r2, .L349
 3036 001e 1F46     		mov	r7, r3
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3037              		.loc 1 737 0 is_stmt 1
 3038 0020 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3039              	.LVL215:
 3040 0024 012B     		cmp	r3, #1
 3041 0026 F4D0     		beq	.L350
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 3042              		.loc 1 739 0 discriminator 2
 3043 0028 0020     		movs	r0, #0
 3044              	.LVL216:
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3045              		.loc 1 737 0 discriminator 2
 3046 002a 0121     		movs	r1, #1
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3047              		.loc 1 740 0 discriminator 2
 3048 002c 2123     		movs	r3, #33
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 3049              		.loc 1 739 0 discriminator 2
 3050 002e E066     		str	r0, [r4, #108]
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3051              		.loc 1 737 0 discriminator 2
 3052 0030 84F86810 		strb	r1, [r4, #104]
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3053              		.loc 1 740 0 discriminator 2
 3054 0034 84F86930 		strb	r3, [r4, #105]
 3055 0038 0392     		str	r2, [sp, #12]
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3056              		.loc 1 743 0 discriminator 2
 3057 003a FFF7FEFF 		bl	HAL_GetTick
 3058              	.LVL217:
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 3059              		.loc 1 745 0 discriminator 2
 3060 003e 039A     		ldr	r2, [sp, #12]
 3061 0040 A4F85020 		strh	r2, [r4, #80]	@ movhi
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3062              		.loc 1 743 0 discriminator 2
 3063 0044 8046     		mov	r8, r0
 3064              	.LVL218:
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 3065              		.loc 1 746 0 discriminator 2
 3066 0046 A4F85220 		strh	r2, [r4, #82]	@ movhi
 3067              	.LVL219:
 3068              	.L341:
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3069              		.loc 1 747 0
 3070 004a B4F85260 		ldrh	r6, [r4, #82]
ARM GAS  /tmp/ccinMcHI.s 			page 110


 3071 004e B6B2     		uxth	r6, r6
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3072              		.loc 1 750 0
 3073 0050 2046     		mov	r0, r4
 3074 0052 8021     		movs	r1, #128
 3075 0054 0022     		movs	r2, #0
 3076 0056 4346     		mov	r3, r8
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3077              		.loc 1 747 0
 3078 0058 06B3     		cbz	r6, .L353
 3079              	.LVL220:
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 3080              		.loc 1 749 0
 3081 005a B4F85260 		ldrh	r6, [r4, #82]
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3082              		.loc 1 750 0
 3083 005e 0097     		str	r7, [sp]
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 3084              		.loc 1 749 0
 3085 0060 013E     		subs	r6, r6, #1
 3086 0062 B6B2     		uxth	r6, r6
 3087 0064 A4F85260 		strh	r6, [r4, #82]	@ movhi
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3088              		.loc 1 750 0
 3089 0068 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3090              	.LVL221:
 3091 006c A0B9     		cbnz	r0, .L346
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3092              		.loc 1 754 0
 3093 006e A368     		ldr	r3, [r4, #8]
 3094 0070 B3F5805F 		cmp	r3, #4096
 3095 0074 06D0     		beq	.L354
 3096              	.L343:
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3097              		.loc 1 762 0
 3098 0076 2368     		ldr	r3, [r4]
 3099 0078 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 3100 007a 1A85     		strh	r2, [r3, #40]	@ movhi
 3101 007c 0135     		adds	r5, r5, #1
 3102              	.LVL222:
 3103 007e E4E7     		b	.L341
 3104              	.LVL223:
 3105              	.L349:
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3106              		.loc 1 733 0
 3107 0080 0120     		movs	r0, #1
 3108              	.LVL224:
 3109 0082 C7E7     		b	.L340
 3110              	.LVL225:
 3111              	.L354:
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3112              		.loc 1 754 0 discriminator 1
 3113 0084 2369     		ldr	r3, [r4, #16]
 3114 0086 002B     		cmp	r3, #0
 3115 0088 F5D1     		bne	.L343
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pData += 2U;
 3116              		.loc 1 757 0
ARM GAS  /tmp/ccinMcHI.s 			page 111


 3117 008a 35F8023B 		ldrh	r3, [r5], #2
 3118              	.LVL226:
 3119 008e 2268     		ldr	r2, [r4]
 3120 0090 C3F30803 		ubfx	r3, r3, #0, #9
 3121 0094 1385     		strh	r3, [r2, #40]	@ movhi
 3122              	.LVL227:
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3123              		.loc 1 758 0
 3124 0096 D8E7     		b	.L341
 3125              	.LVL228:
 3126              	.L346:
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3127              		.loc 1 752 0
 3128 0098 0320     		movs	r0, #3
 3129 009a BBE7     		b	.L340
 3130              	.LVL229:
 3131              	.L353:
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3132              		.loc 1 765 0
 3133 009c 0097     		str	r7, [sp]
 3134 009e 3246     		mov	r2, r6
 3135 00a0 4021     		movs	r1, #64
 3136 00a2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3137              	.LVL230:
 3138 00a6 0028     		cmp	r0, #0
 3139 00a8 F6D1     		bne	.L346
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3140              		.loc 1 771 0
 3141 00aa 2023     		movs	r3, #32
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3142              		.loc 1 774 0
 3143 00ac 84F86800 		strb	r0, [r4, #104]
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3144              		.loc 1 771 0
 3145 00b0 84F86930 		strb	r3, [r4, #105]
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3146              		.loc 1 776 0
 3147 00b4 AEE7     		b	.L340
 3148              		.cfi_endproc
 3149              	.LFE699:
 3151 00b6 00BF     		.section	.text.HAL_UART_Receive,"ax",%progbits
 3152              		.align	2
 3153              		.global	HAL_UART_Receive
 3154              		.thumb
 3155              		.thumb_func
 3157              	HAL_UART_Receive:
 3158              	.LFB700:
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 3159              		.loc 1 793 0
 3160              		.cfi_startproc
 3161              		@ args = 0, pretend = 0, frame = 8
 3162              		@ frame_needed = 0, uses_anonymous_args = 0
 3163              	.LVL231:
 3164 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 3165              	.LCFI51:
 3166              		.cfi_def_cfa_offset 28
 3167              		.cfi_offset 4, -28
ARM GAS  /tmp/ccinMcHI.s 			page 112


 3168              		.cfi_offset 5, -24
 3169              		.cfi_offset 6, -20
 3170              		.cfi_offset 7, -16
 3171              		.cfi_offset 8, -12
 3172              		.cfi_offset 9, -8
 3173              		.cfi_offset 14, -4
 3174 0004 0E46     		mov	r6, r1
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3175              		.loc 1 799 0
 3176 0006 90F86A10 		ldrb	r1, [r0, #106]	@ zero_extendqisi2
 3177              	.LVL232:
 3178 000a 2029     		cmp	r1, #32
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 3179              		.loc 1 793 0
 3180 000c 85B0     		sub	sp, sp, #20
 3181              	.LCFI52:
 3182              		.cfi_def_cfa_offset 48
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 3183              		.loc 1 793 0
 3184 000e 0446     		mov	r4, r0
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3185              		.loc 1 799 0
 3186 0010 03D0     		beq	.L379
 3187              	.LVL233:
 3188              	.L370:
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3189              		.loc 1 852 0
 3190 0012 0220     		movs	r0, #2
 3191              	.LVL234:
 3192              	.L356:
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3193              		.loc 1 854 0
 3194 0014 05B0     		add	sp, sp, #20
 3195              	.LCFI53:
 3196              		.cfi_remember_state
 3197              		.cfi_def_cfa_offset 28
 3198              		@ sp needed
 3199 0016 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 3200              	.LVL235:
 3201              	.L379:
 3202              	.LCFI54:
 3203              		.cfi_restore_state
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3204              		.loc 1 801 0
 3205 001a 002E     		cmp	r6, #0
 3206 001c 41D0     		beq	.L369
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3207              		.loc 1 801 0 is_stmt 0 discriminator 1
 3208 001e 002A     		cmp	r2, #0
 3209 0020 3FD0     		beq	.L369
 3210 0022 1F46     		mov	r7, r3
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3211              		.loc 1 807 0 is_stmt 1
 3212 0024 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3213              	.LVL236:
 3214 0028 012B     		cmp	r3, #1
 3215 002a F2D0     		beq	.L370
ARM GAS  /tmp/ccinMcHI.s 			page 113


 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3216              		.loc 1 810 0 discriminator 2
 3217 002c 2223     		movs	r3, #34
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 3218              		.loc 1 809 0 discriminator 2
 3219 002e 0020     		movs	r0, #0
 3220              	.LVL237:
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3221              		.loc 1 807 0 discriminator 2
 3222 0030 0121     		movs	r1, #1
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 3223              		.loc 1 809 0 discriminator 2
 3224 0032 E066     		str	r0, [r4, #108]
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3225              		.loc 1 807 0 discriminator 2
 3226 0034 84F86810 		strb	r1, [r4, #104]
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3227              		.loc 1 810 0 discriminator 2
 3228 0038 84F86A30 		strb	r3, [r4, #106]
 3229 003c 0392     		str	r2, [sp, #12]
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3230              		.loc 1 813 0 discriminator 2
 3231 003e FFF7FEFF 		bl	HAL_GetTick
 3232              	.LVL238:
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3233              		.loc 1 819 0 discriminator 2
 3234 0042 A368     		ldr	r3, [r4, #8]
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 3235              		.loc 1 815 0 discriminator 2
 3236 0044 039A     		ldr	r2, [sp, #12]
 3237 0046 A4F85820 		strh	r2, [r4, #88]	@ movhi
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3238              		.loc 1 819 0 discriminator 2
 3239 004a B3F5805F 		cmp	r3, #4096
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3240              		.loc 1 813 0 discriminator 2
 3241 004e 8146     		mov	r9, r0
 3242              	.LVL239:
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3243              		.loc 1 816 0 discriminator 2
 3244 0050 A4F85A20 		strh	r2, [r4, #90]	@ movhi
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3245              		.loc 1 819 0 discriminator 2
 3246 0054 44D0     		beq	.L380
 3247 0056 002B     		cmp	r3, #0
 3248 0058 37D1     		bne	.L360
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3249              		.loc 1 819 0 is_stmt 0 discriminator 5
 3250 005a 2369     		ldr	r3, [r4, #16]
 3251 005c 002B     		cmp	r3, #0
 3252 005e 3AD0     		beq	.L358
 3253              	.L362:
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3254              		.loc 1 819 0 discriminator 8
 3255 0060 4FF07F08 		mov	r8, #127
 3256 0064 A4F85C80 		strh	r8, [r4, #92]	@ movhi
 3257              	.LVL240:
ARM GAS  /tmp/ccinMcHI.s 			page 114


 3258              	.L363:
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3259              		.loc 1 823 0 is_stmt 1
 3260 0068 B4F85A50 		ldrh	r5, [r4, #90]
 3261 006c ADB2     		uxth	r5, r5
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3262              		.loc 1 826 0
 3263 006e 2046     		mov	r0, r4
 3264 0070 2021     		movs	r1, #32
 3265 0072 0022     		movs	r2, #0
 3266 0074 4B46     		mov	r3, r9
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3267              		.loc 1 823 0
 3268 0076 05B3     		cbz	r5, .L381
 3269              	.LVL241:
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 3270              		.loc 1 825 0
 3271 0078 B4F85A50 		ldrh	r5, [r4, #90]
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3272              		.loc 1 826 0
 3273 007c 0097     		str	r7, [sp]
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 3274              		.loc 1 825 0
 3275 007e 013D     		subs	r5, r5, #1
 3276 0080 ADB2     		uxth	r5, r5
 3277 0082 A4F85A50 		strh	r5, [r4, #90]	@ movhi
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3278              		.loc 1 826 0
 3279 0086 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3280              	.LVL242:
 3281 008a E0B9     		cbnz	r0, .L371
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3282              		.loc 1 830 0
 3283 008c A368     		ldr	r3, [r4, #8]
 3284 008e B3F5805F 		cmp	r3, #4096
 3285 0092 08D0     		beq	.L382
 3286              	.L364:
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3287              		.loc 1 838 0
 3288 0094 2368     		ldr	r3, [r4]
 3289 0096 9B8C     		ldrh	r3, [r3, #36]
 3290 0098 08EA0303 		and	r3, r8, r3
 3291 009c 3370     		strb	r3, [r6]
 3292 009e 0136     		adds	r6, r6, #1
 3293              	.LVL243:
 3294 00a0 E2E7     		b	.L363
 3295              	.LVL244:
 3296              	.L369:
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3297              		.loc 1 803 0
 3298 00a2 0120     		movs	r0, #1
 3299              	.LVL245:
 3300 00a4 B6E7     		b	.L356
 3301              	.LVL246:
 3302              	.L382:
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3303              		.loc 1 830 0 discriminator 1
ARM GAS  /tmp/ccinMcHI.s 			page 115


 3304 00a6 2369     		ldr	r3, [r4, #16]
 3305 00a8 002B     		cmp	r3, #0
 3306 00aa F3D1     		bne	.L364
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pData +=2U;
 3307              		.loc 1 833 0
 3308 00ac 2368     		ldr	r3, [r4]
 3309 00ae 9B8C     		ldrh	r3, [r3, #36]
 3310 00b0 08EA0303 		and	r3, r8, r3
 3311 00b4 26F8023B 		strh	r3, [r6], #2	@ movhi
 3312              	.LVL247:
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3313              		.loc 1 834 0
 3314 00b8 D6E7     		b	.L363
 3315              	.LVL248:
 3316              	.L381:
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3317              		.loc 1 846 0
 3318 00ba 84F86850 		strb	r5, [r4, #104]
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3319              		.loc 1 848 0
 3320 00be 2846     		mov	r0, r5
 3321              	.LVL249:
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3322              		.loc 1 843 0
 3323 00c0 84F86A10 		strb	r1, [r4, #106]
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3324              		.loc 1 848 0
 3325 00c4 A6E7     		b	.L356
 3326              	.LVL250:
 3327              	.L371:
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3328              		.loc 1 828 0
 3329 00c6 0320     		movs	r0, #3
 3330 00c8 A4E7     		b	.L356
 3331              	.LVL251:
 3332              	.L360:
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3333              		.loc 1 819 0 discriminator 6
 3334 00ca B3F1805F 		cmp	r3, #268435456
 3335 00ce 0FD0     		beq	.L361
 3336 00d0 B4F85C80 		ldrh	r8, [r4, #92]
 3337 00d4 C8E7     		b	.L363
 3338              	.L358:
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3339              		.loc 1 819 0 is_stmt 0 discriminator 4
 3340 00d6 4FF0FF08 		mov	r8, #255
 3341 00da A4F85C80 		strh	r8, [r4, #92]	@ movhi
 3342 00de C3E7     		b	.L363
 3343              	.L380:
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3344              		.loc 1 819 0 discriminator 1
 3345 00e0 2369     		ldr	r3, [r4, #16]
 3346 00e2 002B     		cmp	r3, #0
 3347 00e4 F7D1     		bne	.L358
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3348              		.loc 1 819 0 discriminator 3
 3349 00e6 40F2FF18 		movw	r8, #511
ARM GAS  /tmp/ccinMcHI.s 			page 116


 3350 00ea A4F85C80 		strh	r8, [r4, #92]	@ movhi
 3351 00ee BBE7     		b	.L363
 3352              	.L361:
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3353              		.loc 1 819 0 discriminator 9
 3354 00f0 2369     		ldr	r3, [r4, #16]
 3355 00f2 002B     		cmp	r3, #0
 3356 00f4 B4D0     		beq	.L362
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3357              		.loc 1 819 0 discriminator 11
 3358 00f6 4FF03F08 		mov	r8, #63
 3359 00fa A4F85C80 		strh	r8, [r4, #92]	@ movhi
 3360              	.LVL252:
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3361              		.loc 1 823 0 is_stmt 1 discriminator 11
 3362 00fe B3E7     		b	.L363
 3363              		.cfi_endproc
 3364              	.LFE700:
 3366              		.section	.text.UART_CheckIdleState,"ax",%progbits
 3367              		.align	2
 3368              		.global	UART_CheckIdleState
 3369              		.thumb
 3370              		.thumb_func
 3372              	UART_CheckIdleState:
 3373              	.LFB733:
2282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart = 0U;
 3374              		.loc 1 2282 0
 3375              		.cfi_startproc
 3376              		@ args = 0, pretend = 0, frame = 0
 3377              		@ frame_needed = 0, uses_anonymous_args = 0
 3378              	.LVL253:
 3379 0000 70B5     		push	{r4, r5, r6, lr}
 3380              	.LCFI55:
 3381              		.cfi_def_cfa_offset 16
 3382              		.cfi_offset 4, -16
 3383              		.cfi_offset 5, -12
 3384              		.cfi_offset 6, -8
 3385              		.cfi_offset 14, -4
 3386 0002 0446     		mov	r4, r0
2286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3387              		.loc 1 2286 0
 3388 0004 0025     		movs	r5, #0
2282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart = 0U;
 3389              		.loc 1 2282 0
 3390 0006 82B0     		sub	sp, sp, #8
 3391              	.LCFI56:
 3392              		.cfi_def_cfa_offset 24
2286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3393              		.loc 1 2286 0
 3394 0008 C566     		str	r5, [r0, #108]
2289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3395              		.loc 1 2289 0
 3396 000a FFF7FEFF 		bl	HAL_GetTick
 3397              	.LVL254:
2292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3398              		.loc 1 2292 0
 3399 000e 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccinMcHI.s 			page 117


 3400 0010 1A68     		ldr	r2, [r3]
 3401 0012 1207     		lsls	r2, r2, #28
2289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3402              		.loc 1 2289 0
 3403 0014 0646     		mov	r6, r0
 3404              	.LVL255:
2292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3405              		.loc 1 2292 0
 3406 0016 0CD4     		bmi	.L395
 3407              	.LVL256:
 3408              	.L384:
2302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3409              		.loc 1 2302 0
 3410 0018 1B68     		ldr	r3, [r3]
 3411 001a 5B07     		lsls	r3, r3, #29
 3412 001c 17D4     		bmi	.L387
 3413              	.L389:
2313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3414              		.loc 1 2313 0
 3415 001e 2023     		movs	r3, #32
2317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3416              		.loc 1 2317 0
 3417 0020 0020     		movs	r0, #0
2313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3418              		.loc 1 2313 0
 3419 0022 84F86930 		strb	r3, [r4, #105]
2317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3420              		.loc 1 2317 0
 3421 0026 84F86800 		strb	r0, [r4, #104]
2314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3422              		.loc 1 2314 0
 3423 002a 84F86A30 		strb	r3, [r4, #106]
2320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3424              		.loc 1 2320 0
 3425 002e 02B0     		add	sp, sp, #8
 3426              	.LCFI57:
 3427              		.cfi_remember_state
 3428              		.cfi_def_cfa_offset 16
 3429              		@ sp needed
 3430 0030 70BD     		pop	{r4, r5, r6, pc}
 3431              	.LVL257:
 3432              	.L395:
 3433              	.LCFI58:
 3434              		.cfi_restore_state
2295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3435              		.loc 1 2295 0
 3436 0032 6FF07E43 		mvn	r3, #-33554432
 3437 0036 0093     		str	r3, [sp]
 3438 0038 2A46     		mov	r2, r5
 3439 003a 2046     		mov	r0, r4
 3440              	.LVL258:
 3441 003c 4FF40011 		mov	r1, #2097152
 3442 0040 3346     		mov	r3, r6
 3443 0042 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3444              	.LVL259:
 3445 0046 80B1     		cbz	r0, .L385
2298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
ARM GAS  /tmp/ccinMcHI.s 			page 118


 3446              		.loc 1 2298 0
 3447 0048 0320     		movs	r0, #3
 3448              	.L396:
2320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3449              		.loc 1 2320 0
 3450 004a 02B0     		add	sp, sp, #8
 3451              	.LCFI59:
 3452              		.cfi_remember_state
 3453              		.cfi_def_cfa_offset 16
 3454              		@ sp needed
 3455 004c 70BD     		pop	{r4, r5, r6, pc}
 3456              	.LVL260:
 3457              	.L387:
 3458              	.LCFI60:
 3459              		.cfi_restore_state
2305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3460              		.loc 1 2305 0
 3461 004e 6FF07E42 		mvn	r2, #-33554432
 3462 0052 0092     		str	r2, [sp]
 3463 0054 3346     		mov	r3, r6
 3464 0056 2046     		mov	r0, r4
 3465 0058 4FF48001 		mov	r1, #4194304
 3466 005c 0022     		movs	r2, #0
 3467 005e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3468              	.LVL261:
 3469 0062 0028     		cmp	r0, #0
 3470 0064 DBD0     		beq	.L389
2298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3471              		.loc 1 2298 0
 3472 0066 0320     		movs	r0, #3
 3473 0068 EFE7     		b	.L396
 3474              	.L385:
 3475 006a 2368     		ldr	r3, [r4]
 3476 006c D4E7     		b	.L384
 3477              		.cfi_endproc
 3478              	.LFE733:
 3480 006e 00BF     		.section	.text.HAL_UART_Init,"ax",%progbits
 3481              		.align	2
 3482              		.global	HAL_UART_Init
 3483              		.thumb
 3484              		.thumb_func
 3486              	HAL_UART_Init:
 3487              	.LFB692:
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3488              		.loc 1 295 0
 3489              		.cfi_startproc
 3490              		@ args = 0, pretend = 0, frame = 0
 3491              		@ frame_needed = 0, uses_anonymous_args = 0
 3492              	.LVL262:
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3493              		.loc 1 297 0
 3494 0000 90B3     		cbz	r0, .L410
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3495              		.loc 1 313 0
 3496 0002 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3497              		.loc 1 295 0
ARM GAS  /tmp/ccinMcHI.s 			page 119


 3498 0006 10B5     		push	{r4, lr}
 3499              	.LCFI61:
 3500              		.cfi_def_cfa_offset 8
 3501              		.cfi_offset 4, -8
 3502              		.cfi_offset 14, -4
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3503              		.loc 1 313 0
 3504 0008 03F0FF02 		and	r2, r3, #255
 3505 000c 0446     		mov	r4, r0
 3506 000e 03B3     		cbz	r3, .L411
 3507              	.LVL263:
 3508              	.L400:
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3509              		.loc 1 325 0
 3510 0010 2268     		ldr	r2, [r4]
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3511              		.loc 1 322 0
 3512 0012 2423     		movs	r3, #36
 3513 0014 84F86930 		strb	r3, [r4, #105]
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3514              		.loc 1 325 0
 3515 0018 1368     		ldr	r3, [r2]
 3516 001a 23F00103 		bic	r3, r3, #1
 3517 001e 1360     		str	r3, [r2]
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3518              		.loc 1 328 0
 3519 0020 2046     		mov	r0, r4
 3520 0022 FFF7FEFF 		bl	UART_SetConfig
 3521              	.LVL264:
 3522 0026 0128     		cmp	r0, #1
 3523 0028 1CD0     		beq	.L399
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3524              		.loc 1 333 0
 3525 002a 636A     		ldr	r3, [r4, #36]
 3526 002c B3B9     		cbnz	r3, .L412
 3527              	.L402:
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 3528              		.loc 1 341 0
 3529 002e 2368     		ldr	r3, [r4]
 3530 0030 5A68     		ldr	r2, [r3, #4]
 3531 0032 22F49042 		bic	r2, r2, #18432
 3532 0036 5A60     		str	r2, [r3, #4]
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3533              		.loc 1 342 0
 3534 0038 9A68     		ldr	r2, [r3, #8]
 3535 003a 22F02A02 		bic	r2, r2, #42
 3536 003e 9A60     		str	r2, [r3, #8]
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3537              		.loc 1 345 0
 3538 0040 1A68     		ldr	r2, [r3]
 3539 0042 42F00102 		orr	r2, r2, #1
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3540              		.loc 1 348 0
 3541 0046 2046     		mov	r0, r4
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3542              		.loc 1 345 0
 3543 0048 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccinMcHI.s 			page 120


 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3544              		.loc 1 349 0
 3545 004a BDE81040 		pop	{r4, lr}
 3546              	.LCFI62:
 3547              		.cfi_remember_state
 3548              		.cfi_restore 14
 3549              		.cfi_restore 4
 3550              		.cfi_def_cfa_offset 0
 3551              	.LVL265:
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3552              		.loc 1 348 0
 3553 004e FFF7FEBF 		b	UART_CheckIdleState
 3554              	.LVL266:
 3555              	.L411:
 3556              	.LCFI63:
 3557              		.cfi_restore_state
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3558              		.loc 1 316 0
 3559 0052 80F86820 		strb	r2, [r0, #104]
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3560              		.loc 1 319 0
 3561 0056 FFF7FEFF 		bl	HAL_UART_MspInit
 3562              	.LVL267:
 3563 005a D9E7     		b	.L400
 3564              	.L412:
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3565              		.loc 1 335 0
 3566 005c 2046     		mov	r0, r4
 3567 005e FFF7FEFF 		bl	UART_AdvFeatureConfig
 3568              	.LVL268:
 3569 0062 E4E7     		b	.L402
 3570              	.L399:
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3571              		.loc 1 349 0
 3572 0064 0120     		movs	r0, #1
 3573 0066 10BD     		pop	{r4, pc}
 3574              	.LVL269:
 3575              	.L410:
 3576              	.LCFI64:
 3577              		.cfi_def_cfa_offset 0
 3578              		.cfi_restore 4
 3579              		.cfi_restore 14
 3580 0068 0120     		movs	r0, #1
 3581              	.LVL270:
 3582 006a 7047     		bx	lr
 3583              		.cfi_endproc
 3584              	.LFE692:
 3586              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 3587              		.align	2
 3588              		.global	HAL_HalfDuplex_Init
 3589              		.thumb
 3590              		.thumb_func
 3592              	HAL_HalfDuplex_Init:
 3593              	.LFB693:
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3594              		.loc 1 358 0
 3595              		.cfi_startproc
ARM GAS  /tmp/ccinMcHI.s 			page 121


 3596              		@ args = 0, pretend = 0, frame = 0
 3597              		@ frame_needed = 0, uses_anonymous_args = 0
 3598              	.LVL271:
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3599              		.loc 1 360 0
 3600 0000 0028     		cmp	r0, #0
 3601 0002 36D0     		beq	.L426
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3602              		.loc 1 368 0
 3603 0004 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3604              		.loc 1 358 0
 3605 0008 10B5     		push	{r4, lr}
 3606              	.LCFI65:
 3607              		.cfi_def_cfa_offset 8
 3608              		.cfi_offset 4, -8
 3609              		.cfi_offset 14, -4
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3610              		.loc 1 368 0
 3611 000a 03F0FF02 		and	r2, r3, #255
 3612 000e 0446     		mov	r4, r0
 3613 0010 23B3     		cbz	r3, .L427
 3614              	.LVL272:
 3615              	.L416:
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3616              		.loc 1 380 0
 3617 0012 2268     		ldr	r2, [r4]
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3618              		.loc 1 377 0
 3619 0014 2423     		movs	r3, #36
 3620 0016 84F86930 		strb	r3, [r4, #105]
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3621              		.loc 1 380 0
 3622 001a 1368     		ldr	r3, [r2]
 3623 001c 23F00103 		bic	r3, r3, #1
 3624 0020 1360     		str	r3, [r2]
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3625              		.loc 1 383 0
 3626 0022 2046     		mov	r0, r4
 3627 0024 FFF7FEFF 		bl	UART_SetConfig
 3628              	.LVL273:
 3629 0028 0128     		cmp	r0, #1
 3630 002a 20D0     		beq	.L415
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3631              		.loc 1 388 0
 3632 002c 636A     		ldr	r3, [r4, #36]
 3633 002e D3B9     		cbnz	r3, .L428
 3634              	.L418:
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 3635              		.loc 1 396 0
 3636 0030 2368     		ldr	r3, [r4]
 3637 0032 5A68     		ldr	r2, [r3, #4]
 3638 0034 22F49042 		bic	r2, r2, #18432
 3639 0038 5A60     		str	r2, [r3, #4]
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3640              		.loc 1 397 0
 3641 003a 9A68     		ldr	r2, [r3, #8]
ARM GAS  /tmp/ccinMcHI.s 			page 122


 3642 003c 22F02202 		bic	r2, r2, #34
 3643 0040 9A60     		str	r2, [r3, #8]
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3644              		.loc 1 400 0
 3645 0042 9A68     		ldr	r2, [r3, #8]
 3646 0044 42F00802 		orr	r2, r2, #8
 3647 0048 9A60     		str	r2, [r3, #8]
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3648              		.loc 1 403 0
 3649 004a 1A68     		ldr	r2, [r3]
 3650 004c 42F00102 		orr	r2, r2, #1
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3651              		.loc 1 406 0
 3652 0050 2046     		mov	r0, r4
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3653              		.loc 1 403 0
 3654 0052 1A60     		str	r2, [r3]
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3655              		.loc 1 407 0
 3656 0054 BDE81040 		pop	{r4, lr}
 3657              	.LCFI66:
 3658              		.cfi_remember_state
 3659              		.cfi_restore 14
 3660              		.cfi_restore 4
 3661              		.cfi_def_cfa_offset 0
 3662              	.LVL274:
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3663              		.loc 1 406 0
 3664 0058 FFF7FEBF 		b	UART_CheckIdleState
 3665              	.LVL275:
 3666              	.L427:
 3667              	.LCFI67:
 3668              		.cfi_restore_state
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3669              		.loc 1 371 0
 3670 005c 80F86820 		strb	r2, [r0, #104]
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3671              		.loc 1 374 0
 3672 0060 FFF7FEFF 		bl	HAL_UART_MspInit
 3673              	.LVL276:
 3674 0064 D5E7     		b	.L416
 3675              	.L428:
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3676              		.loc 1 390 0
 3677 0066 2046     		mov	r0, r4
 3678 0068 FFF7FEFF 		bl	UART_AdvFeatureConfig
 3679              	.LVL277:
 3680 006c E0E7     		b	.L418
 3681              	.L415:
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3682              		.loc 1 407 0
 3683 006e 0120     		movs	r0, #1
 3684 0070 10BD     		pop	{r4, pc}
 3685              	.LVL278:
 3686              	.L426:
 3687              	.LCFI68:
 3688              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccinMcHI.s 			page 123


 3689              		.cfi_restore 4
 3690              		.cfi_restore 14
 3691 0072 0120     		movs	r0, #1
 3692              	.LVL279:
 3693 0074 7047     		bx	lr
 3694              		.cfi_endproc
 3695              	.LFE693:
 3697 0076 00BF     		.section	.text.HAL_LIN_Init,"ax",%progbits
 3698              		.align	2
 3699              		.global	HAL_LIN_Init
 3700              		.thumb
 3701              		.thumb_func
 3703              	HAL_LIN_Init:
 3704              	.LFB694:
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3705              		.loc 1 421 0
 3706              		.cfi_startproc
 3707              		@ args = 0, pretend = 0, frame = 0
 3708              		@ frame_needed = 0, uses_anonymous_args = 0
 3709              	.LVL280:
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3710              		.loc 1 423 0
 3711 0000 0028     		cmp	r0, #0
 3712 0002 43D0     		beq	.L445
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3713              		.loc 1 421 0
 3714 0004 38B5     		push	{r3, r4, r5, lr}
 3715              	.LCFI69:
 3716              		.cfi_def_cfa_offset 16
 3717              		.cfi_offset 3, -16
 3718              		.cfi_offset 4, -12
 3719              		.cfi_offset 5, -8
 3720              		.cfi_offset 14, -4
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3721              		.loc 1 434 0
 3722 0006 C369     		ldr	r3, [r0, #28]
 3723 0008 B3F5004F 		cmp	r3, #32768
 3724 000c 0446     		mov	r4, r0
 3725 000e 32D0     		beq	.L431
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3726              		.loc 1 439 0
 3727 0010 8368     		ldr	r3, [r0, #8]
 3728 0012 83BB     		cbnz	r3, .L431
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3729              		.loc 1 444 0
 3730 0014 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3731 0018 0D46     		mov	r5, r1
 3732 001a 03F0FF02 		and	r2, r3, #255
 3733 001e 63B3     		cbz	r3, .L446
 3734              	.LVL281:
 3735              	.L433:
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3736              		.loc 1 456 0
 3737 0020 2268     		ldr	r2, [r4]
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3738              		.loc 1 453 0
 3739 0022 2423     		movs	r3, #36
ARM GAS  /tmp/ccinMcHI.s 			page 124


 3740 0024 84F86930 		strb	r3, [r4, #105]
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3741              		.loc 1 456 0
 3742 0028 1368     		ldr	r3, [r2]
 3743 002a 23F00103 		bic	r3, r3, #1
 3744 002e 1360     		str	r3, [r2]
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3745              		.loc 1 459 0
 3746 0030 2046     		mov	r0, r4
 3747 0032 FFF7FEFF 		bl	UART_SetConfig
 3748              	.LVL282:
 3749 0036 0128     		cmp	r0, #1
 3750 0038 1DD0     		beq	.L431
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3751              		.loc 1 464 0
 3752 003a 636A     		ldr	r3, [r4, #36]
 3753 003c 13BB     		cbnz	r3, .L447
 3754              	.L434:
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 3755              		.loc 1 472 0
 3756 003e 2368     		ldr	r3, [r4]
 3757 0040 5A68     		ldr	r2, [r3, #4]
 3758 0042 22F40062 		bic	r2, r2, #2048
 3759 0046 5A60     		str	r2, [r3, #4]
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3760              		.loc 1 473 0
 3761 0048 9A68     		ldr	r2, [r3, #8]
 3762 004a 22F02A02 		bic	r2, r2, #42
 3763 004e 9A60     		str	r2, [r3, #8]
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3764              		.loc 1 476 0
 3765 0050 5A68     		ldr	r2, [r3, #4]
 3766 0052 42F48042 		orr	r2, r2, #16384
 3767 0056 5A60     		str	r2, [r3, #4]
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3768              		.loc 1 479 0
 3769 0058 5A68     		ldr	r2, [r3, #4]
 3770 005a 22F02002 		bic	r2, r2, #32
 3771 005e 45EA0201 		orr	r1, r5, r2
 3772 0062 5960     		str	r1, [r3, #4]
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3773              		.loc 1 482 0
 3774 0064 1A68     		ldr	r2, [r3]
 3775 0066 42F00102 		orr	r2, r2, #1
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3776              		.loc 1 485 0
 3777 006a 2046     		mov	r0, r4
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3778              		.loc 1 482 0
 3779 006c 1A60     		str	r2, [r3]
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3780              		.loc 1 486 0
 3781 006e BDE83840 		pop	{r3, r4, r5, lr}
 3782              	.LCFI70:
 3783              		.cfi_remember_state
 3784              		.cfi_restore 14
 3785              		.cfi_restore 5
ARM GAS  /tmp/ccinMcHI.s 			page 125


 3786              		.cfi_restore 4
 3787              		.cfi_restore 3
 3788              		.cfi_def_cfa_offset 0
 3789              	.LVL283:
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3790              		.loc 1 485 0
 3791 0072 FFF7FEBF 		b	UART_CheckIdleState
 3792              	.LVL284:
 3793              	.L431:
 3794              	.LCFI71:
 3795              		.cfi_restore_state
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3796              		.loc 1 486 0
 3797 0076 0120     		movs	r0, #1
 3798 0078 38BD     		pop	{r3, r4, r5, pc}
 3799              	.LVL285:
 3800              	.L446:
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3801              		.loc 1 447 0
 3802 007a 80F86820 		strb	r2, [r0, #104]
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3803              		.loc 1 450 0
 3804 007e FFF7FEFF 		bl	HAL_UART_MspInit
 3805              	.LVL286:
 3806 0082 CDE7     		b	.L433
 3807              	.L447:
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3808              		.loc 1 466 0
 3809 0084 2046     		mov	r0, r4
 3810 0086 FFF7FEFF 		bl	UART_AdvFeatureConfig
 3811              	.LVL287:
 3812 008a D8E7     		b	.L434
 3813              	.LVL288:
 3814              	.L445:
 3815              	.LCFI72:
 3816              		.cfi_def_cfa_offset 0
 3817              		.cfi_restore 3
 3818              		.cfi_restore 4
 3819              		.cfi_restore 5
 3820              		.cfi_restore 14
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3821              		.loc 1 486 0
 3822 008c 0120     		movs	r0, #1
 3823              	.LVL289:
 3824 008e 7047     		bx	lr
 3825              		.cfi_endproc
 3826              	.LFE694:
 3828              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 3829              		.align	2
 3830              		.global	HAL_MultiProcessor_Init
 3831              		.thumb
 3832              		.thumb_func
 3834              	HAL_MultiProcessor_Init:
 3835              	.LFB695:
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3836              		.loc 1 508 0
 3837              		.cfi_startproc
ARM GAS  /tmp/ccinMcHI.s 			page 126


 3838              		@ args = 0, pretend = 0, frame = 0
 3839              		@ frame_needed = 0, uses_anonymous_args = 0
 3840              	.LVL290:
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3841              		.loc 1 510 0
 3842 0000 0028     		cmp	r0, #0
 3843 0002 44D0     		beq	.L462
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3844              		.loc 1 518 0
 3845 0004 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3846              		.loc 1 508 0
 3847 0008 70B5     		push	{r4, r5, r6, lr}
 3848              	.LCFI73:
 3849              		.cfi_def_cfa_offset 16
 3850              		.cfi_offset 4, -16
 3851              		.cfi_offset 5, -12
 3852              		.cfi_offset 6, -8
 3853              		.cfi_offset 14, -4
 3854 000a 1546     		mov	r5, r2
 3855 000c 0446     		mov	r4, r0
 3856 000e 0E46     		mov	r6, r1
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3857              		.loc 1 518 0
 3858 0010 03F0FF02 		and	r2, r3, #255
 3859              	.LVL291:
 3860 0014 4BB3     		cbz	r3, .L463
 3861              	.LVL292:
 3862              	.L451:
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3863              		.loc 1 530 0
 3864 0016 2268     		ldr	r2, [r4]
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3865              		.loc 1 527 0
 3866 0018 2423     		movs	r3, #36
 3867 001a 84F86930 		strb	r3, [r4, #105]
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3868              		.loc 1 530 0
 3869 001e 1368     		ldr	r3, [r2]
 3870 0020 23F00103 		bic	r3, r3, #1
 3871 0024 1360     		str	r3, [r2]
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3872              		.loc 1 533 0
 3873 0026 2046     		mov	r0, r4
 3874 0028 FFF7FEFF 		bl	UART_SetConfig
 3875              	.LVL293:
 3876 002c 0128     		cmp	r0, #1
 3877 002e 2CD0     		beq	.L450
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3878              		.loc 1 538 0
 3879 0030 636A     		ldr	r3, [r4, #36]
 3880 0032 FBB9     		cbnz	r3, .L464
 3881              	.L453:
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 3882              		.loc 1 546 0
 3883 0034 2368     		ldr	r3, [r4]
 3884 0036 5A68     		ldr	r2, [r3, #4]
ARM GAS  /tmp/ccinMcHI.s 			page 127


 3885 0038 22F49042 		bic	r2, r2, #18432
 3886 003c 5A60     		str	r2, [r3, #4]
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3887              		.loc 1 547 0
 3888 003e 9A68     		ldr	r2, [r3, #8]
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3889              		.loc 1 549 0
 3890 0040 B5F5006F 		cmp	r5, #2048
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3891              		.loc 1 547 0
 3892 0044 22F02A02 		bic	r2, r2, #42
 3893 0048 9A60     		str	r2, [r3, #8]
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3894              		.loc 1 549 0
 3895 004a 17D0     		beq	.L465
 3896              	.L454:
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3897              		.loc 1 556 0
 3898 004c 1968     		ldr	r1, [r3]
 3899 004e 21F40061 		bic	r1, r1, #2048
 3900 0052 45EA0102 		orr	r2, r5, r1
 3901 0056 1A60     		str	r2, [r3]
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3902              		.loc 1 559 0
 3903 0058 1A68     		ldr	r2, [r3]
 3904 005a 42F00102 		orr	r2, r2, #1
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3905              		.loc 1 562 0
 3906 005e 2046     		mov	r0, r4
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3907              		.loc 1 559 0
 3908 0060 1A60     		str	r2, [r3]
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3909              		.loc 1 563 0
 3910 0062 BDE87040 		pop	{r4, r5, r6, lr}
 3911              	.LCFI74:
 3912              		.cfi_remember_state
 3913              		.cfi_restore 14
 3914              		.cfi_restore 6
 3915              		.cfi_restore 5
 3916              		.cfi_restore 4
 3917              		.cfi_def_cfa_offset 0
 3918              	.LVL294:
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3919              		.loc 1 562 0
 3920 0066 FFF7FEBF 		b	UART_CheckIdleState
 3921              	.LVL295:
 3922              	.L463:
 3923              	.LCFI75:
 3924              		.cfi_restore_state
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3925              		.loc 1 521 0
 3926 006a 80F86820 		strb	r2, [r0, #104]
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3927              		.loc 1 524 0
 3928 006e FFF7FEFF 		bl	HAL_UART_MspInit
 3929              	.LVL296:
ARM GAS  /tmp/ccinMcHI.s 			page 128


 3930 0072 D0E7     		b	.L451
 3931              	.L464:
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3932              		.loc 1 540 0
 3933 0074 2046     		mov	r0, r4
 3934 0076 FFF7FEFF 		bl	UART_AdvFeatureConfig
 3935              	.LVL297:
 3936 007a DBE7     		b	.L453
 3937              	.L465:
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3938              		.loc 1 552 0
 3939 007c 5968     		ldr	r1, [r3, #4]
 3940 007e 21F07F41 		bic	r1, r1, #-16777216
 3941 0082 41EA0666 		orr	r6, r1, r6, lsl #24
 3942 0086 5E60     		str	r6, [r3, #4]
 3943 0088 E0E7     		b	.L454
 3944              	.L450:
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3945              		.loc 1 563 0
 3946 008a 0120     		movs	r0, #1
 3947 008c 70BD     		pop	{r4, r5, r6, pc}
 3948              	.LVL298:
 3949              	.L462:
 3950              	.LCFI76:
 3951              		.cfi_def_cfa_offset 0
 3952              		.cfi_restore 4
 3953              		.cfi_restore 5
 3954              		.cfi_restore 6
 3955              		.cfi_restore 14
 3956 008e 0120     		movs	r0, #1
 3957              	.LVL299:
 3958 0090 7047     		bx	lr
 3959              		.cfi_endproc
 3960              	.LFE695:
 3962 0092 00BF     		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 3963              		.align	2
 3964              		.global	HAL_MultiProcessor_EnableMuteMode
 3965              		.thumb
 3966              		.thumb_func
 3968              	HAL_MultiProcessor_EnableMuteMode:
 3969              	.LFB723:
1913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 3970              		.loc 1 1913 0
 3971              		.cfi_startproc
 3972              		@ args = 0, pretend = 0, frame = 0
 3973              		@ frame_needed = 0, uses_anonymous_args = 0
 3974              		@ link register save eliminated.
 3975              	.LVL300:
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3976              		.loc 1 1915 0
 3977 0000 90F86820 		ldrb	r2, [r0, #104]	@ zero_extendqisi2
 3978 0004 012A     		cmp	r2, #1
 3979 0006 01D1     		bne	.L469
1925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3980              		.loc 1 1925 0
 3981 0008 0220     		movs	r0, #2
 3982              	.LVL301:
ARM GAS  /tmp/ccinMcHI.s 			page 129


 3983 000a 7047     		bx	lr
 3984              	.LVL302:
 3985              	.L469:
1913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 3986              		.loc 1 1913 0 discriminator 2
 3987 000c 30B4     		push	{r4, r5}
 3988              	.LCFI77:
 3989              		.cfi_def_cfa_offset 8
 3990              		.cfi_offset 4, -8
 3991              		.cfi_offset 5, -4
1917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3992              		.loc 1 1917 0 discriminator 2
 3993 000e 2422     		movs	r2, #36
1920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3994              		.loc 1 1920 0 discriminator 2
 3995 0010 0168     		ldr	r1, [r0]
1917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3996              		.loc 1 1917 0 discriminator 2
 3997 0012 80F86920 		strb	r2, [r0, #105]
1920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3998              		.loc 1 1920 0 discriminator 2
 3999 0016 0A68     		ldr	r2, [r1]
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4000              		.loc 1 1915 0 discriminator 2
 4001 0018 0125     		movs	r5, #1
1922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4002              		.loc 1 1922 0 discriminator 2
 4003 001a 2024     		movs	r4, #32
1920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4004              		.loc 1 1920 0 discriminator 2
 4005 001c 42F40052 		orr	r2, r2, #8192
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4006              		.loc 1 1915 0 discriminator 2
 4007 0020 80F86850 		strb	r5, [r0, #104]
1920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4008              		.loc 1 1920 0 discriminator 2
 4009 0024 0A60     		str	r2, [r1]
1922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4010              		.loc 1 1922 0 discriminator 2
 4011 0026 80F86940 		strb	r4, [r0, #105]
1925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4012              		.loc 1 1925 0 discriminator 2
 4013 002a 30BC     		pop	{r4, r5}
 4014              	.LCFI78:
 4015              		.cfi_restore 5
 4016              		.cfi_restore 4
 4017              		.cfi_def_cfa_offset 0
1924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4018              		.loc 1 1924 0 discriminator 2
 4019 002c FFF7FEBF 		b	UART_CheckIdleState
 4020              	.LVL303:
 4021              		.cfi_endproc
 4022              	.LFE723:
 4024              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 4025              		.align	2
 4026              		.global	HAL_MultiProcessor_DisableMuteMode
 4027              		.thumb
ARM GAS  /tmp/ccinMcHI.s 			page 130


 4028              		.thumb_func
 4030              	HAL_MultiProcessor_DisableMuteMode:
 4031              	.LFB724:
1934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 4032              		.loc 1 1934 0
 4033              		.cfi_startproc
 4034              		@ args = 0, pretend = 0, frame = 0
 4035              		@ frame_needed = 0, uses_anonymous_args = 0
 4036              		@ link register save eliminated.
 4037              	.LVL304:
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4038              		.loc 1 1936 0
 4039 0000 90F86820 		ldrb	r2, [r0, #104]	@ zero_extendqisi2
 4040 0004 012A     		cmp	r2, #1
 4041 0006 01D1     		bne	.L473
1946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4042              		.loc 1 1946 0
 4043 0008 0220     		movs	r0, #2
 4044              	.LVL305:
 4045 000a 7047     		bx	lr
 4046              	.LVL306:
 4047              	.L473:
1934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 4048              		.loc 1 1934 0 discriminator 2
 4049 000c 30B4     		push	{r4, r5}
 4050              	.LCFI79:
 4051              		.cfi_def_cfa_offset 8
 4052              		.cfi_offset 4, -8
 4053              		.cfi_offset 5, -4
1938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4054              		.loc 1 1938 0 discriminator 2
 4055 000e 2422     		movs	r2, #36
1941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4056              		.loc 1 1941 0 discriminator 2
 4057 0010 0168     		ldr	r1, [r0]
1938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4058              		.loc 1 1938 0 discriminator 2
 4059 0012 80F86920 		strb	r2, [r0, #105]
1941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4060              		.loc 1 1941 0 discriminator 2
 4061 0016 0A68     		ldr	r2, [r1]
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4062              		.loc 1 1936 0 discriminator 2
 4063 0018 0125     		movs	r5, #1
1943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4064              		.loc 1 1943 0 discriminator 2
 4065 001a 2024     		movs	r4, #32
1941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4066              		.loc 1 1941 0 discriminator 2
 4067 001c 22F40052 		bic	r2, r2, #8192
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4068              		.loc 1 1936 0 discriminator 2
 4069 0020 80F86850 		strb	r5, [r0, #104]
1941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4070              		.loc 1 1941 0 discriminator 2
 4071 0024 0A60     		str	r2, [r1]
1943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccinMcHI.s 			page 131


 4072              		.loc 1 1943 0 discriminator 2
 4073 0026 80F86940 		strb	r4, [r0, #105]
1946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4074              		.loc 1 1946 0 discriminator 2
 4075 002a 30BC     		pop	{r4, r5}
 4076              	.LCFI80:
 4077              		.cfi_restore 5
 4078              		.cfi_restore 4
 4079              		.cfi_def_cfa_offset 0
1945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4080              		.loc 1 1945 0 discriminator 2
 4081 002c FFF7FEBF 		b	UART_CheckIdleState
 4082              	.LVL307:
 4083              		.cfi_endproc
 4084              	.LFE724:
 4086              		.section	.text.UART_Transmit_IT,"ax",%progbits
 4087              		.align	2
 4088              		.global	UART_Transmit_IT
 4089              		.thumb
 4090              		.thumb_func
 4092              	UART_Transmit_IT:
 4093              	.LFB747:
2642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Send an amount of data in interrupt mode.
2646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
2648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4094              		.loc 1 2652 0
 4095              		.cfi_startproc
 4096              		@ args = 0, pretend = 0, frame = 0
 4097              		@ frame_needed = 0, uses_anonymous_args = 0
 4098              		@ link register save eliminated.
 4099              	.LVL308:
2653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
2654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 4100              		.loc 1 2656 0
 4101 0000 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 4102 0004 212B     		cmp	r3, #33
 4103 0006 01D0     		beq	.L480
2657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->TxXferCount == 0U)
2659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
2661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
2662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
2664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
2665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_OK;
ARM GAS  /tmp/ccinMcHI.s 			page 132


2667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
2669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
2671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         tmp = (uint16_t*) huart->pTxBuffPtr;
2673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
2674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
2675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
2677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFFU);
2679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount--;
2681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_OK;
2683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 4104              		.loc 1 2687 0
 4105 0008 0220     		movs	r0, #2
 4106              	.LVL309:
2688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4107              		.loc 1 2689 0
 4108 000a 7047     		bx	lr
 4109              	.LVL310:
 4110              	.L480:
2658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4111              		.loc 1 2658 0
 4112 000c B0F85230 		ldrh	r3, [r0, #82]
 4113 0010 9BB2     		uxth	r3, r3
 4114 0012 8BB1     		cbz	r3, .L481
2670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 4115              		.loc 1 2670 0
 4116 0014 8368     		ldr	r3, [r0, #8]
 4117 0016 B3F5805F 		cmp	r3, #4096
 4118 001a 18D0     		beq	.L482
 4119              	.L477:
2678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 4120              		.loc 1 2678 0
 4121 001c C36C     		ldr	r3, [r0, #76]
 4122 001e 0268     		ldr	r2, [r0]
 4123 0020 591C     		adds	r1, r3, #1
 4124 0022 C164     		str	r1, [r0, #76]
 4125 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4126 0026 1385     		strh	r3, [r2, #40]	@ movhi
 4127              	.L478:
2680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4128              		.loc 1 2680 0
 4129 0028 B0F85230 		ldrh	r3, [r0, #82]
 4130 002c 013B     		subs	r3, r3, #1
 4131 002e 9BB2     		uxth	r3, r3
 4132 0030 A0F85230 		strh	r3, [r0, #82]	@ movhi
2682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
ARM GAS  /tmp/ccinMcHI.s 			page 133


 4133              		.loc 1 2682 0
 4134 0034 0020     		movs	r0, #0
 4135              	.LVL311:
 4136 0036 7047     		bx	lr
 4137              	.LVL312:
 4138              	.L481:
 4139              	.LBB30:
 4140              	.LBB31:
2661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4141              		.loc 1 2661 0
 4142 0038 0268     		ldr	r2, [r0]
 4143 003a 1168     		ldr	r1, [r2]
 4144 003c 21F08001 		bic	r1, r1, #128
 4145 0040 1160     		str	r1, [r2]
2664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4146              		.loc 1 2664 0
 4147 0042 1168     		ldr	r1, [r2]
 4148 0044 41F04001 		orr	r1, r1, #64
 4149 0048 1846     		mov	r0, r3
 4150              	.LVL313:
 4151 004a 1160     		str	r1, [r2]
 4152 004c 7047     		bx	lr
 4153              	.LVL314:
 4154              	.L482:
 4155              	.LBE31:
 4156              	.LBE30:
2670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 4157              		.loc 1 2670 0 discriminator 1
 4158 004e 0369     		ldr	r3, [r0, #16]
 4159 0050 002B     		cmp	r3, #0
 4160 0052 E3D1     		bne	.L477
 4161              	.LVL315:
2673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 4162              		.loc 1 2673 0
 4163 0054 C36C     		ldr	r3, [r0, #76]
 4164 0056 0168     		ldr	r1, [r0]
 4165 0058 33F8022B 		ldrh	r2, [r3], #2
 4166 005c C2F30802 		ubfx	r2, r2, #0, #9
 4167 0060 0A85     		strh	r2, [r1, #40]	@ movhi
2674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 4168              		.loc 1 2674 0
 4169 0062 C364     		str	r3, [r0, #76]
 4170              	.LVL316:
 4171 0064 E0E7     		b	.L478
 4172              		.cfi_endproc
 4173              	.LFE747:
 4175 0066 00BF     		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 4176              		.align	2
 4177              		.global	UART_EndTransmit_IT
 4178              		.thumb
 4179              		.thumb_func
 4181              	UART_EndTransmit_IT:
 4182              	.LFB748:
2690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
2693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
ARM GAS  /tmp/ccinMcHI.s 			page 134


2694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *               the configuration information for the specified UART module.
2695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4183              		.loc 1 2698 0
 4184              		.cfi_startproc
 4185              		@ args = 0, pretend = 0, frame = 0
 4186              		@ frame_needed = 0, uses_anonymous_args = 0
 4187              	.LVL317:
2699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
2700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 4188              		.loc 1 2700 0
 4189 0000 0168     		ldr	r1, [r0]
2698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
 4190              		.loc 1 2698 0
 4191 0002 10B5     		push	{r4, lr}
 4192              	.LCFI81:
 4193              		.cfi_def_cfa_offset 8
 4194              		.cfi_offset 4, -8
 4195              		.cfi_offset 14, -4
 4196              		.loc 1 2700 0
 4197 0004 0B68     		ldr	r3, [r1]
2701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4198              		.loc 1 2703 0
 4199 0006 2024     		movs	r4, #32
2700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4200              		.loc 1 2700 0
 4201 0008 23F04003 		bic	r3, r3, #64
 4202 000c 0B60     		str	r3, [r1]
 4203              		.loc 1 2703 0
 4204 000e 80F86940 		strb	r4, [r0, #105]
2704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 4205              		.loc 1 2705 0
 4206 0012 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 4207              	.LVL318:
2706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4208              		.loc 1 2708 0
 4209 0016 0020     		movs	r0, #0
 4210 0018 10BD     		pop	{r4, pc}
 4211              		.cfi_endproc
 4212              	.LFE748:
 4214 001a 00BF     		.section	.text.UART_Receive_IT,"ax",%progbits
 4215              		.align	2
 4216              		.global	UART_Receive_IT
 4217              		.thumb
 4218              		.thumb_func
 4220              	UART_Receive_IT:
 4221              	.LFB749:
2709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Receive an amount of data in interrupt mode.
ARM GAS  /tmp/ccinMcHI.s 			page 135


2712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
2714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4222              		.loc 1 2718 0
 4223              		.cfi_startproc
 4224              		@ args = 0, pretend = 0, frame = 0
 4225              		@ frame_needed = 0, uses_anonymous_args = 0
 4226              	.LVL319:
 4227 0000 38B5     		push	{r3, r4, r5, lr}
 4228              	.LCFI82:
 4229              		.cfi_def_cfa_offset 16
 4230              		.cfi_offset 3, -16
 4231              		.cfi_offset 4, -12
 4232              		.cfi_offset 5, -8
 4233              		.cfi_offset 14, -4
2719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
2720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
2721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t  uhdata;
2722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 4234              		.loc 1 2724 0
 4235 0002 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
2720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t  uhdata;
 4236              		.loc 1 2720 0
 4237 0006 B0F85C20 		ldrh	r2, [r0, #92]
 4238              	.LVL320:
 4239              		.loc 1 2724 0
 4240 000a 222B     		cmp	r3, #34
 4241 000c 06D0     		beq	.L492
2725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
2727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
2728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr ;
2730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
2731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->pRxBuffPtr +=2U;
2732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
2734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       *huart->pRxBuffPtr++ = (uint8_t)(uhdata & (uint8_t)uhMask);
2736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(--huart->RxXferCount == 0U)
2739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
2741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
2747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
ARM GAS  /tmp/ccinMcHI.s 			page 136


2748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
2750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_OK;
2752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
2755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
2759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 4242              		.loc 1 2759 0
 4243 000e 0268     		ldr	r2, [r0]
 4244              	.LVL321:
 4245 0010 9369     		ldr	r3, [r2, #24]
 4246 0012 43F00803 		orr	r3, r3, #8
 4247 0016 9361     		str	r3, [r2, #24]
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 4248              		.loc 1 2761 0
 4249 0018 0220     		movs	r0, #2
 4250              	.LVL322:
 4251 001a 38BD     		pop	{r3, r4, r5, pc}
 4252              	.LVL323:
 4253              	.L492:
2726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 4254              		.loc 1 2726 0
 4255 001c 0368     		ldr	r3, [r0]
2727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4256              		.loc 1 2727 0
 4257 001e 8168     		ldr	r1, [r0, #8]
2726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 4258              		.loc 1 2726 0
 4259 0020 9B8C     		ldrh	r3, [r3, #36]
2727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4260              		.loc 1 2727 0
 4261 0022 B1F5805F 		cmp	r1, #4096
2726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 4262              		.loc 1 2726 0
 4263 0026 9BB2     		uxth	r3, r3
 4264              	.LVL324:
2727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4265              		.loc 1 2727 0
 4266 0028 1ED0     		beq	.L493
 4267              	.L487:
2735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4268              		.loc 1 2735 0
 4269 002a 416D     		ldr	r1, [r0, #84]
 4270 002c 1A40     		ands	r2, r2, r3
 4271              	.LVL325:
 4272 002e 4B1C     		adds	r3, r1, #1
 4273              	.LVL326:
 4274 0030 4365     		str	r3, [r0, #84]
 4275 0032 0A70     		strb	r2, [r1]
 4276              	.LVL327:
 4277              	.L488:
ARM GAS  /tmp/ccinMcHI.s 			page 137


2738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4278              		.loc 1 2738 0
 4279 0034 B0F85A40 		ldrh	r4, [r0, #90]
 4280 0038 013C     		subs	r4, r4, #1
 4281 003a A4B2     		uxth	r4, r4
 4282 003c A0F85A40 		strh	r4, [r0, #90]	@ movhi
 4283 0040 0CB1     		cbz	r4, .L494
2754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4284              		.loc 1 2754 0
 4285 0042 0020     		movs	r0, #0
 4286              	.LVL328:
2762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4287              		.loc 1 2763 0
 4288 0044 38BD     		pop	{r3, r4, r5, pc}
 4289              	.LVL329:
 4290              	.L494:
 4291              	.LBB34:
 4292              	.LBB35:
2741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4293              		.loc 1 2741 0
 4294 0046 0368     		ldr	r3, [r0]
 4295 0048 1968     		ldr	r1, [r3]
 4296 004a 21F49071 		bic	r1, r1, #288
 4297 004e 1960     		str	r1, [r3]
2744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4298              		.loc 1 2744 0
 4299 0050 9968     		ldr	r1, [r3, #8]
 4300 0052 0246     		mov	r2, r0
 4301              	.LVL330:
 4302 0054 21F00101 		bic	r1, r1, #1
2747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4303              		.loc 1 2747 0
 4304 0058 2025     		movs	r5, #32
2744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4305              		.loc 1 2744 0
 4306 005a 9960     		str	r1, [r3, #8]
2747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4307              		.loc 1 2747 0
 4308 005c 82F86A50 		strb	r5, [r2, #106]
2749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4309              		.loc 1 2749 0
 4310 0060 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 4311              	.LVL331:
 4312 0064 2046     		mov	r0, r4
 4313 0066 38BD     		pop	{r3, r4, r5, pc}
 4314              	.LVL332:
 4315              	.L493:
 4316              	.LBE35:
 4317              	.LBE34:
2727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4318              		.loc 1 2727 0 discriminator 1
 4319 0068 0169     		ldr	r1, [r0, #16]
 4320 006a 0029     		cmp	r1, #0
 4321 006c DDD1     		bne	.L487
 4322              	.LVL333:
2730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->pRxBuffPtr +=2U;
ARM GAS  /tmp/ccinMcHI.s 			page 138


 4323              		.loc 1 2730 0
 4324 006e 416D     		ldr	r1, [r0, #84]
 4325 0070 1A40     		ands	r2, r2, r3
 4326              	.LVL334:
 4327 0072 21F8022B 		strh	r2, [r1], #2	@ movhi
 4328              	.LVL335:
2731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4329              		.loc 1 2731 0
 4330 0076 4165     		str	r1, [r0, #84]
 4331              	.LVL336:
 4332 0078 DCE7     		b	.L488
 4333              		.cfi_endproc
 4334              	.LFE749:
 4336 007a 00BF     		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 4337              		.align	2
 4338              		.global	HAL_UART_IRQHandler
 4339              		.thumb
 4340              		.thumb_func
 4342              	HAL_UART_IRQHandler:
 4343              	.LFB714:
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 4344              		.loc 1 1617 0
 4345              		.cfi_startproc
 4346              		@ args = 0, pretend = 0, frame = 0
 4347              		@ frame_needed = 0, uses_anonymous_args = 0
 4348              	.LVL337:
1618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 4349              		.loc 1 1618 0
 4350 0000 0368     		ldr	r3, [r0]
 4351 0002 DA69     		ldr	r2, [r3, #28]
 4352              	.LVL338:
1619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr3its;
 4353              		.loc 1 1619 0
 4354 0004 1968     		ldr	r1, [r3]
 4355              	.LVL339:
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 4356              		.loc 1 1617 0
 4357 0006 70B5     		push	{r4, r5, r6, lr}
 4358              	.LCFI83:
 4359              		.cfi_def_cfa_offset 16
 4360              		.cfi_offset 4, -16
 4361              		.cfi_offset 5, -12
 4362              		.cfi_offset 6, -8
 4363              		.cfi_offset 14, -4
1625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4364              		.loc 1 1625 0
 4365 0008 1507     		lsls	r5, r2, #28
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 4366              		.loc 1 1617 0
 4367 000a 0446     		mov	r4, r0
1625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4368              		.loc 1 1625 0
 4369 000c 11D1     		bne	.L496
1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4370              		.loc 1 1628 0
 4371 000e 9606     		lsls	r6, r2, #26
 4372 0010 58D4     		bmi	.L581
ARM GAS  /tmp/ccinMcHI.s 			page 139


 4373              	.L497:
1636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(   (errorflags != RESET)
 4374              		.loc 1 1636 0
 4375 0012 9868     		ldr	r0, [r3, #8]
 4376              	.LVL340:
 4377              	.L498:
1737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4378              		.loc 1 1737 0
 4379 0014 D502     		lsls	r5, r2, #11
 4380 0016 02D5     		bpl	.L514
1737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4381              		.loc 1 1737 0 is_stmt 0 discriminator 1
 4382 0018 4002     		lsls	r0, r0, #9
 4383              	.LVL341:
 4384 001a 00F18780 		bmi	.L582
 4385              	.L514:
1748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4386              		.loc 1 1748 0 is_stmt 1
 4387 001e 1606     		lsls	r6, r2, #24
 4388 0020 02D5     		bpl	.L515
1748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4389              		.loc 1 1748 0 is_stmt 0 discriminator 1
 4390 0022 0D06     		lsls	r5, r1, #24
 4391 0024 00F19380 		bmi	.L583
 4392              	.L515:
1755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4393              		.loc 1 1755 0 is_stmt 1
 4394 0028 5006     		lsls	r0, r2, #25
 4395 002a 01D5     		bpl	.L495
1755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4396              		.loc 1 1755 0 is_stmt 0 discriminator 1
 4397 002c 4A06     		lsls	r2, r1, #25
 4398              	.LVL342:
 4399 002e 62D4     		bmi	.L584
 4400              	.LVL343:
 4401              	.L495:
 4402 0030 70BD     		pop	{r4, r5, r6, pc}
 4403              	.LVL344:
 4404              	.L496:
1636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(   (errorflags != RESET)
 4405              		.loc 1 1636 0 is_stmt 1
 4406 0032 9868     		ldr	r0, [r3, #8]
 4407              	.LVL345:
1638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
 4408              		.loc 1 1638 0
 4409 0034 10F00105 		ands	r5, r0, #1
 4410 0038 4AD0     		beq	.L585
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4411              		.loc 1 1642 0
 4412 003a D607     		lsls	r6, r2, #31
 4413 003c 07D5     		bpl	.L499
 4414              	.L588:
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4415              		.loc 1 1642 0 is_stmt 0 discriminator 1
 4416 003e C805     		lsls	r0, r1, #23
 4417              	.LVL346:
 4418 0040 05D5     		bpl	.L499
ARM GAS  /tmp/ccinMcHI.s 			page 140


1644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4419              		.loc 1 1644 0 is_stmt 1
 4420 0042 0120     		movs	r0, #1
 4421 0044 1862     		str	r0, [r3, #32]
1646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4422              		.loc 1 1646 0
 4423 0046 E06E     		ldr	r0, [r4, #108]
 4424 0048 40F00100 		orr	r0, r0, #1
 4425 004c E066     		str	r0, [r4, #108]
 4426              	.L499:
1650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4427              		.loc 1 1650 0
 4428 004e 9607     		lsls	r6, r2, #30
 4429 0050 44D5     		bpl	.L500
1650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4430              		.loc 1 1650 0 is_stmt 0 discriminator 1
 4431 0052 3DB1     		cbz	r5, .L502
1652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4432              		.loc 1 1652 0 is_stmt 1
 4433 0054 0220     		movs	r0, #2
 4434 0056 1862     		str	r0, [r3, #32]
1654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4435              		.loc 1 1654 0
 4436 0058 E06E     		ldr	r0, [r4, #108]
 4437 005a 40F00400 		orr	r0, r0, #4
 4438 005e E066     		str	r0, [r4, #108]
1658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4439              		.loc 1 1658 0
 4440 0060 5007     		lsls	r0, r2, #29
 4441 0062 3FD4     		bmi	.L504
 4442              	.L502:
1666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 4443              		.loc 1 1666 0
 4444 0064 1007     		lsls	r0, r2, #28
 4445 0066 03D5     		bpl	.L505
 4446              	.L589:
1666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 4447              		.loc 1 1666 0 is_stmt 0 discriminator 1
 4448 0068 8E06     		lsls	r6, r1, #26
 4449 006a 58D4     		bmi	.L506
1667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4450              		.loc 1 1667 0 is_stmt 1
 4451 006c 002D     		cmp	r5, #0
 4452 006e 56D1     		bne	.L506
 4453              	.L505:
1675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4454              		.loc 1 1675 0
 4455 0070 E06E     		ldr	r0, [r4, #108]
 4456 0072 0028     		cmp	r0, #0
 4457 0074 DCD0     		beq	.L495
1678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 4458              		.loc 1 1678 0
 4459 0076 9006     		lsls	r0, r2, #26
 4460 0078 01D5     		bpl	.L509
1678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 4461              		.loc 1 1678 0 is_stmt 0 discriminator 1
 4462 007a 8906     		lsls	r1, r1, #26
ARM GAS  /tmp/ccinMcHI.s 			page 141


 4463              	.LVL347:
 4464 007c 6CD4     		bmi	.L586
 4465              	.LVL348:
 4466              	.L509:
1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 4467              		.loc 1 1685 0 is_stmt 1
 4468 007e E26E     		ldr	r2, [r4, #108]
 4469 0080 1207     		lsls	r2, r2, #28
 4470 0082 43D5     		bpl	.L587
 4471              	.L510:
 4472              	.LVL349:
 4473              	.LBB36:
 4474              	.LBB37:
2381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4475              		.loc 1 2381 0
 4476 0084 1A68     		ldr	r2, [r3]
 4477 0086 22F49072 		bic	r2, r2, #288
 4478 008a 1A60     		str	r2, [r3]
2382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4479              		.loc 1 2382 0
 4480 008c 9A68     		ldr	r2, [r3, #8]
2385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4481              		.loc 1 2385 0
 4482 008e 2021     		movs	r1, #32
2382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4483              		.loc 1 2382 0
 4484 0090 22F00102 		bic	r2, r2, #1
 4485 0094 9A60     		str	r2, [r3, #8]
2385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4486              		.loc 1 2385 0
 4487 0096 84F86A10 		strb	r1, [r4, #106]
 4488              	.LBE37:
 4489              	.LBE36:
1694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 4490              		.loc 1 1694 0
 4491 009a 9A68     		ldr	r2, [r3, #8]
 4492 009c 5606     		lsls	r6, r2, #25
 4493 009e 52D5     		bpl	.L512
1696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4494              		.loc 1 1696 0
 4495 00a0 9A68     		ldr	r2, [r3, #8]
1699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           {
 4496              		.loc 1 1699 0
 4497 00a2 606E     		ldr	r0, [r4, #100]
1696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4498              		.loc 1 1696 0
 4499 00a4 22F04002 		bic	r2, r2, #64
 4500 00a8 9A60     		str	r2, [r3, #8]
1699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           {
 4501              		.loc 1 1699 0
 4502 00aa 0028     		cmp	r0, #0
 4503 00ac 4BD0     		beq	.L512
1703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4504              		.loc 1 1703 0
 4505 00ae 2D4B     		ldr	r3, .L590
 4506 00b0 4363     		str	r3, [r0, #52]
1706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             {
ARM GAS  /tmp/ccinMcHI.s 			page 142


 4507              		.loc 1 1706 0
 4508 00b2 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4509              	.LVL350:
 4510 00b6 0028     		cmp	r0, #0
 4511 00b8 BAD0     		beq	.L495
1709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             }
 4512              		.loc 1 1709 0
 4513 00ba 606E     		ldr	r0, [r4, #100]
1761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4514              		.loc 1 1761 0
 4515 00bc BDE87040 		pop	{r4, r5, r6, lr}
 4516              	.LCFI84:
 4517              		.cfi_remember_state
 4518              		.cfi_restore 14
 4519              		.cfi_restore 6
 4520              		.cfi_restore 5
 4521              		.cfi_restore 4
 4522              		.cfi_def_cfa_offset 0
 4523              	.LVL351:
1709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             }
 4524              		.loc 1 1709 0
 4525 00c0 436B     		ldr	r3, [r0, #52]
 4526 00c2 1847     		bx	r3	@ indirect register sibling call
 4527              	.LVL352:
 4528              	.L581:
 4529              	.LCFI85:
 4530              		.cfi_restore_state
1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4531              		.loc 1 1628 0 discriminator 1
 4532 00c4 8D06     		lsls	r5, r1, #26
 4533 00c6 A4D5     		bpl	.L497
1761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4534              		.loc 1 1761 0
 4535 00c8 BDE87040 		pop	{r4, r5, r6, lr}
 4536              	.LCFI86:
 4537              		.cfi_remember_state
 4538              		.cfi_restore 14
 4539              		.cfi_restore 6
 4540              		.cfi_restore 5
 4541              		.cfi_restore 4
 4542              		.cfi_def_cfa_offset 0
1630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
 4543              		.loc 1 1630 0
 4544 00cc FFF7FEBF 		b	UART_Receive_IT
 4545              	.LVL353:
 4546              	.L585:
 4547              	.LCFI87:
 4548              		.cfi_restore_state
1639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4549              		.loc 1 1639 0
 4550 00d0 11F4907F 		tst	r1, #288
 4551 00d4 9ED0     		beq	.L498
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4552              		.loc 1 1642 0
 4553 00d6 D607     		lsls	r6, r2, #31
 4554 00d8 B9D5     		bpl	.L499
 4555 00da B0E7     		b	.L588
ARM GAS  /tmp/ccinMcHI.s 			page 143


 4556              	.LVL354:
 4557              	.L500:
1658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4558              		.loc 1 1658 0
 4559 00dc 5607     		lsls	r6, r2, #29
 4560 00de C1D5     		bpl	.L502
1658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4561              		.loc 1 1658 0 is_stmt 0 discriminator 1
 4562 00e0 002D     		cmp	r5, #0
 4563 00e2 BFD0     		beq	.L502
 4564              	.L504:
1660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4565              		.loc 1 1660 0 is_stmt 1
 4566 00e4 0420     		movs	r0, #4
 4567 00e6 1862     		str	r0, [r3, #32]
1662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4568              		.loc 1 1662 0
 4569 00e8 E06E     		ldr	r0, [r4, #108]
 4570 00ea 40F00200 		orr	r0, r0, #2
 4571 00ee E066     		str	r0, [r4, #108]
1666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 4572              		.loc 1 1666 0
 4573 00f0 1007     		lsls	r0, r2, #28
 4574 00f2 BDD5     		bpl	.L505
 4575 00f4 B8E7     		b	.L589
 4576              	.LVL355:
 4577              	.L584:
 4578              	.LBB38:
 4579              	.LBB39:
2700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4580              		.loc 1 2700 0
 4581 00f6 1A68     		ldr	r2, [r3]
2703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4582              		.loc 1 2703 0
 4583 00f8 2021     		movs	r1, #32
 4584              	.LVL356:
2700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4585              		.loc 1 2700 0
 4586 00fa 22F04002 		bic	r2, r2, #64
 4587 00fe 1A60     		str	r2, [r3]
2705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4588              		.loc 1 2705 0
 4589 0100 2046     		mov	r0, r4
2703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4590              		.loc 1 2703 0
 4591 0102 84F86910 		strb	r1, [r4, #105]
2705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4592              		.loc 1 2705 0
 4593 0106 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 4594              	.LVL357:
 4595 010a 70BD     		pop	{r4, r5, r6, pc}
 4596              	.LVL358:
 4597              	.L587:
 4598              	.LBE39:
 4599              	.LBE38:
1686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {  
 4600              		.loc 1 1686 0 discriminator 1
ARM GAS  /tmp/ccinMcHI.s 			page 144


 4601 010c 9A68     		ldr	r2, [r3, #8]
1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 4602              		.loc 1 1685 0 discriminator 1
 4603 010e 12F04005 		ands	r5, r2, #64
 4604 0112 B7D1     		bne	.L510
1728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 4605              		.loc 1 1728 0
 4606 0114 2046     		mov	r0, r4
 4607 0116 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4608              	.LVL359:
1729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 4609              		.loc 1 1729 0
 4610 011a E566     		str	r5, [r4, #108]
 4611 011c 70BD     		pop	{r4, r5, r6, pc}
 4612              	.LVL360:
 4613              	.L506:
1669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4614              		.loc 1 1669 0
 4615 011e 0820     		movs	r0, #8
 4616 0120 1862     		str	r0, [r3, #32]
1671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4617              		.loc 1 1671 0
 4618 0122 E06E     		ldr	r0, [r4, #108]
 4619 0124 40F00800 		orr	r0, r0, #8
 4620 0128 E066     		str	r0, [r4, #108]
 4621 012a A1E7     		b	.L505
 4622              	.L582:
1741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 4623              		.loc 1 1741 0
 4624 012c 2022     		movs	r2, #32
 4625              	.LVL361:
1739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
 4626              		.loc 1 1739 0
 4627 012e 4FF48011 		mov	r1, #1048576
 4628              	.LVL362:
 4629 0132 1962     		str	r1, [r3, #32]
1743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
 4630              		.loc 1 1743 0
 4631 0134 2046     		mov	r0, r4
1741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 4632              		.loc 1 1741 0
 4633 0136 84F86920 		strb	r2, [r4, #105]
1742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
 4634              		.loc 1 1742 0
 4635 013a 84F86A20 		strb	r2, [r4, #106]
1761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4636              		.loc 1 1761 0
 4637 013e BDE87040 		pop	{r4, r5, r6, lr}
 4638              	.LCFI88:
 4639              		.cfi_remember_state
 4640              		.cfi_restore 14
 4641              		.cfi_restore 6
 4642              		.cfi_restore 5
 4643              		.cfi_restore 4
 4644              		.cfi_def_cfa_offset 0
 4645              	.LVL363:
1743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
ARM GAS  /tmp/ccinMcHI.s 			page 145


 4646              		.loc 1 1743 0
 4647 0142 FFF7FEBF 		b	HAL_UARTEx_WakeupCallback
 4648              	.LVL364:
 4649              	.L512:
 4650              	.LCFI89:
 4651              		.cfi_restore_state
1715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           }
 4652              		.loc 1 1715 0
 4653 0146 2046     		mov	r0, r4
 4654 0148 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4655              	.LVL365:
 4656 014c 70BD     		pop	{r4, r5, r6, pc}
 4657              	.LVL366:
 4658              	.L583:
1750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
 4659              		.loc 1 1750 0
 4660 014e 2046     		mov	r0, r4
1761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4661              		.loc 1 1761 0
 4662 0150 BDE87040 		pop	{r4, r5, r6, lr}
 4663              	.LCFI90:
 4664              		.cfi_remember_state
 4665              		.cfi_restore 14
 4666              		.cfi_restore 6
 4667              		.cfi_restore 5
 4668              		.cfi_restore 4
 4669              		.cfi_def_cfa_offset 0
 4670              	.LVL367:
1750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
 4671              		.loc 1 1750 0
 4672 0154 FFF7FEBF 		b	UART_Transmit_IT
 4673              	.LVL368:
 4674              	.L586:
 4675              	.LCFI91:
 4676              		.cfi_restore_state
1680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 4677              		.loc 1 1680 0
 4678 0158 2046     		mov	r0, r4
 4679 015a FFF7FEFF 		bl	UART_Receive_IT
 4680              	.LVL369:
 4681 015e 2368     		ldr	r3, [r4]
 4682 0160 8DE7     		b	.L509
 4683              	.L591:
 4684 0162 00BF     		.align	2
 4685              	.L590:
 4686 0164 00000000 		.word	UART_DMAAbortOnError
 4687              		.cfi_endproc
 4688              	.LFE714:
 4690              		.section	.text.UART_Wakeup_AddressConfig,"ax",%progbits
 4691              		.align	2
 4692              		.global	UART_Wakeup_AddressConfig
 4693              		.thumb
 4694              		.thumb_func
 4696              	UART_Wakeup_AddressConfig:
 4697              	.LFB750:
2764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
ARM GAS  /tmp/ccinMcHI.s 			page 146


2766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the UART wake-up from stop mode parameters when triggered by address detectio
2767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param WakeUpSelection UART wake up from stop mode parameters.
2769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void UART_Wakeup_AddressConfig(UART_HandleTypeDef *huart, UART_WakeUpTypeDef WakeUpSelection)
2772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4698              		.loc 1 2772 0
 4699              		.cfi_startproc
 4700              		@ args = 0, pretend = 0, frame = 8
 4701              		@ frame_needed = 0, uses_anonymous_args = 0
 4702              		@ link register save eliminated.
 4703              	.LVL370:
 4704 0000 82B0     		sub	sp, sp, #8
 4705              	.LCFI92:
 4706              		.cfi_def_cfa_offset 8
 4707              		.loc 1 2772 0
 4708 0002 02AB     		add	r3, sp, #8
2773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ADDRESSLENGTH_DETECT(WakeUpSelection.AddressLength));
2774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the USART address length */
2776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADDM7, WakeUpSelection.AddressLength);
 4709              		.loc 1 2776 0
 4710 0004 0068     		ldr	r0, [r0]
 4711              	.LVL371:
2772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ADDRESSLENGTH_DETECT(WakeUpSelection.AddressLength));
 4712              		.loc 1 2772 0
 4713 0006 03E90600 		stmdb	r3, {r1, r2}
 4714              		.loc 1 2776 0
 4715 000a 4268     		ldr	r2, [r0, #4]
 4716 000c BDF80430 		ldrh	r3, [sp, #4]
2777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the USART address node */
2779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)WakeUpSelection.Address << UART_CR2_AD
 4717              		.loc 1 2779 0
 4718 0010 9DF80610 		ldrb	r1, [sp, #6]	@ zero_extendqisi2
2776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4719              		.loc 1 2776 0
 4720 0014 22F01002 		bic	r2, r2, #16
 4721 0018 1A43     		orrs	r2, r2, r3
 4722 001a 4260     		str	r2, [r0, #4]
 4723              		.loc 1 2779 0
 4724 001c 4368     		ldr	r3, [r0, #4]
 4725 001e 23F07F43 		bic	r3, r3, #-16777216
 4726 0022 43EA0163 		orr	r3, r3, r1, lsl #24
 4727 0026 4360     		str	r3, [r0, #4]
2780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4728              		.loc 1 2780 0
 4729 0028 02B0     		add	sp, sp, #8
 4730              	.LCFI93:
 4731              		.cfi_def_cfa_offset 0
 4732              		@ sp needed
 4733 002a 7047     		bx	lr
 4734              		.cfi_endproc
 4735              	.LFE750:
 4737              		.section	.rodata.CSWTCH.45,"a",%progbits
 4738              		.align	2
ARM GAS  /tmp/ccinMcHI.s 			page 147


 4739              		.set	.LANCHOR0,. + 0
 4742              	CSWTCH.45:
 4743 0000 00       		.byte	0
 4744 0001 04       		.byte	4
 4745 0002 08       		.byte	8
 4746 0003 02       		.byte	2
 4747              		.text
 4748              	.Letext0:
 4749              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 4750              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 4751              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 4752              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 4753              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 4754              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 4755              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 4756              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_ll_dma.h"
 4757              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 4758              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 4759              		.file 12 "Drivers/CMSIS/Include/core_cm4.h"
 4760              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart_ex.h"
ARM GAS  /tmp/ccinMcHI.s 			page 148


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_hal_uart.c
     /tmp/ccinMcHI.s:21     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccinMcHI.s:26     .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccinMcHI.s:40     .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccinMcHI.s:45     .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccinMcHI.s:58     .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccinMcHI.s:63     .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccinMcHI.s:131    .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccinMcHI.s:136    .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccinMcHI.s:214    .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccinMcHI.s:219    .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccinMcHI.s:338    .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccinMcHI.s:343    .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccinMcHI.s:452    .text.HAL_UART_Transmit_DMA:0000000000000084 $d
     /tmp/ccinMcHI.s:1205   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccinMcHI.s:1369   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccinMcHI.s:1139   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccinMcHI.s:459    .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccinMcHI.s:464    .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccinMcHI.s:581    .text.HAL_UART_Receive_DMA:0000000000000094 $d
     /tmp/ccinMcHI.s:1324   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccinMcHI.s:1250   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/ccinMcHI.s:588    .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccinMcHI.s:593    .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccinMcHI.s:672    .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccinMcHI.s:677    .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccinMcHI.s:759    .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccinMcHI.s:764    .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccinMcHI.s:884    .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/ccinMcHI.s:889    .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/ccinMcHI.s:984    .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/ccinMcHI.s:989    .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/ccinMcHI.s:1046   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/ccinMcHI.s:1051   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/ccinMcHI.s:1117   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccinMcHI.s:1122   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccinMcHI.s:1135   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccinMcHI.s:1183   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccinMcHI.s:1188   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccinMcHI.s:1201   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccinMcHI.s:1228   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccinMcHI.s:1233   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccinMcHI.s:1246   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccinMcHI.s:1302   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccinMcHI.s:1307   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccinMcHI.s:1320   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccinMcHI.s:1347   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccinMcHI.s:1352   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccinMcHI.s:1365   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccinMcHI.s:1461   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/ccinMcHI.s:1465   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/ccinMcHI.s:1496   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/ccinMcHI.s:1501   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/ccinMcHI.s:1514   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/ccinMcHI.s:1519   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/ccinMcHI.s:1671   .text.HAL_UART_Abort_IT:00000000000000b4 $d
ARM GAS  /tmp/ccinMcHI.s 			page 149


     /tmp/ccinMcHI.s:1748   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/ccinMcHI.s:1681   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/ccinMcHI.s:1677   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccinMcHI.s:1744   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccinMcHI.s:1811   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/ccinMcHI.s:1816   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccinMcHI.s:1829   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/ccinMcHI.s:1834   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/ccinMcHI.s:1921   .text.HAL_UART_AbortTransmit_IT:0000000000000060 $d
     /tmp/ccinMcHI.s:1930   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/ccinMcHI.s:1926   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccinMcHI.s:1964   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/ccinMcHI.s:1969   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccinMcHI.s:1982   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/ccinMcHI.s:1987   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/ccinMcHI.s:2087   .text.HAL_UART_AbortReceive_IT:0000000000000070 $d
     /tmp/ccinMcHI.s:2096   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/ccinMcHI.s:2092   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccinMcHI.s:2137   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccinMcHI.s:2142   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccinMcHI.s:2160   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccinMcHI.s:2165   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccinMcHI.s:2229   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/ccinMcHI.s:2234   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccinMcHI.s:2298   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/ccinMcHI.s:2303   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/ccinMcHI.s:2361   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccinMcHI.s:2366   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccinMcHI.s:2388   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/ccinMcHI.s:2393   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/ccinMcHI.s:2410   .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccinMcHI.s:2415   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccinMcHI.s:2575   .text.UART_SetConfig:00000000000000b8 $d
     /tmp/ccinMcHI.s:2584   .text.UART_SetConfig:00000000000000dc $t
     /tmp/ccinMcHI.s:2668   .text.UART_SetConfig:0000000000000140 $d
     /tmp/ccinMcHI.s:2678   .text.UART_SetConfig:0000000000000164 $t
     /tmp/ccinMcHI.s:2745   .text.UART_SetConfig:00000000000001c0 $d
     /tmp/ccinMcHI.s:2754   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/ccinMcHI.s:2759   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
     /tmp/ccinMcHI.s:2888   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccinMcHI.s:2893   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccinMcHI.s:2981   .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccinMcHI.s:2986   .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccinMcHI.s:3152   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccinMcHI.s:3157   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccinMcHI.s:3367   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/ccinMcHI.s:3372   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/ccinMcHI.s:3481   .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccinMcHI.s:3486   .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccinMcHI.s:3587   .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccinMcHI.s:3592   .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccinMcHI.s:3698   .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/ccinMcHI.s:3703   .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/ccinMcHI.s:3829   .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccinMcHI.s:3834   .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccinMcHI.s:3963   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/ccinMcHI.s:3968   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
ARM GAS  /tmp/ccinMcHI.s 			page 150


     /tmp/ccinMcHI.s:4025   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
     /tmp/ccinMcHI.s:4030   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/ccinMcHI.s:4087   .text.UART_Transmit_IT:0000000000000000 $t
     /tmp/ccinMcHI.s:4092   .text.UART_Transmit_IT:0000000000000000 UART_Transmit_IT
     /tmp/ccinMcHI.s:4176   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccinMcHI.s:4181   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/ccinMcHI.s:4215   .text.UART_Receive_IT:0000000000000000 $t
     /tmp/ccinMcHI.s:4220   .text.UART_Receive_IT:0000000000000000 UART_Receive_IT
     /tmp/ccinMcHI.s:4337   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccinMcHI.s:4342   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccinMcHI.s:4686   .text.HAL_UART_IRQHandler:0000000000000164 $d
     /tmp/ccinMcHI.s:4691   .text.UART_Wakeup_AddressConfig:0000000000000000 $t
     /tmp/ccinMcHI.s:4696   .text.UART_Wakeup_AddressConfig:0000000000000000 UART_Wakeup_AddressConfig
     /tmp/ccinMcHI.s:4738   .rodata.CSWTCH.45:0000000000000000 $d
     /tmp/ccinMcHI.s:4742   .rodata.CSWTCH.45:0000000000000000 CSWTCH.45
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq
HAL_RCC_GetPCLK2Freq
HAL_GetTick
HAL_UARTEx_WakeupCallback
