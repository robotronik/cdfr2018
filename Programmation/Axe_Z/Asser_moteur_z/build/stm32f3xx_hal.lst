ARM GAS  /tmp/ccrtP6s7.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 2
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f3xx_hal.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.HAL_MspInit,"ax",%progbits
  21              		.align	2
  22              		.weak	HAL_MspInit
  23              		.thumb
  24              		.thumb_func
  26              	HAL_MspInit:
  27              	.LFB694:
  28              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @file    stm32f3xx_hal.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   @verbatim
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   ==============================================================================
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     [..]
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL.
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     [..]
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     The HAL contains two APIs categories:
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****          (+) HAL Initialization and de-initialization functions
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****          (+) HAL Control functions
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   @endverbatim
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @attention
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * Redistribution and use in source and binary forms, with or without modification,
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * are permitted provided that the following conditions are met:
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *      this list of conditions and the following disclaimer.
  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
ARM GAS  /tmp/ccrtP6s7.s 			page 2


  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *      this list of conditions and the following disclaimer in the documentation
  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *      and/or other materials provided with the distribution.
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *      may be used to endorse or promote products derived from this software
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *      without specific prior written permission.
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   ******************************************************************************  
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #include "stm32f3xx_hal.h"
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /** @addtogroup STM32F3xx_HAL_Driver
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @{
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /** @defgroup HAL HAL
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief HAL module driver.
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @{
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /* Private define ------------------------------------------------------------*/
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /** @defgroup HAL_Private Constants
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @{
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****  * @brief STM32F3xx HAL Driver version number V1.5.0
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****    */
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #define __STM32F3xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #define __STM32F3xx_HAL_VERSION_SUB1   (0x05U) /*!< [23:16] sub1 version */
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #define __STM32F3xx_HAL_VERSION_SUB2   (0x00U) /*!< [15:8]  sub2 version */
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #define __STM32F3xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #define __STM32F3xx_HAL_VERSION         ((__STM32F3xx_HAL_VERSION_MAIN << 24U)\
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****                                         |(__STM32F3xx_HAL_VERSION_SUB1 << 16U)\
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****                                         |(__STM32F3xx_HAL_VERSION_SUB2 << 8U )\
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****                                         |(__STM32F3xx_HAL_VERSION_RC))
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #define IDCODE_DEVID_MASK    (0x00000FFFU)
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @}
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   
  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /* Private macro -------------------------------------------------------------*/
ARM GAS  /tmp/ccrtP6s7.s 			page 3


  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /** @defgroup HAL_Private_Variables HAL Private Variables
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @{
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** __IO uint32_t uwTick;
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @}
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /* Exported functions ---------------------------------------------------------*/
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @{
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****  *  @brief    Initialization and de-initialization functions
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****  *
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** @verbatim
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****  ===============================================================================
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****               ##### Initialization and de-initialization functions #####
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****  ===============================================================================
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     [..]  This section provides functions allowing to:
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Initializes the Flash interface, the NVIC allocation and initial clock 
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****           configuration. It initializes the source of time base also when timeout 
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****           is needed and the backup domain when enabled.
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) de-Initializes common part of the HAL.
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated 
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****           Tick interrupt priority. 
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****         (++) Systick timer is used by default as source of time base, but user 
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****              handled in milliseconds basis.
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****             ISR process will be blocked. 
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****        (++) functions affecting time base configurations are declared as __Weak  
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** @endverbatim
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @{
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  This function configures the Flash prefetch, 
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         Configures time base source, NVIC and Low level hardware
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note   This function is called at the beginning of program after reset and before 
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         the clock configuration
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *             
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note   The Systick configuration is based on HSI clock, as HSI is the clock
 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         used after a system Reset and the NVIC configuration is set to Priority group 4 
ARM GAS  /tmp/ccrtP6s7.s 			page 4


 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *            
 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note   The time base configuration is based on MSI clock when exting from Reset.
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         Once done, time base tick start incrementing.
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         In the default implementation,Systick is used as source of time base.
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *       The tick variable is incremented each 1ms in its ISR.
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval HAL status
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Configure Flash prefetch */
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #if (PREFETCH_ENABLE != 0U)
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #endif /* PREFETCH_ENABLE */
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Set Interrupt Group Priority */
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Enable systick and configure 1ms tick (default clock after Reset is HSI) */
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Init the low level hardware */
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   HAL_MspInit();
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Return function status */
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   return HAL_OK;
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  This function de-Initializes common part of the HAL and stops the source
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         of time base.
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note This function is optional.
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval HAL status
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Reset of all peripherals */
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* De-Init the low level hardware */
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   HAL_MspDeInit();
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Return function status */
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   return HAL_OK;
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Initializes the MSP.
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** __weak void HAL_MspInit(void)
ARM GAS  /tmp/ccrtP6s7.s 			page 5


 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
  29              		.loc 1 202 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE694:
  38 0002 00BF     		.section	.text.HAL_MspDeInit,"ax",%progbits
  39              		.align	2
  40              		.weak	HAL_MspDeInit
  41              		.thumb
  42              		.thumb_func
  44              	HAL_MspDeInit:
  45              	.LFB695:
 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****    */
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  DeInitializes the MSP.
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** __weak void HAL_MspDeInit(void)
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
  46              		.loc 1 213 0
  47              		.cfi_startproc
  48              		@ args = 0, pretend = 0, frame = 0
  49              		@ frame_needed = 0, uses_anonymous_args = 0
  50              		@ link register save eliminated.
  51 0000 7047     		bx	lr
  52              		.cfi_endproc
  53              	.LFE695:
  55 0002 00BF     		.section	.text.HAL_DeInit,"ax",%progbits
  56              		.align	2
  57              		.global	HAL_DeInit
  58              		.thumb
  59              		.thumb_func
  61              	HAL_DeInit:
  62              	.LFB693:
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Reset of all peripherals */
  63              		.loc 1 179 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Reset of all peripherals */
  67              		.loc 1 179 0
  68 0000 10B5     		push	{r4, lr}
  69              	.LCFI0:
  70              		.cfi_def_cfa_offset 8
  71              		.cfi_offset 4, -8
  72              		.cfi_offset 14, -4
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  73              		.loc 1 181 0
  74 0002 074B     		ldr	r3, .L5
ARM GAS  /tmp/ccrtP6s7.s 			page 6


  75 0004 4FF0FF32 		mov	r2, #-1
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  76              		.loc 1 182 0
  77 0008 0024     		movs	r4, #0
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  78              		.loc 1 181 0
  79 000a 1A61     		str	r2, [r3, #16]
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  80              		.loc 1 182 0
  81 000c 1C61     		str	r4, [r3, #16]
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  82              		.loc 1 184 0
  83 000e DA60     		str	r2, [r3, #12]
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  84              		.loc 1 185 0
  85 0010 DC60     		str	r4, [r3, #12]
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
  86              		.loc 1 187 0
  87 0012 9A62     		str	r2, [r3, #40]
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  88              		.loc 1 188 0
  89 0014 9C62     		str	r4, [r3, #40]
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  90              		.loc 1 191 0
  91 0016 FFF7FEFF 		bl	HAL_MspDeInit
  92              	.LVL0:
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  93              		.loc 1 195 0
  94 001a 2046     		mov	r0, r4
  95 001c 10BD     		pop	{r4, pc}
  96              	.L6:
  97 001e 00BF     		.align	2
  98              	.L5:
  99 0020 00100240 		.word	1073876992
 100              		.cfi_endproc
 101              	.LFE693:
 103              		.section	.text.HAL_InitTick,"ax",%progbits
 104              		.align	2
 105              		.weak	HAL_InitTick
 106              		.thumb
 107              		.thumb_func
 109              	HAL_InitTick:
 110              	.LFB696:
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****    */
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  This function configures the source of the time base. 
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         The time source is configured  to have 1ms time base with a dedicated 
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         Tick interrupt priority. 
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note   This function is called  automatically at the beginning of program after
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig()
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note   In the default implementation , SysTick timer is the source of time base. 
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         It is used to generate interrupts at regular time intervals. 
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
ARM GAS  /tmp/ccrtP6s7.s 			page 7


 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         The the SysTick interrupt must have higher priority (numerically lower) 
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         The function is declared as __Weak  to be overwritten  in case of other
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         implementation  in user file.
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval HAL status
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 111              		.loc 1 236 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              	.LVL1:
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /*Configure the SysTick to have interrupt in 1ms time basis*/
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   HAL_SYSTICK_Config(SystemCoreClock / 1000U);
 116              		.loc 1 238 0
 117 0000 084B     		ldr	r3, .L9
 118 0002 094A     		ldr	r2, .L9+4
 119 0004 1B68     		ldr	r3, [r3]
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /*Configure the SysTick to have interrupt in 1ms time basis*/
 120              		.loc 1 236 0
 121 0006 10B5     		push	{r4, lr}
 122              	.LCFI1:
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 4, -8
 125              		.cfi_offset 14, -4
 126              		.loc 1 238 0
 127 0008 A2FB0323 		umull	r2, r3, r2, r3
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /*Configure the SysTick to have interrupt in 1ms time basis*/
 128              		.loc 1 236 0
 129 000c 0446     		mov	r4, r0
 130              		.loc 1 238 0
 131 000e 9809     		lsrs	r0, r3, #6
 132              	.LVL2:
 133 0010 FFF7FEFF 		bl	HAL_SYSTICK_Config
 134              	.LVL3:
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****  
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /*Configure the SysTick IRQ priority */
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority ,0U);
 135              		.loc 1 241 0
 136 0014 2146     		mov	r1, r4
 137 0016 4FF0FF30 		mov	r0, #-1
 138 001a 0022     		movs	r2, #0
 139 001c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 140              	.LVL4:
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****    /* Return function status */
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   return HAL_OK;
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 141              		.loc 1 245 0
 142 0020 0020     		movs	r0, #0
 143 0022 10BD     		pop	{r4, pc}
 144              	.LVL5:
 145              	.L10:
 146              		.align	2
 147              	.L9:
ARM GAS  /tmp/ccrtP6s7.s 			page 8


 148 0024 00000000 		.word	SystemCoreClock
 149 0028 D34D6210 		.word	274877907
 150              		.cfi_endproc
 151              	.LFE696:
 153              		.section	.text.HAL_Init,"ax",%progbits
 154              		.align	2
 155              		.global	HAL_Init
 156              		.thumb
 157              		.thumb_func
 159              	HAL_Init:
 160              	.LFB692:
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Configure Flash prefetch */
 161              		.loc 1 153 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #endif /* PREFETCH_ENABLE */
 165              		.loc 1 156 0
 166 0000 074A     		ldr	r2, .L13
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Configure Flash prefetch */
 167              		.loc 1 153 0
 168 0002 08B5     		push	{r3, lr}
 169              	.LCFI2:
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 3, -8
 172              		.cfi_offset 14, -4
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #endif /* PREFETCH_ENABLE */
 173              		.loc 1 156 0
 174 0004 1368     		ldr	r3, [r2]
 175 0006 43F01003 		orr	r3, r3, #16
 176 000a 1360     		str	r3, [r2]
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 177              		.loc 1 160 0
 178 000c 0320     		movs	r0, #3
 179 000e FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 180              	.LVL6:
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 181              		.loc 1 163 0
 182 0012 0020     		movs	r0, #0
 183 0014 FFF7FEFF 		bl	HAL_InitTick
 184              	.LVL7:
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 185              		.loc 1 166 0
 186 0018 FFF7FEFF 		bl	HAL_MspInit
 187              	.LVL8:
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 188              		.loc 1 170 0
 189 001c 0020     		movs	r0, #0
 190 001e 08BD     		pop	{r3, pc}
 191              	.L14:
 192              		.align	2
 193              	.L13:
 194 0020 00200240 		.word	1073881088
 195              		.cfi_endproc
 196              	.LFE692:
 198              		.section	.text.HAL_IncTick,"ax",%progbits
 199              		.align	2
ARM GAS  /tmp/ccrtP6s7.s 			page 9


 200              		.weak	HAL_IncTick
 201              		.thumb
 202              		.thumb_func
 204              	HAL_IncTick:
 205              	.LFB697:
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @}
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****  *  @brief    HAL Control functions
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****  *
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** @verbatim
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****  ===============================================================================
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****                       ##### HAL Control functions #####
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****  ===============================================================================
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     [..]  This section provides functions allowing to:
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Provide a tick value in millisecond
 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Provide a blocking delay in millisecond
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Suspend the time base source interrupt
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Resume the time base source interrupt
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Get the HAL API driver version
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Get the device identifier
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Get the device revision identifier
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Enable/Disable Debug module during Sleep mode
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** @endverbatim
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @{
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  This function is called to increment  a global variable "uwTick"
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         used as application time base.
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         in Systick ISR.
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         implementations  in user file.
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** __weak void HAL_IncTick(void)
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 206              		.loc 1 284 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210              		@ link register save eliminated.
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   uwTick++;
 211              		.loc 1 285 0
 212 0000 024A     		ldr	r2, .L16
 213 0002 1368     		ldr	r3, [r2]
 214 0004 0133     		adds	r3, r3, #1
 215 0006 1360     		str	r3, [r2]
 216 0008 7047     		bx	lr
 217              	.L17:
ARM GAS  /tmp/ccrtP6s7.s 			page 10


 218 000a 00BF     		.align	2
 219              	.L16:
 220 000c 00000000 		.word	uwTick
 221              		.cfi_endproc
 222              	.LFE697:
 224              		.section	.text.HAL_GetTick,"ax",%progbits
 225              		.align	2
 226              		.weak	HAL_GetTick
 227              		.thumb
 228              		.thumb_func
 230              	HAL_GetTick:
 231              	.LFB698:
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Povides a tick value in millisecond.
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note   The function is declared as __Weak  to be overwritten  in case of other 
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         implementations  in user file.
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval tick value
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 232              		.loc 1 295 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              		@ link register save eliminated.
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   return uwTick;  
 237              		.loc 1 296 0
 238 0000 014B     		ldr	r3, .L19
 239 0002 1868     		ldr	r0, [r3]
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 240              		.loc 1 297 0
 241 0004 7047     		bx	lr
 242              	.L20:
 243 0006 00BF     		.align	2
 244              	.L19:
 245 0008 00000000 		.word	uwTick
 246              		.cfi_endproc
 247              	.LFE698:
 249              		.section	.text.HAL_Delay,"ax",%progbits
 250              		.align	2
 251              		.weak	HAL_Delay
 252              		.thumb
 253              		.thumb_func
 255              	HAL_Delay:
 256              	.LFB699:
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  This function provides accurate delay (in milliseconds) based 
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         on variable incremented.
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note   In the default implementation , SysTick timer is the source of time base. 
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         It is used to generate interrupts at regular time intervals where uwTick
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         is incremented.
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         The function is declared as __Weak  to be overwritten  in case of other
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         implementations  in user file.
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @param  Delay specifies the delay time length, in milliseconds.
ARM GAS  /tmp/ccrtP6s7.s 			page 11


 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** __weak void HAL_Delay(__IO uint32_t Delay)
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 257              		.loc 1 311 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 8
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261              	.LVL9:
 262 0000 30B5     		push	{r4, r5, lr}
 263              	.LCFI3:
 264              		.cfi_def_cfa_offset 12
 265              		.cfi_offset 4, -12
 266              		.cfi_offset 5, -8
 267              		.cfi_offset 14, -4
 268 0002 83B0     		sub	sp, sp, #12
 269              	.LCFI4:
 270              		.cfi_def_cfa_offset 24
 271              		.loc 1 311 0
 272 0004 0190     		str	r0, [sp, #4]
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 273              		.loc 1 312 0
 274 0006 FFF7FEFF 		bl	HAL_GetTick
 275              	.LVL10:
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   uint32_t wait = Delay;
 276              		.loc 1 313 0
 277 000a 019C     		ldr	r4, [sp, #4]
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Add a period to guarantee minimum wait */
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 278              		.loc 1 316 0
 279 000c 631C     		adds	r3, r4, #1
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   uint32_t wait = Delay;
 280              		.loc 1 312 0
 281 000e 0546     		mov	r5, r0
 282              	.LVL11:
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   {
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****      wait++;
 283              		.loc 1 318 0
 284 0010 18BF     		it	ne
 285 0012 0134     		addne	r4, r4, #1
 286              	.LVL12:
 287              	.L23:
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   }
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   while((HAL_GetTick() - tickstart) < wait)
 288              		.loc 1 321 0 discriminator 1
 289 0014 FFF7FEFF 		bl	HAL_GetTick
 290              	.LVL13:
 291 0018 401B     		subs	r0, r0, r5
 292 001a A042     		cmp	r0, r4
 293 001c FAD3     		bcc	.L23
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   {
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   }
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 294              		.loc 1 324 0
 295 001e 03B0     		add	sp, sp, #12
ARM GAS  /tmp/ccrtP6s7.s 			page 12


 296              	.LCFI5:
 297              		.cfi_def_cfa_offset 12
 298              		@ sp needed
 299 0020 30BD     		pop	{r4, r5, pc}
 300              		.cfi_endproc
 301              	.LFE699:
 303 0022 00BF     		.section	.text.HAL_SuspendTick,"ax",%progbits
 304              		.align	2
 305              		.weak	HAL_SuspendTick
 306              		.thumb
 307              		.thumb_func
 309              	HAL_SuspendTick:
 310              	.LFB700:
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Suspend Tick increment.
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note   In the default implementation , SysTick timer is the source of time base. It is  
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         is called, the the SysTick interrupt will be disabled and so Tick increment 
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         is suspended.
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         implementations  in user file.
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** __weak void HAL_SuspendTick(void)
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 311              		.loc 1 338 0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 0
 314              		@ frame_needed = 0, uses_anonymous_args = 0
 315              		@ link register save eliminated.
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Disable SysTick Interrupt */
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 316              		.loc 1 340 0
 317 0000 024A     		ldr	r2, .L31
 318 0002 1368     		ldr	r3, [r2]
 319 0004 23F00203 		bic	r3, r3, #2
 320 0008 1360     		str	r3, [r2]
 321 000a 7047     		bx	lr
 322              	.L32:
 323              		.align	2
 324              	.L31:
 325 000c 10E000E0 		.word	-536813552
 326              		.cfi_endproc
 327              	.LFE700:
 329              		.section	.text.HAL_ResumeTick,"ax",%progbits
 330              		.align	2
 331              		.weak	HAL_ResumeTick
 332              		.thumb
 333              		.thumb_func
 335              	HAL_ResumeTick:
 336              	.LFB701:
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****                                                    
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
ARM GAS  /tmp/ccrtP6s7.s 			page 13


 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Resume Tick increment.
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note   In the default implementation , SysTick timer is the source of time base. It is  
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         is called, the the SysTick interrupt will be enabled and so Tick increment 
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         is resumed.
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         The function is declared as __Weak  to be overwritten  in case of other
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         implementations  in user file.
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** __weak void HAL_ResumeTick(void)
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 337              		.loc 1 355 0
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 0
 340              		@ frame_needed = 0, uses_anonymous_args = 0
 341              		@ link register save eliminated.
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Enable SysTick Interrupt */
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   SysTick->CTRL  |= SysTick_CTRL_TICKINT_Msk;
 342              		.loc 1 357 0
 343 0000 024A     		ldr	r2, .L34
 344 0002 1368     		ldr	r3, [r2]
 345 0004 43F00203 		orr	r3, r3, #2
 346 0008 1360     		str	r3, [r2]
 347 000a 7047     		bx	lr
 348              	.L35:
 349              		.align	2
 350              	.L34:
 351 000c 10E000E0 		.word	-536813552
 352              		.cfi_endproc
 353              	.LFE701:
 355              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 356              		.align	2
 357              		.global	HAL_GetHalVersion
 358              		.thumb
 359              		.thumb_func
 361              	HAL_GetHalVersion:
 362              	.LFB702:
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  This function returns the HAL revision
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 363              		.loc 1 366 0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367              		@ link register save eliminated.
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****  return __STM32F3xx_HAL_VERSION;
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 368              		.loc 1 368 0
 369 0000 0048     		ldr	r0, .L37
 370 0002 7047     		bx	lr
 371              	.L38:
ARM GAS  /tmp/ccrtP6s7.s 			page 14


 372              		.align	2
 373              	.L37:
 374 0004 00000501 		.word	17104896
 375              		.cfi_endproc
 376              	.LFE702:
 378              		.section	.text.HAL_GetREVID,"ax",%progbits
 379              		.align	2
 380              		.global	HAL_GetREVID
 381              		.thumb
 382              		.thumb_func
 384              	HAL_GetREVID:
 385              	.LFB703:
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Returns the device revision identifier.
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval Device revision identifier
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** uint32_t HAL_GetREVID(void)
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 386              		.loc 1 375 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 0
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390              		@ link register save eliminated.
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   return((DBGMCU->IDCODE) >> 16U);
 391              		.loc 1 376 0
 392 0000 014B     		ldr	r3, .L40
 393 0002 1868     		ldr	r0, [r3]
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 394              		.loc 1 377 0
 395 0004 000C     		lsrs	r0, r0, #16
 396 0006 7047     		bx	lr
 397              	.L41:
 398              		.align	2
 399              	.L40:
 400 0008 002004E0 		.word	-536600576
 401              		.cfi_endproc
 402              	.LFE703:
 404              		.section	.text.HAL_GetDEVID,"ax",%progbits
 405              		.align	2
 406              		.global	HAL_GetDEVID
 407              		.thumb
 408              		.thumb_func
 410              	HAL_GetDEVID:
 411              	.LFB704:
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Returns the device identifier.
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval Device identifier
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** uint32_t HAL_GetDEVID(void)
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 412              		.loc 1 384 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              		@ link register save eliminated.
ARM GAS  /tmp/ccrtP6s7.s 			page 15


 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 417              		.loc 1 385 0
 418 0000 024B     		ldr	r3, .L43
 419 0002 1868     		ldr	r0, [r3]
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 420              		.loc 1 386 0
 421 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 422 0008 7047     		bx	lr
 423              	.L44:
 424 000a 00BF     		.align	2
 425              	.L43:
 426 000c 002004E0 		.word	-536600576
 427              		.cfi_endproc
 428              	.LFE704:
 430              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 431              		.align	2
 432              		.global	HAL_GetUIDw0
 433              		.thumb
 434              		.thumb_func
 436              	HAL_GetUIDw0:
 437              	.LFB705:
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval Device identifier
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 438              		.loc 1 393 0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 0
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 442              		@ link register save eliminated.
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****    return(READ_REG(*((uint32_t *)UID_BASE)));
 443              		.loc 1 394 0
 444 0000 014B     		ldr	r3, .L46
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 445              		.loc 1 395 0
 446 0002 1868     		ldr	r0, [r3]
 447 0004 7047     		bx	lr
 448              	.L47:
 449 0006 00BF     		.align	2
 450              	.L46:
 451 0008 ACF7FF1F 		.word	536868780
 452              		.cfi_endproc
 453              	.LFE705:
 455              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 456              		.align	2
 457              		.global	HAL_GetUIDw1
 458              		.thumb
 459              		.thumb_func
 461              	HAL_GetUIDw1:
 462              	.LFB706:
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval Device identifier
ARM GAS  /tmp/ccrtP6s7.s 			page 16


 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 463              		.loc 1 402 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              		@ link register save eliminated.
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 468              		.loc 1 403 0
 469 0000 014B     		ldr	r3, .L49
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 470              		.loc 1 404 0
 471 0002 1868     		ldr	r0, [r3]
 472 0004 7047     		bx	lr
 473              	.L50:
 474 0006 00BF     		.align	2
 475              	.L49:
 476 0008 B0F7FF1F 		.word	536868784
 477              		.cfi_endproc
 478              	.LFE706:
 480              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 481              		.align	2
 482              		.global	HAL_GetUIDw2
 483              		.thumb
 484              		.thumb_func
 486              	HAL_GetUIDw2:
 487              	.LFB707:
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval Device identifier
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 488              		.loc 1 411 0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 0
 491              		@ frame_needed = 0, uses_anonymous_args = 0
 492              		@ link register save eliminated.
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 493              		.loc 1 412 0
 494 0000 014B     		ldr	r3, .L52
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 495              		.loc 1 413 0
 496 0002 1868     		ldr	r0, [r3]
 497 0004 7047     		bx	lr
 498              	.L53:
 499 0006 00BF     		.align	2
 500              	.L52:
 501 0008 B4F7FF1F 		.word	536868788
 502              		.cfi_endproc
 503              	.LFE707:
 505              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 506              		.align	2
 507              		.global	HAL_DBGMCU_EnableDBGSleepMode
 508              		.thumb
ARM GAS  /tmp/ccrtP6s7.s 			page 17


 509              		.thumb_func
 511              	HAL_DBGMCU_EnableDBGSleepMode:
 512              	.LFB708:
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 513              		.loc 1 420 0
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 0
 516              		@ frame_needed = 0, uses_anonymous_args = 0
 517              		@ link register save eliminated.
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 518              		.loc 1 421 0
 519 0000 024A     		ldr	r2, .L55
 520 0002 5368     		ldr	r3, [r2, #4]
 521 0004 43F00103 		orr	r3, r3, #1
 522 0008 5360     		str	r3, [r2, #4]
 523 000a 7047     		bx	lr
 524              	.L56:
 525              		.align	2
 526              	.L55:
 527 000c 002004E0 		.word	-536600576
 528              		.cfi_endproc
 529              	.LFE708:
 531              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 532              		.align	2
 533              		.global	HAL_DBGMCU_DisableDBGSleepMode
 534              		.thumb
 535              		.thumb_func
 537              	HAL_DBGMCU_DisableDBGSleepMode:
 538              	.LFB709:
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 539              		.loc 1 429 0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 0
 542              		@ frame_needed = 0, uses_anonymous_args = 0
 543              		@ link register save eliminated.
 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 544              		.loc 1 430 0
 545 0000 024A     		ldr	r2, .L58
 546 0002 5368     		ldr	r3, [r2, #4]
 547 0004 23F00103 		bic	r3, r3, #1
 548 0008 5360     		str	r3, [r2, #4]
 549 000a 7047     		bx	lr
 550              	.L59:
 551              		.align	2
ARM GAS  /tmp/ccrtP6s7.s 			page 18


 552              	.L58:
 553 000c 002004E0 		.word	-536600576
 554              		.cfi_endproc
 555              	.LFE709:
 557              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 558              		.align	2
 559              		.global	HAL_DBGMCU_EnableDBGStopMode
 560              		.thumb
 561              		.thumb_func
 563              	HAL_DBGMCU_EnableDBGStopMode:
 564              	.LFB710:
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 565              		.loc 1 438 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569              		@ link register save eliminated.
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 570              		.loc 1 439 0
 571 0000 024A     		ldr	r2, .L61
 572 0002 5368     		ldr	r3, [r2, #4]
 573 0004 43F00203 		orr	r3, r3, #2
 574 0008 5360     		str	r3, [r2, #4]
 575 000a 7047     		bx	lr
 576              	.L62:
 577              		.align	2
 578              	.L61:
 579 000c 002004E0 		.word	-536600576
 580              		.cfi_endproc
 581              	.LFE710:
 583              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 584              		.align	2
 585              		.global	HAL_DBGMCU_DisableDBGStopMode
 586              		.thumb
 587              		.thumb_func
 589              	HAL_DBGMCU_DisableDBGStopMode:
 590              	.LFB711:
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 591              		.loc 1 447 0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 0
 594              		@ frame_needed = 0, uses_anonymous_args = 0
 595              		@ link register save eliminated.
ARM GAS  /tmp/ccrtP6s7.s 			page 19


 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 596              		.loc 1 448 0
 597 0000 024A     		ldr	r2, .L64
 598 0002 5368     		ldr	r3, [r2, #4]
 599 0004 23F00203 		bic	r3, r3, #2
 600 0008 5360     		str	r3, [r2, #4]
 601 000a 7047     		bx	lr
 602              	.L65:
 603              		.align	2
 604              	.L64:
 605 000c 002004E0 		.word	-536600576
 606              		.cfi_endproc
 607              	.LFE711:
 609              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 610              		.align	2
 611              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 612              		.thumb
 613              		.thumb_func
 615              	HAL_DBGMCU_EnableDBGStandbyMode:
 616              	.LFB712:
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 617              		.loc 1 456 0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 0
 620              		@ frame_needed = 0, uses_anonymous_args = 0
 621              		@ link register save eliminated.
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 622              		.loc 1 457 0
 623 0000 024A     		ldr	r2, .L67
 624 0002 5368     		ldr	r3, [r2, #4]
 625 0004 43F00403 		orr	r3, r3, #4
 626 0008 5360     		str	r3, [r2, #4]
 627 000a 7047     		bx	lr
 628              	.L68:
 629              		.align	2
 630              	.L67:
 631 000c 002004E0 		.word	-536600576
 632              		.cfi_endproc
 633              	.LFE712:
 635              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 636              		.align	2
 637              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 638              		.thumb
 639              		.thumb_func
 641              	HAL_DBGMCU_DisableDBGStandbyMode:
 642              	.LFB713:
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
ARM GAS  /tmp/ccrtP6s7.s 			page 20


 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 643              		.loc 1 465 0
 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 0
 646              		@ frame_needed = 0, uses_anonymous_args = 0
 647              		@ link register save eliminated.
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 648              		.loc 1 466 0
 649 0000 024A     		ldr	r2, .L70
 650 0002 5368     		ldr	r3, [r2, #4]
 651 0004 23F00403 		bic	r3, r3, #4
 652 0008 5360     		str	r3, [r2, #4]
 653 000a 7047     		bx	lr
 654              	.L71:
 655              		.align	2
 656              	.L70:
 657 000c 002004E0 		.word	-536600576
 658              		.cfi_endproc
 659              	.LFE713:
 661              		.comm	uwTick,4,4
 662              		.text
 663              	.Letext0:
 664              		.file 2 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 665              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 666              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 667              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 668              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 669              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_ll_dma.h"
 670              		.file 8 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 671              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
ARM GAS  /tmp/ccrtP6s7.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_hal.c
     /tmp/ccrtP6s7.s:21     .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccrtP6s7.s:26     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccrtP6s7.s:39     .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/ccrtP6s7.s:44     .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/ccrtP6s7.s:56     .text.HAL_DeInit:0000000000000000 $t
     /tmp/ccrtP6s7.s:61     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/ccrtP6s7.s:99     .text.HAL_DeInit:0000000000000020 $d
     /tmp/ccrtP6s7.s:104    .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccrtP6s7.s:109    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccrtP6s7.s:148    .text.HAL_InitTick:0000000000000024 $d
     /tmp/ccrtP6s7.s:154    .text.HAL_Init:0000000000000000 $t
     /tmp/ccrtP6s7.s:159    .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/ccrtP6s7.s:194    .text.HAL_Init:0000000000000020 $d
     /tmp/ccrtP6s7.s:199    .text.HAL_IncTick:0000000000000000 $t
     /tmp/ccrtP6s7.s:204    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/ccrtP6s7.s:220    .text.HAL_IncTick:000000000000000c $d
                            *COM*:0000000000000004 uwTick
     /tmp/ccrtP6s7.s:225    .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccrtP6s7.s:230    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccrtP6s7.s:245    .text.HAL_GetTick:0000000000000008 $d
     /tmp/ccrtP6s7.s:250    .text.HAL_Delay:0000000000000000 $t
     /tmp/ccrtP6s7.s:255    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/ccrtP6s7.s:304    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccrtP6s7.s:309    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccrtP6s7.s:325    .text.HAL_SuspendTick:000000000000000c $d
     /tmp/ccrtP6s7.s:330    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccrtP6s7.s:335    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccrtP6s7.s:351    .text.HAL_ResumeTick:000000000000000c $d
     /tmp/ccrtP6s7.s:356    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/ccrtP6s7.s:361    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/ccrtP6s7.s:374    .text.HAL_GetHalVersion:0000000000000004 $d
     /tmp/ccrtP6s7.s:379    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/ccrtP6s7.s:384    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/ccrtP6s7.s:400    .text.HAL_GetREVID:0000000000000008 $d
     /tmp/ccrtP6s7.s:405    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/ccrtP6s7.s:410    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/ccrtP6s7.s:426    .text.HAL_GetDEVID:000000000000000c $d
     /tmp/ccrtP6s7.s:431    .text.HAL_GetUIDw0:0000000000000000 $t
     /tmp/ccrtP6s7.s:436    .text.HAL_GetUIDw0:0000000000000000 HAL_GetUIDw0
     /tmp/ccrtP6s7.s:451    .text.HAL_GetUIDw0:0000000000000008 $d
     /tmp/ccrtP6s7.s:456    .text.HAL_GetUIDw1:0000000000000000 $t
     /tmp/ccrtP6s7.s:461    .text.HAL_GetUIDw1:0000000000000000 HAL_GetUIDw1
     /tmp/ccrtP6s7.s:476    .text.HAL_GetUIDw1:0000000000000008 $d
     /tmp/ccrtP6s7.s:481    .text.HAL_GetUIDw2:0000000000000000 $t
     /tmp/ccrtP6s7.s:486    .text.HAL_GetUIDw2:0000000000000000 HAL_GetUIDw2
     /tmp/ccrtP6s7.s:501    .text.HAL_GetUIDw2:0000000000000008 $d
     /tmp/ccrtP6s7.s:506    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
     /tmp/ccrtP6s7.s:511    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/ccrtP6s7.s:527    .text.HAL_DBGMCU_EnableDBGSleepMode:000000000000000c $d
     /tmp/ccrtP6s7.s:532    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
     /tmp/ccrtP6s7.s:537    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/ccrtP6s7.s:553    .text.HAL_DBGMCU_DisableDBGSleepMode:000000000000000c $d
     /tmp/ccrtP6s7.s:558    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/ccrtP6s7.s:563    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccrtP6s7.s:579    .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
ARM GAS  /tmp/ccrtP6s7.s 			page 22


     /tmp/ccrtP6s7.s:584    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/ccrtP6s7.s:589    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccrtP6s7.s:605    .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
     /tmp/ccrtP6s7.s:610    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/ccrtP6s7.s:615    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccrtP6s7.s:631    .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
     /tmp/ccrtP6s7.s:636    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/ccrtP6s7.s:641    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccrtP6s7.s:657    .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping
