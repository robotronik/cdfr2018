ARM GAS  /tmp/ccryY7Mi.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"fsm_arm.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.CHANNEL_OFFSET_TAB,"a",%progbits
  18              		.align	2
  21              	CHANNEL_OFFSET_TAB:
  22 0000 08       		.byte	8
  23 0001 1C       		.byte	28
  24 0002 30       		.byte	48
  25 0003 44       		.byte	68
  26 0004 58       		.byte	88
  27 0005 6C       		.byte	108
  28 0006 80       		.byte	-128
  29              		.comm	fsm,4,4
  30              		.section	.text.FSM_ARM_OUT,"ax",%progbits
  31              		.align	1
  32              		.global	FSM_ARM_OUT
  33              		.syntax unified
  34              		.thumb
  35              		.thumb_func
  36              		.fpu fpv4-sp-d16
  38              	FSM_ARM_OUT:
  39              	.LFB695:
  40              		.file 1 "Src/fsm_arm.c"
   1:Src/fsm_arm.c **** #include "fsm_arm.h"
   2:Src/fsm_arm.c **** 
   3:Src/fsm_arm.c **** void FSM_ARM_OUT(FSM_Instance *fsm)
   4:Src/fsm_arm.c **** {
  41              		.loc 1 4 0
  42              		.cfi_startproc
  43              		@ args = 0, pretend = 0, frame = 16
  44              		@ frame_needed = 1, uses_anonymous_args = 0
  45 0000 80B5     		push	{r7, lr}
  46              	.LCFI0:
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 84B0     		sub	sp, sp, #16
  51              	.LCFI1:
  52              		.cfi_def_cfa_offset 24
  53 0004 00AF     		add	r7, sp, #0
  54              	.LCFI2:
  55              		.cfi_def_cfa_register 7
  56 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/ccryY7Mi.s 			page 2


   5:Src/fsm_arm.c ****   fsm->status=FSM_RUNNING;
  57              		.loc 1 5 0
  58 0008 7B68     		ldr	r3, [r7, #4]
  59 000a 0022     		movs	r2, #0
  60 000c 1A71     		strb	r2, [r3, #4]
   6:Src/fsm_arm.c ****   uint16_t pos_ar;
   7:Src/fsm_arm.c ****   AX_Set_Goal_Position(&servo_ar, AX_ARM_DEPLOY, AX_NOW);
  61              		.loc 1 7 0
  62 000e 0122     		movs	r2, #1
  63 0010 40F20D21 		movw	r1, #525
  64 0014 0D48     		ldr	r0, .L4
  65 0016 FFF7FEFF 		bl	AX_Set_Goal_Position
   8:Src/fsm_arm.c ****   AX_Get_Current_Position(&servo_ar, &pos_ar);
  66              		.loc 1 8 0
  67 001a 07F10E03 		add	r3, r7, #14
  68 001e 1946     		mov	r1, r3
  69 0020 0A48     		ldr	r0, .L4
  70 0022 FFF7FEFF 		bl	AX_Get_Current_Position
   9:Src/fsm_arm.c ****   if(abs(pos_ar-AX_ARM_DEPLOY)<10) fsm->run=FSM_ARM_END;
  71              		.loc 1 9 0
  72 0026 FB89     		ldrh	r3, [r7, #14]
  73 0028 A3F20D23 		subw	r3, r3, #525
  74 002c 13F1090F 		cmn	r3, #9
  75 0030 07DB     		blt	.L3
  76              		.loc 1 9 0 is_stmt 0 discriminator 1
  77 0032 FB89     		ldrh	r3, [r7, #14]
  78 0034 A3F20D23 		subw	r3, r3, #525
  79 0038 092B     		cmp	r3, #9
  80 003a 02DC     		bgt	.L3
  81              		.loc 1 9 0 discriminator 2
  82 003c 7B68     		ldr	r3, [r7, #4]
  83 003e 044A     		ldr	r2, .L4+4
  84 0040 1A60     		str	r2, [r3]
  85              	.L3:
  10:Src/fsm_arm.c **** }
  86              		.loc 1 10 0 is_stmt 1
  87 0042 00BF     		nop
  88 0044 1037     		adds	r7, r7, #16
  89              	.LCFI3:
  90              		.cfi_def_cfa_offset 8
  91 0046 BD46     		mov	sp, r7
  92              	.LCFI4:
  93              		.cfi_def_cfa_register 13
  94              		@ sp needed
  95 0048 80BD     		pop	{r7, pc}
  96              	.L5:
  97 004a 00BF     		.align	2
  98              	.L4:
  99 004c 00000000 		.word	servo_ar
 100 0050 00000000 		.word	FSM_ARM_END
 101              		.cfi_endproc
 102              	.LFE695:
 104              		.section	.text.FSM_ARM_IN,"ax",%progbits
 105              		.align	1
 106              		.global	FSM_ARM_IN
 107              		.syntax unified
 108              		.thumb
ARM GAS  /tmp/ccryY7Mi.s 			page 3


 109              		.thumb_func
 110              		.fpu fpv4-sp-d16
 112              	FSM_ARM_IN:
 113              	.LFB696:
  11:Src/fsm_arm.c **** 
  12:Src/fsm_arm.c **** void FSM_ARM_IN(FSM_Instance *fsm)
  13:Src/fsm_arm.c **** {
 114              		.loc 1 13 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 16
 117              		@ frame_needed = 1, uses_anonymous_args = 0
 118 0000 80B5     		push	{r7, lr}
 119              	.LCFI5:
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 7, -8
 122              		.cfi_offset 14, -4
 123 0002 84B0     		sub	sp, sp, #16
 124              	.LCFI6:
 125              		.cfi_def_cfa_offset 24
 126 0004 00AF     		add	r7, sp, #0
 127              	.LCFI7:
 128              		.cfi_def_cfa_register 7
 129 0006 7860     		str	r0, [r7, #4]
  14:Src/fsm_arm.c ****   uint16_t pos_ar;
  15:Src/fsm_arm.c ****   AX_Set_Goal_Position(&servo_ar, AX_ARM_START, AX_NOW);
 130              		.loc 1 15 0
 131 0008 0122     		movs	r2, #1
 132 000a 4FF48771 		mov	r1, #270
 133 000e 0D48     		ldr	r0, .L9
 134 0010 FFF7FEFF 		bl	AX_Set_Goal_Position
  16:Src/fsm_arm.c ****   AX_Get_Current_Position(&servo_ar, &pos_ar);
 135              		.loc 1 16 0
 136 0014 07F10E03 		add	r3, r7, #14
 137 0018 1946     		mov	r1, r3
 138 001a 0A48     		ldr	r0, .L9
 139 001c FFF7FEFF 		bl	AX_Get_Current_Position
  17:Src/fsm_arm.c ****   if(abs(pos_ar-AX_ARM_START)<10) fsm->run=FSM_ARM_END;
 140              		.loc 1 17 0
 141 0020 FB89     		ldrh	r3, [r7, #14]
 142 0022 A3F58773 		sub	r3, r3, #270
 143 0026 13F1090F 		cmn	r3, #9
 144 002a 07DB     		blt	.L8
 145              		.loc 1 17 0 is_stmt 0 discriminator 1
 146 002c FB89     		ldrh	r3, [r7, #14]
 147 002e A3F58773 		sub	r3, r3, #270
 148 0032 092B     		cmp	r3, #9
 149 0034 02DC     		bgt	.L8
 150              		.loc 1 17 0 discriminator 2
 151 0036 7B68     		ldr	r3, [r7, #4]
 152 0038 034A     		ldr	r2, .L9+4
 153 003a 1A60     		str	r2, [r3]
 154              	.L8:
  18:Src/fsm_arm.c **** }
 155              		.loc 1 18 0 is_stmt 1
 156 003c 00BF     		nop
 157 003e 1037     		adds	r7, r7, #16
 158              	.LCFI8:
ARM GAS  /tmp/ccryY7Mi.s 			page 4


 159              		.cfi_def_cfa_offset 8
 160 0040 BD46     		mov	sp, r7
 161              	.LCFI9:
 162              		.cfi_def_cfa_register 13
 163              		@ sp needed
 164 0042 80BD     		pop	{r7, pc}
 165              	.L10:
 166              		.align	2
 167              	.L9:
 168 0044 00000000 		.word	servo_ar
 169 0048 00000000 		.word	FSM_ARM_END
 170              		.cfi_endproc
 171              	.LFE696:
 173              		.section	.text.FSM_ARM_END,"ax",%progbits
 174              		.align	1
 175              		.global	FSM_ARM_END
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 179              		.fpu fpv4-sp-d16
 181              	FSM_ARM_END:
 182              	.LFB697:
  19:Src/fsm_arm.c **** 
  20:Src/fsm_arm.c **** void FSM_ARM_END(FSM_Instance *fsm)
  21:Src/fsm_arm.c **** {
 183              		.loc 1 21 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 8
 186              		@ frame_needed = 1, uses_anonymous_args = 0
 187              		@ link register save eliminated.
 188 0000 80B4     		push	{r7}
 189              	.LCFI10:
 190              		.cfi_def_cfa_offset 4
 191              		.cfi_offset 7, -4
 192 0002 83B0     		sub	sp, sp, #12
 193              	.LCFI11:
 194              		.cfi_def_cfa_offset 16
 195 0004 00AF     		add	r7, sp, #0
 196              	.LCFI12:
 197              		.cfi_def_cfa_register 7
 198 0006 7860     		str	r0, [r7, #4]
  22:Src/fsm_arm.c ****   fsm->status=FSM_SUCCESS;
 199              		.loc 1 22 0
 200 0008 7B68     		ldr	r3, [r7, #4]
 201 000a 0122     		movs	r2, #1
 202 000c 1A71     		strb	r2, [r3, #4]
  23:Src/fsm_arm.c **** }
 203              		.loc 1 23 0
 204 000e 00BF     		nop
 205 0010 0C37     		adds	r7, r7, #12
 206              	.LCFI13:
 207              		.cfi_def_cfa_offset 4
 208 0012 BD46     		mov	sp, r7
 209              	.LCFI14:
 210              		.cfi_def_cfa_register 13
 211              		@ sp needed
 212 0014 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /tmp/ccryY7Mi.s 			page 5


 213              	.LCFI15:
 214              		.cfi_restore 7
 215              		.cfi_def_cfa_offset 0
 216 0018 7047     		bx	lr
 217              		.cfi_endproc
 218              	.LFE697:
 220              		.text
 221              	.Letext0:
 222              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 223              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 224              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 225              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 226              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 227              		.file 7 "Inc/ax_12a.h"
 228              		.file 8 "/usr/arm-none-eabi/include/sys/lock.h"
 229              		.file 9 "/usr/arm-none-eabi/include/sys/_types.h"
 230              		.file 10 "/usr/lib/gcc/arm-none-eabi/7.3.0/include/stddef.h"
 231              		.file 11 "/usr/arm-none-eabi/include/sys/reent.h"
 232              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 233              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 234              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 235              		.file 15 "Inc/fsm_master.h"
 236              		.file 16 "/usr/arm-none-eabi/include/stdlib.h"
 237              		.file 17 "Inc/Robotronik_corp_pid.h"
 238              		.file 18 "Inc/encoder.h"
 239              		.file 19 "Inc/Z_axis.h"
 240              		.file 20 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_ll_dma.h"
ARM GAS  /tmp/ccryY7Mi.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 fsm_arm.c
     /tmp/ccryY7Mi.s:18     .rodata.CHANNEL_OFFSET_TAB:0000000000000000 $d
     /tmp/ccryY7Mi.s:21     .rodata.CHANNEL_OFFSET_TAB:0000000000000000 CHANNEL_OFFSET_TAB
                            *COM*:0000000000000004 fsm
     /tmp/ccryY7Mi.s:31     .text.FSM_ARM_OUT:0000000000000000 $t
     /tmp/ccryY7Mi.s:38     .text.FSM_ARM_OUT:0000000000000000 FSM_ARM_OUT
     /tmp/ccryY7Mi.s:99     .text.FSM_ARM_OUT:000000000000004c $d
     /tmp/ccryY7Mi.s:181    .text.FSM_ARM_END:0000000000000000 FSM_ARM_END
     /tmp/ccryY7Mi.s:105    .text.FSM_ARM_IN:0000000000000000 $t
     /tmp/ccryY7Mi.s:112    .text.FSM_ARM_IN:0000000000000000 FSM_ARM_IN
     /tmp/ccryY7Mi.s:168    .text.FSM_ARM_IN:0000000000000044 $d
     /tmp/ccryY7Mi.s:174    .text.FSM_ARM_END:0000000000000000 $t

UNDEFINED SYMBOLS
AX_Set_Goal_Position
AX_Get_Current_Position
servo_ar
