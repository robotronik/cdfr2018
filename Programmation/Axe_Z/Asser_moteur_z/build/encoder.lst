ARM GAS  /tmp/cclHOLup.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 2
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"encoder.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.init_encoder,"ax",%progbits
  21              		.align	2
  22              		.global	init_encoder
  23              		.thumb
  24              		.thumb_func
  26              	init_encoder:
  27              	.LFB692:
  28              		.file 1 "Src/encoder.c"
   1:Src/encoder.c **** #include "encoder.h"
   2:Src/encoder.c **** 
   3:Src/encoder.c **** #if TEST_ENCODER != 0
   4:Src/encoder.c **** uint8_t led_level;
   5:Src/encoder.c **** #endif
   6:Src/encoder.c **** 
   7:Src/encoder.c **** void init_encoder(volatile Encoder *encoder, TIM_HandleTypeDef *htim, TIM_HandleTypeDef *htim2){
  29              		.loc 1 7 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
   8:Src/encoder.c ****   encoder->last_pos = encoder->steps = 0;
  35              		.loc 1 8 0
  36 0000 0023     		movs	r3, #0
  37 0002 4360     		str	r3, [r0, #4]
  38 0004 0360     		str	r3, [r0]
   9:Src/encoder.c ****   encoder->htim = htim;
  39              		.loc 1 9 0
  40 0006 8160     		str	r1, [r0, #8]
  10:Src/encoder.c ****   encoder->htim2 = htim2;
  41              		.loc 1 10 0
  42 0008 C260     		str	r2, [r0, #12]
  43 000a 7047     		bx	lr
  44              		.cfi_endproc
  45              	.LFE692:
  47              		.section	.text.update_encoder,"ax",%progbits
  48              		.align	2
  49              		.global	update_encoder
ARM GAS  /tmp/cclHOLup.s 			page 2


  50              		.thumb
  51              		.thumb_func
  53              	update_encoder:
  54              	.LFB693:
  11:Src/encoder.c **** }
  12:Src/encoder.c **** 
  13:Src/encoder.c **** int update_encoder(volatile Encoder *encoder){
  55              		.loc 1 13 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LVL1:
  14:Src/encoder.c ****   const int cnt = encoder->htim->Instance->CNT;
  61              		.loc 1 14 0
  62 0000 8368     		ldr	r3, [r0, #8]
  63 0002 1B68     		ldr	r3, [r3]
  64 0004 5B6A     		ldr	r3, [r3, #36]
  65              	.LVL2:
  15:Src/encoder.c **** 
  16:Src/encoder.c ****   int dl = cnt - encoder->last_pos;
  66              		.loc 1 16 0
  67 0006 0268     		ldr	r2, [r0]
  17:Src/encoder.c ****   encoder->last_pos = cnt;
  68              		.loc 1 17 0
  69 0008 0360     		str	r3, [r0]
  16:Src/encoder.c ****   encoder->last_pos = cnt;
  70              		.loc 1 16 0
  71 000a 9B1A     		subs	r3, r3, r2
  72              	.LVL3:
  18:Src/encoder.c ****   if(dl > 1){
  73              		.loc 1 18 0
  74 000c 012B     		cmp	r3, #1
  75 000e 07DC     		bgt	.L4
  19:Src/encoder.c ****     dl = -1;
  20:Src/encoder.c ****   }else if(dl < -1){
  21:Src/encoder.c ****     dl = +1;
  76              		.loc 1 21 0
  77 0010 9A1C     		adds	r2, r3, #2
  22:Src/encoder.c ****   }
  23:Src/encoder.c **** 
  24:Src/encoder.c ****   encoder->steps += dl;
  78              		.loc 1 24 0
  79 0012 4268     		ldr	r2, [r0, #4]
  21:Src/encoder.c ****   }
  80              		.loc 1 21 0
  81 0014 D8BF     		it	le
  82 0016 0123     		movle	r3, #1
  83              	.LVL4:
  84              		.loc 1 24 0
  85 0018 1A44     		add	r2, r2, r3
  86 001a 4260     		str	r2, [r0, #4]
  87              	.LVL5:
  25:Src/encoder.c ****   return dl;
  26:Src/encoder.c **** }
  88              		.loc 1 26 0
  89 001c 1846     		mov	r0, r3
ARM GAS  /tmp/cclHOLup.s 			page 3


  90              	.LVL6:
  91 001e 7047     		bx	lr
  92              	.LVL7:
  93              	.L4:
  24:Src/encoder.c ****   return dl;
  94              		.loc 1 24 0
  95 0020 4268     		ldr	r2, [r0, #4]
  19:Src/encoder.c ****   }else if(dl < -1){
  96              		.loc 1 19 0
  97 0022 4FF0FF33 		mov	r3, #-1
  98              	.LVL8:
  24:Src/encoder.c ****   return dl;
  99              		.loc 1 24 0
 100 0026 1A44     		add	r2, r2, r3
 101 0028 4260     		str	r2, [r0, #4]
 102              	.LVL9:
 103              		.loc 1 26 0
 104 002a 1846     		mov	r0, r3
 105              	.LVL10:
 106 002c 7047     		bx	lr
 107              		.cfi_endproc
 108              	.LFE693:
 110 002e 00BF     		.section	.text.start_encoder,"ax",%progbits
 111              		.align	2
 112              		.global	start_encoder
 113              		.thumb
 114              		.thumb_func
 116              	start_encoder:
 117              	.LFB694:
  27:Src/encoder.c **** 
  28:Src/encoder.c **** void start_encoder(volatile Encoder *encoder){
 118              		.loc 1 28 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              	.LVL11:
 123 0000 10B5     		push	{r4, lr}
 124              	.LCFI0:
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 4, -8
 127              		.cfi_offset 14, -4
 128              		.loc 1 28 0
 129 0002 0446     		mov	r4, r0
  29:Src/encoder.c ****   HAL_TIM_Encoder_Start(encoder->htim, TIM_CHANNEL_ALL);
 130              		.loc 1 29 0
 131 0004 3C21     		movs	r1, #60
 132 0006 8068     		ldr	r0, [r0, #8]
 133              	.LVL12:
 134 0008 FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 135              	.LVL13:
  30:Src/encoder.c ****   HAL_TIM_Base_Start_IT(encoder->htim2);
 136              		.loc 1 30 0
 137 000c E068     		ldr	r0, [r4, #12]
  31:Src/encoder.c **** }
 138              		.loc 1 31 0
 139 000e BDE81040 		pop	{r4, lr}
 140              	.LCFI1:
ARM GAS  /tmp/cclHOLup.s 			page 4


 141              		.cfi_restore 14
 142              		.cfi_restore 4
 143              		.cfi_def_cfa_offset 0
 144              	.LVL14:
  30:Src/encoder.c ****   HAL_TIM_Base_Start_IT(encoder->htim2);
 145              		.loc 1 30 0
 146 0012 FFF7FEBF 		b	HAL_TIM_Base_Start_IT
 147              	.LVL15:
 148              		.cfi_endproc
 149              	.LFE694:
 151 0016 00BF     		.text
 152              	.Letext0:
 153              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 154              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 155              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 156              		.file 5 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 157              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 158              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 159              		.file 8 "Inc/encoder.h"
 160              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_ll_dma.h"
 161              		.file 10 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/cclHOLup.s 			page 5


DEFINED SYMBOLS
                            *ABS*:0000000000000000 encoder.c
     /tmp/cclHOLup.s:21     .text.init_encoder:0000000000000000 $t
     /tmp/cclHOLup.s:26     .text.init_encoder:0000000000000000 init_encoder
     /tmp/cclHOLup.s:48     .text.update_encoder:0000000000000000 $t
     /tmp/cclHOLup.s:53     .text.update_encoder:0000000000000000 update_encoder
     /tmp/cclHOLup.s:111    .text.start_encoder:0000000000000000 $t
     /tmp/cclHOLup.s:116    .text.start_encoder:0000000000000000 start_encoder
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_TIM_Encoder_Start
HAL_TIM_Base_Start_IT
