ARM GAS  /tmp/ccWdAD3d.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.CHANNEL_OFFSET_TAB,"a",%progbits
  18              		.align	2
  21              	CHANNEL_OFFSET_TAB:
  22 0000 08       		.byte	8
  23 0001 1C       		.byte	28
  24 0002 30       		.byte	48
  25 0003 44       		.byte	68
  26 0004 58       		.byte	88
  27 0005 6C       		.byte	108
  28 0006 80       		.byte	-128
  29              		.comm	htim2,64,4
  30              		.comm	htim3,64,4
  31              		.comm	htim15,64,4
  32              		.section	.rodata
  33              		.align	2
  34              	.LC0:
  35 0000 5372632F 		.ascii	"Src/tim.c\000"
  35      74696D2E 
  35      6300
  36              		.section	.text.MX_TIM2_Init,"ax",%progbits
  37              		.align	1
  38              		.global	MX_TIM2_Init
  39              		.syntax unified
  40              		.thumb
  41              		.thumb_func
  42              		.fpu fpv4-sp-d16
  44              	MX_TIM2_Init:
  45              	.LFB695:
  46              		.file 1 "Src/tim.c"
   1:Src/tim.c     **** /**
   2:Src/tim.c     ****   ******************************************************************************
   3:Src/tim.c     ****   * File Name          : TIM.c
   4:Src/tim.c     ****   * Description        : This file provides code for the configuration
   5:Src/tim.c     ****   *                      of the TIM instances.
   6:Src/tim.c     ****   ******************************************************************************
   7:Src/tim.c     ****   ** This notice applies to any and all portions of this file
   8:Src/tim.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/tim.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/tim.c     ****   * inserted by the user or by software development tools
  11:Src/tim.c     ****   * are owned by their respective copyright owners.
  12:Src/tim.c     ****   *
ARM GAS  /tmp/ccWdAD3d.s 			page 2


  13:Src/tim.c     ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/tim.c     ****   *
  15:Src/tim.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/tim.c     ****   * are permitted provided that the following conditions are met:
  17:Src/tim.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/tim.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/tim.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/tim.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/tim.c     ****   *      and/or other materials provided with the distribution.
  22:Src/tim.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/tim.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/tim.c     ****   *      without specific prior written permission.
  25:Src/tim.c     ****   *
  26:Src/tim.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/tim.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/tim.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/tim.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/tim.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/tim.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/tim.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/tim.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/tim.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/tim.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/tim.c     ****   *
  37:Src/tim.c     ****   ******************************************************************************
  38:Src/tim.c     ****   */
  39:Src/tim.c     **** 
  40:Src/tim.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/tim.c     **** #include "tim.h"
  42:Src/tim.c     **** 
  43:Src/tim.c     **** #include "gpio.h"
  44:Src/tim.c     **** 
  45:Src/tim.c     **** /* USER CODE BEGIN 0 */
  46:Src/tim.c     **** 
  47:Src/tim.c     **** /* USER CODE END 0 */
  48:Src/tim.c     **** 
  49:Src/tim.c     **** TIM_HandleTypeDef htim2;
  50:Src/tim.c     **** TIM_HandleTypeDef htim3;
  51:Src/tim.c     **** TIM_HandleTypeDef htim15;
  52:Src/tim.c     **** 
  53:Src/tim.c     **** /* TIM2 init function */
  54:Src/tim.c     **** void MX_TIM2_Init(void)
  55:Src/tim.c     **** {
  47              		.loc 1 55 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 48
  50              		@ frame_needed = 1, uses_anonymous_args = 0
  51 0000 80B5     		push	{r7, lr}
  52              	.LCFI0:
  53              		.cfi_def_cfa_offset 8
  54              		.cfi_offset 7, -8
  55              		.cfi_offset 14, -4
  56 0002 8CB0     		sub	sp, sp, #48
  57              	.LCFI1:
  58              		.cfi_def_cfa_offset 56
  59 0004 00AF     		add	r7, sp, #0
  60              	.LCFI2:
ARM GAS  /tmp/ccWdAD3d.s 			page 3


  61              		.cfi_def_cfa_register 7
  56:Src/tim.c     ****   TIM_Encoder_InitTypeDef sConfig;
  57:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
  58:Src/tim.c     **** 
  59:Src/tim.c     ****   htim2.Instance = TIM2;
  62              		.loc 1 59 0
  63 0006 234B     		ldr	r3, .L5
  64 0008 4FF08042 		mov	r2, #1073741824
  65 000c 1A60     		str	r2, [r3]
  60:Src/tim.c     ****   htim2.Init.Prescaler = 0;
  66              		.loc 1 60 0
  67 000e 214B     		ldr	r3, .L5
  68 0010 0022     		movs	r2, #0
  69 0012 5A60     		str	r2, [r3, #4]
  61:Src/tim.c     ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
  70              		.loc 1 61 0
  71 0014 1F4B     		ldr	r3, .L5
  72 0016 0022     		movs	r2, #0
  73 0018 9A60     		str	r2, [r3, #8]
  62:Src/tim.c     ****   htim2.Init.Period = 14400-1;
  74              		.loc 1 62 0
  75 001a 1E4B     		ldr	r3, .L5
  76 001c 43F63F02 		movw	r2, #14399
  77 0020 DA60     		str	r2, [r3, #12]
  63:Src/tim.c     ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  78              		.loc 1 63 0
  79 0022 1C4B     		ldr	r3, .L5
  80 0024 0022     		movs	r2, #0
  81 0026 1A61     		str	r2, [r3, #16]
  64:Src/tim.c     ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  82              		.loc 1 64 0
  83 0028 1A4B     		ldr	r3, .L5
  84 002a 0022     		movs	r2, #0
  85 002c 9A61     		str	r2, [r3, #24]
  65:Src/tim.c     ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
  86              		.loc 1 65 0
  87 002e 0323     		movs	r3, #3
  88 0030 FB60     		str	r3, [r7, #12]
  66:Src/tim.c     ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
  89              		.loc 1 66 0
  90 0032 0023     		movs	r3, #0
  91 0034 3B61     		str	r3, [r7, #16]
  67:Src/tim.c     ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
  92              		.loc 1 67 0
  93 0036 0123     		movs	r3, #1
  94 0038 7B61     		str	r3, [r7, #20]
  68:Src/tim.c     ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
  95              		.loc 1 68 0
  96 003a 0023     		movs	r3, #0
  97 003c BB61     		str	r3, [r7, #24]
  69:Src/tim.c     ****   sConfig.IC1Filter = 0;
  98              		.loc 1 69 0
  99 003e 0023     		movs	r3, #0
 100 0040 FB61     		str	r3, [r7, #28]
  70:Src/tim.c     ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 101              		.loc 1 70 0
 102 0042 0023     		movs	r3, #0
ARM GAS  /tmp/ccWdAD3d.s 			page 4


 103 0044 3B62     		str	r3, [r7, #32]
  71:Src/tim.c     ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 104              		.loc 1 71 0
 105 0046 0123     		movs	r3, #1
 106 0048 7B62     		str	r3, [r7, #36]
  72:Src/tim.c     ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 107              		.loc 1 72 0
 108 004a 0023     		movs	r3, #0
 109 004c BB62     		str	r3, [r7, #40]
  73:Src/tim.c     ****   sConfig.IC2Filter = 0;
 110              		.loc 1 73 0
 111 004e 0023     		movs	r3, #0
 112 0050 FB62     		str	r3, [r7, #44]
  74:Src/tim.c     ****   if (HAL_TIM_Encoder_Init(&htim2, &sConfig) != HAL_OK)
 113              		.loc 1 74 0
 114 0052 07F10C03 		add	r3, r7, #12
 115 0056 1946     		mov	r1, r3
 116 0058 0E48     		ldr	r0, .L5
 117 005a FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 118 005e 0346     		mov	r3, r0
 119 0060 002B     		cmp	r3, #0
 120 0062 03D0     		beq	.L2
  75:Src/tim.c     ****   {
  76:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 121              		.loc 1 76 0
 122 0064 4C21     		movs	r1, #76
 123 0066 0C48     		ldr	r0, .L5+4
 124 0068 FFF7FEFF 		bl	_Error_Handler
 125              	.L2:
  77:Src/tim.c     ****   }
  78:Src/tim.c     **** 
  79:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 126              		.loc 1 79 0
 127 006c 0023     		movs	r3, #0
 128 006e 3B60     		str	r3, [r7]
  80:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 129              		.loc 1 80 0
 130 0070 0023     		movs	r3, #0
 131 0072 BB60     		str	r3, [r7, #8]
  81:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 132              		.loc 1 81 0
 133 0074 3B46     		mov	r3, r7
 134 0076 1946     		mov	r1, r3
 135 0078 0648     		ldr	r0, .L5
 136 007a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 137 007e 0346     		mov	r3, r0
 138 0080 002B     		cmp	r3, #0
 139 0082 03D0     		beq	.L4
  82:Src/tim.c     ****   {
  83:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 140              		.loc 1 83 0
 141 0084 5321     		movs	r1, #83
 142 0086 0448     		ldr	r0, .L5+4
 143 0088 FFF7FEFF 		bl	_Error_Handler
 144              	.L4:
  84:Src/tim.c     ****   }
  85:Src/tim.c     **** 
ARM GAS  /tmp/ccWdAD3d.s 			page 5


  86:Src/tim.c     **** }
 145              		.loc 1 86 0
 146 008c 00BF     		nop
 147 008e 3037     		adds	r7, r7, #48
 148              	.LCFI3:
 149              		.cfi_def_cfa_offset 8
 150 0090 BD46     		mov	sp, r7
 151              	.LCFI4:
 152              		.cfi_def_cfa_register 13
 153              		@ sp needed
 154 0092 80BD     		pop	{r7, pc}
 155              	.L6:
 156              		.align	2
 157              	.L5:
 158 0094 00000000 		.word	htim2
 159 0098 00000000 		.word	.LC0
 160              		.cfi_endproc
 161              	.LFE695:
 163              		.section	.text.MX_TIM3_Init,"ax",%progbits
 164              		.align	1
 165              		.global	MX_TIM3_Init
 166              		.syntax unified
 167              		.thumb
 168              		.thumb_func
 169              		.fpu fpv4-sp-d16
 171              	MX_TIM3_Init:
 172              	.LFB696:
  87:Src/tim.c     **** /* TIM3 init function */
  88:Src/tim.c     **** void MX_TIM3_Init(void)
  89:Src/tim.c     **** {
 173              		.loc 1 89 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 56
 176              		@ frame_needed = 1, uses_anonymous_args = 0
 177 0000 80B5     		push	{r7, lr}
 178              	.LCFI5:
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 7, -8
 181              		.cfi_offset 14, -4
 182 0002 8EB0     		sub	sp, sp, #56
 183              	.LCFI6:
 184              		.cfi_def_cfa_offset 64
 185 0004 00AF     		add	r7, sp, #0
 186              	.LCFI7:
 187              		.cfi_def_cfa_register 7
  90:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig;
  91:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
  92:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
  93:Src/tim.c     **** 
  94:Src/tim.c     ****   htim3.Instance = TIM3;
 188              		.loc 1 94 0
 189 0006 324B     		ldr	r3, .L13
 190 0008 324A     		ldr	r2, .L13+4
 191 000a 1A60     		str	r2, [r3]
  95:Src/tim.c     ****   htim3.Init.Prescaler = 350-1;
 192              		.loc 1 95 0
 193 000c 304B     		ldr	r3, .L13
ARM GAS  /tmp/ccWdAD3d.s 			page 6


 194 000e 40F25D12 		movw	r2, #349
 195 0012 5A60     		str	r2, [r3, #4]
  96:Src/tim.c     ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 196              		.loc 1 96 0
 197 0014 2E4B     		ldr	r3, .L13
 198 0016 0022     		movs	r2, #0
 199 0018 9A60     		str	r2, [r3, #8]
  97:Src/tim.c     ****   htim3.Init.Period = 255-1;
 200              		.loc 1 97 0
 201 001a 2D4B     		ldr	r3, .L13
 202 001c FE22     		movs	r2, #254
 203 001e DA60     		str	r2, [r3, #12]
  98:Src/tim.c     ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 204              		.loc 1 98 0
 205 0020 2B4B     		ldr	r3, .L13
 206 0022 0022     		movs	r2, #0
 207 0024 1A61     		str	r2, [r3, #16]
  99:Src/tim.c     ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 208              		.loc 1 99 0
 209 0026 2A4B     		ldr	r3, .L13
 210 0028 0022     		movs	r2, #0
 211 002a 9A61     		str	r2, [r3, #24]
 100:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 212              		.loc 1 100 0
 213 002c 2848     		ldr	r0, .L13
 214 002e FFF7FEFF 		bl	HAL_TIM_Base_Init
 215 0032 0346     		mov	r3, r0
 216 0034 002B     		cmp	r3, #0
 217 0036 03D0     		beq	.L8
 101:Src/tim.c     ****   {
 102:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 218              		.loc 1 102 0
 219 0038 6621     		movs	r1, #102
 220 003a 2748     		ldr	r0, .L13+8
 221 003c FFF7FEFF 		bl	_Error_Handler
 222              	.L8:
 103:Src/tim.c     ****   }
 104:Src/tim.c     **** 
 105:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 223              		.loc 1 105 0
 224 0040 4FF48053 		mov	r3, #4096
 225 0044 BB62     		str	r3, [r7, #40]
 106:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 226              		.loc 1 106 0
 227 0046 07F12803 		add	r3, r7, #40
 228 004a 1946     		mov	r1, r3
 229 004c 2048     		ldr	r0, .L13
 230 004e FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 231 0052 0346     		mov	r3, r0
 232 0054 002B     		cmp	r3, #0
 233 0056 03D0     		beq	.L9
 107:Src/tim.c     ****   {
 108:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 234              		.loc 1 108 0
 235 0058 6C21     		movs	r1, #108
 236 005a 1F48     		ldr	r0, .L13+8
 237 005c FFF7FEFF 		bl	_Error_Handler
ARM GAS  /tmp/ccWdAD3d.s 			page 7


 238              	.L9:
 109:Src/tim.c     ****   }
 110:Src/tim.c     **** 
 111:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 239              		.loc 1 111 0
 240 0060 1B48     		ldr	r0, .L13
 241 0062 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 242 0066 0346     		mov	r3, r0
 243 0068 002B     		cmp	r3, #0
 244 006a 03D0     		beq	.L10
 112:Src/tim.c     ****   {
 113:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 245              		.loc 1 113 0
 246 006c 7121     		movs	r1, #113
 247 006e 1A48     		ldr	r0, .L13+8
 248 0070 FFF7FEFF 		bl	_Error_Handler
 249              	.L10:
 114:Src/tim.c     ****   }
 115:Src/tim.c     **** 
 116:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 250              		.loc 1 116 0
 251 0074 0023     		movs	r3, #0
 252 0076 FB61     		str	r3, [r7, #28]
 117:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 253              		.loc 1 117 0
 254 0078 0023     		movs	r3, #0
 255 007a 7B62     		str	r3, [r7, #36]
 118:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 256              		.loc 1 118 0
 257 007c 07F11C03 		add	r3, r7, #28
 258 0080 1946     		mov	r1, r3
 259 0082 1348     		ldr	r0, .L13
 260 0084 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 261 0088 0346     		mov	r3, r0
 262 008a 002B     		cmp	r3, #0
 263 008c 03D0     		beq	.L11
 119:Src/tim.c     ****   {
 120:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 264              		.loc 1 120 0
 265 008e 7821     		movs	r1, #120
 266 0090 1148     		ldr	r0, .L13+8
 267 0092 FFF7FEFF 		bl	_Error_Handler
 268              	.L11:
 121:Src/tim.c     ****   }
 122:Src/tim.c     **** 
 123:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 269              		.loc 1 123 0
 270 0096 6023     		movs	r3, #96
 271 0098 3B60     		str	r3, [r7]
 124:Src/tim.c     ****   sConfigOC.Pulse = 0;
 272              		.loc 1 124 0
 273 009a 0023     		movs	r3, #0
 274 009c 7B60     		str	r3, [r7, #4]
 125:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 275              		.loc 1 125 0
 276 009e 0023     		movs	r3, #0
 277 00a0 BB60     		str	r3, [r7, #8]
ARM GAS  /tmp/ccWdAD3d.s 			page 8


 126:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 278              		.loc 1 126 0
 279 00a2 0023     		movs	r3, #0
 280 00a4 3B61     		str	r3, [r7, #16]
 127:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 281              		.loc 1 127 0
 282 00a6 3B46     		mov	r3, r7
 283 00a8 0C22     		movs	r2, #12
 284 00aa 1946     		mov	r1, r3
 285 00ac 0848     		ldr	r0, .L13
 286 00ae FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 287 00b2 0346     		mov	r3, r0
 288 00b4 002B     		cmp	r3, #0
 289 00b6 03D0     		beq	.L12
 128:Src/tim.c     ****   {
 129:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 290              		.loc 1 129 0
 291 00b8 8121     		movs	r1, #129
 292 00ba 0748     		ldr	r0, .L13+8
 293 00bc FFF7FEFF 		bl	_Error_Handler
 294              	.L12:
 130:Src/tim.c     ****   }
 131:Src/tim.c     **** 
 132:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim3);
 295              		.loc 1 132 0
 296 00c0 0348     		ldr	r0, .L13
 297 00c2 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 133:Src/tim.c     **** 
 134:Src/tim.c     **** }
 298              		.loc 1 134 0
 299 00c6 00BF     		nop
 300 00c8 3837     		adds	r7, r7, #56
 301              	.LCFI8:
 302              		.cfi_def_cfa_offset 8
 303 00ca BD46     		mov	sp, r7
 304              	.LCFI9:
 305              		.cfi_def_cfa_register 13
 306              		@ sp needed
 307 00cc 80BD     		pop	{r7, pc}
 308              	.L14:
 309 00ce 00BF     		.align	2
 310              	.L13:
 311 00d0 00000000 		.word	htim3
 312 00d4 00040040 		.word	1073742848
 313 00d8 00000000 		.word	.LC0
 314              		.cfi_endproc
 315              	.LFE696:
 317              		.section	.text.MX_TIM15_Init,"ax",%progbits
 318              		.align	1
 319              		.global	MX_TIM15_Init
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 323              		.fpu fpv4-sp-d16
 325              	MX_TIM15_Init:
 326              	.LFB697:
 135:Src/tim.c     **** /* TIM15 init function */
ARM GAS  /tmp/ccWdAD3d.s 			page 9


 136:Src/tim.c     **** void MX_TIM15_Init(void)
 137:Src/tim.c     **** {
 327              		.loc 1 137 0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 32
 330              		@ frame_needed = 1, uses_anonymous_args = 0
 331 0000 80B5     		push	{r7, lr}
 332              	.LCFI10:
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 7, -8
 335              		.cfi_offset 14, -4
 336 0002 88B0     		sub	sp, sp, #32
 337              	.LCFI11:
 338              		.cfi_def_cfa_offset 40
 339 0004 00AF     		add	r7, sp, #0
 340              	.LCFI12:
 341              		.cfi_def_cfa_register 7
 138:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 139:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 140:Src/tim.c     **** 
 141:Src/tim.c     ****   htim15.Instance = TIM15;
 342              		.loc 1 141 0
 343 0006 214B     		ldr	r3, .L20
 344 0008 214A     		ldr	r2, .L20+4
 345 000a 1A60     		str	r2, [r3]
 142:Src/tim.c     ****   htim15.Init.Prescaler = 250-1;
 346              		.loc 1 142 0
 347 000c 1F4B     		ldr	r3, .L20
 348 000e F922     		movs	r2, #249
 349 0010 5A60     		str	r2, [r3, #4]
 143:Src/tim.c     ****   htim15.Init.CounterMode = TIM_COUNTERMODE_UP;
 350              		.loc 1 143 0
 351 0012 1E4B     		ldr	r3, .L20
 352 0014 0022     		movs	r2, #0
 353 0016 9A60     		str	r2, [r3, #8]
 144:Src/tim.c     ****   htim15.Init.Period = 250-1;
 354              		.loc 1 144 0
 355 0018 1C4B     		ldr	r3, .L20
 356 001a F922     		movs	r2, #249
 357 001c DA60     		str	r2, [r3, #12]
 145:Src/tim.c     ****   htim15.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 358              		.loc 1 145 0
 359 001e 1B4B     		ldr	r3, .L20
 360 0020 0022     		movs	r2, #0
 361 0022 1A61     		str	r2, [r3, #16]
 146:Src/tim.c     ****   htim15.Init.RepetitionCounter = 0;
 362              		.loc 1 146 0
 363 0024 194B     		ldr	r3, .L20
 364 0026 0022     		movs	r2, #0
 365 0028 5A61     		str	r2, [r3, #20]
 147:Src/tim.c     ****   htim15.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 366              		.loc 1 147 0
 367 002a 184B     		ldr	r3, .L20
 368 002c 0022     		movs	r2, #0
 369 002e 9A61     		str	r2, [r3, #24]
 148:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim15) != HAL_OK)
 370              		.loc 1 148 0
ARM GAS  /tmp/ccWdAD3d.s 			page 10


 371 0030 1648     		ldr	r0, .L20
 372 0032 FFF7FEFF 		bl	HAL_TIM_Base_Init
 373 0036 0346     		mov	r3, r0
 374 0038 002B     		cmp	r3, #0
 375 003a 03D0     		beq	.L16
 149:Src/tim.c     ****   {
 150:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 376              		.loc 1 150 0
 377 003c 9621     		movs	r1, #150
 378 003e 1548     		ldr	r0, .L20+8
 379 0040 FFF7FEFF 		bl	_Error_Handler
 380              	.L16:
 151:Src/tim.c     ****   }
 152:Src/tim.c     **** 
 153:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 381              		.loc 1 153 0
 382 0044 4FF48053 		mov	r3, #4096
 383 0048 3B61     		str	r3, [r7, #16]
 154:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim15, &sClockSourceConfig) != HAL_OK)
 384              		.loc 1 154 0
 385 004a 07F11003 		add	r3, r7, #16
 386 004e 1946     		mov	r1, r3
 387 0050 0E48     		ldr	r0, .L20
 388 0052 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 389 0056 0346     		mov	r3, r0
 390 0058 002B     		cmp	r3, #0
 391 005a 03D0     		beq	.L17
 155:Src/tim.c     ****   {
 156:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 392              		.loc 1 156 0
 393 005c 9C21     		movs	r1, #156
 394 005e 0D48     		ldr	r0, .L20+8
 395 0060 FFF7FEFF 		bl	_Error_Handler
 396              	.L17:
 157:Src/tim.c     ****   }
 158:Src/tim.c     **** 
 159:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 397              		.loc 1 159 0
 398 0064 0023     		movs	r3, #0
 399 0066 7B60     		str	r3, [r7, #4]
 160:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 400              		.loc 1 160 0
 401 0068 0023     		movs	r3, #0
 402 006a FB60     		str	r3, [r7, #12]
 161:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim15, &sMasterConfig) != HAL_OK)
 403              		.loc 1 161 0
 404 006c 3B1D     		adds	r3, r7, #4
 405 006e 1946     		mov	r1, r3
 406 0070 0648     		ldr	r0, .L20
 407 0072 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 408 0076 0346     		mov	r3, r0
 409 0078 002B     		cmp	r3, #0
 410 007a 03D0     		beq	.L19
 162:Src/tim.c     ****   {
 163:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 411              		.loc 1 163 0
 412 007c A321     		movs	r1, #163
ARM GAS  /tmp/ccWdAD3d.s 			page 11


 413 007e 0548     		ldr	r0, .L20+8
 414 0080 FFF7FEFF 		bl	_Error_Handler
 415              	.L19:
 164:Src/tim.c     ****   }
 165:Src/tim.c     **** 
 166:Src/tim.c     **** }
 416              		.loc 1 166 0
 417 0084 00BF     		nop
 418 0086 2037     		adds	r7, r7, #32
 419              	.LCFI13:
 420              		.cfi_def_cfa_offset 8
 421 0088 BD46     		mov	sp, r7
 422              	.LCFI14:
 423              		.cfi_def_cfa_register 13
 424              		@ sp needed
 425 008a 80BD     		pop	{r7, pc}
 426              	.L21:
 427              		.align	2
 428              	.L20:
 429 008c 00000000 		.word	htim15
 430 0090 00400140 		.word	1073823744
 431 0094 00000000 		.word	.LC0
 432              		.cfi_endproc
 433              	.LFE697:
 435              		.section	.text.HAL_TIM_Encoder_MspInit,"ax",%progbits
 436              		.align	1
 437              		.global	HAL_TIM_Encoder_MspInit
 438              		.syntax unified
 439              		.thumb
 440              		.thumb_func
 441              		.fpu fpv4-sp-d16
 443              	HAL_TIM_Encoder_MspInit:
 444              	.LFB698:
 167:Src/tim.c     **** 
 168:Src/tim.c     **** void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* tim_encoderHandle)
 169:Src/tim.c     **** {
 445              		.loc 1 169 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 32
 448              		@ frame_needed = 1, uses_anonymous_args = 0
 449 0000 80B5     		push	{r7, lr}
 450              	.LCFI15:
 451              		.cfi_def_cfa_offset 8
 452              		.cfi_offset 7, -8
 453              		.cfi_offset 14, -4
 454 0002 88B0     		sub	sp, sp, #32
 455              	.LCFI16:
 456              		.cfi_def_cfa_offset 40
 457 0004 00AF     		add	r7, sp, #0
 458              	.LCFI17:
 459              		.cfi_def_cfa_register 7
 460 0006 7860     		str	r0, [r7, #4]
 170:Src/tim.c     **** 
 171:Src/tim.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 172:Src/tim.c     ****   if(tim_encoderHandle->Instance==TIM2)
 461              		.loc 1 172 0
 462 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccWdAD3d.s 			page 12


 463 000a 1B68     		ldr	r3, [r3]
 464 000c B3F1804F 		cmp	r3, #1073741824
 465 0010 1CD1     		bne	.L24
 466              	.LBB2:
 173:Src/tim.c     ****   {
 174:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 0 */
 175:Src/tim.c     **** 
 176:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 0 */
 177:Src/tim.c     ****     /* TIM2 clock enable */
 178:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_ENABLE();
 467              		.loc 1 178 0
 468 0012 104B     		ldr	r3, .L25
 469 0014 DB69     		ldr	r3, [r3, #28]
 470 0016 0F4A     		ldr	r2, .L25
 471 0018 43F00103 		orr	r3, r3, #1
 472 001c D361     		str	r3, [r2, #28]
 473 001e 0D4B     		ldr	r3, .L25
 474 0020 DB69     		ldr	r3, [r3, #28]
 475 0022 03F00103 		and	r3, r3, #1
 476 0026 BB60     		str	r3, [r7, #8]
 477 0028 BB68     		ldr	r3, [r7, #8]
 478              	.LBE2:
 179:Src/tim.c     ****   
 180:Src/tim.c     ****     /**TIM2 GPIO Configuration    
 181:Src/tim.c     ****     PA0     ------> TIM2_CH1
 182:Src/tim.c     ****     PA1     ------> TIM2_CH2 
 183:Src/tim.c     ****     */
 184:Src/tim.c     ****     GPIO_InitStruct.Pin = Encodeur_Ch_A_Pin|Encodeur_Ch_B_Pin;
 479              		.loc 1 184 0
 480 002a 0323     		movs	r3, #3
 481 002c FB60     		str	r3, [r7, #12]
 185:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 482              		.loc 1 185 0
 483 002e 0223     		movs	r3, #2
 484 0030 3B61     		str	r3, [r7, #16]
 186:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 485              		.loc 1 186 0
 486 0032 0023     		movs	r3, #0
 487 0034 7B61     		str	r3, [r7, #20]
 187:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 488              		.loc 1 187 0
 489 0036 0023     		movs	r3, #0
 490 0038 BB61     		str	r3, [r7, #24]
 188:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 491              		.loc 1 188 0
 492 003a 0123     		movs	r3, #1
 493 003c FB61     		str	r3, [r7, #28]
 189:Src/tim.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 494              		.loc 1 189 0
 495 003e 07F10C03 		add	r3, r7, #12
 496 0042 1946     		mov	r1, r3
 497 0044 4FF09040 		mov	r0, #1207959552
 498 0048 FFF7FEFF 		bl	HAL_GPIO_Init
 499              	.L24:
 190:Src/tim.c     **** 
 191:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 192:Src/tim.c     **** 
ARM GAS  /tmp/ccWdAD3d.s 			page 13


 193:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 1 */
 194:Src/tim.c     ****   }
 195:Src/tim.c     **** }
 500              		.loc 1 195 0
 501 004c 00BF     		nop
 502 004e 2037     		adds	r7, r7, #32
 503              	.LCFI18:
 504              		.cfi_def_cfa_offset 8
 505 0050 BD46     		mov	sp, r7
 506              	.LCFI19:
 507              		.cfi_def_cfa_register 13
 508              		@ sp needed
 509 0052 80BD     		pop	{r7, pc}
 510              	.L26:
 511              		.align	2
 512              	.L25:
 513 0054 00100240 		.word	1073876992
 514              		.cfi_endproc
 515              	.LFE698:
 517              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 518              		.align	1
 519              		.global	HAL_TIM_Base_MspInit
 520              		.syntax unified
 521              		.thumb
 522              		.thumb_func
 523              		.fpu fpv4-sp-d16
 525              	HAL_TIM_Base_MspInit:
 526              	.LFB699:
 196:Src/tim.c     **** 
 197:Src/tim.c     **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 198:Src/tim.c     **** {
 527              		.loc 1 198 0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 16
 530              		@ frame_needed = 1, uses_anonymous_args = 0
 531 0000 80B5     		push	{r7, lr}
 532              	.LCFI20:
 533              		.cfi_def_cfa_offset 8
 534              		.cfi_offset 7, -8
 535              		.cfi_offset 14, -4
 536 0002 84B0     		sub	sp, sp, #16
 537              	.LCFI21:
 538              		.cfi_def_cfa_offset 24
 539 0004 00AF     		add	r7, sp, #0
 540              	.LCFI22:
 541              		.cfi_def_cfa_register 7
 542 0006 7860     		str	r0, [r7, #4]
 199:Src/tim.c     **** 
 200:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM3)
 543              		.loc 1 200 0
 544 0008 7B68     		ldr	r3, [r7, #4]
 545 000a 1B68     		ldr	r3, [r3]
 546 000c 164A     		ldr	r2, .L31
 547 000e 9342     		cmp	r3, r2
 548 0010 0CD1     		bne	.L28
 549              	.LBB3:
 201:Src/tim.c     ****   {
ARM GAS  /tmp/ccWdAD3d.s 			page 14


 202:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 0 */
 203:Src/tim.c     **** 
 204:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 0 */
 205:Src/tim.c     ****     /* TIM3 clock enable */
 206:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_ENABLE();
 550              		.loc 1 206 0
 551 0012 164B     		ldr	r3, .L31+4
 552 0014 DB69     		ldr	r3, [r3, #28]
 553 0016 154A     		ldr	r2, .L31+4
 554 0018 43F00203 		orr	r3, r3, #2
 555 001c D361     		str	r3, [r2, #28]
 556 001e 134B     		ldr	r3, .L31+4
 557 0020 DB69     		ldr	r3, [r3, #28]
 558 0022 03F00203 		and	r3, r3, #2
 559 0026 FB60     		str	r3, [r7, #12]
 560 0028 FB68     		ldr	r3, [r7, #12]
 561              	.LBE3:
 207:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 208:Src/tim.c     **** 
 209:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 1 */
 210:Src/tim.c     ****   }
 211:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM15)
 212:Src/tim.c     ****   {
 213:Src/tim.c     ****   /* USER CODE BEGIN TIM15_MspInit 0 */
 214:Src/tim.c     **** 
 215:Src/tim.c     ****   /* USER CODE END TIM15_MspInit 0 */
 216:Src/tim.c     ****     /* TIM15 clock enable */
 217:Src/tim.c     ****     __HAL_RCC_TIM15_CLK_ENABLE();
 218:Src/tim.c     **** 
 219:Src/tim.c     ****     /* TIM15 interrupt Init */
 220:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM1_BRK_TIM15_IRQn, 0, 0);
 221:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM1_BRK_TIM15_IRQn);
 222:Src/tim.c     ****   /* USER CODE BEGIN TIM15_MspInit 1 */
 223:Src/tim.c     **** 
 224:Src/tim.c     ****   /* USER CODE END TIM15_MspInit 1 */
 225:Src/tim.c     ****   }
 226:Src/tim.c     **** }
 562              		.loc 1 226 0
 563 002a 18E0     		b	.L30
 564              	.L28:
 211:Src/tim.c     ****   {
 565              		.loc 1 211 0
 566 002c 7B68     		ldr	r3, [r7, #4]
 567 002e 1B68     		ldr	r3, [r3]
 568 0030 0F4A     		ldr	r2, .L31+8
 569 0032 9342     		cmp	r3, r2
 570 0034 13D1     		bne	.L30
 571              	.LBB4:
 217:Src/tim.c     **** 
 572              		.loc 1 217 0
 573 0036 0D4B     		ldr	r3, .L31+4
 574 0038 9B69     		ldr	r3, [r3, #24]
 575 003a 0C4A     		ldr	r2, .L31+4
 576 003c 43F48033 		orr	r3, r3, #65536
 577 0040 9361     		str	r3, [r2, #24]
 578 0042 0A4B     		ldr	r3, .L31+4
 579 0044 9B69     		ldr	r3, [r3, #24]
ARM GAS  /tmp/ccWdAD3d.s 			page 15


 580 0046 03F48033 		and	r3, r3, #65536
 581 004a BB60     		str	r3, [r7, #8]
 582 004c BB68     		ldr	r3, [r7, #8]
 583              	.LBE4:
 220:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM1_BRK_TIM15_IRQn);
 584              		.loc 1 220 0
 585 004e 0022     		movs	r2, #0
 586 0050 0021     		movs	r1, #0
 587 0052 1820     		movs	r0, #24
 588 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 221:Src/tim.c     ****   /* USER CODE BEGIN TIM15_MspInit 1 */
 589              		.loc 1 221 0
 590 0058 1820     		movs	r0, #24
 591 005a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 592              	.L30:
 593              		.loc 1 226 0
 594 005e 00BF     		nop
 595 0060 1037     		adds	r7, r7, #16
 596              	.LCFI23:
 597              		.cfi_def_cfa_offset 8
 598 0062 BD46     		mov	sp, r7
 599              	.LCFI24:
 600              		.cfi_def_cfa_register 13
 601              		@ sp needed
 602 0064 80BD     		pop	{r7, pc}
 603              	.L32:
 604 0066 00BF     		.align	2
 605              	.L31:
 606 0068 00040040 		.word	1073742848
 607 006c 00100240 		.word	1073876992
 608 0070 00400140 		.word	1073823744
 609              		.cfi_endproc
 610              	.LFE699:
 612              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
 613              		.align	1
 614              		.global	HAL_TIM_MspPostInit
 615              		.syntax unified
 616              		.thumb
 617              		.thumb_func
 618              		.fpu fpv4-sp-d16
 620              	HAL_TIM_MspPostInit:
 621              	.LFB700:
 227:Src/tim.c     **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 228:Src/tim.c     **** {
 622              		.loc 1 228 0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 32
 625              		@ frame_needed = 1, uses_anonymous_args = 0
 626 0000 80B5     		push	{r7, lr}
 627              	.LCFI25:
 628              		.cfi_def_cfa_offset 8
 629              		.cfi_offset 7, -8
 630              		.cfi_offset 14, -4
 631 0002 88B0     		sub	sp, sp, #32
 632              	.LCFI26:
 633              		.cfi_def_cfa_offset 40
 634 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccWdAD3d.s 			page 16


 635              	.LCFI27:
 636              		.cfi_def_cfa_register 7
 637 0006 7860     		str	r0, [r7, #4]
 229:Src/tim.c     **** 
 230:Src/tim.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 231:Src/tim.c     ****   if(timHandle->Instance==TIM3)
 638              		.loc 1 231 0
 639 0008 7B68     		ldr	r3, [r7, #4]
 640 000a 1B68     		ldr	r3, [r3]
 641 000c 0B4A     		ldr	r2, .L36
 642 000e 9342     		cmp	r3, r2
 643 0010 0FD1     		bne	.L35
 232:Src/tim.c     ****   {
 233:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspPostInit 0 */
 234:Src/tim.c     **** 
 235:Src/tim.c     ****   /* USER CODE END TIM3_MspPostInit 0 */
 236:Src/tim.c     ****   
 237:Src/tim.c     ****     /**TIM3 GPIO Configuration    
 238:Src/tim.c     ****     PB1     ------> TIM3_CH4 
 239:Src/tim.c     ****     */
 240:Src/tim.c     ****     GPIO_InitStruct.Pin = ND2_Pin;
 644              		.loc 1 240 0
 645 0012 0223     		movs	r3, #2
 646 0014 FB60     		str	r3, [r7, #12]
 241:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 647              		.loc 1 241 0
 648 0016 0223     		movs	r3, #2
 649 0018 3B61     		str	r3, [r7, #16]
 242:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 650              		.loc 1 242 0
 651 001a 0023     		movs	r3, #0
 652 001c 7B61     		str	r3, [r7, #20]
 243:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 653              		.loc 1 243 0
 654 001e 0023     		movs	r3, #0
 655 0020 BB61     		str	r3, [r7, #24]
 244:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 656              		.loc 1 244 0
 657 0022 0223     		movs	r3, #2
 658 0024 FB61     		str	r3, [r7, #28]
 245:Src/tim.c     ****     HAL_GPIO_Init(ND2_GPIO_Port, &GPIO_InitStruct);
 659              		.loc 1 245 0
 660 0026 07F10C03 		add	r3, r7, #12
 661 002a 1946     		mov	r1, r3
 662 002c 0448     		ldr	r0, .L36+4
 663 002e FFF7FEFF 		bl	HAL_GPIO_Init
 664              	.L35:
 246:Src/tim.c     **** 
 247:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspPostInit 1 */
 248:Src/tim.c     **** 
 249:Src/tim.c     ****   /* USER CODE END TIM3_MspPostInit 1 */
 250:Src/tim.c     ****   }
 251:Src/tim.c     **** 
 252:Src/tim.c     **** }
 665              		.loc 1 252 0
 666 0032 00BF     		nop
 667 0034 2037     		adds	r7, r7, #32
ARM GAS  /tmp/ccWdAD3d.s 			page 17


 668              	.LCFI28:
 669              		.cfi_def_cfa_offset 8
 670 0036 BD46     		mov	sp, r7
 671              	.LCFI29:
 672              		.cfi_def_cfa_register 13
 673              		@ sp needed
 674 0038 80BD     		pop	{r7, pc}
 675              	.L37:
 676 003a 00BF     		.align	2
 677              	.L36:
 678 003c 00040040 		.word	1073742848
 679 0040 00040048 		.word	1207960576
 680              		.cfi_endproc
 681              	.LFE700:
 683              		.section	.text.HAL_TIM_Encoder_MspDeInit,"ax",%progbits
 684              		.align	1
 685              		.global	HAL_TIM_Encoder_MspDeInit
 686              		.syntax unified
 687              		.thumb
 688              		.thumb_func
 689              		.fpu fpv4-sp-d16
 691              	HAL_TIM_Encoder_MspDeInit:
 692              	.LFB701:
 253:Src/tim.c     **** 
 254:Src/tim.c     **** void HAL_TIM_Encoder_MspDeInit(TIM_HandleTypeDef* tim_encoderHandle)
 255:Src/tim.c     **** {
 693              		.loc 1 255 0
 694              		.cfi_startproc
 695              		@ args = 0, pretend = 0, frame = 8
 696              		@ frame_needed = 1, uses_anonymous_args = 0
 697 0000 80B5     		push	{r7, lr}
 698              	.LCFI30:
 699              		.cfi_def_cfa_offset 8
 700              		.cfi_offset 7, -8
 701              		.cfi_offset 14, -4
 702 0002 82B0     		sub	sp, sp, #8
 703              	.LCFI31:
 704              		.cfi_def_cfa_offset 16
 705 0004 00AF     		add	r7, sp, #0
 706              	.LCFI32:
 707              		.cfi_def_cfa_register 7
 708 0006 7860     		str	r0, [r7, #4]
 256:Src/tim.c     **** 
 257:Src/tim.c     ****   if(tim_encoderHandle->Instance==TIM2)
 709              		.loc 1 257 0
 710 0008 7B68     		ldr	r3, [r7, #4]
 711 000a 1B68     		ldr	r3, [r3]
 712 000c B3F1804F 		cmp	r3, #1073741824
 713 0010 0AD1     		bne	.L40
 258:Src/tim.c     ****   {
 259:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
 260:Src/tim.c     **** 
 261:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 0 */
 262:Src/tim.c     ****     /* Peripheral clock disable */
 263:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_DISABLE();
 714              		.loc 1 263 0
 715 0012 074B     		ldr	r3, .L41
ARM GAS  /tmp/ccWdAD3d.s 			page 18


 716 0014 DB69     		ldr	r3, [r3, #28]
 717 0016 064A     		ldr	r2, .L41
 718 0018 23F00103 		bic	r3, r3, #1
 719 001c D361     		str	r3, [r2, #28]
 264:Src/tim.c     ****   
 265:Src/tim.c     ****     /**TIM2 GPIO Configuration    
 266:Src/tim.c     ****     PA0     ------> TIM2_CH1
 267:Src/tim.c     ****     PA1     ------> TIM2_CH2 
 268:Src/tim.c     ****     */
 269:Src/tim.c     ****     HAL_GPIO_DeInit(GPIOA, Encodeur_Ch_A_Pin|Encodeur_Ch_B_Pin);
 720              		.loc 1 269 0
 721 001e 0321     		movs	r1, #3
 722 0020 4FF09040 		mov	r0, #1207959552
 723 0024 FFF7FEFF 		bl	HAL_GPIO_DeInit
 724              	.L40:
 270:Src/tim.c     **** 
 271:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 272:Src/tim.c     **** 
 273:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 1 */
 274:Src/tim.c     ****   }
 275:Src/tim.c     **** }
 725              		.loc 1 275 0
 726 0028 00BF     		nop
 727 002a 0837     		adds	r7, r7, #8
 728              	.LCFI33:
 729              		.cfi_def_cfa_offset 8
 730 002c BD46     		mov	sp, r7
 731              	.LCFI34:
 732              		.cfi_def_cfa_register 13
 733              		@ sp needed
 734 002e 80BD     		pop	{r7, pc}
 735              	.L42:
 736              		.align	2
 737              	.L41:
 738 0030 00100240 		.word	1073876992
 739              		.cfi_endproc
 740              	.LFE701:
 742              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 743              		.align	1
 744              		.global	HAL_TIM_Base_MspDeInit
 745              		.syntax unified
 746              		.thumb
 747              		.thumb_func
 748              		.fpu fpv4-sp-d16
 750              	HAL_TIM_Base_MspDeInit:
 751              	.LFB702:
 276:Src/tim.c     **** 
 277:Src/tim.c     **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 278:Src/tim.c     **** {
 752              		.loc 1 278 0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 8
 755              		@ frame_needed = 1, uses_anonymous_args = 0
 756 0000 80B5     		push	{r7, lr}
 757              	.LCFI35:
 758              		.cfi_def_cfa_offset 8
 759              		.cfi_offset 7, -8
ARM GAS  /tmp/ccWdAD3d.s 			page 19


 760              		.cfi_offset 14, -4
 761 0002 82B0     		sub	sp, sp, #8
 762              	.LCFI36:
 763              		.cfi_def_cfa_offset 16
 764 0004 00AF     		add	r7, sp, #0
 765              	.LCFI37:
 766              		.cfi_def_cfa_register 7
 767 0006 7860     		str	r0, [r7, #4]
 279:Src/tim.c     **** 
 280:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM3)
 768              		.loc 1 280 0
 769 0008 7B68     		ldr	r3, [r7, #4]
 770 000a 1B68     		ldr	r3, [r3]
 771 000c 0D4A     		ldr	r2, .L47
 772 000e 9342     		cmp	r3, r2
 773 0010 06D1     		bne	.L44
 281:Src/tim.c     ****   {
 282:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 0 */
 283:Src/tim.c     **** 
 284:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 0 */
 285:Src/tim.c     ****     /* Peripheral clock disable */
 286:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_DISABLE();
 774              		.loc 1 286 0
 775 0012 0D4B     		ldr	r3, .L47+4
 776 0014 DB69     		ldr	r3, [r3, #28]
 777 0016 0C4A     		ldr	r2, .L47+4
 778 0018 23F00203 		bic	r3, r3, #2
 779 001c D361     		str	r3, [r2, #28]
 287:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 288:Src/tim.c     **** 
 289:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 1 */
 290:Src/tim.c     ****   }
 291:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM15)
 292:Src/tim.c     ****   {
 293:Src/tim.c     ****   /* USER CODE BEGIN TIM15_MspDeInit 0 */
 294:Src/tim.c     **** 
 295:Src/tim.c     ****   /* USER CODE END TIM15_MspDeInit 0 */
 296:Src/tim.c     ****     /* Peripheral clock disable */
 297:Src/tim.c     ****     __HAL_RCC_TIM15_CLK_DISABLE();
 298:Src/tim.c     **** 
 299:Src/tim.c     ****     /* TIM15 interrupt Deinit */
 300:Src/tim.c     ****     HAL_NVIC_DisableIRQ(TIM1_BRK_TIM15_IRQn);
 301:Src/tim.c     ****   /* USER CODE BEGIN TIM15_MspDeInit 1 */
 302:Src/tim.c     **** 
 303:Src/tim.c     ****   /* USER CODE END TIM15_MspDeInit 1 */
 304:Src/tim.c     ****   }
 305:Src/tim.c     **** } 
 780              		.loc 1 305 0
 781 001e 0DE0     		b	.L46
 782              	.L44:
 291:Src/tim.c     ****   {
 783              		.loc 1 291 0
 784 0020 7B68     		ldr	r3, [r7, #4]
 785 0022 1B68     		ldr	r3, [r3]
 786 0024 094A     		ldr	r2, .L47+8
 787 0026 9342     		cmp	r3, r2
 788 0028 08D1     		bne	.L46
ARM GAS  /tmp/ccWdAD3d.s 			page 20


 297:Src/tim.c     **** 
 789              		.loc 1 297 0
 790 002a 074B     		ldr	r3, .L47+4
 791 002c 9B69     		ldr	r3, [r3, #24]
 792 002e 064A     		ldr	r2, .L47+4
 793 0030 23F48033 		bic	r3, r3, #65536
 794 0034 9361     		str	r3, [r2, #24]
 300:Src/tim.c     ****   /* USER CODE BEGIN TIM15_MspDeInit 1 */
 795              		.loc 1 300 0
 796 0036 1820     		movs	r0, #24
 797 0038 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 798              	.L46:
 799              		.loc 1 305 0
 800 003c 00BF     		nop
 801 003e 0837     		adds	r7, r7, #8
 802              	.LCFI38:
 803              		.cfi_def_cfa_offset 8
 804 0040 BD46     		mov	sp, r7
 805              	.LCFI39:
 806              		.cfi_def_cfa_register 13
 807              		@ sp needed
 808 0042 80BD     		pop	{r7, pc}
 809              	.L48:
 810              		.align	2
 811              	.L47:
 812 0044 00040040 		.word	1073742848
 813 0048 00100240 		.word	1073876992
 814 004c 00400140 		.word	1073823744
 815              		.cfi_endproc
 816              	.LFE702:
 818              		.text
 819              	.Letext0:
 820              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 821              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 822              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 823              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 824              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 825              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 826              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 827              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.3.0/include/stddef.h"
 828              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 829              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 830              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 831              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 832              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 833              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim_ex.h"
 834              		.file 16 "Inc/tim.h"
 835              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_ll_dma.h"
ARM GAS  /tmp/ccWdAD3d.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
     /tmp/ccWdAD3d.s:18     .rodata.CHANNEL_OFFSET_TAB:0000000000000000 $d
     /tmp/ccWdAD3d.s:21     .rodata.CHANNEL_OFFSET_TAB:0000000000000000 CHANNEL_OFFSET_TAB
                            *COM*:0000000000000040 htim2
                            *COM*:0000000000000040 htim3
                            *COM*:0000000000000040 htim15
     /tmp/ccWdAD3d.s:33     .rodata:0000000000000000 $d
     /tmp/ccWdAD3d.s:37     .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccWdAD3d.s:44     .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccWdAD3d.s:158    .text.MX_TIM2_Init:0000000000000094 $d
     /tmp/ccWdAD3d.s:164    .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/ccWdAD3d.s:171    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/ccWdAD3d.s:620    .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
     /tmp/ccWdAD3d.s:311    .text.MX_TIM3_Init:00000000000000d0 $d
     /tmp/ccWdAD3d.s:318    .text.MX_TIM15_Init:0000000000000000 $t
     /tmp/ccWdAD3d.s:325    .text.MX_TIM15_Init:0000000000000000 MX_TIM15_Init
     /tmp/ccWdAD3d.s:429    .text.MX_TIM15_Init:000000000000008c $d
     /tmp/ccWdAD3d.s:436    .text.HAL_TIM_Encoder_MspInit:0000000000000000 $t
     /tmp/ccWdAD3d.s:443    .text.HAL_TIM_Encoder_MspInit:0000000000000000 HAL_TIM_Encoder_MspInit
     /tmp/ccWdAD3d.s:513    .text.HAL_TIM_Encoder_MspInit:0000000000000054 $d
     /tmp/ccWdAD3d.s:518    .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/ccWdAD3d.s:525    .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/ccWdAD3d.s:606    .text.HAL_TIM_Base_MspInit:0000000000000068 $d
     /tmp/ccWdAD3d.s:613    .text.HAL_TIM_MspPostInit:0000000000000000 $t
     /tmp/ccWdAD3d.s:678    .text.HAL_TIM_MspPostInit:000000000000003c $d
     /tmp/ccWdAD3d.s:684    .text.HAL_TIM_Encoder_MspDeInit:0000000000000000 $t
     /tmp/ccWdAD3d.s:691    .text.HAL_TIM_Encoder_MspDeInit:0000000000000000 HAL_TIM_Encoder_MspDeInit
     /tmp/ccWdAD3d.s:738    .text.HAL_TIM_Encoder_MspDeInit:0000000000000030 $d
     /tmp/ccWdAD3d.s:743    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/ccWdAD3d.s:750    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/ccWdAD3d.s:812    .text.HAL_TIM_Base_MspDeInit:0000000000000044 $d

UNDEFINED SYMBOLS
HAL_TIM_Encoder_Init
_Error_Handler
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
