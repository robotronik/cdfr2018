ARM GAS  /tmp/ccAi0dKw.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 2
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"remote_call.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.RC_Copy_Format,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	RC_Copy_Format:
  26              	.LFB0:
  27              		.file 1 "Src/remote_call.c"
   1:Src/remote_call.c **** /**
   2:Src/remote_call.c ****  * Library Remote Call Client/Server @Robotronik
   3:Src/remote_call.c ****  * remote_call.c
   4:Src/remote_call.c ****  * This library is meant to run a remote call server between ÂµC. 
   5:Src/remote_call.c ****  *
   6:Src/remote_call.c ****  * Copyright 2018 Antonin Hirschy
   7:Src/remote_call.c ****  *
   8:Src/remote_call.c ****  * This program is free software: you can redistribute it and/or modify
   9:Src/remote_call.c ****  * it under the terms of the GNU General Public License as published by
  10:Src/remote_call.c ****  * the Free Software Foundation, either version 3 of the License, or
  11:Src/remote_call.c ****  * (at your option) any later version.
  12:Src/remote_call.c ****  * 
  13:Src/remote_call.c ****  * This program is distributed in the hope that it will be useful,
  14:Src/remote_call.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  15:Src/remote_call.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  16:Src/remote_call.c ****  * GNU General Public License for more details.
  17:Src/remote_call.c ****  *
  18:Src/remote_call.c ****  * You should have received a copy of the GNU General Public License
  19:Src/remote_call.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  20:Src/remote_call.c ****  */
  21:Src/remote_call.c **** #include "remote_call.h"
  22:Src/remote_call.c **** 
  23:Src/remote_call.c **** //Error code
  24:Src/remote_call.c **** static int err = 0;
  25:Src/remote_call.c **** 
  26:Src/remote_call.c **** //Private functions
  27:Src/remote_call.c **** static int RC_Copy_Format(char *dst, const char fmt[]);
  28:Src/remote_call.c **** static int RC_Pack_Vars(const char *fmt, uint8_t *out, int out_len,  va_list *args);
  29:Src/remote_call.c **** static int RC_Unpack_Vars(const char *fmt, uint8_t *in, int in_len,  va_list *args);
  30:Src/remote_call.c **** 
  31:Src/remote_call.c **** //Macros
ARM GAS  /tmp/ccAi0dKw.s 			page 2


  32:Src/remote_call.c **** #define CHECK_ID(id) ((id >= 0) && (id < RC_NB_FUNCTIONS))
  33:Src/remote_call.c **** 
  34:Src/remote_call.c **** #define RC_CHECK_TYPE(type, count)					\
  35:Src/remote_call.c ****   ({									\
  36:Src/remote_call.c ****     int valid = 1;							\
  37:Src/remote_call.c ****     switch(type){							\
  38:Src/remote_call.c ****     case RC_UINT8_T: count += sizeof(uint8_t); break;			\
  39:Src/remote_call.c ****     case RC_UINT16_T: count += sizeof(uint16_t); break;			\
  40:Src/remote_call.c ****     case RC_UINT32_T: count += sizeof(uint32_t); break;			\
  41:Src/remote_call.c ****     case RC_INT: count += sizeof(int); break;				\
  42:Src/remote_call.c ****     case RC_FLOAT: count += sizeof(float); break;			\
  43:Src/remote_call.c ****     case RC_DOUBLE: count += sizeof(double); break;			\
  44:Src/remote_call.c ****     case RC_STRING: count += RC_STR_SIZE; break;			\
  45:Src/remote_call.c ****     default: valid = 0; break;						\
  46:Src/remote_call.c ****     }									\
  47:Src/remote_call.c ****     valid;								\
  48:Src/remote_call.c ****   })
  49:Src/remote_call.c **** 
  50:Src/remote_call.c **** #ifdef RC_LITTLE_ENDIAN
  51:Src/remote_call.c **** #define RC_PACK_VAR_START(var) ((uint8_t*) (&var))
  52:Src/remote_call.c **** #define RC_UNPACK_VAR_START(args, type, promoted) ((uint8_t*) va_arg(args, promoted))
  53:Src/remote_call.c **** #define RC_VAR_GET_BYTE(ptr) *(ptr++)
  54:Src/remote_call.c **** #else
  55:Src/remote_call.c **** #define RC_PACK_VAR_START(var) ((uint8_t*) (&var) + (sizeof(var) - 1))
  56:Src/remote_call.c **** #define RC_UNPACK_VAR_START(args, type, promoted) (((uint8_t*) va_arg(args, promoted)) + (sizeof(ty
  57:Src/remote_call.c **** #define RC_VAR_GET_BYTE(ptr) *(ptr--)
  58:Src/remote_call.c **** #endif
  59:Src/remote_call.c **** 
  60:Src/remote_call.c **** #define RC_PACK_VAR(args, type, promoted, out, out_len, success)	\
  61:Src/remote_call.c ****   {									\
  62:Src/remote_call.c ****     type var = (type) va_arg(args, promoted);				\
  63:Src/remote_call.c ****     uint8_t *byte  = RC_PACK_VAR_START(var);				\
  64:Src/remote_call.c ****     int _end = out_len - sizeof(var);					\
  65:Src/remote_call.c ****     success = (_end >= 0);						\
  66:Src/remote_call.c ****     									\
  67:Src/remote_call.c ****     if(success){							\
  68:Src/remote_call.c ****       for(; out_len > _end; out_len--){					\
  69:Src/remote_call.c **** 	*(out++) = RC_VAR_GET_BYTE(byte);				\
  70:Src/remote_call.c ****       }									\
  71:Src/remote_call.c ****     }									\
  72:Src/remote_call.c ****   }								
  73:Src/remote_call.c **** 
  74:Src/remote_call.c **** #define RC_PACK_STRING(args, out, out_len, success)			\
  75:Src/remote_call.c ****   {									\
  76:Src/remote_call.c ****     char *str = va_arg(args, char*);					\
  77:Src/remote_call.c ****     char c = '*';							\
  78:Src/remote_call.c ****     int count = RC_STR_SIZE;						\
  79:Src/remote_call.c ****     /* Copy a character from str to out until the end of str or out is reached */ \
  80:Src/remote_call.c ****     while(out_len != 0 && (c = *(out++) = *(str++)) != '\0' && (--count)){ \
  81:Src/remote_call.c ****       out_len--;							\
  82:Src/remote_call.c ****     }									\
  83:Src/remote_call.c ****     /* if the last character was '\0', out_len must be decremented */	\
  84:Src/remote_call.c ****     (c == '\0')?(out_len--, success = 1):(success = 0);			\
  85:Src/remote_call.c ****   }						
  86:Src/remote_call.c **** 
  87:Src/remote_call.c **** #define RC_UNPACK_VAR(args, type, promoted, in, in_len, success)	\
  88:Src/remote_call.c ****   {									\
ARM GAS  /tmp/ccAi0dKw.s 			page 3


  89:Src/remote_call.c ****     uint8_t *w_ptr = RC_UNPACK_VAR_START(args, type, promoted);		\
  90:Src/remote_call.c ****     int _end = in_len - sizeof(type);					\
  91:Src/remote_call.c ****     success = (_end >= 0);						\
  92:Src/remote_call.c **** 									\
  93:Src/remote_call.c ****     if(success){							\
  94:Src/remote_call.c ****       for(; in_len > _end; in_len--){					\
  95:Src/remote_call.c **** 	RC_VAR_GET_BYTE(w_ptr) = *(in++);				\
  96:Src/remote_call.c ****       }									\
  97:Src/remote_call.c ****     }									\
  98:Src/remote_call.c ****   }
  99:Src/remote_call.c **** 
 100:Src/remote_call.c **** #define RC_UNPACK_STRING(args, in, in_len, success)			\
 101:Src/remote_call.c ****   {									\
 102:Src/remote_call.c ****     char *w_ptr = va_arg(args, char*);					\
 103:Src/remote_call.c ****     char c = '*';							\
 104:Src/remote_call.c ****     int count = RC_STR_SIZE;						\
 105:Src/remote_call.c ****     while(in_len != 0 && (c = *(w_ptr++) = *(in++)) != '\0' && (--count)){ \
 106:Src/remote_call.c ****       in_len--;								\
 107:Src/remote_call.c ****     }									\
 108:Src/remote_call.c ****     (c == '\0')?(in_len--, success = 1):(success = 0);			\
 109:Src/remote_call.c ****   }								
 110:Src/remote_call.c **** 
 111:Src/remote_call.c **** static int RC_Copy_Format(char *dst, const char fmt[]){
  28              		.loc 1 111 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 4A1E     		subs	r2, r1, #1
  39 0004 0138     		subs	r0, r0, #1
  40              	.LVL1:
  41 0006 0731     		adds	r1, r1, #7
  42              	.LVL2:
 112:Src/remote_call.c ****   int i;
 113:Src/remote_call.c ****   char c;
 114:Src/remote_call.c ****   int max_size = 0;
  43              		.loc 1 114 0
  44 0008 0024     		movs	r4, #0
  45              	.LVL3:
  46              	.L13:
 115:Src/remote_call.c ****   
 116:Src/remote_call.c ****   for(i = 0; i < RC_FMT_SIZE && (c = dst[i] = fmt[i]) != '\0' && RC_CHECK_TYPE(c, max_size); i++);
  47              		.loc 1 116 0 discriminator 3
  48 000a 12F8013F 		ldrb	r3, [r2, #1]!	@ zero_extendqisi2
  49              	.LVL4:
  50 000e 00F8013F 		strb	r3, [r0, #1]!
  51              	.LVL5:
  52 0012 7BB3     		cbz	r3, .L2
  53              	.LBB9:
  54              		.loc 1 116 0 is_stmt 0 discriminator 4
  55 0014 423B     		subs	r3, r3, #66
  56 0016 332B     		cmp	r3, #51
ARM GAS  /tmp/ccAi0dKw.s 			page 4


  57 0018 1ED8     		bhi	.L3
  58 001a DFE803F0 		tbb	[pc, r3]
  59              	.L5:
  60 001e 27       		.byte	(.L4-.L5)/2
  61 001f 1D       		.byte	(.L3-.L5)/2
  62 0020 1D       		.byte	(.L3-.L5)/2
  63 0021 1D       		.byte	(.L3-.L5)/2
  64 0022 25       		.byte	(.L6-.L5)/2
  65 0023 1D       		.byte	(.L3-.L5)/2
  66 0024 1D       		.byte	(.L3-.L5)/2
  67 0025 1D       		.byte	(.L3-.L5)/2
  68 0026 1D       		.byte	(.L3-.L5)/2
  69 0027 1D       		.byte	(.L3-.L5)/2
  70 0028 1D       		.byte	(.L3-.L5)/2
  71 0029 1D       		.byte	(.L3-.L5)/2
  72 002a 1D       		.byte	(.L3-.L5)/2
  73 002b 1D       		.byte	(.L3-.L5)/2
  74 002c 1D       		.byte	(.L3-.L5)/2
  75 002d 1D       		.byte	(.L3-.L5)/2
  76 002e 1D       		.byte	(.L3-.L5)/2
  77 002f 1D       		.byte	(.L3-.L5)/2
  78 0030 1D       		.byte	(.L3-.L5)/2
  79 0031 1D       		.byte	(.L3-.L5)/2
  80 0032 1D       		.byte	(.L3-.L5)/2
  81 0033 1D       		.byte	(.L3-.L5)/2
  82 0034 1D       		.byte	(.L3-.L5)/2
  83 0035 1D       		.byte	(.L3-.L5)/2
  84 0036 1D       		.byte	(.L3-.L5)/2
  85 0037 1D       		.byte	(.L3-.L5)/2
  86 0038 1D       		.byte	(.L3-.L5)/2
  87 0039 1D       		.byte	(.L3-.L5)/2
  88 003a 1D       		.byte	(.L3-.L5)/2
  89 003b 1D       		.byte	(.L3-.L5)/2
  90 003c 1D       		.byte	(.L3-.L5)/2
  91 003d 1D       		.byte	(.L3-.L5)/2
  92 003e 23       		.byte	(.L7-.L5)/2
  93 003f 1D       		.byte	(.L3-.L5)/2
  94 0040 1D       		.byte	(.L3-.L5)/2
  95 0041 1D       		.byte	(.L3-.L5)/2
  96 0042 1A       		.byte	(.L8-.L5)/2
  97 0043 1D       		.byte	(.L3-.L5)/2
  98 0044 1D       		.byte	(.L3-.L5)/2
  99 0045 1A       		.byte	(.L8-.L5)/2
 100 0046 1D       		.byte	(.L3-.L5)/2
 101 0047 1D       		.byte	(.L3-.L5)/2
 102 0048 1D       		.byte	(.L3-.L5)/2
 103 0049 1D       		.byte	(.L3-.L5)/2
 104 004a 1D       		.byte	(.L3-.L5)/2
 105 004b 1D       		.byte	(.L3-.L5)/2
 106 004c 1D       		.byte	(.L3-.L5)/2
 107 004d 1D       		.byte	(.L3-.L5)/2
 108 004e 1D       		.byte	(.L3-.L5)/2
 109 004f 29       		.byte	(.L10-.L5)/2
 110 0050 1D       		.byte	(.L3-.L5)/2
 111 0051 1A       		.byte	(.L8-.L5)/2
 112              		.p2align 1
 113              	.L8:
ARM GAS  /tmp/ccAi0dKw.s 			page 5


 114              		.loc 1 116 0 discriminator 9
 115 0052 0434     		adds	r4, r4, #4
 116              	.LVL6:
 117              	.L12:
 118              	.LBE9:
 119              		.loc 1 116 0
 120 0054 8A42     		cmp	r2, r1
 121 0056 D8D1     		bne	.L13
 122              	.LVL7:
 123              	.L3:
 117:Src/remote_call.c ****   
 118:Src/remote_call.c ****   if(c != '\0' || max_size > RC_MAX_DATA){
 119:Src/remote_call.c ****     err = RC_WRONG_FORMAT;
 124              		.loc 1 119 0 is_stmt 1
 125 0058 084B     		ldr	r3, .L19
 126 005a 0122     		movs	r2, #1
 127 005c 1A60     		str	r2, [r3]
 120:Src/remote_call.c ****     return -1;
 128              		.loc 1 120 0
 129 005e 4FF0FF30 		mov	r0, #-1
 130 0062 10BD     		pop	{r4, pc}
 131              	.LVL8:
 132              	.L7:
 133              	.LBB10:
 116:Src/remote_call.c ****   
 134              		.loc 1 116 0 discriminator 8
 135 0064 0134     		adds	r4, r4, #1
 136              	.LVL9:
 137 0066 F5E7     		b	.L12
 138              	.L6:
 116:Src/remote_call.c ****   
 139              		.loc 1 116 0 is_stmt 0 discriminator 7
 140 0068 0834     		adds	r4, r4, #8
 141              	.LVL10:
 142 006a F3E7     		b	.L12
 143              	.L4:
 116:Src/remote_call.c ****   
 144              		.loc 1 116 0 discriminator 6
 145 006c 0234     		adds	r4, r4, #2
 146              	.LVL11:
 147 006e F1E7     		b	.L12
 148              	.L10:
 116:Src/remote_call.c ****   
 149              		.loc 1 116 0 discriminator 11
 150 0070 4034     		adds	r4, r4, #64
 151              	.LVL12:
 152 0072 EFE7     		b	.L12
 153              	.L2:
 154              	.LBE10:
 118:Src/remote_call.c ****     err = RC_WRONG_FORMAT;
 155              		.loc 1 118 0 is_stmt 1
 156 0074 F92C     		cmp	r4, #249
 157 0076 EFDC     		bgt	.L3
 121:Src/remote_call.c ****   }
 122:Src/remote_call.c **** 
 123:Src/remote_call.c ****   return 0;
 158              		.loc 1 123 0
ARM GAS  /tmp/ccAi0dKw.s 			page 6


 159 0078 1846     		mov	r0, r3
 124:Src/remote_call.c **** }
 160              		.loc 1 124 0
 161 007a 10BD     		pop	{r4, pc}
 162              	.LVL13:
 163              	.L20:
 164              		.align	2
 165              	.L19:
 166 007c 00000000 		.word	.LANCHOR0
 167              		.cfi_endproc
 168              	.LFE0:
 170              		.section	.text.RC_Unpack_Vars,"ax",%progbits
 171              		.align	2
 172              		.thumb
 173              		.thumb_func
 175              	RC_Unpack_Vars:
 176              	.LFB2:
 125:Src/remote_call.c **** 
 126:Src/remote_call.c **** static int RC_Pack_Vars(const char *fmt, uint8_t *out, int out_len,  va_list *args){
 127:Src/remote_call.c ****   int out_len_tmp = out_len;
 128:Src/remote_call.c **** 
 129:Src/remote_call.c ****   char c;
 130:Src/remote_call.c ****   int success = 1;
 131:Src/remote_call.c ****   while((c = *(fmt++)) != '\0' && success){
 132:Src/remote_call.c ****     if(c == RC_UINT8_T){
 133:Src/remote_call.c ****       RC_PACK_VAR(*args, uint8_t, int, out, out_len, success);
 134:Src/remote_call.c ****     }
 135:Src/remote_call.c ****     else if(c == RC_UINT16_T){
 136:Src/remote_call.c ****       RC_PACK_VAR(*args, uint16_t, int, out, out_len, success);
 137:Src/remote_call.c ****     }
 138:Src/remote_call.c ****     else if(c == RC_UINT32_T){
 139:Src/remote_call.c ****       RC_PACK_VAR(*args, uint32_t, int, out, out_len, success);      
 140:Src/remote_call.c ****     }
 141:Src/remote_call.c ****     else if(c == RC_INT){
 142:Src/remote_call.c ****       RC_PACK_VAR(*args, int, int, out, out_len, success);
 143:Src/remote_call.c ****     }
 144:Src/remote_call.c ****     else if(c == RC_FLOAT){
 145:Src/remote_call.c ****       RC_PACK_VAR(*args, float, double, out, out_len, success);
 146:Src/remote_call.c ****     }
 147:Src/remote_call.c ****     else if(c == RC_DOUBLE){
 148:Src/remote_call.c ****       RC_PACK_VAR(*args, double, double, out, out_len, success);      
 149:Src/remote_call.c ****     }
 150:Src/remote_call.c ****     else if(c == RC_STRING){
 151:Src/remote_call.c ****       RC_PACK_STRING(*args, out, out_len, success);
 152:Src/remote_call.c ****     }else{
 153:Src/remote_call.c ****       //Should not happen because format is checked when the function
 154:Src/remote_call.c ****       //is initialized.
 155:Src/remote_call.c ****       err = RC_WRONG_FORMAT;
 156:Src/remote_call.c ****       return -1;
 157:Src/remote_call.c ****     }
 158:Src/remote_call.c ****   }
 159:Src/remote_call.c ****   
 160:Src/remote_call.c ****   return (success)?(out_len_tmp - out_len):-1;
 161:Src/remote_call.c **** }								
 162:Src/remote_call.c **** 
 163:Src/remote_call.c **** static int RC_Unpack_Vars(const char *fmt, uint8_t *in, int in_len,  va_list *args){
 177              		.loc 1 163 0
ARM GAS  /tmp/ccAi0dKw.s 			page 7


 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181              		@ link register save eliminated.
 182              	.LVL14:
 183 0000 70B4     		push	{r4, r5, r6}
 184              	.LCFI1:
 185              		.cfi_def_cfa_offset 12
 186              		.cfi_offset 4, -12
 187              		.cfi_offset 5, -8
 188              		.cfi_offset 6, -4
 164:Src/remote_call.c ****   char c;
 165:Src/remote_call.c ****   int success = 1;
 189              		.loc 1 165 0
 190 0002 0125     		movs	r5, #1
 191              	.LVL15:
 192              	.L22:
 166:Src/remote_call.c ****   
 167:Src/remote_call.c ****   while((c = *(fmt++)) != '\0' && success){
 193              		.loc 1 167 0
 194 0004 10F8014B 		ldrb	r4, [r0], #1	@ zero_extendqisi2
 195              	.LVL16:
 196 0008 6CB3     		cbz	r4, .L39
 197              	.LVL17:
 198              	.L80:
 199              		.loc 1 167 0 is_stmt 0 discriminator 1
 200 000a 002D     		cmp	r5, #0
 201 000c 00F09980 		beq	.L54
 168:Src/remote_call.c ****     if(c == RC_UINT8_T){
 202              		.loc 1 168 0 is_stmt 1
 203 0010 622C     		cmp	r4, #98
 204 0012 30D0     		beq	.L73
 169:Src/remote_call.c ****       RC_UNPACK_VAR(*args, uint8_t, uint8_t*, in, in_len, success);
 170:Src/remote_call.c ****     }
 171:Src/remote_call.c ****     else if(c == RC_UINT16_T){
 205              		.loc 1 171 0
 206 0014 422C     		cmp	r4, #66
 207 0016 3CD0     		beq	.L74
 172:Src/remote_call.c ****       RC_UNPACK_VAR(*args, uint16_t, uint16_t*, in, in_len, success);
 173:Src/remote_call.c ****     }
 174:Src/remote_call.c ****     else if(c == RC_UINT32_T){
 208              		.loc 1 174 0
 209 0018 752C     		cmp	r4, #117
 210 001a 4AD0     		beq	.L75
 175:Src/remote_call.c ****       RC_UNPACK_VAR(*args, uint32_t, uint32_t*, in, in_len, success);
 176:Src/remote_call.c ****     }
 177:Src/remote_call.c ****     else if(c == RC_INT){
 211              		.loc 1 177 0
 212 001c 692C     		cmp	r4, #105
 213 001e 65D0     		beq	.L76
 178:Src/remote_call.c ****       RC_UNPACK_VAR(*args, int, int*, in, in_len, success);
 179:Src/remote_call.c ****     }
 180:Src/remote_call.c ****     else if(c == RC_FLOAT){
 214              		.loc 1 180 0
 215 0020 662C     		cmp	r4, #102
 216 0022 59D0     		beq	.L77
 181:Src/remote_call.c ****       RC_UNPACK_VAR(*args, float, float*, in, in_len, success);
ARM GAS  /tmp/ccAi0dKw.s 			page 8


 182:Src/remote_call.c ****     }
 183:Src/remote_call.c ****     else if(c == RC_DOUBLE){
 217              		.loc 1 183 0
 218 0024 462C     		cmp	r4, #70
 219 0026 74D0     		beq	.L78
 184:Src/remote_call.c ****       RC_UNPACK_VAR(*args, double, double*, in, in_len, success);
 185:Src/remote_call.c ****     }
 186:Src/remote_call.c ****     else if(c == RC_STRING){
 220              		.loc 1 186 0
 221 0028 732C     		cmp	r4, #115
 222 002a 40F09980 		bne	.L34
 223              	.LBB11:
 187:Src/remote_call.c ****       RC_UNPACK_STRING(*args, in, in_len, success);
 224              		.loc 1 187 0
 225 002e 1C68     		ldr	r4, [r3]
 226              	.LVL18:
 227 0030 251D     		adds	r5, r4, #4
 228              	.LVL19:
 229 0032 1D60     		str	r5, [r3]
 230 0034 2468     		ldr	r4, [r4]
 231              	.LVL20:
 232 0036 8AB1     		cbz	r2, .L35
 233              	.LVL21:
 234 0038 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
 235 003a 2570     		strb	r5, [r4]
 236 003c 0131     		adds	r1, r1, #1
 237              	.LVL22:
 238 003e 002D     		cmp	r5, #0
 239 0040 7CD0     		beq	.L36
 240 0042 04F13F06 		add	r6, r4, #63
 241 0046 07E0     		b	.L37
 242              	.LVL23:
 243              	.L79:
 244              		.loc 1 187 0 is_stmt 0 discriminator 3
 245 0048 11F8015B 		ldrb	r5, [r1], #1	@ zero_extendqisi2
 246              	.LVL24:
 247 004c 04F8015F 		strb	r5, [r4, #1]!
 248              	.LVL25:
 249 0050 002D     		cmp	r5, #0
 250 0052 73D0     		beq	.L36
 251              		.loc 1 187 0 discriminator 5
 252 0054 B442     		cmp	r4, r6
 253 0056 01D0     		beq	.L35
 254              	.LVL26:
 255              	.L37:
 256              		.loc 1 187 0 discriminator 7
 257 0058 013A     		subs	r2, r2, #1
 258              	.LVL27:
 259 005a F5D1     		bne	.L79
 260              	.LVL28:
 261              	.L35:
 262              	.LBE11:
 167:Src/remote_call.c ****     if(c == RC_UINT8_T){
 263              		.loc 1 167 0 is_stmt 1
 264 005c 10F8014B 		ldrb	r4, [r0], #1	@ zero_extendqisi2
 265              	.LBB12:
 266              		.loc 1 187 0
ARM GAS  /tmp/ccAi0dKw.s 			page 9


 267 0060 0025     		movs	r5, #0
 268              	.LVL29:
 269              	.LBE12:
 167:Src/remote_call.c ****     if(c == RC_UINT8_T){
 270              		.loc 1 167 0
 271 0062 002C     		cmp	r4, #0
 272 0064 D1D1     		bne	.L80
 273              	.LVL30:
 274              	.L39:
 188:Src/remote_call.c ****     }else{
 189:Src/remote_call.c ****       //Should not happen because format is checked when the function
 190:Src/remote_call.c ****       //is initialized.
 191:Src/remote_call.c ****       err = RC_WRONG_FORMAT;
 192:Src/remote_call.c ****       return -1;
 193:Src/remote_call.c ****     }
 194:Src/remote_call.c ****   }
 195:Src/remote_call.c ****   
 196:Src/remote_call.c ****   return (success && in_len == 0)?0:-1;
 275              		.loc 1 196 0
 276 0066 002D     		cmp	r5, #0
 277 0068 6BD0     		beq	.L54
 278              		.loc 1 196 0 is_stmt 0 discriminator 1
 279 006a 0032     		adds	r2, r2, #0
 280 006c 18BF     		it	ne
 281 006e 0122     		movne	r2, #1
 282 0070 5042     		negs	r0, r2
 197:Src/remote_call.c **** }
 283              		.loc 1 197 0 is_stmt 1 discriminator 1
 284 0072 70BC     		pop	{r4, r5, r6}
 285              	.LCFI2:
 286              		.cfi_remember_state
 287              		.cfi_restore 4
 288              		.cfi_restore 5
 289              		.cfi_restore 6
 290              		.cfi_def_cfa_offset 0
 291              	.LVL31:
 292 0074 7047     		bx	lr
 293              	.LVL32:
 294              	.L73:
 295              	.LCFI3:
 296              		.cfi_restore_state
 297              	.LBB13:
 169:Src/remote_call.c ****     }
 298              		.loc 1 169 0
 299 0076 1C68     		ldr	r4, [r3]
 300              	.LVL33:
 301 0078 251D     		adds	r5, r4, #4
 302              	.LVL34:
 303 007a 1D60     		str	r5, [r3]
 304 007c 2568     		ldr	r5, [r4]
 305              	.LVL35:
 306 007e 541E     		subs	r4, r2, #1
 307 0080 ECD4     		bmi	.L35
 169:Src/remote_call.c ****     }
 308              		.loc 1 169 0 is_stmt 0 discriminator 1
 309 0082 A242     		cmp	r2, r4
 310 0084 30DD     		ble	.L52
ARM GAS  /tmp/ccAi0dKw.s 			page 10


 311              	.LVL36:
 169:Src/remote_call.c ****     }
 312              		.loc 1 169 0
 313 0086 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 314 0088 2A70     		strb	r2, [r5]
 315              	.LVL37:
 316 008a 0131     		adds	r1, r1, #1
 317              	.LVL38:
 318 008c 2246     		mov	r2, r4
 319              	.LVL39:
 320 008e 0125     		movs	r5, #1
 321              	.LVL40:
 322 0090 B8E7     		b	.L22
 323              	.LVL41:
 324              	.L74:
 325              	.LBE13:
 326              	.LBB14:
 172:Src/remote_call.c ****     }
 327              		.loc 1 172 0 is_stmt 1
 328 0092 1C68     		ldr	r4, [r3]
 329              	.LVL42:
 330 0094 251D     		adds	r5, r4, #4
 331              	.LVL43:
 332 0096 1D60     		str	r5, [r3]
 333 0098 2568     		ldr	r5, [r4]
 334              	.LVL44:
 335 009a 941E     		subs	r4, r2, #2
 336              	.LVL45:
 337 009c DED4     		bmi	.L35
 172:Src/remote_call.c ****     }
 338              		.loc 1 172 0 is_stmt 0 discriminator 1
 339 009e A242     		cmp	r2, r4
 340 00a0 22DD     		ble	.L52
 341              	.LVL46:
 172:Src/remote_call.c ****     }
 342              		.loc 1 172 0
 343 00a2 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 344 00a4 2A70     		strb	r2, [r5]
 345              	.LVL47:
 346 00a6 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 347 00a8 6A70     		strb	r2, [r5, #1]
 348              	.LVL48:
 349 00aa 0231     		adds	r1, r1, #2
 350              	.LVL49:
 351 00ac 2246     		mov	r2, r4
 352 00ae 0125     		movs	r5, #1
 353              	.LVL50:
 354 00b0 A8E7     		b	.L22
 355              	.LVL51:
 356              	.L75:
 357              	.LBE14:
 358              	.LBB15:
 175:Src/remote_call.c ****     }
 359              		.loc 1 175 0 is_stmt 1
 360 00b2 1C68     		ldr	r4, [r3]
 361              	.LVL52:
 362 00b4 251D     		adds	r5, r4, #4
ARM GAS  /tmp/ccAi0dKw.s 			page 11


 363              	.LVL53:
 364 00b6 1D60     		str	r5, [r3]
 365 00b8 151F     		subs	r5, r2, #4
 366 00ba 2468     		ldr	r4, [r4]
 367              	.LVL54:
 368 00bc CED4     		bmi	.L35
 175:Src/remote_call.c ****     }
 369              		.loc 1 175 0 is_stmt 0 discriminator 1
 370 00be AA42     		cmp	r2, r5
 371 00c0 12DD     		ble	.L52
 372 00c2 621E     		subs	r2, r4, #1
 373 00c4 0E1D     		adds	r6, r1, #4
 374              	.LVL55:
 375              	.L27:
 175:Src/remote_call.c ****     }
 376              		.loc 1 175 0 discriminator 2
 377 00c6 11F8014B 		ldrb	r4, [r1], #1	@ zero_extendqisi2
 378              	.LVL56:
 379 00ca 02F8014F 		strb	r4, [r2, #1]!
 380 00ce B142     		cmp	r1, r6
 381 00d0 F9D1     		bne	.L27
 382              	.LVL57:
 383 00d2 2A46     		mov	r2, r5
 384              	.LBE15:
 385              	.LBB16:
 181:Src/remote_call.c ****     }
 386              		.loc 1 181 0 is_stmt 1
 387 00d4 0125     		movs	r5, #1
 388              	.LVL58:
 389 00d6 95E7     		b	.L22
 390              	.LVL59:
 391              	.L77:
 392 00d8 1C68     		ldr	r4, [r3]
 393              	.LVL60:
 394 00da 251D     		adds	r5, r4, #4
 395              	.LVL61:
 396 00dc 1D60     		str	r5, [r3]
 397 00de 151F     		subs	r5, r2, #4
 398 00e0 2468     		ldr	r4, [r4]
 399              	.LVL62:
 400 00e2 BBD4     		bmi	.L35
 181:Src/remote_call.c ****     }
 401              		.loc 1 181 0 is_stmt 0 discriminator 1
 402 00e4 AA42     		cmp	r2, r5
 403 00e6 30DC     		bgt	.L81
 404              	.LVL63:
 405              	.L52:
 406              	.LBE16:
 407              	.LBB17:
 184:Src/remote_call.c ****     }
 408              		.loc 1 184 0 is_stmt 1
 409 00e8 0125     		movs	r5, #1
 410 00ea 8BE7     		b	.L22
 411              	.LVL64:
 412              	.L76:
 413              	.LBE17:
 414              	.LBB18:
ARM GAS  /tmp/ccAi0dKw.s 			page 12


 178:Src/remote_call.c ****     }
 415              		.loc 1 178 0
 416 00ec 1C68     		ldr	r4, [r3]
 417              	.LVL65:
 418 00ee 251D     		adds	r5, r4, #4
 419              	.LVL66:
 420 00f0 1D60     		str	r5, [r3]
 421 00f2 151F     		subs	r5, r2, #4
 422 00f4 2468     		ldr	r4, [r4]
 423              	.LVL67:
 424 00f6 B1D4     		bmi	.L35
 178:Src/remote_call.c ****     }
 425              		.loc 1 178 0 is_stmt 0 discriminator 1
 426 00f8 AA42     		cmp	r2, r5
 427 00fa F5DD     		ble	.L52
 428 00fc 621E     		subs	r2, r4, #1
 429 00fe 0E1D     		adds	r6, r1, #4
 430              	.LVL68:
 431              	.L29:
 178:Src/remote_call.c ****     }
 432              		.loc 1 178 0 discriminator 2
 433 0100 11F8014B 		ldrb	r4, [r1], #1	@ zero_extendqisi2
 434              	.LVL69:
 435 0104 02F8014F 		strb	r4, [r2, #1]!
 436 0108 B142     		cmp	r1, r6
 437 010a F9D1     		bne	.L29
 438              	.LVL70:
 439 010c 2A46     		mov	r2, r5
 440              	.LBE18:
 441              	.LBB19:
 181:Src/remote_call.c ****     }
 442              		.loc 1 181 0 is_stmt 1
 443 010e 0125     		movs	r5, #1
 444              	.LVL71:
 445 0110 78E7     		b	.L22
 446              	.LVL72:
 447              	.L78:
 448              	.LBE19:
 449              	.LBB20:
 184:Src/remote_call.c ****     }
 450              		.loc 1 184 0
 451 0112 1C68     		ldr	r4, [r3]
 452              	.LVL73:
 453 0114 251D     		adds	r5, r4, #4
 454              	.LVL74:
 455 0116 1D60     		str	r5, [r3]
 456 0118 B2F10806 		subs	r6, r2, #8
 457 011c 2468     		ldr	r4, [r4]
 458              	.LVL75:
 459 011e 9DD4     		bmi	.L35
 184:Src/remote_call.c ****     }
 460              		.loc 1 184 0 is_stmt 0 discriminator 1
 461 0120 B242     		cmp	r2, r6
 462 0122 E1DD     		ble	.L52
 463 0124 621E     		subs	r2, r4, #1
 464 0126 01F10805 		add	r5, r1, #8
 465              	.LVL76:
ARM GAS  /tmp/ccAi0dKw.s 			page 13


 466              	.L33:
 184:Src/remote_call.c ****     }
 467              		.loc 1 184 0 discriminator 2
 468 012a 11F8014B 		ldrb	r4, [r1], #1	@ zero_extendqisi2
 469              	.LVL77:
 470 012e 02F8014F 		strb	r4, [r2, #1]!
 471 0132 A942     		cmp	r1, r5
 472 0134 F9D1     		bne	.L33
 473              	.LVL78:
 474 0136 3246     		mov	r2, r6
 184:Src/remote_call.c ****     }
 475              		.loc 1 184 0
 476 0138 0125     		movs	r5, #1
 477 013a 63E7     		b	.L22
 478              	.LVL79:
 479              	.L36:
 480              	.LBE20:
 481              	.LBB21:
 187:Src/remote_call.c ****     }else{
 482              		.loc 1 187 0 is_stmt 1
 483 013c 013A     		subs	r2, r2, #1
 484              	.LVL80:
 485 013e 0125     		movs	r5, #1
 486 0140 60E7     		b	.L22
 487              	.LVL81:
 488              	.L54:
 489              	.LBE21:
 196:Src/remote_call.c **** }
 490              		.loc 1 196 0
 491 0142 4FF0FF30 		mov	r0, #-1
 492              	.LVL82:
 493              	.L69:
 494              		.loc 1 197 0
 495 0146 70BC     		pop	{r4, r5, r6}
 496              	.LCFI4:
 497              		.cfi_remember_state
 498              		.cfi_restore 6
 499              		.cfi_restore 5
 500              		.cfi_restore 4
 501              		.cfi_def_cfa_offset 0
 502              	.LVL83:
 503 0148 7047     		bx	lr
 504              	.LVL84:
 505              	.L81:
 506              	.LCFI5:
 507              		.cfi_restore_state
 508 014a 621E     		subs	r2, r4, #1
 509 014c 0E1D     		adds	r6, r1, #4
 510              	.LVL85:
 511              	.L31:
 512              	.LBB22:
 181:Src/remote_call.c ****     }
 513              		.loc 1 181 0 discriminator 2
 514 014e 11F8014B 		ldrb	r4, [r1], #1	@ zero_extendqisi2
 515              	.LVL86:
 516 0152 02F8014F 		strb	r4, [r2, #1]!
 517 0156 B142     		cmp	r1, r6
ARM GAS  /tmp/ccAi0dKw.s 			page 14


 518 0158 F9D1     		bne	.L31
 519              	.LVL87:
 520 015a 2A46     		mov	r2, r5
 181:Src/remote_call.c ****     }
 521              		.loc 1 181 0 is_stmt 0
 522 015c 0125     		movs	r5, #1
 523              	.LVL88:
 524 015e 51E7     		b	.L22
 525              	.LVL89:
 526              	.L34:
 527              	.LBE22:
 191:Src/remote_call.c ****       return -1;
 528              		.loc 1 191 0 is_stmt 1
 529 0160 024B     		ldr	r3, .L82
 530              	.LVL90:
 531 0162 0122     		movs	r2, #1
 532 0164 1A60     		str	r2, [r3]
 192:Src/remote_call.c ****     }
 533              		.loc 1 192 0
 534 0166 4FF0FF30 		mov	r0, #-1
 535 016a ECE7     		b	.L69
 536              	.L83:
 537              		.align	2
 538              	.L82:
 539 016c 00000000 		.word	.LANCHOR0
 540              		.cfi_endproc
 541              	.LFE2:
 543              		.global	__aeabi_d2f
 544              		.section	.text.RC_Pack_Vars.constprop.0,"ax",%progbits
 545              		.align	2
 546              		.thumb
 547              		.thumb_func
 549              	RC_Pack_Vars.constprop.0:
 550              	.LFB13:
 126:Src/remote_call.c ****   int out_len_tmp = out_len;
 551              		.loc 1 126 0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 8
 554              		@ frame_needed = 0, uses_anonymous_args = 0
 555              	.LVL91:
 556 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 557              	.LCFI6:
 558              		.cfi_def_cfa_offset 28
 559              		.cfi_offset 4, -28
 560              		.cfi_offset 5, -24
 561              		.cfi_offset 6, -20
 562              		.cfi_offset 7, -16
 563              		.cfi_offset 8, -12
 564              		.cfi_offset 9, -8
 565              		.cfi_offset 14, -4
 566 0004 0D46     		mov	r5, r1
 567 0006 83B0     		sub	sp, sp, #12
 568              	.LCFI7:
 569              		.cfi_def_cfa_offset 40
 126:Src/remote_call.c ****   int out_len_tmp = out_len;
 570              		.loc 1 126 0
 571 0008 0646     		mov	r6, r0
ARM GAS  /tmp/ccAi0dKw.s 			page 15


 572 000a 1746     		mov	r7, r2
 130:Src/remote_call.c ****   while((c = *(fmt++)) != '\0' && success){
 573              		.loc 1 130 0
 574 000c 0121     		movs	r1, #1
 575              	.LVL92:
 576 000e F924     		movs	r4, #249
 577              	.LVL93:
 578              	.L85:
 131:Src/remote_call.c ****     if(c == RC_UINT8_T){
 579              		.loc 1 131 0
 580 0010 16F8013B 		ldrb	r3, [r6], #1	@ zero_extendqisi2
 581              	.LVL94:
 582 0014 002B     		cmp	r3, #0
 583 0016 39D0     		beq	.L108
 584              	.LVL95:
 585              	.L154:
 586 0018 0029     		cmp	r1, #0
 587 001a 00F0DF80 		beq	.L112
 132:Src/remote_call.c ****       RC_PACK_VAR(*args, uint8_t, int, out, out_len, success);
 588              		.loc 1 132 0
 589 001e 622B     		cmp	r3, #98
 590 0020 3CD0     		beq	.L146
 135:Src/remote_call.c ****       RC_PACK_VAR(*args, uint16_t, int, out, out_len, success);
 591              		.loc 1 135 0
 592 0022 422B     		cmp	r3, #66
 593 0024 49D0     		beq	.L147
 138:Src/remote_call.c ****       RC_PACK_VAR(*args, uint32_t, int, out, out_len, success);      
 594              		.loc 1 138 0
 595 0026 752B     		cmp	r3, #117
 596 0028 5DD0     		beq	.L148
 141:Src/remote_call.c ****       RC_PACK_VAR(*args, int, int, out, out_len, success);
 597              		.loc 1 141 0
 598 002a 692B     		cmp	r3, #105
 599 002c 74D0     		beq	.L149
 144:Src/remote_call.c ****       RC_PACK_VAR(*args, float, double, out, out_len, success);
 600              		.loc 1 144 0
 601 002e 662B     		cmp	r3, #102
 602 0030 00F08D80 		beq	.L150
 147:Src/remote_call.c ****       RC_PACK_VAR(*args, double, double, out, out_len, success);      
 603              		.loc 1 147 0
 604 0034 462B     		cmp	r3, #70
 605 0036 00F0AC80 		beq	.L151
 150:Src/remote_call.c ****       RC_PACK_STRING(*args, out, out_len, success);
 606              		.loc 1 150 0
 607 003a 732B     		cmp	r3, #115
 608 003c 40F0D580 		bne	.L103
 609              	.LBB23:
 151:Src/remote_call.c ****     }else{
 610              		.loc 1 151 0
 611 0040 3B68     		ldr	r3, [r7]
 612              	.LVL96:
 613 0042 1A1D     		adds	r2, r3, #4
 614 0044 3A60     		str	r2, [r7]
 615 0046 1868     		ldr	r0, [r3]
 616              	.LVL97:
 617 0048 002C     		cmp	r4, #0
 618 004a 00F0D480 		beq	.L110
ARM GAS  /tmp/ccAi0dKw.s 			page 16


 619 004e 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 620 0050 2A70     		strb	r2, [r5]
 621 0052 0130     		adds	r0, r0, #1
 622              	.LVL98:
 623 0054 6B1C     		adds	r3, r5, #1
 624              	.LVL99:
 625 0056 002A     		cmp	r2, #0
 626 0058 00F0BC80 		beq	.L105
 627 005c 2A19     		adds	r2, r5, r4
 628 005e 4035     		adds	r5, r5, #64
 629 0060 09E0     		b	.L106
 630              	.LVL100:
 631              	.L153:
 632 0062 10F8011B 		ldrb	r1, [r0], #1	@ zero_extendqisi2
 633              	.LVL101:
 634 0066 03F8011B 		strb	r1, [r3], #1
 635              	.LVL102:
 636 006a 0029     		cmp	r1, #0
 637 006c 00F0B280 		beq	.L105
 638 0070 AB42     		cmp	r3, r5
 639 0072 00F0B880 		beq	.L152
 640              	.LVL103:
 641              	.L106:
 642 0076 9342     		cmp	r3, r2
 643 0078 04F1FF34 		add	r4, r4, #-1
 644              	.LVL104:
 645 007c F1D1     		bne	.L153
 646              	.LVL105:
 647 007e 0024     		movs	r4, #0
 648              	.LVL106:
 649              	.L104:
 650              	.LBE23:
 131:Src/remote_call.c ****     if(c == RC_UINT8_T){
 651              		.loc 1 131 0
 652 0080 16F8013B 		ldrb	r3, [r6], #1	@ zero_extendqisi2
 653              	.LBB24:
 151:Src/remote_call.c ****     }else{
 654              		.loc 1 151 0
 655 0084 1546     		mov	r5, r2
 656 0086 0021     		movs	r1, #0
 657              	.LVL107:
 658              	.LBE24:
 131:Src/remote_call.c ****     if(c == RC_UINT8_T){
 659              		.loc 1 131 0
 660 0088 002B     		cmp	r3, #0
 661 008a C5D1     		bne	.L154
 662              	.LVL108:
 663              	.L108:
 160:Src/remote_call.c **** }								
 664              		.loc 1 160 0
 665 008c 0029     		cmp	r1, #0
 666 008e 00F0A580 		beq	.L112
 667 0092 C4F1F900 		rsb	r0, r4, #249
 668              	.LVL109:
 669              	.L142:
 161:Src/remote_call.c **** 
 670              		.loc 1 161 0
ARM GAS  /tmp/ccAi0dKw.s 			page 17


 671 0096 03B0     		add	sp, sp, #12
 672              	.LCFI8:
 673              		.cfi_remember_state
 674              		.cfi_def_cfa_offset 28
 675              		@ sp needed
 676 0098 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 677              	.LVL110:
 678              	.L146:
 679              	.LCFI9:
 680              		.cfi_restore_state
 681              	.LBB25:
 133:Src/remote_call.c ****     }
 682              		.loc 1 133 0
 683 009c 3B68     		ldr	r3, [r7]
 684              	.LVL111:
 685 009e 621E     		subs	r2, r4, #1
 686 00a0 D143     		mvns	r1, r2
 687              	.LVL112:
 688 00a2 181D     		adds	r0, r3, #4
 689 00a4 C90F     		lsrs	r1, r1, #31
 690 00a6 3860     		str	r0, [r7]
 691 00a8 1B68     		ldr	r3, [r3]
 692              	.LVL113:
 693 00aa 0029     		cmp	r1, #0
 694 00ac B0D0     		beq	.L85
 695 00ae 9442     		cmp	r4, r2
 696 00b0 AEDD     		ble	.L85
 697              	.LVL114:
 698 00b2 2B70     		strb	r3, [r5]
 699              	.LVL115:
 700 00b4 1446     		mov	r4, r2
 701              	.LVL116:
 702 00b6 0135     		adds	r5, r5, #1
 703              	.LVL117:
 704 00b8 AAE7     		b	.L85
 705              	.LVL118:
 706              	.L147:
 707              	.LBE25:
 708              	.LBB26:
 136:Src/remote_call.c ****     }
 709              		.loc 1 136 0
 710 00ba 3B68     		ldr	r3, [r7]
 711              	.LVL119:
 712 00bc A21E     		subs	r2, r4, #2
 713 00be 191D     		adds	r1, r3, #4
 714              	.LVL120:
 715 00c0 1B68     		ldr	r3, [r3]
 716 00c2 3960     		str	r1, [r7]
 717 00c4 D143     		mvns	r1, r2
 718 00c6 C90F     		lsrs	r1, r1, #31
 719 00c8 ADF80030 		strh	r3, [sp]	@ movhi
 720              	.LVL121:
 721 00cc 0029     		cmp	r1, #0
 722 00ce 9FD0     		beq	.L85
 723 00d0 9442     		cmp	r4, r2
 724 00d2 9DDD     		ble	.L85
 725              	.LVL122:
ARM GAS  /tmp/ccAi0dKw.s 			page 18


 726 00d4 9DF80000 		ldrb	r0, [sp]	@ zero_extendqisi2
 727 00d8 9DF80130 		ldrb	r3, [sp, #1]	@ zero_extendqisi2
 728 00dc 2870     		strb	r0, [r5]
 729              	.LVL123:
 730 00de 6B70     		strb	r3, [r5, #1]
 731 00e0 1446     		mov	r4, r2
 732 00e2 0235     		adds	r5, r5, #2
 733              	.LVL124:
 734 00e4 94E7     		b	.L85
 735              	.LVL125:
 736              	.L148:
 737              	.LBE26:
 738              	.LBB27:
 139:Src/remote_call.c ****     }
 739              		.loc 1 139 0
 740 00e6 3A68     		ldr	r2, [r7]
 741 00e8 231F     		subs	r3, r4, #4
 742              	.LVL126:
 743 00ea 111D     		adds	r1, r2, #4
 744              	.LVL127:
 745 00ec 1268     		ldr	r2, [r2]
 746 00ee 3960     		str	r1, [r7]
 747 00f0 D943     		mvns	r1, r3
 748 00f2 C90F     		lsrs	r1, r1, #31
 749 00f4 0092     		str	r2, [sp]
 750              	.LVL128:
 751 00f6 0029     		cmp	r1, #0
 752 00f8 8AD0     		beq	.L85
 753 00fa 9C42     		cmp	r4, r3
 754 00fc 88DD     		ble	.L85
 755 00fe 6846     		mov	r0, sp
 756 0100 6A1E     		subs	r2, r5, #1
 757 0102 05F1030E 		add	lr, r5, #3
 758              	.LVL129:
 759              	.L93:
 760 0106 10F8014B 		ldrb	r4, [r0], #1	@ zero_extendqisi2
 761              	.LVL130:
 762 010a 02F8014F 		strb	r4, [r2, #1]!
 763 010e 7245     		cmp	r2, lr
 764 0110 F9D1     		bne	.L93
 765 0112 0435     		adds	r5, r5, #4
 766              	.LVL131:
 767 0114 1C46     		mov	r4, r3
 768              	.LVL132:
 769 0116 7BE7     		b	.L85
 770              	.LVL133:
 771              	.L149:
 772              	.LBE27:
 773              	.LBB28:
 142:Src/remote_call.c ****     }
 774              		.loc 1 142 0
 775 0118 3A68     		ldr	r2, [r7]
 776 011a 231F     		subs	r3, r4, #4
 777              	.LVL134:
 778 011c 111D     		adds	r1, r2, #4
 779              	.LVL135:
 780 011e 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccAi0dKw.s 			page 19


 781 0120 3960     		str	r1, [r7]
 782 0122 D943     		mvns	r1, r3
 783 0124 C90F     		lsrs	r1, r1, #31
 784 0126 0092     		str	r2, [sp]
 785              	.LVL136:
 786 0128 0029     		cmp	r1, #0
 787 012a 3FF471AF 		beq	.L85
 788 012e 9C42     		cmp	r4, r3
 789 0130 7FF76EAF 		ble	.L85
 790 0134 6846     		mov	r0, sp
 791 0136 6A1E     		subs	r2, r5, #1
 792 0138 05F1030E 		add	lr, r5, #3
 793              	.LVL137:
 794              	.L96:
 795 013c 10F8014B 		ldrb	r4, [r0], #1	@ zero_extendqisi2
 796              	.LVL138:
 797 0140 02F8014F 		strb	r4, [r2, #1]!
 798 0144 7245     		cmp	r2, lr
 799 0146 F9D1     		bne	.L96
 800 0148 0435     		adds	r5, r5, #4
 801              	.LVL139:
 802 014a 1C46     		mov	r4, r3
 803              	.LVL140:
 804 014c 60E7     		b	.L85
 805              	.LVL141:
 806              	.L150:
 807              	.LBE28:
 808              	.LBB29:
 145:Src/remote_call.c ****     }
 809              		.loc 1 145 0
 810 014e 3B68     		ldr	r3, [r7]
 811              	.LVL142:
 812 0150 0733     		adds	r3, r3, #7
 813 0152 23F00703 		bic	r3, r3, #7
 814 0156 03F10802 		add	r2, r3, #8
 815 015a D3E90001 		ldrd	r0, [r3]
 816 015e 3A60     		str	r2, [r7]
 817 0160 FFF7FEFF 		bl	__aeabi_d2f
 818              	.LVL143:
 819 0164 231F     		subs	r3, r4, #4
 820 0166 D943     		mvns	r1, r3
 821 0168 C90F     		lsrs	r1, r1, #31
 822 016a 0090     		str	r0, [sp]	@ float
 823              	.LVL144:
 824 016c 0029     		cmp	r1, #0
 825 016e 3FF44FAF 		beq	.L85
 826 0172 9C42     		cmp	r4, r3
 827 0174 7FF74CAF 		ble	.L85
 828 0178 6846     		mov	r0, sp
 829 017a 6A1E     		subs	r2, r5, #1
 830 017c 05F1030E 		add	lr, r5, #3
 831              	.LVL145:
 832              	.L99:
 833 0180 10F8014B 		ldrb	r4, [r0], #1	@ zero_extendqisi2
 834              	.LVL146:
 835 0184 02F8014F 		strb	r4, [r2, #1]!
 836 0188 7245     		cmp	r2, lr
ARM GAS  /tmp/ccAi0dKw.s 			page 20


 837 018a F9D1     		bne	.L99
 838 018c 0435     		adds	r5, r5, #4
 839              	.LVL147:
 840 018e 1C46     		mov	r4, r3
 841              	.LVL148:
 842 0190 3EE7     		b	.L85
 843              	.LVL149:
 844              	.L151:
 845              	.LBE29:
 846              	.LBB30:
 148:Src/remote_call.c ****     }
 847              		.loc 1 148 0
 848 0192 3B68     		ldr	r3, [r7]
 849              	.LVL150:
 850 0194 0733     		adds	r3, r3, #7
 851 0196 23F00703 		bic	r3, r3, #7
 852 019a D3E90089 		ldrd	r8, [r3]
 853 019e A4F1080E 		sub	lr, r4, #8
 854 01a2 6FEA0E01 		mvn	r1, lr
 855              	.LVL151:
 856 01a6 0833     		adds	r3, r3, #8
 857 01a8 C90F     		lsrs	r1, r1, #31
 858 01aa CDE90089 		strd	r8, [sp]
 859              	.LVL152:
 860 01ae 3B60     		str	r3, [r7]
 861 01b0 0029     		cmp	r1, #0
 862 01b2 3FF42DAF 		beq	.L85
 863 01b6 7445     		cmp	r4, lr
 864 01b8 7FF72AAF 		ble	.L85
 865 01bc 6A1E     		subs	r2, r5, #1
 866 01be 6B46     		mov	r3, sp
 867              	.LVL153:
 868              	.L102:
 869 01c0 13F8010B 		ldrb	r0, [r3], #1	@ zero_extendqisi2
 870              	.LVL154:
 871 01c4 02F8010F 		strb	r0, [r2, #1]!
 872              	.LVL155:
 873 01c8 02A8     		add	r0, sp, #8
 874 01ca 8342     		cmp	r3, r0
 875 01cc F8D1     		bne	.L102
 876 01ce 0835     		adds	r5, r5, #8
 877              	.LVL156:
 878 01d0 7446     		mov	r4, lr
 879              	.LVL157:
 880 01d2 1DE7     		b	.L85
 881              	.LVL158:
 882              	.L105:
 883              	.LBE30:
 884              	.LBB31:
 151:Src/remote_call.c ****     }else{
 885              		.loc 1 151 0
 886 01d4 013C     		subs	r4, r4, #1
 887              	.LVL159:
 888 01d6 1D46     		mov	r5, r3
 889 01d8 0121     		movs	r1, #1
 890 01da 19E7     		b	.L85
 891              	.LVL160:
ARM GAS  /tmp/ccAi0dKw.s 			page 21


 892              	.L112:
 893              	.LBE31:
 160:Src/remote_call.c **** }								
 894              		.loc 1 160 0
 895 01dc 4FF0FF30 		mov	r0, #-1
 161:Src/remote_call.c **** 
 896              		.loc 1 161 0
 897 01e0 03B0     		add	sp, sp, #12
 898              	.LCFI10:
 899              		.cfi_remember_state
 900              		.cfi_def_cfa_offset 28
 901              		@ sp needed
 902 01e2 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 903              	.LVL161:
 904              	.L152:
 905              	.LCFI11:
 906              		.cfi_restore_state
 907              	.LBB32:
 151:Src/remote_call.c ****     }else{
 908              		.loc 1 151 0
 909 01e6 1A46     		mov	r2, r3
 910 01e8 4AE7     		b	.L104
 911              	.LVL162:
 912              	.L103:
 913              	.LBE32:
 155:Src/remote_call.c ****       return -1;
 914              		.loc 1 155 0
 915 01ea 044B     		ldr	r3, .L155
 916              	.LVL163:
 917 01ec 0122     		movs	r2, #1
 918 01ee 1A60     		str	r2, [r3]
 156:Src/remote_call.c ****     }
 919              		.loc 1 156 0
 920 01f0 4FF0FF30 		mov	r0, #-1
 921 01f4 4FE7     		b	.L142
 922              	.LVL164:
 923              	.L110:
 924              	.LBB33:
 151:Src/remote_call.c ****     }else{
 925              		.loc 1 151 0
 926 01f6 2A46     		mov	r2, r5
 927 01f8 42E7     		b	.L104
 928              	.L156:
 929 01fa 00BF     		.align	2
 930              	.L155:
 931 01fc 00000000 		.word	.LANCHOR0
 932              	.LBE33:
 933              		.cfi_endproc
 934              	.LFE13:
 936              		.section	.text.RC_Get_Error,"ax",%progbits
 937              		.align	2
 938              		.global	RC_Get_Error
 939              		.thumb
 940              		.thumb_func
 942              	RC_Get_Error:
 943              	.LFB3:
 198:Src/remote_call.c **** 
ARM GAS  /tmp/ccAi0dKw.s 			page 22


 199:Src/remote_call.c **** //==================================================//
 200:Src/remote_call.c **** //               ERROR ACCESSOR                     //
 201:Src/remote_call.c **** //==================================================//
 202:Src/remote_call.c **** int RC_Get_Error(){
 944              		.loc 1 202 0
 945              		.cfi_startproc
 946              		@ args = 0, pretend = 0, frame = 0
 947              		@ frame_needed = 0, uses_anonymous_args = 0
 948              		@ link register save eliminated.
 203:Src/remote_call.c ****   return err;
 949              		.loc 1 203 0
 950 0000 014B     		ldr	r3, .L158
 204:Src/remote_call.c **** }
 951              		.loc 1 204 0
 952 0002 1868     		ldr	r0, [r3]
 953 0004 7047     		bx	lr
 954              	.L159:
 955 0006 00BF     		.align	2
 956              	.L158:
 957 0008 00000000 		.word	.LANCHOR0
 958              		.cfi_endproc
 959              	.LFE3:
 961              		.section	.text.RC_Server_Init,"ax",%progbits
 962              		.align	2
 963              		.global	RC_Server_Init
 964              		.thumb
 965              		.thumb_func
 967              	RC_Server_Init:
 968              	.LFB4:
 205:Src/remote_call.c **** 
 206:Src/remote_call.c **** //==================================================//
 207:Src/remote_call.c **** //                  RC SERVER                       //
 208:Src/remote_call.c **** //==================================================//
 209:Src/remote_call.c **** 
 210:Src/remote_call.c **** void RC_Server_Init(RC_Server *server, RP_Interface *interface){
 969              		.loc 1 210 0
 970              		.cfi_startproc
 971              		@ args = 0, pretend = 0, frame = 0
 972              		@ frame_needed = 0, uses_anonymous_args = 0
 973              		@ link register save eliminated.
 974              	.LVL165:
 211:Src/remote_call.c ****   int i;
 212:Src/remote_call.c **** 
 213:Src/remote_call.c ****   server->interface = interface;
 975              		.loc 1 213 0
 976 0000 0160     		str	r1, [r0]
 977              	.LVL166:
 978 0002 0346     		mov	r3, r0
 979 0004 00F54071 		add	r1, r0, #768
 980              	.LVL167:
 214:Src/remote_call.c ****   for(i = 0; i < RC_NB_FUNCTIONS; i++){
 215:Src/remote_call.c ****     server->functions[i].call = 0;
 981              		.loc 1 215 0
 982 0008 0022     		movs	r2, #0
 983              	.LVL168:
 984              	.L161:
 985              		.loc 1 215 0 is_stmt 0 discriminator 3
ARM GAS  /tmp/ccAi0dKw.s 			page 23


 986 000a 5A60     		str	r2, [r3, #4]
 987 000c 1833     		adds	r3, r3, #24
 214:Src/remote_call.c ****   for(i = 0; i < RC_NB_FUNCTIONS; i++){
 988              		.loc 1 214 0 is_stmt 1 discriminator 3
 989 000e 8B42     		cmp	r3, r1
 990 0010 FBD1     		bne	.L161
 216:Src/remote_call.c ****   }  
 217:Src/remote_call.c **** }
 991              		.loc 1 217 0
 992 0012 7047     		bx	lr
 993              		.cfi_endproc
 994              	.LFE4:
 996              		.section	.text.RC_Server_Add_Function,"ax",%progbits
 997              		.align	2
 998              		.global	RC_Server_Add_Function
 999              		.thumb
 1000              		.thumb_func
 1002              	RC_Server_Add_Function:
 1003              	.LFB5:
 218:Src/remote_call.c **** 
 219:Src/remote_call.c **** int RC_Server_Add_Function(RC_Server *server,
 220:Src/remote_call.c **** 			   int id,
 221:Src/remote_call.c **** 			   void (*function)(RC_Server *server),
 222:Src/remote_call.c **** 			   const char params_fmt[],
 223:Src/remote_call.c **** 			   const char return_fmt[],
 224:Src/remote_call.c **** 			   RC_Call_Type call_type){
 1004              		.loc 1 224 0
 1005              		.cfi_startproc
 1006              		@ args = 8, pretend = 0, frame = 0
 1007              		@ frame_needed = 0, uses_anonymous_args = 0
 1008              	.LVL169:
 1009 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1010              	.LCFI12:
 1011              		.cfi_def_cfa_offset 24
 1012              		.cfi_offset 4, -24
 1013              		.cfi_offset 5, -20
 1014              		.cfi_offset 6, -16
 1015              		.cfi_offset 7, -12
 1016              		.cfi_offset 8, -8
 1017              		.cfi_offset 14, -4
 225:Src/remote_call.c ****   //Check ID range
 226:Src/remote_call.c ****   if(!CHECK_ID(id)){
 1018              		.loc 1 226 0
 1019 0004 1F29     		cmp	r1, #31
 224:Src/remote_call.c ****   //Check ID range
 1020              		.loc 1 224 0
 1021 0006 0C46     		mov	r4, r1
 1022 0008 9DF81C70 		ldrb	r7, [sp, #28]	@ zero_extendqisi2
 1023              		.loc 1 226 0
 1024 000c 1BD8     		bhi	.L172
 1025              	.LVL170:
 227:Src/remote_call.c ****     err = RC_BAD_ID;
 228:Src/remote_call.c ****     return -1;
 229:Src/remote_call.c ****   }
 230:Src/remote_call.c **** 
 231:Src/remote_call.c ****   //Get function struct by id
 232:Src/remote_call.c ****   RC_Server_Function *fun = &server->functions[id];
ARM GAS  /tmp/ccAi0dKw.s 			page 24


 233:Src/remote_call.c **** 
 234:Src/remote_call.c ****   //Params format
 235:Src/remote_call.c ****   if(RC_Copy_Format(fun->params_fmt, params_fmt) == -1){
 1026              		.loc 1 235 0
 1027 000e 04EB4404 		add	r4, r4, r4, lsl #1
 1028 0012 E400     		lsls	r4, r4, #3
 1029 0014 00EB0408 		add	r8, r0, r4
 1030 0018 1946     		mov	r1, r3
 1031              	.LVL171:
 1032 001a 0546     		mov	r5, r0
 1033 001c 08F10800 		add	r0, r8, #8
 1034              	.LVL172:
 1035 0020 1646     		mov	r6, r2
 1036 0022 FFF7FEFF 		bl	RC_Copy_Format
 1037              	.LVL173:
 1038 0026 0130     		adds	r0, r0, #1
 1039 0028 14D0     		beq	.L167
 236:Src/remote_call.c ****     return -1;
 237:Src/remote_call.c ****   }
 238:Src/remote_call.c **** 
 239:Src/remote_call.c ****   //Return format
 240:Src/remote_call.c ****   if(RC_Copy_Format(fun->return_fmt, return_fmt) == -1){
 1040              		.loc 1 240 0
 1041 002a 2819     		adds	r0, r5, r4
 1042 002c 1030     		adds	r0, r0, #16
 1043 002e 0699     		ldr	r1, [sp, #24]
 1044 0030 FFF7FEFF 		bl	RC_Copy_Format
 1045              	.LVL174:
 1046 0034 0130     		adds	r0, r0, #1
 1047 0036 0DD0     		beq	.L167
 241:Src/remote_call.c ****     return -1;
 242:Src/remote_call.c ****   }
 243:Src/remote_call.c **** 
 244:Src/remote_call.c ****   //Function pointer
 245:Src/remote_call.c ****   fun->call = function;
 1048              		.loc 1 245 0
 1049 0038 C8F80460 		str	r6, [r8, #4]
 246:Src/remote_call.c ****   
 247:Src/remote_call.c ****   //Call type
 248:Src/remote_call.c ****   fun->call_type = call_type;
 1050              		.loc 1 248 0
 1051 003c 88F81870 		strb	r7, [r8, #24]
 249:Src/remote_call.c **** 
 250:Src/remote_call.c ****   return 0;
 1052              		.loc 1 250 0
 1053 0040 0020     		movs	r0, #0
 251:Src/remote_call.c **** }
 1054              		.loc 1 251 0
 1055 0042 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1056              	.LVL175:
 1057              	.L172:
 227:Src/remote_call.c ****     return -1;
 1058              		.loc 1 227 0
 1059 0046 054B     		ldr	r3, .L173
 1060              	.LVL176:
 1061 0048 0022     		movs	r2, #0
 1062              	.LVL177:
ARM GAS  /tmp/ccAi0dKw.s 			page 25


 1063 004a 1A60     		str	r2, [r3]
 228:Src/remote_call.c ****   }
 1064              		.loc 1 228 0
 1065 004c 4FF0FF30 		mov	r0, #-1
 1066              	.LVL178:
 1067 0050 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1068              	.LVL179:
 1069              	.L167:
 236:Src/remote_call.c ****   }
 1070              		.loc 1 236 0
 1071 0054 4FF0FF30 		mov	r0, #-1
 1072 0058 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1073              	.LVL180:
 1074              	.L174:
 1075              		.align	2
 1076              	.L173:
 1077 005c 00000000 		.word	.LANCHOR0
 1078              		.cfi_endproc
 1079              	.LFE5:
 1081              		.section	.text.RC_Server_Get_Request,"ax",%progbits
 1082              		.align	2
 1083              		.global	RC_Server_Get_Request
 1084              		.thumb
 1085              		.thumb_func
 1087              	RC_Server_Get_Request:
 1088              	.LFB6:
 252:Src/remote_call.c **** 
 253:Src/remote_call.c **** int RC_Server_Get_Request(RC_Server *server, RP_Packet *packet){
 1089              		.loc 1 253 0
 1090              		.cfi_startproc
 1091              		@ args = 0, pretend = 0, frame = 0
 1092              		@ frame_needed = 0, uses_anonymous_args = 0
 1093              	.LVL181:
 1094 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1095              	.LCFI13:
 1096              		.cfi_def_cfa_offset 24
 1097              		.cfi_offset 3, -24
 1098              		.cfi_offset 4, -20
 1099              		.cfi_offset 5, -16
 1100              		.cfi_offset 6, -12
 1101              		.cfi_offset 7, -8
 1102              		.cfi_offset 14, -4
 254:Src/remote_call.c ****   if(packet->len < 1){
 1103              		.loc 1 254 0
 1104 0002 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 1105 0004 22B3     		cbz	r2, .L186
 255:Src/remote_call.c ****     err = RC_LINK_ERROR;
 256:Src/remote_call.c ****     return -1;
 257:Src/remote_call.c ****   }
 258:Src/remote_call.c ****   
 259:Src/remote_call.c ****   //Extracting packet informations
 260:Src/remote_call.c ****   const int id_client = packet->id;
 261:Src/remote_call.c ****   const int id = packet->data[0];
 1106              		.loc 1 261 0
 1107 0006 8C78     		ldrb	r4, [r1, #2]	@ zero_extendqisi2
 260:Src/remote_call.c ****   const int id = packet->data[0];
 1108              		.loc 1 260 0
ARM GAS  /tmp/ccAi0dKw.s 			page 26


 1109 0008 0F78     		ldrb	r7, [r1]	@ zero_extendqisi2
 1110              	.LVL182:
 262:Src/remote_call.c ****   const int len = packet->len - 1;
 263:Src/remote_call.c ****   uint8_t *const data = &packet->data[1];
 264:Src/remote_call.c **** 
 265:Src/remote_call.c **** 
 266:Src/remote_call.c ****   //Checking basic informations
 267:Src/remote_call.c ****   if(!CHECK_ID(id)){
 1111              		.loc 1 267 0
 1112 000a 1F2C     		cmp	r4, #31
 262:Src/remote_call.c ****   const int len = packet->len - 1;
 1113              		.loc 1 262 0
 1114 000c 02F1FF32 		add	r2, r2, #-1
 1115              	.LVL183:
 263:Src/remote_call.c **** 
 1116              		.loc 1 263 0
 1117 0010 01F10301 		add	r1, r1, #3
 1118              	.LVL184:
 1119              		.loc 1 267 0
 1120 0014 22D8     		bhi	.L187
 1121              	.LVL185:
 268:Src/remote_call.c ****     err = RC_BAD_ID;
 269:Src/remote_call.c ****     return -1;
 270:Src/remote_call.c ****   }
 271:Src/remote_call.c **** 
 272:Src/remote_call.c ****   RC_Server_Function *const fun = &server->functions[id];
 273:Src/remote_call.c ****   if(fun->call == 0){
 1122              		.loc 1 273 0
 1123 0016 04EB4405 		add	r5, r4, r4, lsl #1
 1124 001a 00EBC505 		add	r5, r0, r5, lsl #3
 1125 001e 6E68     		ldr	r6, [r5, #4]
 1126 0020 16B3     		cbz	r6, .L188
 274:Src/remote_call.c ****     err = RC_UNDEFINED_FUNCTION;
 275:Src/remote_call.c ****     return -1;
 276:Src/remote_call.c ****   }
 277:Src/remote_call.c ****   
 278:Src/remote_call.c ****   //Filling request informations
 279:Src/remote_call.c ****   server->request.id_client = id_client;
 1127              		.loc 1 279 0
 1128 0022 C0F80473 		str	r7, [r0, #772]
 280:Src/remote_call.c ****   server->request.id = id;
 1129              		.loc 1 280 0
 1130 0026 C0F80843 		str	r4, [r0, #776]
 281:Src/remote_call.c ****   server->request.data = data;
 1131              		.loc 1 281 0
 1132 002a C0F80C13 		str	r1, [r0, #780]
 282:Src/remote_call.c ****   server->request.len = len;
 1133              		.loc 1 282 0
 1134 002e C0F81023 		str	r2, [r0, #784]
 283:Src/remote_call.c **** 
 284:Src/remote_call.c ****   switch(fun->call_type){
 1135              		.loc 1 284 0
 1136 0032 2C7E     		ldrb	r4, [r5, #24]	@ zero_extendqisi2
 1137              	.LVL186:
 1138 0034 3CB1     		cbz	r4, .L180
 1139 0036 012C     		cmp	r4, #1
 1140 0038 03D1     		bne	.L189
ARM GAS  /tmp/ccAi0dKw.s 			page 27


 285:Src/remote_call.c ****   case RC_IMMEDIATE:
 286:Src/remote_call.c ****     server->pending = 0;
 287:Src/remote_call.c ****     fun->call(server);
 288:Src/remote_call.c ****     break;
 289:Src/remote_call.c ****   case RC_DELAYED:
 290:Src/remote_call.c ****     server->pending = 1;
 1141              		.loc 1 290 0
 1142 003a 80F81443 		strb	r4, [r0, #788]
 291:Src/remote_call.c ****     break;
 292:Src/remote_call.c ****   default:
 293:Src/remote_call.c ****     break;
 294:Src/remote_call.c ****   }
 295:Src/remote_call.c **** 
 296:Src/remote_call.c ****   return 0;
 1143              		.loc 1 296 0
 1144 003e 0020     		movs	r0, #0
 1145              	.LVL187:
 291:Src/remote_call.c ****     break;
 1146              		.loc 1 291 0
 1147 0040 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1148              	.LVL188:
 1149              	.L189:
 1150              		.loc 1 296 0
 1151 0042 0020     		movs	r0, #0
 1152              	.LVL189:
 297:Src/remote_call.c **** }
 1153              		.loc 1 297 0
 1154 0044 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1155              	.LVL190:
 1156              	.L180:
 286:Src/remote_call.c ****     fun->call(server);
 1157              		.loc 1 286 0
 1158 0046 80F81443 		strb	r4, [r0, #788]
 287:Src/remote_call.c ****     break;
 1159              		.loc 1 287 0
 1160 004a B047     		blx	r6
 1161              	.LVL191:
 296:Src/remote_call.c **** }
 1162              		.loc 1 296 0
 1163 004c 2046     		mov	r0, r4
 288:Src/remote_call.c ****   case RC_DELAYED:
 1164              		.loc 1 288 0
 1165 004e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1166              	.LVL192:
 1167              	.L186:
 255:Src/remote_call.c ****     return -1;
 1168              		.loc 1 255 0
 1169 0050 084B     		ldr	r3, .L190
 1170 0052 0322     		movs	r2, #3
 1171 0054 1A60     		str	r2, [r3]
 256:Src/remote_call.c ****   }
 1172              		.loc 1 256 0
 1173 0056 4FF0FF30 		mov	r0, #-1
 1174              	.LVL193:
 1175 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1176              	.LVL194:
 1177              	.L187:
ARM GAS  /tmp/ccAi0dKw.s 			page 28


 268:Src/remote_call.c ****     return -1;
 1178              		.loc 1 268 0
 1179 005c 054B     		ldr	r3, .L190
 1180 005e 0022     		movs	r2, #0
 1181              	.LVL195:
 1182 0060 1A60     		str	r2, [r3]
 269:Src/remote_call.c ****   }
 1183              		.loc 1 269 0
 1184 0062 4FF0FF30 		mov	r0, #-1
 1185              	.LVL196:
 1186 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1187              	.LVL197:
 1188              	.L188:
 274:Src/remote_call.c ****     return -1;
 1189              		.loc 1 274 0
 1190 0068 024B     		ldr	r3, .L190
 1191 006a 0222     		movs	r2, #2
 1192              	.LVL198:
 1193 006c 1A60     		str	r2, [r3]
 275:Src/remote_call.c ****   }
 1194              		.loc 1 275 0
 1195 006e 4FF0FF30 		mov	r0, #-1
 1196              	.LVL199:
 1197 0072 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1198              	.LVL200:
 1199              	.L191:
 1200              		.align	2
 1201              	.L190:
 1202 0074 00000000 		.word	.LANCHOR0
 1203              		.cfi_endproc
 1204              	.LFE6:
 1206              		.section	.text.RC_Server_Poll,"ax",%progbits
 1207              		.align	2
 1208              		.global	RC_Server_Poll
 1209              		.thumb
 1210              		.thumb_func
 1212              	RC_Server_Poll:
 1213              	.LFB7:
 298:Src/remote_call.c **** 
 299:Src/remote_call.c **** int RC_Server_Poll(RC_Server *server){
 1214              		.loc 1 299 0
 1215              		.cfi_startproc
 1216              		@ args = 0, pretend = 0, frame = 0
 1217              		@ frame_needed = 0, uses_anonymous_args = 0
 1218              	.LVL201:
 1219 0000 08B5     		push	{r3, lr}
 1220              	.LCFI14:
 1221              		.cfi_def_cfa_offset 8
 1222              		.cfi_offset 3, -8
 1223              		.cfi_offset 14, -4
 300:Src/remote_call.c ****   if(!server->pending){
 1224              		.loc 1 300 0
 1225 0002 90F81433 		ldrb	r3, [r0, #788]	@ zero_extendqisi2
 1226 0006 0BB9     		cbnz	r3, .L196
 301:Src/remote_call.c ****     return 0;
 1227              		.loc 1 301 0
 1228 0008 1846     		mov	r0, r3
ARM GAS  /tmp/ccAi0dKw.s 			page 29


 1229              	.LVL202:
 302:Src/remote_call.c ****   }
 303:Src/remote_call.c **** 
 304:Src/remote_call.c ****   server->pending = 0;
 305:Src/remote_call.c ****   server->functions[server->request.id].call(server);
 306:Src/remote_call.c ****   
 307:Src/remote_call.c ****   return 1;
 308:Src/remote_call.c **** }
 1230              		.loc 1 308 0
 1231 000a 08BD     		pop	{r3, pc}
 1232              	.LVL203:
 1233              	.L196:
 305:Src/remote_call.c ****   
 1234              		.loc 1 305 0
 1235 000c D0F80833 		ldr	r3, [r0, #776]
 1236 0010 03EB4303 		add	r3, r3, r3, lsl #1
 1237 0014 00EBC303 		add	r3, r0, r3, lsl #3
 304:Src/remote_call.c ****   server->functions[server->request.id].call(server);
 1238              		.loc 1 304 0
 1239 0018 0021     		movs	r1, #0
 1240 001a 80F81413 		strb	r1, [r0, #788]
 305:Src/remote_call.c ****   
 1241              		.loc 1 305 0
 1242 001e 5B68     		ldr	r3, [r3, #4]
 1243 0020 9847     		blx	r3
 1244              	.LVL204:
 307:Src/remote_call.c **** }
 1245              		.loc 1 307 0
 1246 0022 0120     		movs	r0, #1
 1247 0024 08BD     		pop	{r3, pc}
 1248              		.cfi_endproc
 1249              	.LFE7:
 1251 0026 00BF     		.section	.text.RC_Server_Get_Args,"ax",%progbits
 1252              		.align	2
 1253              		.global	RC_Server_Get_Args
 1254              		.thumb
 1255              		.thumb_func
 1257              	RC_Server_Get_Args:
 1258              	.LFB8:
 309:Src/remote_call.c **** 
 310:Src/remote_call.c **** int RC_Server_Get_Args(RC_Server *server, ...){
 1259              		.loc 1 310 0
 1260              		.cfi_startproc
 1261              		@ args = 4, pretend = 16, frame = 8
 1262              		@ frame_needed = 0, uses_anonymous_args = 1
 1263              	.LVL205:
 1264 0000 0FB4     		push	{r0, r1, r2, r3}
 1265              	.LCFI15:
 1266              		.cfi_def_cfa_offset 16
 1267              		.cfi_offset 0, -16
 1268              		.cfi_offset 1, -12
 1269              		.cfi_offset 2, -8
 1270              		.cfi_offset 3, -4
 1271 0002 10B5     		push	{r4, lr}
 1272              	.LCFI16:
 1273              		.cfi_def_cfa_offset 24
 1274              		.cfi_offset 4, -24
ARM GAS  /tmp/ccAi0dKw.s 			page 30


 1275              		.cfi_offset 14, -20
 1276 0004 82B0     		sub	sp, sp, #8
 1277              	.LCFI17:
 1278              		.cfi_def_cfa_offset 32
 1279              		.loc 1 310 0
 1280 0006 04AA     		add	r2, sp, #16
 311:Src/remote_call.c ****   va_list args;
 312:Src/remote_call.c ****   va_start(args, server);
 1281              		.loc 1 312 0
 1282 0008 02AB     		add	r3, sp, #8
 310:Src/remote_call.c ****   va_list args;
 1283              		.loc 1 310 0
 1284 000a 52F8044B 		ldr	r4, [r2], #4
 1285              		.loc 1 312 0
 1286 000e 43F8042D 		str	r2, [r3, #-4]!
 1287              	.LVL206:
 313:Src/remote_call.c **** 
 314:Src/remote_call.c ****   RC_Server_Function *const fun = &server->functions[server->request.id];
 315:Src/remote_call.c ****   
 316:Src/remote_call.c ****   int r = RC_Unpack_Vars(fun->params_fmt, server->request.data, server->request.len, &args);
 1288              		.loc 1 316 0
 1289 0012 04F54270 		add	r0, r4, #776
 1290              	.LVL207:
 1291 0016 07C8     		ldmia	r0, {r0, r1, r2}
 1292              	.LVL208:
 1293 0018 00EB4000 		add	r0, r0, r0, lsl #1
 1294 001c 04EBC000 		add	r0, r4, r0, lsl #3
 1295 0020 0830     		adds	r0, r0, #8
 1296 0022 FFF7FEFF 		bl	RC_Unpack_Vars
 1297              	.LVL209:
 317:Src/remote_call.c **** 
 318:Src/remote_call.c ****   va_end(args);
 319:Src/remote_call.c **** 
 320:Src/remote_call.c ****   return r;
 321:Src/remote_call.c **** }
 1298              		.loc 1 321 0
 1299 0026 02B0     		add	sp, sp, #8
 1300              	.LCFI18:
 1301              		.cfi_def_cfa_offset 24
 1302              		@ sp needed
 1303 0028 BDE81040 		pop	{r4, lr}
 1304              	.LCFI19:
 1305              		.cfi_restore 14
 1306              		.cfi_restore 4
 1307              		.cfi_def_cfa_offset 16
 1308 002c 04B0     		add	sp, sp, #16
 1309              	.LCFI20:
 1310              		.cfi_restore 3
 1311              		.cfi_restore 2
 1312              		.cfi_restore 1
 1313              		.cfi_restore 0
 1314              		.cfi_def_cfa_offset 0
 1315 002e 7047     		bx	lr
 1316              		.cfi_endproc
 1317              	.LFE8:
 1319              		.section	.text.RC_Server_Return,"ax",%progbits
 1320              		.align	2
ARM GAS  /tmp/ccAi0dKw.s 			page 31


 1321              		.global	RC_Server_Return
 1322              		.thumb
 1323              		.thumb_func
 1325              	RC_Server_Return:
 1326              	.LFB9:
 322:Src/remote_call.c **** 
 323:Src/remote_call.c **** 
 324:Src/remote_call.c **** int RC_Server_Return(RC_Server *server, ...){
 1327              		.loc 1 324 0
 1328              		.cfi_startproc
 1329              		@ args = 4, pretend = 16, frame = 8
 1330              		@ frame_needed = 0, uses_anonymous_args = 1
 1331              	.LVL210:
 1332 0000 0FB4     		push	{r0, r1, r2, r3}
 1333              	.LCFI21:
 1334              		.cfi_def_cfa_offset 16
 1335              		.cfi_offset 0, -16
 1336              		.cfi_offset 1, -12
 1337              		.cfi_offset 2, -8
 1338              		.cfi_offset 3, -4
 1339 0002 30B5     		push	{r4, r5, lr}
 1340              	.LCFI22:
 1341              		.cfi_def_cfa_offset 28
 1342              		.cfi_offset 4, -28
 1343              		.cfi_offset 5, -24
 1344              		.cfi_offset 14, -20
 1345 0004 83B0     		sub	sp, sp, #12
 1346              	.LCFI23:
 1347              		.cfi_def_cfa_offset 40
 1348              		.loc 1 324 0
 1349 0006 06AB     		add	r3, sp, #24
 325:Src/remote_call.c ****   va_list args;
 326:Src/remote_call.c ****   va_start(args, server);
 1350              		.loc 1 326 0
 1351 0008 02AA     		add	r2, sp, #8
 324:Src/remote_call.c ****   va_list args;
 1352              		.loc 1 324 0
 1353 000a 53F8045B 		ldr	r5, [r3], #4
 1354              		.loc 1 326 0
 1355 000e 42F8043D 		str	r3, [r2, #-4]!
 327:Src/remote_call.c **** 
 328:Src/remote_call.c ****   RP_Packet *packet = &server->interface->s_packet;
 1356              		.loc 1 328 0
 1357 0012 2C68     		ldr	r4, [r5]
 329:Src/remote_call.c **** 
 330:Src/remote_call.c ****   packet->data[0] = server->request.id;
 1358              		.loc 1 330 0
 1359 0014 D5F80833 		ldr	r3, [r5, #776]
 1360 0018 84F80632 		strb	r3, [r4, #518]
 331:Src/remote_call.c ****   packet->id = server->request.id_client;
 1361              		.loc 1 331 0
 1362 001c D5F80433 		ldr	r3, [r5, #772]
 1363 0020 84F80432 		strb	r3, [r4, #516]
 332:Src/remote_call.c ****   packet->len = 1 + RC_Pack_Vars(server->functions[server->request.id].return_fmt,
 1364              		.loc 1 332 0
 1365 0024 D5F80803 		ldr	r0, [r5, #776]
 1366 0028 00EB4000 		add	r0, r0, r0, lsl #1
ARM GAS  /tmp/ccAi0dKw.s 			page 32


 1367 002c 05EBC000 		add	r0, r5, r0, lsl #3
 1368 0030 04F20721 		addw	r1, r4, #519
 1369 0034 1030     		adds	r0, r0, #16
 1370 0036 FFF7FEFF 		bl	RC_Pack_Vars.constprop.0
 1371              	.LVL211:
 1372 003a 0130     		adds	r0, r0, #1
 1373 003c C0B2     		uxtb	r0, r0
 1374 003e 84F80502 		strb	r0, [r4, #517]
 328:Src/remote_call.c **** 
 1375              		.loc 1 328 0
 1376 0042 04F50171 		add	r1, r4, #516
 1377              	.LVL212:
 333:Src/remote_call.c **** 			       &packet->data[1],
 334:Src/remote_call.c **** 			       RC_MAX_DATA,
 335:Src/remote_call.c **** 			       &args);
 336:Src/remote_call.c **** 
 337:Src/remote_call.c ****   if(packet->len == 0){
 1378              		.loc 1 337 0
 1379 0046 40B1     		cbz	r0, .L203
 338:Src/remote_call.c ****     err = RC_INVALID_RETURN;
 339:Src/remote_call.c ****     return -1;
 340:Src/remote_call.c ****   }
 341:Src/remote_call.c ****   
 342:Src/remote_call.c ****   va_end(args);
 343:Src/remote_call.c ****   return RP_Send(server->interface, packet, RC_TRANSFERT_TIMEOUT);
 1380              		.loc 1 343 0
 1381 0048 2868     		ldr	r0, [r5]
 1382 004a 0122     		movs	r2, #1
 1383 004c FFF7FEFF 		bl	RP_Send
 1384              	.LVL213:
 1385              	.L201:
 344:Src/remote_call.c **** }
 1386              		.loc 1 344 0
 1387 0050 03B0     		add	sp, sp, #12
 1388              	.LCFI24:
 1389              		.cfi_remember_state
 1390              		.cfi_def_cfa_offset 28
 1391              		@ sp needed
 1392 0052 BDE83040 		pop	{r4, r5, lr}
 1393              	.LCFI25:
 1394              		.cfi_restore 14
 1395              		.cfi_restore 5
 1396              		.cfi_restore 4
 1397              		.cfi_def_cfa_offset 16
 1398              	.LVL214:
 1399 0056 04B0     		add	sp, sp, #16
 1400              	.LCFI26:
 1401              		.cfi_restore 3
 1402              		.cfi_restore 2
 1403              		.cfi_restore 1
 1404              		.cfi_restore 0
 1405              		.cfi_def_cfa_offset 0
 1406 0058 7047     		bx	lr
 1407              	.LVL215:
 1408              	.L203:
 1409              	.LCFI27:
 1410              		.cfi_restore_state
ARM GAS  /tmp/ccAi0dKw.s 			page 33


 338:Src/remote_call.c ****     err = RC_INVALID_RETURN;
 1411              		.loc 1 338 0
 1412 005a 034B     		ldr	r3, .L204
 1413 005c 0522     		movs	r2, #5
 1414 005e 1A60     		str	r2, [r3]
 339:Src/remote_call.c ****   }
 1415              		.loc 1 339 0
 1416 0060 4FF0FF30 		mov	r0, #-1
 1417 0064 F4E7     		b	.L201
 1418              	.L205:
 1419 0066 00BF     		.align	2
 1420              	.L204:
 1421 0068 00000000 		.word	.LANCHOR0
 1422              		.cfi_endproc
 1423              	.LFE9:
 1425              		.section	.text.RC_Client_Init,"ax",%progbits
 1426              		.align	2
 1427              		.global	RC_Client_Init
 1428              		.thumb
 1429              		.thumb_func
 1431              	RC_Client_Init:
 1432              	.LFB10:
 345:Src/remote_call.c **** 
 346:Src/remote_call.c **** //==================================================//
 347:Src/remote_call.c **** //                  RC CLIENT                       //
 348:Src/remote_call.c **** //==================================================//
 349:Src/remote_call.c **** void RC_Client_Init(RC_Client *client, RP_Interface *interface, int id_server){
 1433              		.loc 1 349 0
 1434              		.cfi_startproc
 1435              		@ args = 0, pretend = 0, frame = 0
 1436              		@ frame_needed = 0, uses_anonymous_args = 0
 1437              		@ link register save eliminated.
 1438              	.LVL216:
 350:Src/remote_call.c ****   int i;
 351:Src/remote_call.c **** 
 352:Src/remote_call.c ****   client->interface = interface;
 1439              		.loc 1 352 0
 1440 0000 0160     		str	r1, [r0]
 353:Src/remote_call.c ****   client->id_server = id_server;
 1441              		.loc 1 353 0
 1442 0002 C0F82422 		str	r2, [r0, #548]
 1443              	.LVL217:
 1444 0006 0346     		mov	r3, r0
 1445 0008 00F50871 		add	r1, r0, #544
 1446              	.LVL218:
 354:Src/remote_call.c ****   for(i = 0; i < RC_NB_FUNCTIONS; i++){
 355:Src/remote_call.c ****     client->functions[i].used = false;
 1447              		.loc 1 355 0
 1448 000c 0022     		movs	r2, #0
 1449              	.LVL219:
 1450              	.L207:
 1451              		.loc 1 355 0 is_stmt 0 discriminator 3
 1452 000e 1A71     		strb	r2, [r3, #4]
 1453 0010 1133     		adds	r3, r3, #17
 354:Src/remote_call.c ****   for(i = 0; i < RC_NB_FUNCTIONS; i++){
 1454              		.loc 1 354 0 is_stmt 1 discriminator 3
 1455 0012 8B42     		cmp	r3, r1
ARM GAS  /tmp/ccAi0dKw.s 			page 34


 1456 0014 FBD1     		bne	.L207
 356:Src/remote_call.c ****   }  
 357:Src/remote_call.c **** }
 1457              		.loc 1 357 0
 1458 0016 7047     		bx	lr
 1459              		.cfi_endproc
 1460              	.LFE10:
 1462              		.section	.text.RC_Client_Add_Function,"ax",%progbits
 1463              		.align	2
 1464              		.global	RC_Client_Add_Function
 1465              		.thumb
 1466              		.thumb_func
 1468              	RC_Client_Add_Function:
 1469              	.LFB11:
 358:Src/remote_call.c **** 
 359:Src/remote_call.c **** int RC_Client_Add_Function(RC_Client *client,
 360:Src/remote_call.c **** 			   int id,
 361:Src/remote_call.c **** 			   const char params_fmt[],
 362:Src/remote_call.c **** 			   const char return_fmt[]){
 1470              		.loc 1 362 0
 1471              		.cfi_startproc
 1472              		@ args = 0, pretend = 0, frame = 0
 1473              		@ frame_needed = 0, uses_anonymous_args = 0
 1474              	.LVL220:
 363:Src/remote_call.c ****    //Check ID range
 364:Src/remote_call.c ****   if(!CHECK_ID(id)){
 1475              		.loc 1 364 0
 1476 0000 1F29     		cmp	r1, #31
 362:Src/remote_call.c ****    //Check ID range
 1477              		.loc 1 362 0
 1478 0002 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1479              	.LCFI28:
 1480              		.cfi_def_cfa_offset 24
 1481              		.cfi_offset 3, -24
 1482              		.cfi_offset 4, -20
 1483              		.cfi_offset 5, -16
 1484              		.cfi_offset 6, -12
 1485              		.cfi_offset 7, -8
 1486              		.cfi_offset 14, -4
 362:Src/remote_call.c ****    //Check ID range
 1487              		.loc 1 362 0
 1488 0004 0C46     		mov	r4, r1
 1489              		.loc 1 364 0
 1490 0006 15D8     		bhi	.L218
 1491              	.LVL221:
 365:Src/remote_call.c ****     err = RC_BAD_ID;
 366:Src/remote_call.c ****     return -1;
 367:Src/remote_call.c ****   }
 368:Src/remote_call.c **** 
 369:Src/remote_call.c ****   //Get function struct by id
 370:Src/remote_call.c ****   RC_Client_Function *fun = &client->functions[id];
 371:Src/remote_call.c **** 
 372:Src/remote_call.c ****   //Params format
 373:Src/remote_call.c ****   if(RC_Copy_Format(fun->params_fmt, params_fmt) == -1){
 1492              		.loc 1 373 0
 1493 0008 04EB0414 		add	r4, r4, r4, lsl #4
 1494 000c 0719     		adds	r7, r0, r4
ARM GAS  /tmp/ccAi0dKw.s 			page 35


 1495 000e 1146     		mov	r1, r2
 1496              	.LVL222:
 1497 0010 0546     		mov	r5, r0
 1498 0012 781D     		adds	r0, r7, #5
 1499              	.LVL223:
 1500 0014 1E46     		mov	r6, r3
 1501 0016 FFF7FEFF 		bl	RC_Copy_Format
 1502              	.LVL224:
 1503 001a 0130     		adds	r0, r0, #1
 1504 001c 10D0     		beq	.L213
 374:Src/remote_call.c ****     return -1;
 375:Src/remote_call.c ****   }
 376:Src/remote_call.c **** 
 377:Src/remote_call.c ****   //Return format
 378:Src/remote_call.c ****   if(RC_Copy_Format(fun->return_fmt, return_fmt) == -1){
 1505              		.loc 1 378 0
 1506 001e 2819     		adds	r0, r5, r4
 1507 0020 0D30     		adds	r0, r0, #13
 1508 0022 3146     		mov	r1, r6
 1509 0024 FFF7FEFF 		bl	RC_Copy_Format
 1510              	.LVL225:
 1511 0028 0130     		adds	r0, r0, #1
 1512 002a 09D0     		beq	.L213
 379:Src/remote_call.c ****     return -1;
 380:Src/remote_call.c ****   }
 381:Src/remote_call.c **** 
 382:Src/remote_call.c ****   //Used flag
 383:Src/remote_call.c ****   fun->used = true;
 1513              		.loc 1 383 0
 1514 002c 0123     		movs	r3, #1
 1515 002e 3B71     		strb	r3, [r7, #4]
 384:Src/remote_call.c **** 
 385:Src/remote_call.c ****   return 0;
 1516              		.loc 1 385 0
 1517 0030 0020     		movs	r0, #0
 386:Src/remote_call.c **** }
 1518              		.loc 1 386 0
 1519 0032 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1520              	.LVL226:
 1521              	.L218:
 365:Src/remote_call.c ****     return -1;
 1522              		.loc 1 365 0
 1523 0034 044B     		ldr	r3, .L219
 1524              	.LVL227:
 1525 0036 0022     		movs	r2, #0
 1526              	.LVL228:
 1527 0038 1A60     		str	r2, [r3]
 366:Src/remote_call.c ****   }
 1528              		.loc 1 366 0
 1529 003a 4FF0FF30 		mov	r0, #-1
 1530              	.LVL229:
 1531 003e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1532              	.LVL230:
 1533              	.L213:
 374:Src/remote_call.c ****   }
 1534              		.loc 1 374 0
 1535 0040 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/ccAi0dKw.s 			page 36


 1536 0044 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1537              	.LVL231:
 1538              	.L220:
 1539 0046 00BF     		.align	2
 1540              	.L219:
 1541 0048 00000000 		.word	.LANCHOR0
 1542              		.cfi_endproc
 1543              	.LFE11:
 1545              		.section	.text.RC_Call,"ax",%progbits
 1546              		.align	2
 1547              		.global	RC_Call
 1548              		.thumb
 1549              		.thumb_func
 1551              	RC_Call:
 1552              	.LFB12:
 387:Src/remote_call.c **** 
 388:Src/remote_call.c **** int RC_Call(RC_Client *client, int id, ...){
 1553              		.loc 1 388 0
 1554              		.cfi_startproc
 1555              		@ args = 4, pretend = 12, frame = 8
 1556              		@ frame_needed = 0, uses_anonymous_args = 1
 1557              	.LVL232:
 1558 0000 0EB4     		push	{r1, r2, r3}
 1559              	.LCFI29:
 1560              		.cfi_def_cfa_offset 12
 1561              		.cfi_offset 1, -12
 1562              		.cfi_offset 2, -8
 1563              		.cfi_offset 3, -4
 1564 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 1565              	.LCFI30:
 1566              		.cfi_def_cfa_offset 32
 1567              		.cfi_offset 4, -32
 1568              		.cfi_offset 5, -28
 1569              		.cfi_offset 6, -24
 1570              		.cfi_offset 7, -20
 1571              		.cfi_offset 14, -16
 1572 0004 82B0     		sub	sp, sp, #8
 1573              	.LCFI31:
 1574              		.cfi_def_cfa_offset 40
 1575              		.loc 1 388 0
 1576 0006 07AB     		add	r3, sp, #28
 1577 0008 53F8046B 		ldr	r6, [r3], #4
 389:Src/remote_call.c ****   va_list args;
 390:Src/remote_call.c ****   va_start(args, id);
 1578              		.loc 1 390 0
 1579 000c 0193     		str	r3, [sp, #4]
 391:Src/remote_call.c **** 
 392:Src/remote_call.c ****   //Check ID
 393:Src/remote_call.c ****   if(!CHECK_ID(id)){
 1580              		.loc 1 393 0
 1581 000e 1F2E     		cmp	r6, #31
 1582 0010 5ED8     		bhi	.L234
 1583              	.LVL233:
 394:Src/remote_call.c ****     err = RC_BAD_ID;
 395:Src/remote_call.c ****     return -1;
 396:Src/remote_call.c ****   }
 397:Src/remote_call.c **** 
ARM GAS  /tmp/ccAi0dKw.s 			page 37


 398:Src/remote_call.c ****   RC_Client_Function *const fun = &client->functions[id];
 399:Src/remote_call.c **** 
 400:Src/remote_call.c ****   if(fun->used == false){
 1584              		.loc 1 400 0
 1585 0012 06EB0617 		add	r7, r6, r6, lsl #4
 1586 0016 0446     		mov	r4, r0
 1587 0018 3844     		add	r0, r0, r7
 1588              	.LVL234:
 1589 001a 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1590 001c 002B     		cmp	r3, #0
 1591 001e 45D0     		beq	.L235
 401:Src/remote_call.c ****     err = RC_UNDEFINED_FUNCTION;
 402:Src/remote_call.c ****     return -1;
 403:Src/remote_call.c ****   }
 404:Src/remote_call.c **** 
 405:Src/remote_call.c ****   //Build the packet
 406:Src/remote_call.c ****   RP_Packet *packet = &client->interface->s_packet;
 1592              		.loc 1 406 0
 1593 0020 2568     		ldr	r5, [r4]
 407:Src/remote_call.c ****   packet->data[0] = id;
 1594              		.loc 1 407 0
 1595 0022 85F80662 		strb	r6, [r5, #518]
 408:Src/remote_call.c ****   packet->id = client->id_server;
 1596              		.loc 1 408 0
 1597 0026 D4F82432 		ldr	r3, [r4, #548]
 1598 002a 85F80432 		strb	r3, [r5, #516]
 409:Src/remote_call.c ****   packet->len = 1 + RC_Pack_Vars(client->functions[id].params_fmt,
 1599              		.loc 1 409 0
 1600 002e 05F20721 		addw	r1, r5, #519
 1601 0032 0530     		adds	r0, r0, #5
 1602 0034 01AA     		add	r2, sp, #4
 1603 0036 FFF7FEFF 		bl	RC_Pack_Vars.constprop.0
 1604              	.LVL235:
 1605 003a 0130     		adds	r0, r0, #1
 1606 003c C0B2     		uxtb	r0, r0
 1607 003e 85F80502 		strb	r0, [r5, #517]
 406:Src/remote_call.c ****   packet->data[0] = id;
 1608              		.loc 1 406 0
 1609 0042 05F50171 		add	r1, r5, #516
 1610              	.LVL236:
 410:Src/remote_call.c **** 				 &packet->data[1],
 411:Src/remote_call.c **** 				 RC_MAX_DATA,
 412:Src/remote_call.c **** 				 &args);
 413:Src/remote_call.c ****   if(packet->len == 0){
 1611              		.loc 1 413 0
 1612 0046 0028     		cmp	r0, #0
 1613 0048 36D0     		beq	.L236
 414:Src/remote_call.c ****     err = RC_WRONG_FORMAT;
 415:Src/remote_call.c ****     return -1;
 416:Src/remote_call.c ****   }
 417:Src/remote_call.c **** 
 418:Src/remote_call.c ****   //Send the request
 419:Src/remote_call.c ****   if(RP_Send(client->interface, packet, RC_TRANSFERT_TIMEOUT)){
 1614              		.loc 1 419 0
 1615 004a 2068     		ldr	r0, [r4]
 1616 004c 0122     		movs	r2, #1
 1617 004e FFF7FEFF 		bl	RP_Send
ARM GAS  /tmp/ccAi0dKw.s 			page 38


 1618              	.LVL237:
 1619 0052 0028     		cmp	r0, #0
 1620 0054 36D1     		bne	.L237
 420:Src/remote_call.c ****     err = RC_LINK_ERROR;
 421:Src/remote_call.c ****     return -1;
 422:Src/remote_call.c ****   }
 423:Src/remote_call.c **** 
 424:Src/remote_call.c ****   //Wait for return
 425:Src/remote_call.c ****   if(RP_Wait_Packet(client->interface, RC_CALL_TIMEOUT)){
 1621              		.loc 1 425 0
 1622 0056 2068     		ldr	r0, [r4]
 1623 0058 0A21     		movs	r1, #10
 1624 005a FFF7FEFF 		bl	RP_Wait_Packet
 1625              	.LVL238:
 1626 005e 0028     		cmp	r0, #0
 1627 0060 3CD1     		bne	.L238
 426:Src/remote_call.c ****     err = RC_ERR_CALL_TIMEOUT;
 427:Src/remote_call.c ****     return -1;
 428:Src/remote_call.c ****   }
 429:Src/remote_call.c **** 
 430:Src/remote_call.c ****   //Check return packet
 431:Src/remote_call.c ****   RP_Packet *const r_packet = &client->interface->r_packet;
 1628              		.loc 1 431 0
 1629 0062 2168     		ldr	r1, [r4]
 1630              	.LVL239:
 432:Src/remote_call.c ****   if(r_packet->len < 1 || r_packet->data[0] != id || r_packet->id != client->id_server){
 1631              		.loc 1 432 0
 1632 0064 91F80921 		ldrb	r2, [r1, #265]	@ zero_extendqisi2
 1633 0068 B2B1     		cbz	r2, .L228
 1634              		.loc 1 432 0 is_stmt 0 discriminator 1
 1635 006a 91F80A31 		ldrb	r3, [r1, #266]	@ zero_extendqisi2
 1636 006e B342     		cmp	r3, r6
 1637 0070 12D1     		bne	.L228
 1638              		.loc 1 432 0 discriminator 2
 1639 0072 91F80801 		ldrb	r0, [r1, #264]	@ zero_extendqisi2
 1640 0076 D4F82432 		ldr	r3, [r4, #548]
 1641 007a 9842     		cmp	r0, r3
 1642 007c 0CD1     		bne	.L228
 433:Src/remote_call.c ****     err = RC_INVALID_RETURN;
 434:Src/remote_call.c ****     return -1;
 435:Src/remote_call.c ****   }
 436:Src/remote_call.c **** 
 437:Src/remote_call.c ****   //Extract return informations
 438:Src/remote_call.c ****   int r = RC_Unpack_Vars(client->functions[id].return_fmt,
 1643              		.loc 1 438 0 is_stmt 1
 1644 007e E019     		adds	r0, r4, r7
 1645 0080 0D30     		adds	r0, r0, #13
 1646 0082 01F20B11 		addw	r1, r1, #267
 1647              	.LVL240:
 1648 0086 013A     		subs	r2, r2, #1
 1649 0088 01AB     		add	r3, sp, #4
 1650 008a FFF7FEFF 		bl	RC_Unpack_Vars
 1651              	.LVL241:
 1652              	.L223:
 439:Src/remote_call.c **** 			 &r_packet->data[1],
 440:Src/remote_call.c **** 			 r_packet->len - 1,
 441:Src/remote_call.c **** 			 &args);
ARM GAS  /tmp/ccAi0dKw.s 			page 39


 442:Src/remote_call.c ****   va_end(args);
 443:Src/remote_call.c **** 
 444:Src/remote_call.c ****   return r;
 445:Src/remote_call.c **** }
 1653              		.loc 1 445 0
 1654 008e 02B0     		add	sp, sp, #8
 1655              	.LCFI32:
 1656              		.cfi_remember_state
 1657              		.cfi_def_cfa_offset 32
 1658              		@ sp needed
 1659 0090 BDE8F040 		pop	{r4, r5, r6, r7, lr}
 1660              	.LCFI33:
 1661              		.cfi_restore 14
 1662              		.cfi_restore 7
 1663              		.cfi_restore 6
 1664              		.cfi_restore 5
 1665              		.cfi_restore 4
 1666              		.cfi_def_cfa_offset 12
 1667 0094 03B0     		add	sp, sp, #12
 1668              	.LCFI34:
 1669              		.cfi_restore 3
 1670              		.cfi_restore 2
 1671              		.cfi_restore 1
 1672              		.cfi_def_cfa_offset 0
 1673 0096 7047     		bx	lr
 1674              	.LVL242:
 1675              	.L228:
 1676              	.LCFI35:
 1677              		.cfi_restore_state
 433:Src/remote_call.c ****     err = RC_INVALID_RETURN;
 1678              		.loc 1 433 0
 1679 0098 134B     		ldr	r3, .L239
 1680 009a 0522     		movs	r2, #5
 434:Src/remote_call.c ****   }
 1681              		.loc 1 434 0
 1682 009c 4FF0FF30 		mov	r0, #-1
 433:Src/remote_call.c ****     err = RC_INVALID_RETURN;
 1683              		.loc 1 433 0
 1684 00a0 1A60     		str	r2, [r3]
 1685              		.loc 1 445 0
 1686 00a2 02B0     		add	sp, sp, #8
 1687              	.LCFI36:
 1688              		.cfi_remember_state
 1689              		.cfi_def_cfa_offset 32
 1690              		@ sp needed
 1691 00a4 BDE8F040 		pop	{r4, r5, r6, r7, lr}
 1692              	.LCFI37:
 1693              		.cfi_restore 4
 1694              		.cfi_restore 5
 1695              		.cfi_restore 6
 1696              		.cfi_restore 7
 1697              		.cfi_restore 14
 1698              		.cfi_def_cfa_offset 12
 1699              	.LVL243:
 1700 00a8 03B0     		add	sp, sp, #12
 1701              	.LCFI38:
 1702              		.cfi_restore 1
ARM GAS  /tmp/ccAi0dKw.s 			page 40


 1703              		.cfi_restore 2
 1704              		.cfi_restore 3
 1705              		.cfi_def_cfa_offset 0
 1706              	.LVL244:
 1707 00aa 7047     		bx	lr
 1708              	.LVL245:
 1709              	.L235:
 1710              	.LCFI39:
 1711              		.cfi_restore_state
 401:Src/remote_call.c ****     return -1;
 1712              		.loc 1 401 0
 1713 00ac 0E4B     		ldr	r3, .L239
 1714 00ae 0222     		movs	r2, #2
 1715 00b0 1A60     		str	r2, [r3]
 402:Src/remote_call.c ****   }
 1716              		.loc 1 402 0
 1717 00b2 4FF0FF30 		mov	r0, #-1
 1718 00b6 EAE7     		b	.L223
 1719              	.LVL246:
 1720              	.L236:
 414:Src/remote_call.c ****     return -1;
 1721              		.loc 1 414 0
 1722 00b8 0B4B     		ldr	r3, .L239
 1723 00ba 0122     		movs	r2, #1
 1724 00bc 1A60     		str	r2, [r3]
 415:Src/remote_call.c ****   }
 1725              		.loc 1 415 0
 1726 00be 4FF0FF30 		mov	r0, #-1
 1727 00c2 E4E7     		b	.L223
 1728              	.LVL247:
 1729              	.L237:
 420:Src/remote_call.c ****     return -1;
 1730              		.loc 1 420 0
 1731 00c4 084B     		ldr	r3, .L239
 1732 00c6 0322     		movs	r2, #3
 1733 00c8 1A60     		str	r2, [r3]
 421:Src/remote_call.c ****   }
 1734              		.loc 1 421 0
 1735 00ca 4FF0FF30 		mov	r0, #-1
 1736 00ce DEE7     		b	.L223
 1737              	.LVL248:
 1738              	.L234:
 394:Src/remote_call.c ****     return -1;
 1739              		.loc 1 394 0
 1740 00d0 054B     		ldr	r3, .L239
 1741 00d2 0022     		movs	r2, #0
 1742 00d4 1A60     		str	r2, [r3]
 395:Src/remote_call.c ****   }
 1743              		.loc 1 395 0
 1744 00d6 4FF0FF30 		mov	r0, #-1
 1745              	.LVL249:
 1746 00da D8E7     		b	.L223
 1747              	.LVL250:
 1748              	.L238:
 426:Src/remote_call.c ****     return -1;
 1749              		.loc 1 426 0
 1750 00dc 024B     		ldr	r3, .L239
ARM GAS  /tmp/ccAi0dKw.s 			page 41


 1751 00de 0422     		movs	r2, #4
 1752 00e0 1A60     		str	r2, [r3]
 427:Src/remote_call.c ****   }
 1753              		.loc 1 427 0
 1754 00e2 4FF0FF30 		mov	r0, #-1
 1755 00e6 D2E7     		b	.L223
 1756              	.L240:
 1757              		.align	2
 1758              	.L239:
 1759 00e8 00000000 		.word	.LANCHOR0
 1760              		.cfi_endproc
 1761              	.LFE12:
 1763              		.section	.bss.err,"aw",%nobits
 1764              		.align	2
 1765              		.set	.LANCHOR0,. + 0
 1768              	err:
 1769 0000 00000000 		.space	4
 1770              		.text
 1771              	.Letext0:
 1772              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1773              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1774              		.file 4 "/usr/lib/gcc/arm-none-eabi/4.9.3/include/stdarg.h"
 1775              		.file 5 "<built-in>"
 1776              		.file 6 "Inc/robotronik_protocol.h"
 1777              		.file 7 "Inc/remote_call.h"
ARM GAS  /tmp/ccAi0dKw.s 			page 42


DEFINED SYMBOLS
                            *ABS*:0000000000000000 remote_call.c
     /tmp/ccAi0dKw.s:21     .text.RC_Copy_Format:0000000000000000 $t
     /tmp/ccAi0dKw.s:25     .text.RC_Copy_Format:0000000000000000 RC_Copy_Format
     /tmp/ccAi0dKw.s:60     .text.RC_Copy_Format:000000000000001e $d
     /tmp/ccAi0dKw.s:112    .text.RC_Copy_Format:0000000000000052 $t
     /tmp/ccAi0dKw.s:166    .text.RC_Copy_Format:000000000000007c $d
     /tmp/ccAi0dKw.s:171    .text.RC_Unpack_Vars:0000000000000000 $t
     /tmp/ccAi0dKw.s:175    .text.RC_Unpack_Vars:0000000000000000 RC_Unpack_Vars
     /tmp/ccAi0dKw.s:539    .text.RC_Unpack_Vars:000000000000016c $d
     /tmp/ccAi0dKw.s:545    .text.RC_Pack_Vars.constprop.0:0000000000000000 $t
     /tmp/ccAi0dKw.s:549    .text.RC_Pack_Vars.constprop.0:0000000000000000 RC_Pack_Vars.constprop.0
     /tmp/ccAi0dKw.s:931    .text.RC_Pack_Vars.constprop.0:00000000000001fc $d
     /tmp/ccAi0dKw.s:937    .text.RC_Get_Error:0000000000000000 $t
     /tmp/ccAi0dKw.s:942    .text.RC_Get_Error:0000000000000000 RC_Get_Error
     /tmp/ccAi0dKw.s:957    .text.RC_Get_Error:0000000000000008 $d
     /tmp/ccAi0dKw.s:962    .text.RC_Server_Init:0000000000000000 $t
     /tmp/ccAi0dKw.s:967    .text.RC_Server_Init:0000000000000000 RC_Server_Init
     /tmp/ccAi0dKw.s:997    .text.RC_Server_Add_Function:0000000000000000 $t
     /tmp/ccAi0dKw.s:1002   .text.RC_Server_Add_Function:0000000000000000 RC_Server_Add_Function
     /tmp/ccAi0dKw.s:1077   .text.RC_Server_Add_Function:000000000000005c $d
     /tmp/ccAi0dKw.s:1082   .text.RC_Server_Get_Request:0000000000000000 $t
     /tmp/ccAi0dKw.s:1087   .text.RC_Server_Get_Request:0000000000000000 RC_Server_Get_Request
     /tmp/ccAi0dKw.s:1202   .text.RC_Server_Get_Request:0000000000000074 $d
     /tmp/ccAi0dKw.s:1207   .text.RC_Server_Poll:0000000000000000 $t
     /tmp/ccAi0dKw.s:1212   .text.RC_Server_Poll:0000000000000000 RC_Server_Poll
     /tmp/ccAi0dKw.s:1252   .text.RC_Server_Get_Args:0000000000000000 $t
     /tmp/ccAi0dKw.s:1257   .text.RC_Server_Get_Args:0000000000000000 RC_Server_Get_Args
     /tmp/ccAi0dKw.s:1320   .text.RC_Server_Return:0000000000000000 $t
     /tmp/ccAi0dKw.s:1325   .text.RC_Server_Return:0000000000000000 RC_Server_Return
     /tmp/ccAi0dKw.s:1421   .text.RC_Server_Return:0000000000000068 $d
     /tmp/ccAi0dKw.s:1426   .text.RC_Client_Init:0000000000000000 $t
     /tmp/ccAi0dKw.s:1431   .text.RC_Client_Init:0000000000000000 RC_Client_Init
     /tmp/ccAi0dKw.s:1463   .text.RC_Client_Add_Function:0000000000000000 $t
     /tmp/ccAi0dKw.s:1468   .text.RC_Client_Add_Function:0000000000000000 RC_Client_Add_Function
     /tmp/ccAi0dKw.s:1541   .text.RC_Client_Add_Function:0000000000000048 $d
     /tmp/ccAi0dKw.s:1546   .text.RC_Call:0000000000000000 $t
     /tmp/ccAi0dKw.s:1551   .text.RC_Call:0000000000000000 RC_Call
     /tmp/ccAi0dKw.s:1759   .text.RC_Call:00000000000000e8 $d
     /tmp/ccAi0dKw.s:1764   .bss.err:0000000000000000 $d
     /tmp/ccAi0dKw.s:1768   .bss.err:0000000000000000 err
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
__aeabi_d2f
RP_Send
RP_Wait_Packet
