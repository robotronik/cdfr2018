ARM GAS  /tmp/ccvv3g2c.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.XL_320_Send_HAL,"ax",%progbits
  18              		.align	1
  19              		.global	XL_320_Send_HAL
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	XL_320_Send_HAL:
  26              	.LFB126:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   ** This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * COPYRIGHT(c) 2017 STMicroelectronics
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  15:Src/main.c    ****   * are permitted provided that the following conditions are met:
  16:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  17:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  18:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  19:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  20:Src/main.c    ****   *      and/or other materials provided with the distribution.
  21:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  22:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  23:Src/main.c    ****   *      without specific prior written permission.
  24:Src/main.c    ****   *
  25:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  28:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  29:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  30:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  31:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /tmp/ccvv3g2c.s 			page 2


  32:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  33:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  34:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:Src/main.c    ****   *
  36:Src/main.c    ****   ******************************************************************************
  37:Src/main.c    ****   */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f4xx_hal.h"
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE BEGIN Includes */
  44:Src/main.c    **** #include "xl_320.h"
  45:Src/main.c    **** /* USER CODE END Includes */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  48:Src/main.c    **** UART_HandleTypeDef huart1;
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE BEGIN PV */
  51:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  52:Src/main.c    **** 
  53:Src/main.c    **** /* USER CODE END PV */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  56:Src/main.c    **** void SystemClock_Config(void);
  57:Src/main.c    **** static void MX_GPIO_Init(void);
  58:Src/main.c    **** static void MX_USART1_UART_Init(void);
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE BEGIN PFP */
  61:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE END PFP */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE BEGIN 0 */
  66:Src/main.c    **** XL_Interface interface;
  67:Src/main.c    **** 
  68:Src/main.c    **** uint8_t XL_320_Send_HAL(uint8_t *data, uint16_t size, uint32_t timeout){
  28              		.loc 1 68 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  69:Src/main.c    ****   HAL_StatusTypeDef status = HAL_UART_Transmit(&huart1, data, size, timeout);
  38              		.loc 1 69 0
  39 0002 1346     		mov	r3, r2
  40 0004 0A46     		mov	r2, r1
  41              	.LVL1:
  42 0006 0146     		mov	r1, r0
  43              	.LVL2:
  44 0008 0348     		ldr	r0, .L3
  45              	.LVL3:
  46 000a FFF7FEFF 		bl	HAL_UART_Transmit
ARM GAS  /tmp/ccvv3g2c.s 			page 3


  47              	.LVL4:
  70:Src/main.c    ****   return (status==HAL_OK)?0:1;return 0;//Temporaire
  71:Src/main.c    **** }
  48              		.loc 1 71 0
  49 000e 0030     		adds	r0, r0, #0
  50              	.LVL5:
  51 0010 18BF     		it	ne
  52 0012 0120     		movne	r0, #1
  53 0014 08BD     		pop	{r3, pc}
  54              	.L4:
  55 0016 00BF     		.align	2
  56              	.L3:
  57 0018 00000000 		.word	huart1
  58              		.cfi_endproc
  59              	.LFE126:
  61              		.section	.text.XL_320_Set_Direction_HAL,"ax",%progbits
  62              		.align	1
  63              		.global	XL_320_Set_Direction_HAL
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  67              		.fpu fpv4-sp-d16
  69              	XL_320_Set_Direction_HAL:
  70              	.LFB127:
  72:Src/main.c    **** 
  73:Src/main.c    **** void XL_320_Set_Direction_HAL(XL_Direction dir){
  71              		.loc 1 73 0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75              	.LVL6:
  76 0000 08B5     		push	{r3, lr}
  77              	.LCFI1:
  78              		.cfi_def_cfa_offset 8
  79              		.cfi_offset 3, -8
  80              		.cfi_offset 14, -4
  74:Src/main.c    ****   HAL_GPIO_WritePin(USART1_DIR_GPIO_Port, USART1_DIR_Pin, (dir==XL_SEND)?GPIO_PIN_SET:GPIO_PIN_RESE
  81              		.loc 1 74 0
  82 0002 B0FA80F2 		clz	r2, r0
  83 0006 5209     		lsrs	r2, r2, #5
  84 0008 4FF40071 		mov	r1, #512
  85 000c 0148     		ldr	r0, .L7
  86              	.LVL7:
  87 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
  88              	.LVL8:
  75:Src/main.c    **** }
  89              		.loc 1 75 0
  90 0012 08BD     		pop	{r3, pc}
  91              	.L8:
  92              		.align	2
  93              	.L7:
  94 0014 00080240 		.word	1073874944
  95              		.cfi_endproc
  96              	.LFE127:
  98              		.section	.text.XL_320_Receive_HAL,"ax",%progbits
  99              		.align	1
 100              		.global	XL_320_Receive_HAL
ARM GAS  /tmp/ccvv3g2c.s 			page 4


 101              		.syntax unified
 102              		.thumb
 103              		.thumb_func
 104              		.fpu fpv4-sp-d16
 106              	XL_320_Receive_HAL:
 107              	.LFB128:
  76:Src/main.c    **** 
  77:Src/main.c    **** uint8_t XL_320_Receive_HAL(uint8_t *buffer, uint16_t size, uint32_t timeout){
 108              		.loc 1 77 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112              	.LVL9:
 113 0000 08B5     		push	{r3, lr}
 114              	.LCFI2:
 115              		.cfi_def_cfa_offset 8
 116              		.cfi_offset 3, -8
 117              		.cfi_offset 14, -4
  78:Src/main.c    ****   HAL_StatusTypeDef status = HAL_UART_Receive(&huart1, buffer, size, timeout);
 118              		.loc 1 78 0
 119 0002 1346     		mov	r3, r2
 120 0004 0A46     		mov	r2, r1
 121              	.LVL10:
 122 0006 0146     		mov	r1, r0
 123              	.LVL11:
 124 0008 0348     		ldr	r0, .L11
 125              	.LVL12:
 126 000a FFF7FEFF 		bl	HAL_UART_Receive
 127              	.LVL13:
  79:Src/main.c    ****   return (status==HAL_OK)?0:1;
  80:Src/main.c    **** }
 128              		.loc 1 80 0
 129 000e 0030     		adds	r0, r0, #0
 130              	.LVL14:
 131 0010 18BF     		it	ne
 132 0012 0120     		movne	r0, #1
 133 0014 08BD     		pop	{r3, pc}
 134              	.L12:
 135 0016 00BF     		.align	2
 136              	.L11:
 137 0018 00000000 		.word	huart1
 138              		.cfi_endproc
 139              	.LFE128:
 141              		.section	.text.XL_320_Delay_HAL,"ax",%progbits
 142              		.align	1
 143              		.global	XL_320_Delay_HAL
 144              		.syntax unified
 145              		.thumb
 146              		.thumb_func
 147              		.fpu fpv4-sp-d16
 149              	XL_320_Delay_HAL:
 150              	.LFB129:
  81:Src/main.c    **** 
  82:Src/main.c    **** void XL_320_Delay_HAL(uint32_t t){
 151              		.loc 1 82 0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccvv3g2c.s 			page 5


 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              	.LVL15:
 156 0000 08B5     		push	{r3, lr}
 157              	.LCFI3:
 158              		.cfi_def_cfa_offset 8
 159              		.cfi_offset 3, -8
 160              		.cfi_offset 14, -4
  83:Src/main.c    ****   HAL_Delay(t);
 161              		.loc 1 83 0
 162 0002 FFF7FEFF 		bl	HAL_Delay
 163              	.LVL16:
  84:Src/main.c    **** }
 164              		.loc 1 84 0
 165 0006 08BD     		pop	{r3, pc}
 166              		.cfi_endproc
 167              	.LFE129:
 169              		.section	.text.MX_GPIO_Init,"ax",%progbits
 170              		.align	1
 171              		.syntax unified
 172              		.thumb
 173              		.thumb_func
 174              		.fpu fpv4-sp-d16
 176              	MX_GPIO_Init:
 177              	.LFB133:
  85:Src/main.c    **** 
  86:Src/main.c    **** /* USER CODE END 0 */
  87:Src/main.c    **** 
  88:Src/main.c    **** int main(void)
  89:Src/main.c    **** {
  90:Src/main.c    **** 
  91:Src/main.c    ****   /* USER CODE BEGIN 1 */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* USER CODE END 1 */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  98:Src/main.c    ****   HAL_Init();
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* USER CODE BEGIN Init */
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* USER CODE END Init */
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* Configure the system clock */
 105:Src/main.c    ****   SystemClock_Config();
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 108:Src/main.c    ****   /* USER CODE END SysInit */
 109:Src/main.c    **** 
 110:Src/main.c    ****   /* Initialize all configured peripherals */
 111:Src/main.c    ****   MX_GPIO_Init();
 112:Src/main.c    ****   MX_USART1_UART_Init();
 113:Src/main.c    **** 
 114:Src/main.c    ****   /* USER CODE BEGIN 2 */
 115:Src/main.c    ****   //Initialisation interface
 116:Src/main.c    ****   interface.send = XL_320_Send_HAL;
 117:Src/main.c    ****   interface.set_direction = XL_320_Set_Direction_HAL;
ARM GAS  /tmp/ccvv3g2c.s 			page 6


 118:Src/main.c    ****   interface.receive = XL_320_Receive_HAL;
 119:Src/main.c    ****   interface.delay = XL_320_Delay_HAL;
 120:Src/main.c    **** 
 121:Src/main.c    ****   HAL_Delay(1000);
 122:Src/main.c    **** 
 123:Src/main.c    ****   XL broadcast = (XL) {.interface = &interface, .id = XL_BROADCAST};
 124:Src/main.c    ****   
 125:Src/main.c    ****   XL servo;
 126:Src/main.c    ****   uint16_t nb_servos = 0;
 127:Src/main.c    **** 
 128:Src/main.c    ****   XL_Discover(&interface, &servo, 2, &nb_servos);
 129:Src/main.c    ****   XL_Say_Hello(&servo);
 130:Src/main.c    ****   
 131:Src/main.c    ****   XL_Power_Off(&servo, XL_NOW);
 132:Src/main.c    ****   XL_Configure_CW_Angle_Limit(&servo, 0);
 133:Src/main.c    ****   XL_Configure_CCW_Angle_Limit(&servo, 0);
 134:Src/main.c    ****   XL_Configure_Control_Mode(&servo, XL_WHEEL_MODE);
 135:Src/main.c    ****   XL_Power_On(&servo, XL_NOW);
 136:Src/main.c    ****   XL_Set_Goal_Speed_Wheel(&servo, 1023, XL_CLOCKWISE, XL_NOW);
 137:Src/main.c    ****   /*
 138:Src/main.c    ****   XL_Configure_Control_Mode(&servo[1], XL_JOIN_MODE);
 139:Src/main.c    ****   XL_Configure_CW_Angle_Limit(&servo[1], 0);
 140:Src/main.c    ****   XL_Configure_CCW_Angle_Limit(&servo[1],1023);
 141:Src/main.c    ****   */
 142:Src/main.c    ****   
 143:Src/main.c    ****   //while(1);
 144:Src/main.c    **** 
 145:Src/main.c    ****   /* USER CODE END 2 */
 146:Src/main.c    **** 
 147:Src/main.c    ****   /* Infinite loop */
 148:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 149:Src/main.c    ****   while (1)
 150:Src/main.c    ****   {
 151:Src/main.c    ****     /*
 152:Src/main.c    ****     HAL_Delay(2000);
 153:Src/main.c    ****     XL_Set_Goal_Position(&servo[0], 000, XL_NOW);
 154:Src/main.c    ****     HAL_Delay(2000);
 155:Src/main.c    ****     XL_Set_Goal_Position(&servo[0], 1023, XL_NOW);
 156:Src/main.c    ****     */
 157:Src/main.c    ****   /* USER CODE END WHILE */
 158:Src/main.c    **** 
 159:Src/main.c    ****   /* USER CODE BEGIN 3 */
 160:Src/main.c    **** 
 161:Src/main.c    ****   }
 162:Src/main.c    ****   /* USER CODE END 3 */
 163:Src/main.c    **** 
 164:Src/main.c    **** }
 165:Src/main.c    **** 
 166:Src/main.c    **** /** System Clock Configuration
 167:Src/main.c    **** */
 168:Src/main.c    **** void SystemClock_Config(void)
 169:Src/main.c    **** {
 170:Src/main.c    **** 
 171:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 172:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 173:Src/main.c    **** 
 174:Src/main.c    ****     /**Configure the main internal regulator output voltage 
ARM GAS  /tmp/ccvv3g2c.s 			page 7


 175:Src/main.c    ****     */
 176:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 177:Src/main.c    **** 
 178:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 179:Src/main.c    **** 
 180:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 181:Src/main.c    ****     */
 182:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 183:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 184:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 185:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 186:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 187:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 188:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 189:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 190:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 191:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 192:Src/main.c    ****   {
 193:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 194:Src/main.c    ****   }
 195:Src/main.c    **** 
 196:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 197:Src/main.c    ****     */
 198:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 199:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 200:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 201:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 202:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 203:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 204:Src/main.c    **** 
 205:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 206:Src/main.c    ****   {
 207:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 208:Src/main.c    ****   }
 209:Src/main.c    **** 
 210:Src/main.c    ****     /**Configure the Systick interrupt time 
 211:Src/main.c    ****     */
 212:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 213:Src/main.c    **** 
 214:Src/main.c    ****     /**Configure the Systick 
 215:Src/main.c    ****     */
 216:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 217:Src/main.c    **** 
 218:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 219:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 220:Src/main.c    **** }
 221:Src/main.c    **** 
 222:Src/main.c    **** /* USART1 init function */
 223:Src/main.c    **** static void MX_USART1_UART_Init(void)
 224:Src/main.c    **** {
 225:Src/main.c    **** 
 226:Src/main.c    ****   huart1.Instance = USART1;
 227:Src/main.c    ****   huart1.Init.BaudRate = 1000000;
 228:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 229:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 230:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 231:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
ARM GAS  /tmp/ccvv3g2c.s 			page 8


 232:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 233:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 234:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 235:Src/main.c    ****   {
 236:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 237:Src/main.c    ****   }
 238:Src/main.c    **** 
 239:Src/main.c    **** }
 240:Src/main.c    **** 
 241:Src/main.c    **** /** Configure pins as 
 242:Src/main.c    ****         * Analog 
 243:Src/main.c    ****         * Input 
 244:Src/main.c    ****         * Output
 245:Src/main.c    ****         * EVENT_OUT
 246:Src/main.c    ****         * EXTI
 247:Src/main.c    ****         * Free pins are configured automatically as Analog (this feature is enabled through 
 248:Src/main.c    ****         * the Code Generation settings)
 249:Src/main.c    ****      PA2   ------> USART2_TX
 250:Src/main.c    ****      PA3   ------> USART2_RX
 251:Src/main.c    **** */
 252:Src/main.c    **** static void MX_GPIO_Init(void)
 253:Src/main.c    **** {
 178              		.loc 1 253 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 40
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 183              	.LCFI4:
 184              		.cfi_def_cfa_offset 24
 185              		.cfi_offset 4, -24
 186              		.cfi_offset 5, -20
 187              		.cfi_offset 6, -16
 188              		.cfi_offset 7, -12
 189              		.cfi_offset 8, -8
 190              		.cfi_offset 14, -4
 191 0004 8AB0     		sub	sp, sp, #40
 192              	.LCFI5:
 193              		.cfi_def_cfa_offset 64
 194              	.LBB2:
 254:Src/main.c    **** 
 255:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 256:Src/main.c    **** 
 257:Src/main.c    ****   /* GPIO Ports Clock Enable */
 258:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 195              		.loc 1 258 0
 196 0006 0024     		movs	r4, #0
 197 0008 0094     		str	r4, [sp]
 198 000a 494B     		ldr	r3, .L17
 199 000c 1A6B     		ldr	r2, [r3, #48]
 200 000e 42F00402 		orr	r2, r2, #4
 201 0012 1A63     		str	r2, [r3, #48]
 202 0014 1A6B     		ldr	r2, [r3, #48]
 203 0016 02F00402 		and	r2, r2, #4
 204 001a 0092     		str	r2, [sp]
 205 001c 009A     		ldr	r2, [sp]
 206              	.LBE2:
 207              	.LBB3:
ARM GAS  /tmp/ccvv3g2c.s 			page 9


 259:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 208              		.loc 1 259 0
 209 001e 0194     		str	r4, [sp, #4]
 210 0020 1A6B     		ldr	r2, [r3, #48]
 211 0022 42F08002 		orr	r2, r2, #128
 212 0026 1A63     		str	r2, [r3, #48]
 213 0028 1A6B     		ldr	r2, [r3, #48]
 214 002a 02F08002 		and	r2, r2, #128
 215 002e 0192     		str	r2, [sp, #4]
 216 0030 019A     		ldr	r2, [sp, #4]
 217              	.LBE3:
 218              	.LBB4:
 260:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 219              		.loc 1 260 0
 220 0032 0294     		str	r4, [sp, #8]
 221 0034 1A6B     		ldr	r2, [r3, #48]
 222 0036 42F00102 		orr	r2, r2, #1
 223 003a 1A63     		str	r2, [r3, #48]
 224 003c 1A6B     		ldr	r2, [r3, #48]
 225 003e 02F00102 		and	r2, r2, #1
 226 0042 0292     		str	r2, [sp, #8]
 227 0044 029A     		ldr	r2, [sp, #8]
 228              	.LBE4:
 229              	.LBB5:
 261:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 230              		.loc 1 261 0
 231 0046 0394     		str	r4, [sp, #12]
 232 0048 1A6B     		ldr	r2, [r3, #48]
 233 004a 42F00202 		orr	r2, r2, #2
 234 004e 1A63     		str	r2, [r3, #48]
 235 0050 1A6B     		ldr	r2, [r3, #48]
 236 0052 02F00202 		and	r2, r2, #2
 237 0056 0392     		str	r2, [sp, #12]
 238 0058 039A     		ldr	r2, [sp, #12]
 239              	.LBE5:
 240              	.LBB6:
 262:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 241              		.loc 1 262 0
 242 005a 0494     		str	r4, [sp, #16]
 243 005c 1A6B     		ldr	r2, [r3, #48]
 244 005e 42F00802 		orr	r2, r2, #8
 245 0062 1A63     		str	r2, [r3, #48]
 246 0064 1B6B     		ldr	r3, [r3, #48]
 247 0066 03F00803 		and	r3, r3, #8
 248 006a 0493     		str	r3, [sp, #16]
 249 006c 049B     		ldr	r3, [sp, #16]
 250              	.LBE6:
 263:Src/main.c    **** 
 264:Src/main.c    ****   /*Configure GPIO pin Output Level */
 265:Src/main.c    ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 251              		.loc 1 265 0
 252 006e 314F     		ldr	r7, .L17+4
 253 0070 2246     		mov	r2, r4
 254 0072 2021     		movs	r1, #32
 255 0074 3846     		mov	r0, r7
 256 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 257              	.LVL17:
ARM GAS  /tmp/ccvv3g2c.s 			page 10


 266:Src/main.c    **** 
 267:Src/main.c    ****   /*Configure GPIO pin Output Level */
 268:Src/main.c    ****   HAL_GPIO_WritePin(USART1_DIR_GPIO_Port, USART1_DIR_Pin, GPIO_PIN_RESET);
 258              		.loc 1 268 0
 259 007a 2F4E     		ldr	r6, .L17+8
 260 007c 2246     		mov	r2, r4
 261 007e 4FF40071 		mov	r1, #512
 262 0082 3046     		mov	r0, r6
 263 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 264              	.LVL18:
 269:Src/main.c    **** 
 270:Src/main.c    ****   /*Configure GPIO pin : B1_Pin */
 271:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin;
 265              		.loc 1 271 0
 266 0088 4FF40053 		mov	r3, #8192
 267 008c 0593     		str	r3, [sp, #20]
 272:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 268              		.loc 1 272 0
 269 008e 2B4B     		ldr	r3, .L17+12
 270 0090 0693     		str	r3, [sp, #24]
 273:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 271              		.loc 1 273 0
 272 0092 0794     		str	r4, [sp, #28]
 274:Src/main.c    ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 273              		.loc 1 274 0
 274 0094 05A9     		add	r1, sp, #20
 275 0096 3046     		mov	r0, r6
 276 0098 FFF7FEFF 		bl	HAL_GPIO_Init
 277              	.LVL19:
 275:Src/main.c    **** 
 276:Src/main.c    ****   /*Configure GPIO pins : PC0 PC1 PC2 PC3 
 277:Src/main.c    ****                            PC4 PC5 PC6 PC7 
 278:Src/main.c    ****                            PC8 PC10 PC11 PC12 */
 279:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3 
 278              		.loc 1 279 0
 279 009c 41F6FF53 		movw	r3, #7679
 280 00a0 0593     		str	r3, [sp, #20]
 280:Src/main.c    ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7 
 281:Src/main.c    ****                           |GPIO_PIN_8|GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12;
 282:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 281              		.loc 1 282 0
 282 00a2 0325     		movs	r5, #3
 283 00a4 0695     		str	r5, [sp, #24]
 283:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 284              		.loc 1 283 0
 285 00a6 0794     		str	r4, [sp, #28]
 284:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 286              		.loc 1 284 0
 287 00a8 05A9     		add	r1, sp, #20
 288 00aa 3046     		mov	r0, r6
 289 00ac FFF7FEFF 		bl	HAL_GPIO_Init
 290              	.LVL20:
 285:Src/main.c    **** 
 286:Src/main.c    ****   /*Configure GPIO pins : PA0 PA1 PA4 PA6 
 287:Src/main.c    ****                            PA7 PA8 PA11 PA12 
 288:Src/main.c    ****                            PA15 */
 289:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_6 
ARM GAS  /tmp/ccvv3g2c.s 			page 11


 291              		.loc 1 289 0
 292 00b0 49F6D313 		movw	r3, #39379
 293 00b4 0593     		str	r3, [sp, #20]
 290:Src/main.c    ****                           |GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_11|GPIO_PIN_12 
 291:Src/main.c    ****                           |GPIO_PIN_15;
 292:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 294              		.loc 1 292 0
 295 00b6 0695     		str	r5, [sp, #24]
 293:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 296              		.loc 1 293 0
 297 00b8 0794     		str	r4, [sp, #28]
 294:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 298              		.loc 1 294 0
 299 00ba 05A9     		add	r1, sp, #20
 300 00bc 3846     		mov	r0, r7
 301 00be FFF7FEFF 		bl	HAL_GPIO_Init
 302              	.LVL21:
 295:Src/main.c    **** 
 296:Src/main.c    ****   /*Configure GPIO pins : USART_TX_Pin USART_RX_Pin */
 297:Src/main.c    ****   GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 303              		.loc 1 297 0
 304 00c2 0C23     		movs	r3, #12
 305 00c4 0593     		str	r3, [sp, #20]
 298:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 306              		.loc 1 298 0
 307 00c6 0223     		movs	r3, #2
 308 00c8 0693     		str	r3, [sp, #24]
 299:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 309              		.loc 1 299 0
 310 00ca 0794     		str	r4, [sp, #28]
 300:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 311              		.loc 1 300 0
 312 00cc 0894     		str	r4, [sp, #32]
 301:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 313              		.loc 1 301 0
 314 00ce 0723     		movs	r3, #7
 315 00d0 0993     		str	r3, [sp, #36]
 302:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 316              		.loc 1 302 0
 317 00d2 05A9     		add	r1, sp, #20
 318 00d4 3846     		mov	r0, r7
 319 00d6 FFF7FEFF 		bl	HAL_GPIO_Init
 320              	.LVL22:
 303:Src/main.c    **** 
 304:Src/main.c    ****   /*Configure GPIO pin : LD2_Pin */
 305:Src/main.c    ****   GPIO_InitStruct.Pin = LD2_Pin;
 321              		.loc 1 305 0
 322 00da 2023     		movs	r3, #32
 323 00dc 0593     		str	r3, [sp, #20]
 306:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 324              		.loc 1 306 0
 325 00de 4FF00108 		mov	r8, #1
 326 00e2 CDF81880 		str	r8, [sp, #24]
 307:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 327              		.loc 1 307 0
 328 00e6 0794     		str	r4, [sp, #28]
 308:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
ARM GAS  /tmp/ccvv3g2c.s 			page 12


 329              		.loc 1 308 0
 330 00e8 0894     		str	r4, [sp, #32]
 309:Src/main.c    ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 331              		.loc 1 309 0
 332 00ea 05A9     		add	r1, sp, #20
 333 00ec 3846     		mov	r0, r7
 334 00ee FFF7FEFF 		bl	HAL_GPIO_Init
 335              	.LVL23:
 310:Src/main.c    **** 
 311:Src/main.c    ****   /*Configure GPIO pins : PB0 PB1 PB2 PB10 
 312:Src/main.c    ****                            PB12 PB13 PB14 PB15 
 313:Src/main.c    ****                            PB4 PB5 PB6 PB7 
 314:Src/main.c    ****                            PB8 PB9 */
 315:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_10 
 336              		.loc 1 315 0
 337 00f2 4FF2F773 		movw	r3, #63479
 338 00f6 0593     		str	r3, [sp, #20]
 316:Src/main.c    ****                           |GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15 
 317:Src/main.c    ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7 
 318:Src/main.c    ****                           |GPIO_PIN_8|GPIO_PIN_9;
 319:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 339              		.loc 1 319 0
 340 00f8 0695     		str	r5, [sp, #24]
 320:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 341              		.loc 1 320 0
 342 00fa 0794     		str	r4, [sp, #28]
 321:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 343              		.loc 1 321 0
 344 00fc 05A9     		add	r1, sp, #20
 345 00fe 1048     		ldr	r0, .L17+16
 346 0100 FFF7FEFF 		bl	HAL_GPIO_Init
 347              	.LVL24:
 322:Src/main.c    **** 
 323:Src/main.c    ****   /*Configure GPIO pin : USART1_DIR_Pin */
 324:Src/main.c    ****   GPIO_InitStruct.Pin = USART1_DIR_Pin;
 348              		.loc 1 324 0
 349 0104 4FF40073 		mov	r3, #512
 350 0108 0593     		str	r3, [sp, #20]
 325:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 351              		.loc 1 325 0
 352 010a CDF81880 		str	r8, [sp, #24]
 326:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 353              		.loc 1 326 0
 354 010e 0794     		str	r4, [sp, #28]
 327:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 355              		.loc 1 327 0
 356 0110 0894     		str	r4, [sp, #32]
 328:Src/main.c    ****   HAL_GPIO_Init(USART1_DIR_GPIO_Port, &GPIO_InitStruct);
 357              		.loc 1 328 0
 358 0112 05A9     		add	r1, sp, #20
 359 0114 3046     		mov	r0, r6
 360 0116 FFF7FEFF 		bl	HAL_GPIO_Init
 361              	.LVL25:
 329:Src/main.c    **** 
 330:Src/main.c    ****   /*Configure GPIO pin : PD2 */
 331:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_2;
 362              		.loc 1 331 0
ARM GAS  /tmp/ccvv3g2c.s 			page 13


 363 011a 0423     		movs	r3, #4
 364 011c 0593     		str	r3, [sp, #20]
 332:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 365              		.loc 1 332 0
 366 011e 0695     		str	r5, [sp, #24]
 333:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 367              		.loc 1 333 0
 368 0120 0794     		str	r4, [sp, #28]
 334:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 369              		.loc 1 334 0
 370 0122 05A9     		add	r1, sp, #20
 371 0124 0748     		ldr	r0, .L17+20
 372 0126 FFF7FEFF 		bl	HAL_GPIO_Init
 373              	.LVL26:
 335:Src/main.c    **** 
 336:Src/main.c    **** }
 374              		.loc 1 336 0
 375 012a 0AB0     		add	sp, sp, #40
 376              	.LCFI6:
 377              		.cfi_def_cfa_offset 24
 378              		@ sp needed
 379 012c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 380              	.L18:
 381              		.align	2
 382              	.L17:
 383 0130 00380240 		.word	1073887232
 384 0134 00000240 		.word	1073872896
 385 0138 00080240 		.word	1073874944
 386 013c 00002110 		.word	270598144
 387 0140 00040240 		.word	1073873920
 388 0144 000C0240 		.word	1073875968
 389              		.cfi_endproc
 390              	.LFE133:
 392              		.section	.text._Error_Handler,"ax",%progbits
 393              		.align	1
 394              		.global	_Error_Handler
 395              		.syntax unified
 396              		.thumb
 397              		.thumb_func
 398              		.fpu fpv4-sp-d16
 400              	_Error_Handler:
 401              	.LFB134:
 337:Src/main.c    **** 
 338:Src/main.c    **** /* USER CODE BEGIN 4 */
 339:Src/main.c    **** 
 340:Src/main.c    **** /* USER CODE END 4 */
 341:Src/main.c    **** 
 342:Src/main.c    **** /**
 343:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 344:Src/main.c    ****   * @param  None
 345:Src/main.c    ****   * @retval None
 346:Src/main.c    ****   */
 347:Src/main.c    **** void _Error_Handler(char * file, int line)
 348:Src/main.c    **** {
 402              		.loc 1 348 0
 403              		.cfi_startproc
 404              		@ Volatile: function does not return.
ARM GAS  /tmp/ccvv3g2c.s 			page 14


 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407              		@ link register save eliminated.
 408              	.LVL27:
 409              	.L20:
 410 0000 FEE7     		b	.L20
 411              		.cfi_endproc
 412              	.LFE134:
 414              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 415              		.align	1
 416              		.syntax unified
 417              		.thumb
 418              		.thumb_func
 419              		.fpu fpv4-sp-d16
 421              	MX_USART1_UART_Init:
 422              	.LFB132:
 224:Src/main.c    **** 
 423              		.loc 1 224 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 224:Src/main.c    **** 
 427              		.loc 1 224 0
 428 0000 08B5     		push	{r3, lr}
 429              	.LCFI7:
 430              		.cfi_def_cfa_offset 8
 431              		.cfi_offset 3, -8
 432              		.cfi_offset 14, -4
 226:Src/main.c    ****   huart1.Init.BaudRate = 1000000;
 433              		.loc 1 226 0
 434 0002 0A48     		ldr	r0, .L25
 435 0004 0A4B     		ldr	r3, .L25+4
 436 0006 0360     		str	r3, [r0]
 227:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 437              		.loc 1 227 0
 438 0008 0A4B     		ldr	r3, .L25+8
 439 000a 4360     		str	r3, [r0, #4]
 228:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 440              		.loc 1 228 0
 441 000c 0023     		movs	r3, #0
 442 000e 8360     		str	r3, [r0, #8]
 229:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 443              		.loc 1 229 0
 444 0010 C360     		str	r3, [r0, #12]
 230:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 445              		.loc 1 230 0
 446 0012 0361     		str	r3, [r0, #16]
 231:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 447              		.loc 1 231 0
 448 0014 0C22     		movs	r2, #12
 449 0016 4261     		str	r2, [r0, #20]
 232:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 450              		.loc 1 232 0
 451 0018 8361     		str	r3, [r0, #24]
 233:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 452              		.loc 1 233 0
 453 001a C361     		str	r3, [r0, #28]
ARM GAS  /tmp/ccvv3g2c.s 			page 15


 234:Src/main.c    ****   {
 454              		.loc 1 234 0
 455 001c FFF7FEFF 		bl	HAL_UART_Init
 456              	.LVL28:
 457 0020 00B9     		cbnz	r0, .L24
 239:Src/main.c    **** 
 458              		.loc 1 239 0
 459 0022 08BD     		pop	{r3, pc}
 460              	.L24:
 236:Src/main.c    ****   }
 461              		.loc 1 236 0
 462 0024 EC21     		movs	r1, #236
 463 0026 0448     		ldr	r0, .L25+12
 464 0028 FFF7FEFF 		bl	_Error_Handler
 465              	.LVL29:
 466              	.L26:
 467              		.align	2
 468              	.L25:
 469 002c 00000000 		.word	huart1
 470 0030 00100140 		.word	1073811456
 471 0034 40420F00 		.word	1000000
 472 0038 00000000 		.word	.LC1
 473              		.cfi_endproc
 474              	.LFE132:
 476              		.section	.text.SystemClock_Config,"ax",%progbits
 477              		.align	1
 478              		.global	SystemClock_Config
 479              		.syntax unified
 480              		.thumb
 481              		.thumb_func
 482              		.fpu fpv4-sp-d16
 484              	SystemClock_Config:
 485              	.LFB131:
 169:Src/main.c    **** 
 486              		.loc 1 169 0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 80
 489              		@ frame_needed = 0, uses_anonymous_args = 0
 490 0000 00B5     		push	{lr}
 491              	.LCFI8:
 492              		.cfi_def_cfa_offset 4
 493              		.cfi_offset 14, -4
 494 0002 95B0     		sub	sp, sp, #84
 495              	.LCFI9:
 496              		.cfi_def_cfa_offset 88
 497              	.LBB7:
 176:Src/main.c    **** 
 498              		.loc 1 176 0
 499 0004 0022     		movs	r2, #0
 500 0006 0192     		str	r2, [sp, #4]
 501 0008 2A4B     		ldr	r3, .L33
 502 000a 196C     		ldr	r1, [r3, #64]
 503 000c 41F08051 		orr	r1, r1, #268435456
 504 0010 1964     		str	r1, [r3, #64]
 505 0012 1B6C     		ldr	r3, [r3, #64]
 506 0014 03F08053 		and	r3, r3, #268435456
 507 0018 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccvv3g2c.s 			page 16


 508 001a 019B     		ldr	r3, [sp, #4]
 509              	.LBE7:
 510              	.LBB8:
 178:Src/main.c    **** 
 511              		.loc 1 178 0
 512 001c 0292     		str	r2, [sp, #8]
 513 001e 2649     		ldr	r1, .L33+4
 514 0020 0B68     		ldr	r3, [r1]
 515 0022 23F44043 		bic	r3, r3, #49152
 516 0026 43F40043 		orr	r3, r3, #32768
 517 002a 0B60     		str	r3, [r1]
 518 002c 0B68     		ldr	r3, [r1]
 519 002e 03F44043 		and	r3, r3, #49152
 520 0032 0293     		str	r3, [sp, #8]
 521 0034 029B     		ldr	r3, [sp, #8]
 522              	.LBE8:
 182:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 523              		.loc 1 182 0
 524 0036 0221     		movs	r1, #2
 525 0038 0891     		str	r1, [sp, #32]
 183:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 526              		.loc 1 183 0
 527 003a 0123     		movs	r3, #1
 528 003c 0B93     		str	r3, [sp, #44]
 184:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 529              		.loc 1 184 0
 530 003e 1023     		movs	r3, #16
 531 0040 0C93     		str	r3, [sp, #48]
 185:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 532              		.loc 1 185 0
 533 0042 0E91     		str	r1, [sp, #56]
 186:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 534              		.loc 1 186 0
 535 0044 0F92     		str	r2, [sp, #60]
 187:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 536              		.loc 1 187 0
 537 0046 1093     		str	r3, [sp, #64]
 188:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 538              		.loc 1 188 0
 539 0048 4FF4A873 		mov	r3, #336
 540 004c 1193     		str	r3, [sp, #68]
 189:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 541              		.loc 1 189 0
 542 004e 0423     		movs	r3, #4
 543 0050 1293     		str	r3, [sp, #72]
 190:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 544              		.loc 1 190 0
 545 0052 0723     		movs	r3, #7
 546 0054 1393     		str	r3, [sp, #76]
 191:Src/main.c    ****   {
 547              		.loc 1 191 0
 548 0056 08A8     		add	r0, sp, #32
 549 0058 FFF7FEFF 		bl	HAL_RCC_OscConfig
 550              	.LVL30:
 551 005c 08BB     		cbnz	r0, .L31
 198:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 552              		.loc 1 198 0
ARM GAS  /tmp/ccvv3g2c.s 			page 17


 553 005e 0F23     		movs	r3, #15
 554 0060 0393     		str	r3, [sp, #12]
 200:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 555              		.loc 1 200 0
 556 0062 0221     		movs	r1, #2
 557 0064 0491     		str	r1, [sp, #16]
 201:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 558              		.loc 1 201 0
 559 0066 0023     		movs	r3, #0
 560 0068 0593     		str	r3, [sp, #20]
 202:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 561              		.loc 1 202 0
 562 006a 4FF48052 		mov	r2, #4096
 563 006e 0692     		str	r2, [sp, #24]
 203:Src/main.c    **** 
 564              		.loc 1 203 0
 565 0070 0793     		str	r3, [sp, #28]
 205:Src/main.c    ****   {
 566              		.loc 1 205 0
 567 0072 03A8     		add	r0, sp, #12
 568 0074 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 569              	.LVL31:
 570 0078 B8B9     		cbnz	r0, .L32
 212:Src/main.c    **** 
 571              		.loc 1 212 0
 572 007a FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 573              	.LVL32:
 574 007e 0F4B     		ldr	r3, .L33+8
 575 0080 A3FB0030 		umull	r3, r0, r3, r0
 576 0084 8009     		lsrs	r0, r0, #6
 577 0086 FFF7FEFF 		bl	HAL_SYSTICK_Config
 578              	.LVL33:
 216:Src/main.c    **** 
 579              		.loc 1 216 0
 580 008a 0420     		movs	r0, #4
 581 008c FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 582              	.LVL34:
 219:Src/main.c    **** }
 583              		.loc 1 219 0
 584 0090 0022     		movs	r2, #0
 585 0092 1146     		mov	r1, r2
 586 0094 4FF0FF30 		mov	r0, #-1
 587 0098 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 588              	.LVL35:
 220:Src/main.c    **** 
 589              		.loc 1 220 0
 590 009c 15B0     		add	sp, sp, #84
 591              	.LCFI10:
 592              		.cfi_remember_state
 593              		.cfi_def_cfa_offset 4
 594              		@ sp needed
 595 009e 5DF804FB 		ldr	pc, [sp], #4
 596              	.L31:
 597              	.LCFI11:
 598              		.cfi_restore_state
 193:Src/main.c    ****   }
 599              		.loc 1 193 0
ARM GAS  /tmp/ccvv3g2c.s 			page 18


 600 00a2 C121     		movs	r1, #193
 601 00a4 0648     		ldr	r0, .L33+12
 602 00a6 FFF7FEFF 		bl	_Error_Handler
 603              	.LVL36:
 604              	.L32:
 207:Src/main.c    ****   }
 605              		.loc 1 207 0
 606 00aa CF21     		movs	r1, #207
 607 00ac 0448     		ldr	r0, .L33+12
 608 00ae FFF7FEFF 		bl	_Error_Handler
 609              	.LVL37:
 610              	.L34:
 611 00b2 00BF     		.align	2
 612              	.L33:
 613 00b4 00380240 		.word	1073887232
 614 00b8 00700040 		.word	1073770496
 615 00bc D34D6210 		.word	274877907
 616 00c0 00000000 		.word	.LC1
 617              		.cfi_endproc
 618              	.LFE131:
 620              		.section	.text.main,"ax",%progbits
 621              		.align	1
 622              		.global	main
 623              		.syntax unified
 624              		.thumb
 625              		.thumb_func
 626              		.fpu fpv4-sp-d16
 628              	main:
 629              	.LFB130:
  89:Src/main.c    **** 
 630              		.loc 1 89 0
 631              		.cfi_startproc
 632              		@ Volatile: function does not return.
 633              		@ args = 0, pretend = 0, frame = 16
 634              		@ frame_needed = 0, uses_anonymous_args = 0
 635 0000 00B5     		push	{lr}
 636              	.LCFI12:
 637              		.cfi_def_cfa_offset 4
 638              		.cfi_offset 14, -4
 639 0002 85B0     		sub	sp, sp, #20
 640              	.LCFI13:
 641              		.cfi_def_cfa_offset 24
  98:Src/main.c    **** 
 642              		.loc 1 98 0
 643 0004 FFF7FEFF 		bl	HAL_Init
 644              	.LVL38:
 105:Src/main.c    **** 
 645              		.loc 1 105 0
 646 0008 FFF7FEFF 		bl	SystemClock_Config
 647              	.LVL39:
 111:Src/main.c    ****   MX_USART1_UART_Init();
 648              		.loc 1 111 0
 649 000c FFF7FEFF 		bl	MX_GPIO_Init
 650              	.LVL40:
 112:Src/main.c    **** 
 651              		.loc 1 112 0
 652 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
ARM GAS  /tmp/ccvv3g2c.s 			page 19


 653              	.LVL41:
 116:Src/main.c    ****   interface.set_direction = XL_320_Set_Direction_HAL;
 654              		.loc 1 116 0
 655 0014 1A4C     		ldr	r4, .L38
 656 0016 1B4B     		ldr	r3, .L38+4
 657 0018 2360     		str	r3, [r4]
 117:Src/main.c    ****   interface.receive = XL_320_Receive_HAL;
 658              		.loc 1 117 0
 659 001a 1B4B     		ldr	r3, .L38+8
 660 001c A360     		str	r3, [r4, #8]
 118:Src/main.c    ****   interface.delay = XL_320_Delay_HAL;
 661              		.loc 1 118 0
 662 001e 1B4B     		ldr	r3, .L38+12
 663 0020 6360     		str	r3, [r4, #4]
 119:Src/main.c    **** 
 664              		.loc 1 119 0
 665 0022 1B4B     		ldr	r3, .L38+16
 666 0024 E360     		str	r3, [r4, #12]
 121:Src/main.c    **** 
 667              		.loc 1 121 0
 668 0026 4FF47A70 		mov	r0, #1000
 669 002a FFF7FEFF 		bl	HAL_Delay
 670              	.LVL42:
 126:Src/main.c    **** 
 671              		.loc 1 126 0
 672 002e 0025     		movs	r5, #0
 673 0030 04AB     		add	r3, sp, #16
 674 0032 23F80A5D 		strh	r5, [r3, #-10]!	@ movhi
 128:Src/main.c    ****   XL_Say_Hello(&servo);
 675              		.loc 1 128 0
 676 0036 0222     		movs	r2, #2
 677 0038 02A9     		add	r1, sp, #8
 678 003a 2046     		mov	r0, r4
 679 003c FFF7FEFF 		bl	XL_Discover
 680              	.LVL43:
 129:Src/main.c    ****   
 681              		.loc 1 129 0
 682 0040 02A8     		add	r0, sp, #8
 683 0042 FFF7FEFF 		bl	XL_Say_Hello
 684              	.LVL44:
 131:Src/main.c    ****   XL_Configure_CW_Angle_Limit(&servo, 0);
 685              		.loc 1 131 0
 686 0046 0121     		movs	r1, #1
 687 0048 02A8     		add	r0, sp, #8
 688 004a FFF7FEFF 		bl	XL_Power_Off
 689              	.LVL45:
 132:Src/main.c    ****   XL_Configure_CCW_Angle_Limit(&servo, 0);
 690              		.loc 1 132 0
 691 004e 2946     		mov	r1, r5
 692 0050 02A8     		add	r0, sp, #8
 693 0052 FFF7FEFF 		bl	XL_Configure_CW_Angle_Limit
 694              	.LVL46:
 133:Src/main.c    ****   XL_Configure_Control_Mode(&servo, XL_WHEEL_MODE);
 695              		.loc 1 133 0
 696 0056 2946     		mov	r1, r5
 697 0058 02A8     		add	r0, sp, #8
 698 005a FFF7FEFF 		bl	XL_Configure_CCW_Angle_Limit
ARM GAS  /tmp/ccvv3g2c.s 			page 20


 699              	.LVL47:
 134:Src/main.c    ****   XL_Power_On(&servo, XL_NOW);
 700              		.loc 1 134 0
 701 005e 0121     		movs	r1, #1
 702 0060 02A8     		add	r0, sp, #8
 703 0062 FFF7FEFF 		bl	XL_Configure_Control_Mode
 704              	.LVL48:
 135:Src/main.c    ****   XL_Set_Goal_Speed_Wheel(&servo, 1023, XL_CLOCKWISE, XL_NOW);
 705              		.loc 1 135 0
 706 0066 0121     		movs	r1, #1
 707 0068 02A8     		add	r0, sp, #8
 708 006a FFF7FEFF 		bl	XL_Power_On
 709              	.LVL49:
 136:Src/main.c    ****   /*
 710              		.loc 1 136 0
 711 006e 0123     		movs	r3, #1
 712 0070 2A46     		mov	r2, r5
 713 0072 40F2FF31 		movw	r1, #1023
 714 0076 02A8     		add	r0, sp, #8
 715 0078 FFF7FEFF 		bl	XL_Set_Goal_Speed_Wheel
 716              	.LVL50:
 717              	.L36:
 718 007c FEE7     		b	.L36
 719              	.L39:
 720 007e 00BF     		.align	2
 721              	.L38:
 722 0080 00000000 		.word	interface
 723 0084 00000000 		.word	XL_320_Send_HAL
 724 0088 00000000 		.word	XL_320_Set_Direction_HAL
 725 008c 00000000 		.word	XL_320_Receive_HAL
 726 0090 00000000 		.word	XL_320_Delay_HAL
 727              		.cfi_endproc
 728              	.LFE130:
 730              		.comm	interface,104,4
 731              		.comm	huart1,64,4
 732              		.section	.rodata.MX_USART1_UART_Init.str1.4,"aMS",%progbits,1
 733              		.align	2
 734              	.LC1:
 735 0000 5372632F 		.ascii	"Src/main.c\000"
 735      6D61696E 
 735      2E6300
 736              		.text
 737              	.Letext0:
 738              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 739              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 740              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 741              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 742              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 743              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 744              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 745              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.2.0/include/stddef.h"
 746              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 747              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 748              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 749              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 750              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 751              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
ARM GAS  /tmp/ccvv3g2c.s 			page 21


 752              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 753              		.file 17 "Inc/xl_320.h"
 754              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 755              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccvv3g2c.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccvv3g2c.s:18     .text.XL_320_Send_HAL:0000000000000000 $t
     /tmp/ccvv3g2c.s:25     .text.XL_320_Send_HAL:0000000000000000 XL_320_Send_HAL
     /tmp/ccvv3g2c.s:57     .text.XL_320_Send_HAL:0000000000000018 $d
                            *COM*:0000000000000040 huart1
     /tmp/ccvv3g2c.s:62     .text.XL_320_Set_Direction_HAL:0000000000000000 $t
     /tmp/ccvv3g2c.s:69     .text.XL_320_Set_Direction_HAL:0000000000000000 XL_320_Set_Direction_HAL
     /tmp/ccvv3g2c.s:94     .text.XL_320_Set_Direction_HAL:0000000000000014 $d
     /tmp/ccvv3g2c.s:99     .text.XL_320_Receive_HAL:0000000000000000 $t
     /tmp/ccvv3g2c.s:106    .text.XL_320_Receive_HAL:0000000000000000 XL_320_Receive_HAL
     /tmp/ccvv3g2c.s:137    .text.XL_320_Receive_HAL:0000000000000018 $d
     /tmp/ccvv3g2c.s:142    .text.XL_320_Delay_HAL:0000000000000000 $t
     /tmp/ccvv3g2c.s:149    .text.XL_320_Delay_HAL:0000000000000000 XL_320_Delay_HAL
     /tmp/ccvv3g2c.s:170    .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccvv3g2c.s:176    .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccvv3g2c.s:383    .text.MX_GPIO_Init:0000000000000130 $d
     /tmp/ccvv3g2c.s:393    .text._Error_Handler:0000000000000000 $t
     /tmp/ccvv3g2c.s:400    .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccvv3g2c.s:415    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccvv3g2c.s:421    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccvv3g2c.s:469    .text.MX_USART1_UART_Init:000000000000002c $d
     /tmp/ccvv3g2c.s:477    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccvv3g2c.s:484    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccvv3g2c.s:613    .text.SystemClock_Config:00000000000000b4 $d
     /tmp/ccvv3g2c.s:621    .text.main:0000000000000000 $t
     /tmp/ccvv3g2c.s:628    .text.main:0000000000000000 main
     /tmp/ccvv3g2c.s:722    .text.main:0000000000000080 $d
                            *COM*:0000000000000068 interface
     /tmp/ccvv3g2c.s:733    .rodata.MX_USART1_UART_Init.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
HAL_GPIO_WritePin
HAL_UART_Receive
HAL_Delay
HAL_GPIO_Init
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
XL_Discover
XL_Say_Hello
XL_Power_Off
XL_Configure_CW_Angle_Limit
XL_Configure_CCW_Angle_Limit
XL_Configure_Control_Mode
XL_Power_On
XL_Set_Goal_Speed_Wheel
