ARM GAS  /tmp/ccO7pihI.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_TIM_PeriodElapsedCallback
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_TIM_PeriodElapsedCallback:
  26              	.LFB679:
  27              		.file 1 "Src/tim.c"
   1:Src/tim.c     **** /**
   2:Src/tim.c     ****   ******************************************************************************
   3:Src/tim.c     ****   * File Name          : TIM.c
   4:Src/tim.c     ****   * Description        : This file provides code for the configuration
   5:Src/tim.c     ****   *                      of the TIM instances.
   6:Src/tim.c     ****   ******************************************************************************
   7:Src/tim.c     ****   ** This notice applies to any and all portions of this file
   8:Src/tim.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/tim.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/tim.c     ****   * inserted by the user or by software development tools
  11:Src/tim.c     ****   * are owned by their respective copyright owners.
  12:Src/tim.c     ****   *
  13:Src/tim.c     ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/tim.c     ****   *
  15:Src/tim.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/tim.c     ****   * are permitted provided that the following conditions are met:
  17:Src/tim.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/tim.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/tim.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/tim.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/tim.c     ****   *      and/or other materials provided with the distribution.
  22:Src/tim.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/tim.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/tim.c     ****   *      without specific prior written permission.
  25:Src/tim.c     ****   *
  26:Src/tim.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/tim.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/tim.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/tim.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/tim.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/tim.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /tmp/ccO7pihI.s 			page 2


  32:Src/tim.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/tim.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/tim.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/tim.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/tim.c     ****   *
  37:Src/tim.c     ****   ******************************************************************************
  38:Src/tim.c     ****   */
  39:Src/tim.c     **** 
  40:Src/tim.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/tim.c     **** #include "tim.h"
  42:Src/tim.c     **** 
  43:Src/tim.c     **** /* USER CODE BEGIN 0 */
  44:Src/tim.c     **** #include "tof.h"
  45:Src/tim.c     **** #include "obstacle.h"
  46:Src/tim.c     **** #include "strategy.h"
  47:Src/tim.c     **** #include "position_client.h"
  48:Src/tim.c     **** 
  49:Src/tim.c     **** static int tim2 = 4+1;
  50:Src/tim.c     **** extern ToF_Handler tof[NB_TOF];
  51:Src/tim.c     **** 
  52:Src/tim.c     **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim){
  28              		.loc 1 52 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 20
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 83B0     		sub	sp, sp, #12
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 32
  53:Src/tim.c     ****   if(htim->Instance == htim2.Instance){
  44              		.loc 1 53 0
  45 0004 0368     		ldr	r3, [r0]
  46 0006 1E4A     		ldr	r2, .L9
  47 0008 1268     		ldr	r2, [r2]
  48 000a 9342     		cmp	r3, r2
  49 000c 05D0     		beq	.L7
  54:Src/tim.c     ****     //Match timer
  55:Src/tim.c     ****     if(!(--tim2)){
  56:Src/tim.c     ****       stop();
  57:Src/tim.c     ****     }
  58:Src/tim.c     ****   }
  59:Src/tim.c     ****   else if(htim->Instance == htim3.Instance){
  50              		.loc 1 59 0
  51 000e 1D4A     		ldr	r2, .L9+4
  52 0010 1268     		ldr	r2, [r2]
  53 0012 9342     		cmp	r3, r2
  54 0014 0AD0     		beq	.L8
  55              	.LVL1:
  56              	.L1:
ARM GAS  /tmp/ccO7pihI.s 			page 3


  60:Src/tim.c     ****     
  61:Src/tim.c     ****     __disable_irq();
  62:Src/tim.c     ****     //ToF polling timer
  63:Src/tim.c     ****     int i;
  64:Src/tim.c     ****     for(i = 0; i < NB_TOF; i++){
  65:Src/tim.c     ****       ToF_Poll_Measurement_Data(&tof[i]);
  66:Src/tim.c     ****     }
  67:Src/tim.c     ****     Update_Obstacles(&me,
  68:Src/tim.c     **** 		     ToF_Get_Last_Range(&tof[TOF_FRONT_LEFT]),
  69:Src/tim.c     **** 		     ToF_Get_Last_Range(&tof[TOF_FRONT_RIGHT]),
  70:Src/tim.c     **** 		     ToF_Get_Last_Range(&tof[TOF_REAR_LEFT]),
  71:Src/tim.c     **** 		     ToF_Get_Last_Range(&tof[TOF_REAR_RIGHT]));
  72:Src/tim.c     ****     __enable_irq();
  73:Src/tim.c     ****   }
  74:Src/tim.c     **** }
  57              		.loc 1 74 0
  58 0016 03B0     		add	sp, sp, #12
  59              	.LCFI2:
  60              		.cfi_remember_state
  61              		.cfi_def_cfa_offset 20
  62              		@ sp needed
  63 0018 F0BD     		pop	{r4, r5, r6, r7, pc}
  64              	.LVL2:
  65              	.L7:
  66              	.LCFI3:
  67              		.cfi_restore_state
  55:Src/tim.c     ****       stop();
  68              		.loc 1 55 0
  69 001a 1B4A     		ldr	r2, .L9+8
  70 001c 1368     		ldr	r3, [r2]
  71 001e 013B     		subs	r3, r3, #1
  72 0020 1360     		str	r3, [r2]
  73 0022 002B     		cmp	r3, #0
  74 0024 F7D1     		bne	.L1
  56:Src/tim.c     ****     }
  75              		.loc 1 56 0
  76 0026 FFF7FEFF 		bl	stop
  77              	.LVL3:
  78 002a F4E7     		b	.L1
  79              	.LVL4:
  80              	.L8:
  81              	.LBB7:
  82              	.LBB8:
  83              	.LBB9:
  84              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
ARM GAS  /tmp/ccO7pihI.s 			page 4


  13:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
ARM GAS  /tmp/ccO7pihI.s 			page 5


  70:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  85              		.loc 2 71 0
  86              		.syntax unified
  87              	@ 71 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  88 002c 72B6     		cpsid i
  89              	@ 0 "" 2
  90              	.LVL5:
  91              		.thumb
  92              		.syntax unified
  93              	.LBE9:
  94              	.LBE8:
  64:Src/tim.c     ****       ToF_Poll_Measurement_Data(&tof[i]);
  95              		.loc 1 64 0
  96 002e 0024     		movs	r4, #0
  97 0030 07E0     		b	.L4
  98              	.LVL6:
  99              	.L5:
  65:Src/tim.c     ****     }
 100              		.loc 1 65 0 discriminator 3
 101 0032 4FF4D670 		mov	r0, #428
 102 0036 154B     		ldr	r3, .L9+12
 103 0038 00FB0430 		mla	r0, r0, r4, r3
 104 003c FFF7FEFF 		bl	ToF_Poll_Measurement_Data
 105              	.LVL7:
  64:Src/tim.c     ****       ToF_Poll_Measurement_Data(&tof[i]);
 106              		.loc 1 64 0 discriminator 3
 107 0040 0134     		adds	r4, r4, #1
 108              	.LVL8:
 109              	.L4:
  64:Src/tim.c     ****       ToF_Poll_Measurement_Data(&tof[i]);
 110              		.loc 1 64 0 is_stmt 0 discriminator 1
 111 0042 032C     		cmp	r4, #3
 112 0044 F5DD     		ble	.L5
  68:Src/tim.c     **** 		     ToF_Get_Last_Range(&tof[TOF_FRONT_RIGHT]),
 113              		.loc 1 68 0 is_stmt 1
 114 0046 114C     		ldr	r4, .L9+12
 115              	.LVL9:
 116 0048 2046     		mov	r0, r4
 117 004a FFF7FEFF 		bl	ToF_Get_Last_Range
 118              	.LVL10:
 119 004e 0546     		mov	r5, r0
  69:Src/tim.c     **** 		     ToF_Get_Last_Range(&tof[TOF_REAR_LEFT]),
 120              		.loc 1 69 0
 121 0050 04F5D670 		add	r0, r4, #428
 122 0054 FFF7FEFF 		bl	ToF_Get_Last_Range
 123              	.LVL11:
 124 0058 0646     		mov	r6, r0
  70:Src/tim.c     **** 		     ToF_Get_Last_Range(&tof[TOF_REAR_RIGHT]));
 125              		.loc 1 70 0
 126 005a 04F55670 		add	r0, r4, #856
 127 005e FFF7FEFF 		bl	ToF_Get_Last_Range
 128              	.LVL12:
 129 0062 0746     		mov	r7, r0
  71:Src/tim.c     ****     __enable_irq();
 130              		.loc 1 71 0
 131 0064 04F20450 		addw	r0, r4, #1284
ARM GAS  /tmp/ccO7pihI.s 			page 6


 132 0068 FFF7FEFF 		bl	ToF_Get_Last_Range
 133              	.LVL13:
  67:Src/tim.c     **** 		     ToF_Get_Last_Range(&tof[TOF_FRONT_LEFT]),
 134              		.loc 1 67 0
 135 006c 80B2     		uxth	r0, r0
 136 006e 0090     		str	r0, [sp]
 137 0070 BBB2     		uxth	r3, r7
 138 0072 B2B2     		uxth	r2, r6
 139 0074 A9B2     		uxth	r1, r5
 140 0076 0648     		ldr	r0, .L9+16
 141 0078 FFF7FEFF 		bl	Update_Obstacles
 142              	.LVL14:
 143              	.LBB10:
 144              	.LBB11:
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 145              		.loc 2 60 0
 146              		.syntax unified
 147              	@ 60 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 148 007c 62B6     		cpsie i
 149              	@ 0 "" 2
 150              		.thumb
 151              		.syntax unified
 152              	.LBE11:
 153              	.LBE10:
 154              	.LBE7:
 155              		.loc 1 74 0
 156 007e CAE7     		b	.L1
 157              	.L10:
 158              		.align	2
 159              	.L9:
 160 0080 00000000 		.word	htim2
 161 0084 00000000 		.word	htim3
 162 0088 00000000 		.word	.LANCHOR0
 163 008c 00000000 		.word	tof
 164 0090 00000000 		.word	me
 165              		.cfi_endproc
 166              	.LFE679:
 168              		.section	.text.MX_TIM2_Init,"ax",%progbits
 169              		.align	1
 170              		.global	MX_TIM2_Init
 171              		.syntax unified
 172              		.thumb
 173              		.thumb_func
 174              		.fpu fpv4-sp-d16
 176              	MX_TIM2_Init:
 177              	.LFB680:
  75:Src/tim.c     **** /* USER CODE END 0 */
  76:Src/tim.c     **** 
  77:Src/tim.c     **** TIM_HandleTypeDef htim2;
  78:Src/tim.c     **** TIM_HandleTypeDef htim3;
  79:Src/tim.c     **** 
  80:Src/tim.c     **** /* TIM2 init function */
  81:Src/tim.c     **** void MX_TIM2_Init(void)
  82:Src/tim.c     **** {
 178              		.loc 1 82 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 24
ARM GAS  /tmp/ccO7pihI.s 			page 7


 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182 0000 00B5     		push	{lr}
 183              	.LCFI4:
 184              		.cfi_def_cfa_offset 4
 185              		.cfi_offset 14, -4
 186 0002 87B0     		sub	sp, sp, #28
 187              	.LCFI5:
 188              		.cfi_def_cfa_offset 32
  83:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig;
  84:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
  85:Src/tim.c     **** 
  86:Src/tim.c     ****   htim2.Instance = TIM2;
 189              		.loc 1 86 0
 190 0004 1948     		ldr	r0, .L19
 191 0006 4FF08043 		mov	r3, #1073741824
 192 000a 0360     		str	r3, [r0]
  87:Src/tim.c     ****   htim2.Init.Prescaler = 42000-1;
 193              		.loc 1 87 0
 194 000c 4AF20F43 		movw	r3, #41999
 195 0010 4360     		str	r3, [r0, #4]
  88:Src/tim.c     ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 196              		.loc 1 88 0
 197 0012 0023     		movs	r3, #0
 198 0014 8360     		str	r3, [r0, #8]
  89:Src/tim.c     ****   htim2.Init.Period = 50000-1;
 199              		.loc 1 89 0
 200 0016 4CF24F32 		movw	r2, #49999
 201 001a C260     		str	r2, [r0, #12]
  90:Src/tim.c     ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 202              		.loc 1 90 0
 203 001c 0361     		str	r3, [r0, #16]
  91:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 204              		.loc 1 91 0
 205 001e FFF7FEFF 		bl	HAL_TIM_Base_Init
 206              	.LVL15:
 207 0022 98B9     		cbnz	r0, .L16
 208              	.L12:
  92:Src/tim.c     ****   {
  93:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  94:Src/tim.c     ****   }
  95:Src/tim.c     **** 
  96:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 209              		.loc 1 96 0
 210 0024 06A9     		add	r1, sp, #24
 211 0026 4FF48053 		mov	r3, #4096
 212 002a 41F8103D 		str	r3, [r1, #-16]!
  97:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 213              		.loc 1 97 0
 214 002e 0F48     		ldr	r0, .L19
 215 0030 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 216              	.LVL16:
 217 0034 78B9     		cbnz	r0, .L17
 218              	.L13:
  98:Src/tim.c     ****   {
  99:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 100:Src/tim.c     ****   }
 101:Src/tim.c     **** 
ARM GAS  /tmp/ccO7pihI.s 			page 8


 102:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 219              		.loc 1 102 0
 220 0036 0023     		movs	r3, #0
 221 0038 0093     		str	r3, [sp]
 103:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 222              		.loc 1 103 0
 223 003a 0193     		str	r3, [sp, #4]
 104:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 224              		.loc 1 104 0
 225 003c 6946     		mov	r1, sp
 226 003e 0B48     		ldr	r0, .L19
 227 0040 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 228              	.LVL17:
 229 0044 60B9     		cbnz	r0, .L18
 230              	.L11:
 105:Src/tim.c     ****   {
 106:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 107:Src/tim.c     ****   }
 108:Src/tim.c     **** 
 109:Src/tim.c     **** }
 231              		.loc 1 109 0
 232 0046 07B0     		add	sp, sp, #28
 233              	.LCFI6:
 234              		.cfi_remember_state
 235              		.cfi_def_cfa_offset 4
 236              		@ sp needed
 237 0048 5DF804FB 		ldr	pc, [sp], #4
 238              	.L16:
 239              	.LCFI7:
 240              		.cfi_restore_state
  93:Src/tim.c     ****   }
 241              		.loc 1 93 0
 242 004c 5D21     		movs	r1, #93
 243 004e 0848     		ldr	r0, .L19+4
 244 0050 FFF7FEFF 		bl	_Error_Handler
 245              	.LVL18:
 246 0054 E6E7     		b	.L12
 247              	.L17:
  99:Src/tim.c     ****   }
 248              		.loc 1 99 0
 249 0056 6321     		movs	r1, #99
 250 0058 0548     		ldr	r0, .L19+4
 251 005a FFF7FEFF 		bl	_Error_Handler
 252              	.LVL19:
 253 005e EAE7     		b	.L13
 254              	.L18:
 106:Src/tim.c     ****   }
 255              		.loc 1 106 0
 256 0060 6A21     		movs	r1, #106
 257 0062 0348     		ldr	r0, .L19+4
 258 0064 FFF7FEFF 		bl	_Error_Handler
 259              	.LVL20:
 260              		.loc 1 109 0
 261 0068 EDE7     		b	.L11
 262              	.L20:
 263 006a 00BF     		.align	2
 264              	.L19:
ARM GAS  /tmp/ccO7pihI.s 			page 9


 265 006c 00000000 		.word	htim2
 266 0070 00000000 		.word	.LC0
 267              		.cfi_endproc
 268              	.LFE680:
 270              		.section	.text.MX_TIM3_Init,"ax",%progbits
 271              		.align	1
 272              		.global	MX_TIM3_Init
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv4-sp-d16
 278              	MX_TIM3_Init:
 279              	.LFB681:
 110:Src/tim.c     **** /* TIM3 init function */
 111:Src/tim.c     **** void MX_TIM3_Init(void)
 112:Src/tim.c     **** {
 280              		.loc 1 112 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 24
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284 0000 00B5     		push	{lr}
 285              	.LCFI8:
 286              		.cfi_def_cfa_offset 4
 287              		.cfi_offset 14, -4
 288 0002 87B0     		sub	sp, sp, #28
 289              	.LCFI9:
 290              		.cfi_def_cfa_offset 32
 113:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 114:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 115:Src/tim.c     **** 
 116:Src/tim.c     ****   htim3.Instance = TIM3;
 291              		.loc 1 116 0
 292 0004 1848     		ldr	r0, .L29
 293 0006 194B     		ldr	r3, .L29+4
 294 0008 0360     		str	r3, [r0]
 117:Src/tim.c     ****   htim3.Init.Prescaler = 42000-1;
 295              		.loc 1 117 0
 296 000a 4AF20F43 		movw	r3, #41999
 297 000e 4360     		str	r3, [r0, #4]
 118:Src/tim.c     ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 298              		.loc 1 118 0
 299 0010 0023     		movs	r3, #0
 300 0012 8360     		str	r3, [r0, #8]
 119:Src/tim.c     ****   htim3.Init.Period = 100-1;
 301              		.loc 1 119 0
 302 0014 6322     		movs	r2, #99
 303 0016 C260     		str	r2, [r0, #12]
 120:Src/tim.c     ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 304              		.loc 1 120 0
 305 0018 0361     		str	r3, [r0, #16]
 121:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 306              		.loc 1 121 0
 307 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 308              	.LVL21:
 309 001e 98B9     		cbnz	r0, .L26
 310              	.L22:
 122:Src/tim.c     ****   {
ARM GAS  /tmp/ccO7pihI.s 			page 10


 123:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 124:Src/tim.c     ****   }
 125:Src/tim.c     **** 
 126:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 311              		.loc 1 126 0
 312 0020 06A9     		add	r1, sp, #24
 313 0022 4FF48053 		mov	r3, #4096
 314 0026 41F8103D 		str	r3, [r1, #-16]!
 127:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 315              		.loc 1 127 0
 316 002a 0F48     		ldr	r0, .L29
 317 002c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 318              	.LVL22:
 319 0030 78B9     		cbnz	r0, .L27
 320              	.L23:
 128:Src/tim.c     ****   {
 129:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 130:Src/tim.c     ****   }
 131:Src/tim.c     **** 
 132:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 321              		.loc 1 132 0
 322 0032 0023     		movs	r3, #0
 323 0034 0093     		str	r3, [sp]
 133:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 324              		.loc 1 133 0
 325 0036 0193     		str	r3, [sp, #4]
 134:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 326              		.loc 1 134 0
 327 0038 6946     		mov	r1, sp
 328 003a 0B48     		ldr	r0, .L29
 329 003c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 330              	.LVL23:
 331 0040 60B9     		cbnz	r0, .L28
 332              	.L21:
 135:Src/tim.c     ****   {
 136:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 137:Src/tim.c     ****   }
 138:Src/tim.c     **** 
 139:Src/tim.c     **** }
 333              		.loc 1 139 0
 334 0042 07B0     		add	sp, sp, #28
 335              	.LCFI10:
 336              		.cfi_remember_state
 337              		.cfi_def_cfa_offset 4
 338              		@ sp needed
 339 0044 5DF804FB 		ldr	pc, [sp], #4
 340              	.L26:
 341              	.LCFI11:
 342              		.cfi_restore_state
 123:Src/tim.c     ****   }
 343              		.loc 1 123 0
 344 0048 7B21     		movs	r1, #123
 345 004a 0948     		ldr	r0, .L29+8
 346 004c FFF7FEFF 		bl	_Error_Handler
 347              	.LVL24:
 348 0050 E6E7     		b	.L22
 349              	.L27:
ARM GAS  /tmp/ccO7pihI.s 			page 11


 129:Src/tim.c     ****   }
 350              		.loc 1 129 0
 351 0052 8121     		movs	r1, #129
 352 0054 0648     		ldr	r0, .L29+8
 353 0056 FFF7FEFF 		bl	_Error_Handler
 354              	.LVL25:
 355 005a EAE7     		b	.L23
 356              	.L28:
 136:Src/tim.c     ****   }
 357              		.loc 1 136 0
 358 005c 8821     		movs	r1, #136
 359 005e 0448     		ldr	r0, .L29+8
 360 0060 FFF7FEFF 		bl	_Error_Handler
 361              	.LVL26:
 362              		.loc 1 139 0
 363 0064 EDE7     		b	.L21
 364              	.L30:
 365 0066 00BF     		.align	2
 366              	.L29:
 367 0068 00000000 		.word	htim3
 368 006c 00040040 		.word	1073742848
 369 0070 00000000 		.word	.LC0
 370              		.cfi_endproc
 371              	.LFE681:
 373              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 374              		.align	1
 375              		.global	HAL_TIM_Base_MspInit
 376              		.syntax unified
 377              		.thumb
 378              		.thumb_func
 379              		.fpu fpv4-sp-d16
 381              	HAL_TIM_Base_MspInit:
 382              	.LFB682:
 140:Src/tim.c     **** 
 141:Src/tim.c     **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 142:Src/tim.c     **** {
 383              		.loc 1 142 0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 8
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 387              	.LVL27:
 388 0000 00B5     		push	{lr}
 389              	.LCFI12:
 390              		.cfi_def_cfa_offset 4
 391              		.cfi_offset 14, -4
 392 0002 83B0     		sub	sp, sp, #12
 393              	.LCFI13:
 394              		.cfi_def_cfa_offset 16
 143:Src/tim.c     **** 
 144:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM2)
 395              		.loc 1 144 0
 396 0004 0368     		ldr	r3, [r0]
 397 0006 B3F1804F 		cmp	r3, #1073741824
 398 000a 05D0     		beq	.L35
 145:Src/tim.c     ****   {
 146:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 0 */
 147:Src/tim.c     **** 
ARM GAS  /tmp/ccO7pihI.s 			page 12


 148:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 0 */
 149:Src/tim.c     ****     /* TIM2 clock enable */
 150:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_ENABLE();
 151:Src/tim.c     **** 
 152:Src/tim.c     ****     /* TIM2 interrupt Init */
 153:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 154:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
 155:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 156:Src/tim.c     **** 
 157:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 1 */
 158:Src/tim.c     ****   }
 159:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM3)
 399              		.loc 1 159 0
 400 000c 174A     		ldr	r2, .L37
 401 000e 9342     		cmp	r3, r2
 402 0010 17D0     		beq	.L36
 403              	.LVL28:
 404              	.L31:
 160:Src/tim.c     ****   {
 161:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 0 */
 162:Src/tim.c     **** 
 163:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 0 */
 164:Src/tim.c     ****     /* TIM3 clock enable */
 165:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_ENABLE();
 166:Src/tim.c     **** 
 167:Src/tim.c     ****     /* TIM3 interrupt Init */
 168:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 169:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM3_IRQn);
 170:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 171:Src/tim.c     **** 
 172:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 1 */
 173:Src/tim.c     ****   }
 174:Src/tim.c     **** }
 405              		.loc 1 174 0
 406 0012 03B0     		add	sp, sp, #12
 407              	.LCFI14:
 408              		.cfi_remember_state
 409              		.cfi_def_cfa_offset 4
 410              		@ sp needed
 411 0014 5DF804FB 		ldr	pc, [sp], #4
 412              	.LVL29:
 413              	.L35:
 414              	.LCFI15:
 415              		.cfi_restore_state
 416              	.LBB12:
 150:Src/tim.c     **** 
 417              		.loc 1 150 0
 418 0018 0021     		movs	r1, #0
 419 001a 0091     		str	r1, [sp]
 420 001c 03F50E33 		add	r3, r3, #145408
 421 0020 1A6C     		ldr	r2, [r3, #64]
 422 0022 42F00102 		orr	r2, r2, #1
 423 0026 1A64     		str	r2, [r3, #64]
 424 0028 1B6C     		ldr	r3, [r3, #64]
 425 002a 03F00103 		and	r3, r3, #1
 426 002e 0093     		str	r3, [sp]
 427 0030 009B     		ldr	r3, [sp]
ARM GAS  /tmp/ccO7pihI.s 			page 13


 428              	.LBE12:
 153:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
 429              		.loc 1 153 0
 430 0032 0A46     		mov	r2, r1
 431 0034 1C20     		movs	r0, #28
 432              	.LVL30:
 433 0036 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 434              	.LVL31:
 154:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 435              		.loc 1 154 0
 436 003a 1C20     		movs	r0, #28
 437 003c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 438              	.LVL32:
 439 0040 E7E7     		b	.L31
 440              	.LVL33:
 441              	.L36:
 442              	.LBB13:
 165:Src/tim.c     **** 
 443              		.loc 1 165 0
 444 0042 0021     		movs	r1, #0
 445 0044 0191     		str	r1, [sp, #4]
 446 0046 0A4B     		ldr	r3, .L37+4
 447 0048 1A6C     		ldr	r2, [r3, #64]
 448 004a 42F00202 		orr	r2, r2, #2
 449 004e 1A64     		str	r2, [r3, #64]
 450 0050 1B6C     		ldr	r3, [r3, #64]
 451 0052 03F00203 		and	r3, r3, #2
 452 0056 0193     		str	r3, [sp, #4]
 453 0058 019B     		ldr	r3, [sp, #4]
 454              	.LBE13:
 168:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM3_IRQn);
 455              		.loc 1 168 0
 456 005a 0A46     		mov	r2, r1
 457 005c 1D20     		movs	r0, #29
 458              	.LVL34:
 459 005e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 460              	.LVL35:
 169:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 461              		.loc 1 169 0
 462 0062 1D20     		movs	r0, #29
 463 0064 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 464              	.LVL36:
 465              		.loc 1 174 0
 466 0068 D3E7     		b	.L31
 467              	.L38:
 468 006a 00BF     		.align	2
 469              	.L37:
 470 006c 00040040 		.word	1073742848
 471 0070 00380240 		.word	1073887232
 472              		.cfi_endproc
 473              	.LFE682:
 475              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 476              		.align	1
 477              		.global	HAL_TIM_Base_MspDeInit
 478              		.syntax unified
 479              		.thumb
 480              		.thumb_func
ARM GAS  /tmp/ccO7pihI.s 			page 14


 481              		.fpu fpv4-sp-d16
 483              	HAL_TIM_Base_MspDeInit:
 484              	.LFB683:
 175:Src/tim.c     **** 
 176:Src/tim.c     **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 177:Src/tim.c     **** {
 485              		.loc 1 177 0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 0
 488              		@ frame_needed = 0, uses_anonymous_args = 0
 489              	.LVL37:
 490 0000 08B5     		push	{r3, lr}
 491              	.LCFI16:
 492              		.cfi_def_cfa_offset 8
 493              		.cfi_offset 3, -8
 494              		.cfi_offset 14, -4
 178:Src/tim.c     **** 
 179:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM2)
 495              		.loc 1 179 0
 496 0002 0368     		ldr	r3, [r0]
 497 0004 B3F1804F 		cmp	r3, #1073741824
 498 0008 03D0     		beq	.L43
 180:Src/tim.c     ****   {
 181:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
 182:Src/tim.c     **** 
 183:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 0 */
 184:Src/tim.c     ****     /* Peripheral clock disable */
 185:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_DISABLE();
 186:Src/tim.c     **** 
 187:Src/tim.c     ****     /* TIM2 interrupt Deinit */
 188:Src/tim.c     ****     HAL_NVIC_DisableIRQ(TIM2_IRQn);
 189:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 190:Src/tim.c     **** 
 191:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 1 */
 192:Src/tim.c     ****   }
 193:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM3)
 499              		.loc 1 193 0
 500 000a 0B4A     		ldr	r2, .L45
 501 000c 9342     		cmp	r3, r2
 502 000e 09D0     		beq	.L44
 503              	.LVL38:
 504              	.L39:
 194:Src/tim.c     ****   {
 195:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 0 */
 196:Src/tim.c     **** 
 197:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 0 */
 198:Src/tim.c     ****     /* Peripheral clock disable */
 199:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_DISABLE();
 200:Src/tim.c     **** 
 201:Src/tim.c     ****     /* TIM3 interrupt Deinit */
 202:Src/tim.c     ****     HAL_NVIC_DisableIRQ(TIM3_IRQn);
 203:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 204:Src/tim.c     **** 
 205:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 1 */
 206:Src/tim.c     ****   }
 207:Src/tim.c     **** } 
 505              		.loc 1 207 0
ARM GAS  /tmp/ccO7pihI.s 			page 15


 506 0010 08BD     		pop	{r3, pc}
 507              	.LVL39:
 508              	.L43:
 185:Src/tim.c     **** 
 509              		.loc 1 185 0
 510 0012 0A4A     		ldr	r2, .L45+4
 511 0014 136C     		ldr	r3, [r2, #64]
 512 0016 23F00103 		bic	r3, r3, #1
 513 001a 1364     		str	r3, [r2, #64]
 188:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 514              		.loc 1 188 0
 515 001c 1C20     		movs	r0, #28
 516              	.LVL40:
 517 001e FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 518              	.LVL41:
 519 0022 F5E7     		b	.L39
 520              	.LVL42:
 521              	.L44:
 199:Src/tim.c     **** 
 522              		.loc 1 199 0
 523 0024 02F50D32 		add	r2, r2, #144384
 524 0028 136C     		ldr	r3, [r2, #64]
 525 002a 23F00203 		bic	r3, r3, #2
 526 002e 1364     		str	r3, [r2, #64]
 202:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 527              		.loc 1 202 0
 528 0030 1D20     		movs	r0, #29
 529              	.LVL43:
 530 0032 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 531              	.LVL44:
 532              		.loc 1 207 0
 533 0036 EBE7     		b	.L39
 534              	.L46:
 535              		.align	2
 536              	.L45:
 537 0038 00040040 		.word	1073742848
 538 003c 00380240 		.word	1073887232
 539              		.cfi_endproc
 540              	.LFE683:
 542              		.comm	htim3,60,4
 543              		.comm	htim2,60,4
 544              		.section	.data.tim2,"aw",%progbits
 545              		.align	2
 546              		.set	.LANCHOR0,. + 0
 549              	tim2:
 550 0000 05000000 		.word	5
 551              		.section	.rodata.MX_TIM2_Init.str1.4,"aMS",%progbits,1
 552              		.align	2
 553              	.LC0:
 554 0000 5372632F 		.ascii	"Src/tim.c\000"
 554      74696D2E 
 554      6300
 555              		.text
 556              	.Letext0:
 557              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 558              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 559              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/ccO7pihI.s 			page 16


 560              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 561              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 562              		.file 8 "/usr/arm-none-eabi/include/sys/lock.h"
 563              		.file 9 "/usr/arm-none-eabi/include/sys/_types.h"
 564              		.file 10 "/usr/lib/gcc/arm-none-eabi/7.3.0/include/stddef.h"
 565              		.file 11 "/usr/arm-none-eabi/include/sys/reent.h"
 566              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 567              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 568              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 569              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 570              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 571              		.file 17 "Inc/crc_16.h"
 572              		.file 18 "Inc/robotronik_protocol.h"
 573              		.file 19 "Inc/usart.h"
 574              		.file 20 "/usr/arm-none-eabi/include/stdlib.h"
 575              		.file 21 "Inc/main.h"
 576              		.file 22 "Inc/game_defs.h"
 577              		.file 23 "Inc/strategy.h"
 578              		.file 24 "Inc/tim.h"
 579              		.file 25 "Drivers/VL53L0X/API/vl53l0x_types.h"
 580              		.file 26 "Drivers/VL53L0X/API/vl53l0x_device.h"
 581              		.file 27 "Drivers/VL53L0X/API/vl53l0x_def.h"
 582              		.file 28 "Drivers/VL53L0X/Platform/vl53l0x_platform.h"
 583              		.file 29 "Inc/tof.h"
 584              		.file 30 "Inc/obstacle.h"
 585              		.file 31 "Inc/map.h"
 586              		.file 32 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_dma.h"
 587              		.file 33 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 588              		.file 34 "Inc/system.h"
ARM GAS  /tmp/ccO7pihI.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
     /tmp/ccO7pihI.s:18     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccO7pihI.s:25     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccO7pihI.s:160    .text.HAL_TIM_PeriodElapsedCallback:0000000000000080 $d
                            *COM*:000000000000003c htim2
                            *COM*:000000000000003c htim3
     /tmp/ccO7pihI.s:169    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccO7pihI.s:176    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccO7pihI.s:265    .text.MX_TIM2_Init:000000000000006c $d
     /tmp/ccO7pihI.s:271    .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/ccO7pihI.s:278    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/ccO7pihI.s:367    .text.MX_TIM3_Init:0000000000000068 $d
     /tmp/ccO7pihI.s:374    .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/ccO7pihI.s:381    .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/ccO7pihI.s:470    .text.HAL_TIM_Base_MspInit:000000000000006c $d
     /tmp/ccO7pihI.s:476    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/ccO7pihI.s:483    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/ccO7pihI.s:537    .text.HAL_TIM_Base_MspDeInit:0000000000000038 $d
     /tmp/ccO7pihI.s:545    .data.tim2:0000000000000000 $d
     /tmp/ccO7pihI.s:549    .data.tim2:0000000000000000 tim2
     /tmp/ccO7pihI.s:552    .rodata.MX_TIM2_Init.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
stop
ToF_Poll_Measurement_Data
ToF_Get_Last_Range
Update_Obstacles
tof
me
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
_Error_Handler
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_NVIC_DisableIRQ
