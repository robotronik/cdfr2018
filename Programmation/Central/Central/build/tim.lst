ARM GAS  /tmp/ccLeq0FU.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_TIM_PeriodElapsedCallback
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_TIM_PeriodElapsedCallback:
  26              	.LFB679:
  27              		.file 1 "Src/tim.c"
   1:Src/tim.c     **** /**
   2:Src/tim.c     ****   ******************************************************************************
   3:Src/tim.c     ****   * File Name          : TIM.c
   4:Src/tim.c     ****   * Description        : This file provides code for the configuration
   5:Src/tim.c     ****   *                      of the TIM instances.
   6:Src/tim.c     ****   ******************************************************************************
   7:Src/tim.c     ****   ** This notice applies to any and all portions of this file
   8:Src/tim.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/tim.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/tim.c     ****   * inserted by the user or by software development tools
  11:Src/tim.c     ****   * are owned by their respective copyright owners.
  12:Src/tim.c     ****   *
  13:Src/tim.c     ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/tim.c     ****   *
  15:Src/tim.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/tim.c     ****   * are permitted provided that the following conditions are met:
  17:Src/tim.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/tim.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/tim.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/tim.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/tim.c     ****   *      and/or other materials provided with the distribution.
  22:Src/tim.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/tim.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/tim.c     ****   *      without specific prior written permission.
  25:Src/tim.c     ****   *
  26:Src/tim.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/tim.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/tim.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/tim.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/tim.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/tim.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /tmp/ccLeq0FU.s 			page 2


  32:Src/tim.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/tim.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/tim.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/tim.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/tim.c     ****   *
  37:Src/tim.c     ****   ******************************************************************************
  38:Src/tim.c     ****   */
  39:Src/tim.c     **** 
  40:Src/tim.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/tim.c     **** #include "tim.h"
  42:Src/tim.c     **** 
  43:Src/tim.c     **** /* USER CODE BEGIN 0 */
  44:Src/tim.c     **** static int tim2 = 4+1;
  45:Src/tim.c     **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim){
  28              		.loc 1 45 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  46:Src/tim.c     ****   if(htim->Instance == htim2.Instance){
  38              		.loc 1 46 0
  39 0002 0268     		ldr	r2, [r0]
  40 0004 064B     		ldr	r3, .L5
  41 0006 1B68     		ldr	r3, [r3]
  42 0008 9A42     		cmp	r2, r3
  43 000a 00D0     		beq	.L4
  44              	.LVL1:
  45              	.L1:
  47:Src/tim.c     ****     if(!(--tim2)){
  48:Src/tim.c     ****       stop();
  49:Src/tim.c     ****     }
  50:Src/tim.c     ****   }
  51:Src/tim.c     **** }
  46              		.loc 1 51 0
  47 000c 08BD     		pop	{r3, pc}
  48              	.LVL2:
  49              	.L4:
  47:Src/tim.c     ****     if(!(--tim2)){
  50              		.loc 1 47 0
  51 000e 054A     		ldr	r2, .L5+4
  52 0010 1368     		ldr	r3, [r2]
  53 0012 013B     		subs	r3, r3, #1
  54 0014 1360     		str	r3, [r2]
  55 0016 002B     		cmp	r3, #0
  56 0018 F8D1     		bne	.L1
  48:Src/tim.c     ****     }
  57              		.loc 1 48 0
  58 001a FFF7FEFF 		bl	stop
  59              	.LVL3:
  60              		.loc 1 51 0
  61 001e F5E7     		b	.L1
  62              	.L6:
ARM GAS  /tmp/ccLeq0FU.s 			page 3


  63              		.align	2
  64              	.L5:
  65 0020 00000000 		.word	htim2
  66 0024 00000000 		.word	.LANCHOR0
  67              		.cfi_endproc
  68              	.LFE679:
  70              		.section	.text.MX_TIM1_Init,"ax",%progbits
  71              		.align	1
  72              		.global	MX_TIM1_Init
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
  76              		.fpu fpv4-sp-d16
  78              	MX_TIM1_Init:
  79              	.LFB680:
  52:Src/tim.c     **** /* USER CODE END 0 */
  53:Src/tim.c     **** 
  54:Src/tim.c     **** TIM_HandleTypeDef htim1;
  55:Src/tim.c     **** TIM_HandleTypeDef htim2;
  56:Src/tim.c     **** 
  57:Src/tim.c     **** /* TIM1 init function */
  58:Src/tim.c     **** void MX_TIM1_Init(void)
  59:Src/tim.c     **** {
  80              		.loc 1 59 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 24
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84 0000 00B5     		push	{lr}
  85              	.LCFI1:
  86              		.cfi_def_cfa_offset 4
  87              		.cfi_offset 14, -4
  88 0002 87B0     		sub	sp, sp, #28
  89              	.LCFI2:
  90              		.cfi_def_cfa_offset 32
  60:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig;
  61:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
  62:Src/tim.c     **** 
  63:Src/tim.c     ****   htim1.Instance = TIM1;
  91              		.loc 1 63 0
  92 0004 1848     		ldr	r0, .L15
  93 0006 194B     		ldr	r3, .L15+4
  94 0008 0360     		str	r3, [r0]
  64:Src/tim.c     ****   htim1.Init.Prescaler = 42000-1;
  95              		.loc 1 64 0
  96 000a 4AF20F43 		movw	r3, #41999
  97 000e 4360     		str	r3, [r0, #4]
  65:Src/tim.c     ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
  98              		.loc 1 65 0
  99 0010 0023     		movs	r3, #0
 100 0012 8360     		str	r3, [r0, #8]
  66:Src/tim.c     ****   htim1.Init.Period = 100-1;
 101              		.loc 1 66 0
 102 0014 6322     		movs	r2, #99
 103 0016 C260     		str	r2, [r0, #12]
  67:Src/tim.c     ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 104              		.loc 1 67 0
 105 0018 0361     		str	r3, [r0, #16]
ARM GAS  /tmp/ccLeq0FU.s 			page 4


  68:Src/tim.c     ****   htim1.Init.RepetitionCounter = 0;
 106              		.loc 1 68 0
 107 001a 4361     		str	r3, [r0, #20]
  69:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 108              		.loc 1 69 0
 109 001c FFF7FEFF 		bl	HAL_TIM_Base_Init
 110              	.LVL4:
 111 0020 98B9     		cbnz	r0, .L12
 112              	.L8:
  70:Src/tim.c     ****   {
  71:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  72:Src/tim.c     ****   }
  73:Src/tim.c     **** 
  74:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 113              		.loc 1 74 0
 114 0022 06A9     		add	r1, sp, #24
 115 0024 4FF48053 		mov	r3, #4096
 116 0028 41F8103D 		str	r3, [r1, #-16]!
  75:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 117              		.loc 1 75 0
 118 002c 0E48     		ldr	r0, .L15
 119 002e FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 120              	.LVL5:
 121 0032 78B9     		cbnz	r0, .L13
 122              	.L9:
  76:Src/tim.c     ****   {
  77:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  78:Src/tim.c     ****   }
  79:Src/tim.c     **** 
  80:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 123              		.loc 1 80 0
 124 0034 0023     		movs	r3, #0
 125 0036 0093     		str	r3, [sp]
  81:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 126              		.loc 1 81 0
 127 0038 0193     		str	r3, [sp, #4]
  82:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 128              		.loc 1 82 0
 129 003a 6946     		mov	r1, sp
 130 003c 0A48     		ldr	r0, .L15
 131 003e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 132              	.LVL6:
 133 0042 60B9     		cbnz	r0, .L14
 134              	.L7:
  83:Src/tim.c     ****   {
  84:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  85:Src/tim.c     ****   }
  86:Src/tim.c     **** 
  87:Src/tim.c     **** }
 135              		.loc 1 87 0
 136 0044 07B0     		add	sp, sp, #28
 137              	.LCFI3:
 138              		.cfi_remember_state
 139              		.cfi_def_cfa_offset 4
 140              		@ sp needed
 141 0046 5DF804FB 		ldr	pc, [sp], #4
 142              	.L12:
ARM GAS  /tmp/ccLeq0FU.s 			page 5


 143              	.LCFI4:
 144              		.cfi_restore_state
  71:Src/tim.c     ****   }
 145              		.loc 1 71 0
 146 004a 4721     		movs	r1, #71
 147 004c 0848     		ldr	r0, .L15+8
 148 004e FFF7FEFF 		bl	_Error_Handler
 149              	.LVL7:
 150 0052 E6E7     		b	.L8
 151              	.L13:
  77:Src/tim.c     ****   }
 152              		.loc 1 77 0
 153 0054 4D21     		movs	r1, #77
 154 0056 0648     		ldr	r0, .L15+8
 155 0058 FFF7FEFF 		bl	_Error_Handler
 156              	.LVL8:
 157 005c EAE7     		b	.L9
 158              	.L14:
  84:Src/tim.c     ****   }
 159              		.loc 1 84 0
 160 005e 5421     		movs	r1, #84
 161 0060 0348     		ldr	r0, .L15+8
 162 0062 FFF7FEFF 		bl	_Error_Handler
 163              	.LVL9:
 164              		.loc 1 87 0
 165 0066 EDE7     		b	.L7
 166              	.L16:
 167              		.align	2
 168              	.L15:
 169 0068 00000000 		.word	htim1
 170 006c 00000140 		.word	1073807360
 171 0070 00000000 		.word	.LC0
 172              		.cfi_endproc
 173              	.LFE680:
 175              		.section	.text.MX_TIM2_Init,"ax",%progbits
 176              		.align	1
 177              		.global	MX_TIM2_Init
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu fpv4-sp-d16
 183              	MX_TIM2_Init:
 184              	.LFB681:
  88:Src/tim.c     **** /* TIM2 init function */
  89:Src/tim.c     **** void MX_TIM2_Init(void)
  90:Src/tim.c     **** {
 185              		.loc 1 90 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 24
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189 0000 00B5     		push	{lr}
 190              	.LCFI5:
 191              		.cfi_def_cfa_offset 4
 192              		.cfi_offset 14, -4
 193 0002 87B0     		sub	sp, sp, #28
 194              	.LCFI6:
 195              		.cfi_def_cfa_offset 32
ARM GAS  /tmp/ccLeq0FU.s 			page 6


  91:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig;
  92:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
  93:Src/tim.c     **** 
  94:Src/tim.c     ****   htim2.Instance = TIM2;
 196              		.loc 1 94 0
 197 0004 1948     		ldr	r0, .L25
 198 0006 4FF08043 		mov	r3, #1073741824
 199 000a 0360     		str	r3, [r0]
  95:Src/tim.c     ****   htim2.Init.Prescaler = 42000-1;
 200              		.loc 1 95 0
 201 000c 4AF20F43 		movw	r3, #41999
 202 0010 4360     		str	r3, [r0, #4]
  96:Src/tim.c     ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 203              		.loc 1 96 0
 204 0012 0023     		movs	r3, #0
 205 0014 8360     		str	r3, [r0, #8]
  97:Src/tim.c     ****   htim2.Init.Period = 45000-1;
 206              		.loc 1 97 0
 207 0016 4AF6C772 		movw	r2, #44999
 208 001a C260     		str	r2, [r0, #12]
  98:Src/tim.c     ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 209              		.loc 1 98 0
 210 001c 0361     		str	r3, [r0, #16]
  99:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 211              		.loc 1 99 0
 212 001e FFF7FEFF 		bl	HAL_TIM_Base_Init
 213              	.LVL10:
 214 0022 98B9     		cbnz	r0, .L22
 215              	.L18:
 100:Src/tim.c     ****   {
 101:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 102:Src/tim.c     ****   }
 103:Src/tim.c     **** 
 104:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 216              		.loc 1 104 0
 217 0024 06A9     		add	r1, sp, #24
 218 0026 4FF48053 		mov	r3, #4096
 219 002a 41F8103D 		str	r3, [r1, #-16]!
 105:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 220              		.loc 1 105 0
 221 002e 0F48     		ldr	r0, .L25
 222 0030 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 223              	.LVL11:
 224 0034 78B9     		cbnz	r0, .L23
 225              	.L19:
 106:Src/tim.c     ****   {
 107:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 108:Src/tim.c     ****   }
 109:Src/tim.c     **** 
 110:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 226              		.loc 1 110 0
 227 0036 0023     		movs	r3, #0
 228 0038 0093     		str	r3, [sp]
 111:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 229              		.loc 1 111 0
 230 003a 0193     		str	r3, [sp, #4]
 112:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
ARM GAS  /tmp/ccLeq0FU.s 			page 7


 231              		.loc 1 112 0
 232 003c 6946     		mov	r1, sp
 233 003e 0B48     		ldr	r0, .L25
 234 0040 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 235              	.LVL12:
 236 0044 60B9     		cbnz	r0, .L24
 237              	.L17:
 113:Src/tim.c     ****   {
 114:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 115:Src/tim.c     ****   }
 116:Src/tim.c     **** 
 117:Src/tim.c     **** }
 238              		.loc 1 117 0
 239 0046 07B0     		add	sp, sp, #28
 240              	.LCFI7:
 241              		.cfi_remember_state
 242              		.cfi_def_cfa_offset 4
 243              		@ sp needed
 244 0048 5DF804FB 		ldr	pc, [sp], #4
 245              	.L22:
 246              	.LCFI8:
 247              		.cfi_restore_state
 101:Src/tim.c     ****   }
 248              		.loc 1 101 0
 249 004c 6521     		movs	r1, #101
 250 004e 0848     		ldr	r0, .L25+4
 251 0050 FFF7FEFF 		bl	_Error_Handler
 252              	.LVL13:
 253 0054 E6E7     		b	.L18
 254              	.L23:
 107:Src/tim.c     ****   }
 255              		.loc 1 107 0
 256 0056 6B21     		movs	r1, #107
 257 0058 0548     		ldr	r0, .L25+4
 258 005a FFF7FEFF 		bl	_Error_Handler
 259              	.LVL14:
 260 005e EAE7     		b	.L19
 261              	.L24:
 114:Src/tim.c     ****   }
 262              		.loc 1 114 0
 263 0060 7221     		movs	r1, #114
 264 0062 0348     		ldr	r0, .L25+4
 265 0064 FFF7FEFF 		bl	_Error_Handler
 266              	.LVL15:
 267              		.loc 1 117 0
 268 0068 EDE7     		b	.L17
 269              	.L26:
 270 006a 00BF     		.align	2
 271              	.L25:
 272 006c 00000000 		.word	htim2
 273 0070 00000000 		.word	.LC0
 274              		.cfi_endproc
 275              	.LFE681:
 277              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 278              		.align	1
 279              		.global	HAL_TIM_Base_MspInit
 280              		.syntax unified
ARM GAS  /tmp/ccLeq0FU.s 			page 8


 281              		.thumb
 282              		.thumb_func
 283              		.fpu fpv4-sp-d16
 285              	HAL_TIM_Base_MspInit:
 286              	.LFB682:
 118:Src/tim.c     **** 
 119:Src/tim.c     **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 120:Src/tim.c     **** {
 287              		.loc 1 120 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 8
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291              	.LVL16:
 292 0000 00B5     		push	{lr}
 293              	.LCFI9:
 294              		.cfi_def_cfa_offset 4
 295              		.cfi_offset 14, -4
 296 0002 83B0     		sub	sp, sp, #12
 297              	.LCFI10:
 298              		.cfi_def_cfa_offset 16
 121:Src/tim.c     **** 
 122:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM1)
 299              		.loc 1 122 0
 300 0004 0368     		ldr	r3, [r0]
 301 0006 194A     		ldr	r2, .L33
 302 0008 9342     		cmp	r3, r2
 303 000a 05D0     		beq	.L31
 123:Src/tim.c     ****   {
 124:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 0 */
 125:Src/tim.c     **** 
 126:Src/tim.c     ****   /* USER CODE END TIM1_MspInit 0 */
 127:Src/tim.c     ****     /* TIM1 clock enable */
 128:Src/tim.c     ****     __HAL_RCC_TIM1_CLK_ENABLE();
 129:Src/tim.c     **** 
 130:Src/tim.c     ****     /* TIM1 interrupt Init */
 131:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM1_CC_IRQn, 1, 0);
 132:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM1_CC_IRQn);
 133:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 134:Src/tim.c     **** 
 135:Src/tim.c     ****   /* USER CODE END TIM1_MspInit 1 */
 136:Src/tim.c     ****   }
 137:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM2)
 304              		.loc 1 137 0
 305 000c B3F1804F 		cmp	r3, #1073741824
 306 0010 16D0     		beq	.L32
 307              	.LVL17:
 308              	.L27:
 138:Src/tim.c     ****   {
 139:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 0 */
 140:Src/tim.c     **** 
 141:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 0 */
 142:Src/tim.c     ****     /* TIM2 clock enable */
 143:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_ENABLE();
 144:Src/tim.c     **** 
 145:Src/tim.c     ****     /* TIM2 interrupt Init */
 146:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 147:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
ARM GAS  /tmp/ccLeq0FU.s 			page 9


 148:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 149:Src/tim.c     **** 
 150:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 1 */
 151:Src/tim.c     ****   }
 152:Src/tim.c     **** }
 309              		.loc 1 152 0
 310 0012 03B0     		add	sp, sp, #12
 311              	.LCFI11:
 312              		.cfi_remember_state
 313              		.cfi_def_cfa_offset 4
 314              		@ sp needed
 315 0014 5DF804FB 		ldr	pc, [sp], #4
 316              	.LVL18:
 317              	.L31:
 318              	.LCFI12:
 319              		.cfi_restore_state
 320              	.LBB2:
 128:Src/tim.c     **** 
 321              		.loc 1 128 0
 322 0018 0022     		movs	r2, #0
 323 001a 0092     		str	r2, [sp]
 324 001c 144B     		ldr	r3, .L33+4
 325 001e 596C     		ldr	r1, [r3, #68]
 326 0020 41F00101 		orr	r1, r1, #1
 327 0024 5964     		str	r1, [r3, #68]
 328 0026 5B6C     		ldr	r3, [r3, #68]
 329 0028 03F00103 		and	r3, r3, #1
 330 002c 0093     		str	r3, [sp]
 331 002e 009B     		ldr	r3, [sp]
 332              	.LBE2:
 131:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM1_CC_IRQn);
 333              		.loc 1 131 0
 334 0030 0121     		movs	r1, #1
 335 0032 1B20     		movs	r0, #27
 336              	.LVL19:
 337 0034 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 338              	.LVL20:
 132:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 339              		.loc 1 132 0
 340 0038 1B20     		movs	r0, #27
 341 003a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 342              	.LVL21:
 343 003e E8E7     		b	.L27
 344              	.LVL22:
 345              	.L32:
 346              	.LBB3:
 143:Src/tim.c     **** 
 347              		.loc 1 143 0
 348 0040 0021     		movs	r1, #0
 349 0042 0191     		str	r1, [sp, #4]
 350 0044 03F50E33 		add	r3, r3, #145408
 351 0048 1A6C     		ldr	r2, [r3, #64]
 352 004a 42F00102 		orr	r2, r2, #1
 353 004e 1A64     		str	r2, [r3, #64]
 354 0050 1B6C     		ldr	r3, [r3, #64]
 355 0052 03F00103 		and	r3, r3, #1
 356 0056 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccLeq0FU.s 			page 10


 357 0058 019B     		ldr	r3, [sp, #4]
 358              	.LBE3:
 146:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
 359              		.loc 1 146 0
 360 005a 0A46     		mov	r2, r1
 361 005c 1C20     		movs	r0, #28
 362              	.LVL23:
 363 005e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 364              	.LVL24:
 147:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 365              		.loc 1 147 0
 366 0062 1C20     		movs	r0, #28
 367 0064 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 368              	.LVL25:
 369              		.loc 1 152 0
 370 0068 D3E7     		b	.L27
 371              	.L34:
 372 006a 00BF     		.align	2
 373              	.L33:
 374 006c 00000140 		.word	1073807360
 375 0070 00380240 		.word	1073887232
 376              		.cfi_endproc
 377              	.LFE682:
 379              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 380              		.align	1
 381              		.global	HAL_TIM_Base_MspDeInit
 382              		.syntax unified
 383              		.thumb
 384              		.thumb_func
 385              		.fpu fpv4-sp-d16
 387              	HAL_TIM_Base_MspDeInit:
 388              	.LFB683:
 153:Src/tim.c     **** 
 154:Src/tim.c     **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 155:Src/tim.c     **** {
 389              		.loc 1 155 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              	.LVL26:
 394 0000 08B5     		push	{r3, lr}
 395              	.LCFI13:
 396              		.cfi_def_cfa_offset 8
 397              		.cfi_offset 3, -8
 398              		.cfi_offset 14, -4
 156:Src/tim.c     **** 
 157:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM1)
 399              		.loc 1 157 0
 400 0002 0368     		ldr	r3, [r0]
 401 0004 0C4A     		ldr	r2, .L41
 402 0006 9342     		cmp	r3, r2
 403 0008 03D0     		beq	.L39
 158:Src/tim.c     ****   {
 159:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
 160:Src/tim.c     **** 
 161:Src/tim.c     ****   /* USER CODE END TIM1_MspDeInit 0 */
 162:Src/tim.c     ****     /* Peripheral clock disable */
ARM GAS  /tmp/ccLeq0FU.s 			page 11


 163:Src/tim.c     ****     __HAL_RCC_TIM1_CLK_DISABLE();
 164:Src/tim.c     **** 
 165:Src/tim.c     ****     /* TIM1 interrupt Deinit */
 166:Src/tim.c     ****     HAL_NVIC_DisableIRQ(TIM1_CC_IRQn);
 167:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 168:Src/tim.c     **** 
 169:Src/tim.c     ****   /* USER CODE END TIM1_MspDeInit 1 */
 170:Src/tim.c     ****   }
 171:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM2)
 404              		.loc 1 171 0
 405 000a B3F1804F 		cmp	r3, #1073741824
 406 000e 0AD0     		beq	.L40
 407              	.LVL27:
 408              	.L35:
 172:Src/tim.c     ****   {
 173:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
 174:Src/tim.c     **** 
 175:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 0 */
 176:Src/tim.c     ****     /* Peripheral clock disable */
 177:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_DISABLE();
 178:Src/tim.c     **** 
 179:Src/tim.c     ****     /* TIM2 interrupt Deinit */
 180:Src/tim.c     ****     HAL_NVIC_DisableIRQ(TIM2_IRQn);
 181:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 182:Src/tim.c     **** 
 183:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 1 */
 184:Src/tim.c     ****   }
 185:Src/tim.c     **** } 
 409              		.loc 1 185 0
 410 0010 08BD     		pop	{r3, pc}
 411              	.LVL28:
 412              	.L39:
 163:Src/tim.c     **** 
 413              		.loc 1 163 0
 414 0012 02F59C32 		add	r2, r2, #79872
 415 0016 536C     		ldr	r3, [r2, #68]
 416 0018 23F00103 		bic	r3, r3, #1
 417 001c 5364     		str	r3, [r2, #68]
 166:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 418              		.loc 1 166 0
 419 001e 1B20     		movs	r0, #27
 420              	.LVL29:
 421 0020 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 422              	.LVL30:
 423 0024 F4E7     		b	.L35
 424              	.LVL31:
 425              	.L40:
 177:Src/tim.c     **** 
 426              		.loc 1 177 0
 427 0026 054A     		ldr	r2, .L41+4
 428 0028 136C     		ldr	r3, [r2, #64]
 429 002a 23F00103 		bic	r3, r3, #1
 430 002e 1364     		str	r3, [r2, #64]
 180:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 431              		.loc 1 180 0
 432 0030 1C20     		movs	r0, #28
 433              	.LVL32:
ARM GAS  /tmp/ccLeq0FU.s 			page 12


 434 0032 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 435              	.LVL33:
 436              		.loc 1 185 0
 437 0036 EBE7     		b	.L35
 438              	.L42:
 439              		.align	2
 440              	.L41:
 441 0038 00000140 		.word	1073807360
 442 003c 00380240 		.word	1073887232
 443              		.cfi_endproc
 444              	.LFE683:
 446              		.comm	htim2,60,4
 447              		.comm	htim1,60,4
 448              		.section	.data.tim2,"aw",%progbits
 449              		.align	2
 450              		.set	.LANCHOR0,. + 0
 453              	tim2:
 454 0000 05000000 		.word	5
 455              		.section	.rodata.MX_TIM1_Init.str1.4,"aMS",%progbits,1
 456              		.align	2
 457              	.LC0:
 458 0000 5372632F 		.ascii	"Src/tim.c\000"
 458      74696D2E 
 458      6300
 459              		.text
 460              	.Letext0:
 461              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 462              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 463              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 464              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 465              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 466              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 467              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 468              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.3.0/include/stddef.h"
 469              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 470              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 471              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 472              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 473              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 474              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 475              		.file 16 "Inc/crc_16.h"
 476              		.file 17 "Inc/robotronik_protocol.h"
 477              		.file 18 "Inc/usart.h"
 478              		.file 19 "/usr/arm-none-eabi/include/stdlib.h"
 479              		.file 20 "Inc/tim.h"
 480              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_dma.h"
 481              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 482              		.file 23 "Inc/system.h"
ARM GAS  /tmp/ccLeq0FU.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
     /tmp/ccLeq0FU.s:18     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccLeq0FU.s:25     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccLeq0FU.s:65     .text.HAL_TIM_PeriodElapsedCallback:0000000000000020 $d
                            *COM*:000000000000003c htim2
     /tmp/ccLeq0FU.s:71     .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccLeq0FU.s:78     .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccLeq0FU.s:169    .text.MX_TIM1_Init:0000000000000068 $d
                            *COM*:000000000000003c htim1
     /tmp/ccLeq0FU.s:176    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccLeq0FU.s:183    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccLeq0FU.s:272    .text.MX_TIM2_Init:000000000000006c $d
     /tmp/ccLeq0FU.s:278    .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/ccLeq0FU.s:285    .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/ccLeq0FU.s:374    .text.HAL_TIM_Base_MspInit:000000000000006c $d
     /tmp/ccLeq0FU.s:380    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/ccLeq0FU.s:387    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/ccLeq0FU.s:441    .text.HAL_TIM_Base_MspDeInit:0000000000000038 $d
     /tmp/ccLeq0FU.s:449    .data.tim2:0000000000000000 $d
     /tmp/ccLeq0FU.s:453    .data.tim2:0000000000000000 tim2
     /tmp/ccLeq0FU.s:456    .rodata.MX_TIM1_Init.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
stop
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
_Error_Handler
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_NVIC_DisableIRQ
