ARM GAS  /tmp/ccI28C7B.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"remote_call.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.RC_Copy_Format,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	RC_Copy_Format:
  25              	.LFB0:
  26              		.file 1 "Src/remote_call.c"
   1:Src/remote_call.c **** /**
   2:Src/remote_call.c ****  * Library Remote Call Client/Server @Robotronik
   3:Src/remote_call.c ****  * remote_call.c
   4:Src/remote_call.c ****  * This library is meant to run a remote call server between ÂµC. 
   5:Src/remote_call.c ****  *
   6:Src/remote_call.c ****  * Copyright 2018 Antonin Hirschy
   7:Src/remote_call.c ****  *
   8:Src/remote_call.c ****  * This program is free software: you can redistribute it and/or modify
   9:Src/remote_call.c ****  * it under the terms of the GNU General Public License as published by
  10:Src/remote_call.c ****  * the Free Software Foundation, either version 3 of the License, or
  11:Src/remote_call.c ****  * (at your option) any later version.
  12:Src/remote_call.c ****  * 
  13:Src/remote_call.c ****  * This program is distributed in the hope that it will be useful,
  14:Src/remote_call.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  15:Src/remote_call.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  16:Src/remote_call.c ****  * GNU General Public License for more details.
  17:Src/remote_call.c ****  *
  18:Src/remote_call.c ****  * You should have received a copy of the GNU General Public License
  19:Src/remote_call.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  20:Src/remote_call.c ****  */
  21:Src/remote_call.c **** #include "remote_call.h"
  22:Src/remote_call.c **** 
  23:Src/remote_call.c **** //Error code
  24:Src/remote_call.c **** static int err = 0;
  25:Src/remote_call.c **** 
  26:Src/remote_call.c **** //Private functions
  27:Src/remote_call.c **** static int RC_Copy_Format(char *dst, const char fmt[]);
  28:Src/remote_call.c **** static int RC_Pack_Vars(const char *fmt, uint8_t *out, int out_len,  va_list *args);
  29:Src/remote_call.c **** static int RC_Unpack_Vars(const char *fmt, uint8_t *in, int in_len,  va_list *args);
  30:Src/remote_call.c **** 
  31:Src/remote_call.c **** //Macros
  32:Src/remote_call.c **** #define CHECK_ID(id) ((id >= 0) && (id < RC_NB_FUNCTIONS))
ARM GAS  /tmp/ccI28C7B.s 			page 2


  33:Src/remote_call.c **** 
  34:Src/remote_call.c **** #define RC_CHECK_TYPE(type, count)					\
  35:Src/remote_call.c ****   ({									\
  36:Src/remote_call.c ****     int valid = 1;							\
  37:Src/remote_call.c ****     switch(type){							\
  38:Src/remote_call.c ****     case RC_UINT8_T: count += sizeof(uint8_t); break;			\
  39:Src/remote_call.c ****     case RC_UINT16_T: count += sizeof(uint16_t); break;			\
  40:Src/remote_call.c ****     case RC_UINT32_T: count += sizeof(uint32_t); break;			\
  41:Src/remote_call.c ****     case RC_INT: count += sizeof(int); break;				\
  42:Src/remote_call.c ****     case RC_FLOAT: count += sizeof(float); break;			\
  43:Src/remote_call.c ****     case RC_DOUBLE: count += sizeof(double); break;			\
  44:Src/remote_call.c ****     case RC_STRING: count += RC_STR_SIZE; break;			\
  45:Src/remote_call.c ****     default: valid = 0; break;						\
  46:Src/remote_call.c ****     }									\
  47:Src/remote_call.c ****     valid;								\
  48:Src/remote_call.c ****   })
  49:Src/remote_call.c **** 
  50:Src/remote_call.c **** #ifdef RC_LITTLE_ENDIAN
  51:Src/remote_call.c **** #define RC_PACK_VAR_START(var) ((uint8_t*) (&var))
  52:Src/remote_call.c **** #define RC_UNPACK_VAR_START(args, type, promoted) ((uint8_t*) va_arg(args, promoted))
  53:Src/remote_call.c **** #define RC_VAR_GET_BYTE(ptr) *(ptr++)
  54:Src/remote_call.c **** #else
  55:Src/remote_call.c **** #define RC_PACK_VAR_START(var) ((uint8_t*) (&var) + (sizeof(var) - 1))
  56:Src/remote_call.c **** #define RC_UNPACK_VAR_START(args, type, promoted) (((uint8_t*) va_arg(args, promoted)) + (sizeof(ty
  57:Src/remote_call.c **** #define RC_VAR_GET_BYTE(ptr) *(ptr--)
  58:Src/remote_call.c **** #endif
  59:Src/remote_call.c **** 
  60:Src/remote_call.c **** #define RC_PACK_VAR(args, type, promoted, out, out_len, success)	\
  61:Src/remote_call.c ****   {									\
  62:Src/remote_call.c ****     type var = (type) va_arg(args, promoted);				\
  63:Src/remote_call.c ****     uint8_t *byte  = RC_PACK_VAR_START(var);				\
  64:Src/remote_call.c ****     int _end = out_len - sizeof(var);					\
  65:Src/remote_call.c ****     success = (_end >= 0);						\
  66:Src/remote_call.c ****     									\
  67:Src/remote_call.c ****     if(success){							\
  68:Src/remote_call.c ****       for(; out_len > _end; out_len--){					\
  69:Src/remote_call.c **** 	*(out++) = RC_VAR_GET_BYTE(byte);				\
  70:Src/remote_call.c ****       }									\
  71:Src/remote_call.c ****     }									\
  72:Src/remote_call.c ****   }								
  73:Src/remote_call.c **** 
  74:Src/remote_call.c **** #define RC_PACK_STRING(args, out, out_len, success)			\
  75:Src/remote_call.c ****   {									\
  76:Src/remote_call.c ****     char *str = va_arg(args, char*);					\
  77:Src/remote_call.c ****     char c = '*';							\
  78:Src/remote_call.c ****     int count = RC_STR_SIZE;						\
  79:Src/remote_call.c ****     /* Copy a character from str to out until the end of str or out is reached */ \
  80:Src/remote_call.c ****     while(out_len != 0 && (c = *(out++) = *(str++)) != '\0' && (--count)){ \
  81:Src/remote_call.c ****       out_len--;							\
  82:Src/remote_call.c ****     }									\
  83:Src/remote_call.c ****     /* if the last character was '\0', out_len must be decremented */	\
  84:Src/remote_call.c ****     (c == '\0')?(out_len--, success = 1):(success = 0);			\
  85:Src/remote_call.c ****   }						
  86:Src/remote_call.c **** 
  87:Src/remote_call.c **** #define RC_UNPACK_VAR(args, type, promoted, in, in_len, success)	\
  88:Src/remote_call.c ****   {									\
  89:Src/remote_call.c ****     uint8_t *w_ptr = RC_UNPACK_VAR_START(args, type, promoted);		\
ARM GAS  /tmp/ccI28C7B.s 			page 3


  90:Src/remote_call.c ****     int _end = in_len - sizeof(type);					\
  91:Src/remote_call.c ****     success = (_end >= 0);						\
  92:Src/remote_call.c **** 									\
  93:Src/remote_call.c ****     if(success){							\
  94:Src/remote_call.c ****       for(; in_len > _end; in_len--){					\
  95:Src/remote_call.c **** 	RC_VAR_GET_BYTE(w_ptr) = *(in++);				\
  96:Src/remote_call.c ****       }									\
  97:Src/remote_call.c ****     }									\
  98:Src/remote_call.c ****   }
  99:Src/remote_call.c **** 
 100:Src/remote_call.c **** #define RC_UNPACK_STRING(args, in, in_len, success)			\
 101:Src/remote_call.c ****   {									\
 102:Src/remote_call.c ****     char *w_ptr = va_arg(args, char*);					\
 103:Src/remote_call.c ****     char c = '*';							\
 104:Src/remote_call.c ****     int count = RC_STR_SIZE;						\
 105:Src/remote_call.c ****     while(in_len != 0 && (c = *(w_ptr++) = *(in++)) != '\0' && (--count)){ \
 106:Src/remote_call.c ****       in_len--;								\
 107:Src/remote_call.c ****     }									\
 108:Src/remote_call.c ****     (c == '\0')?(in_len--, success = 1):(success = 0);			\
 109:Src/remote_call.c ****   }								
 110:Src/remote_call.c **** 
 111:Src/remote_call.c **** static int RC_Copy_Format(char *dst, const char fmt[]){
  27              		.loc 1 111 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  33 0000 30B4     		push	{r4, r5}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 5, -4
  38              	.LVL1:
 112:Src/remote_call.c ****   int i;
 113:Src/remote_call.c ****   char c;
 114:Src/remote_call.c ****   int max_size = 0;
  39              		.loc 1 114 0
  40 0002 0025     		movs	r5, #0
 115:Src/remote_call.c ****   
 116:Src/remote_call.c ****   for(i = 0; i < RC_FMT_SIZE && (c = dst[i] = fmt[i]) != '\0' && RC_CHECK_TYPE(c, max_size); i++);
  41              		.loc 1 116 0
  42 0004 2B46     		mov	r3, r5
  43 0006 01E0     		b	.L2
  44              	.LVL2:
  45              	.L7:
  46              	.LBB2:
  47              		.loc 1 116 0 is_stmt 0 discriminator 8
  48 0008 0135     		adds	r5, r5, #1
  49              	.LVL3:
  50              	.L12:
  51              	.LBE2:
  52              		.loc 1 116 0 discriminator 21
  53 000a 0133     		adds	r3, r3, #1
  54              	.LVL4:
  55              	.L2:
  56              		.loc 1 116 0 discriminator 1
ARM GAS  /tmp/ccI28C7B.s 			page 4


  57 000c 072B     		cmp	r3, #7
  58 000e 7FDC     		bgt	.L3
  59              		.loc 1 116 0 discriminator 3
  60 0010 CA5C     		ldrb	r2, [r1, r3]	@ zero_extendqisi2
  61              	.LVL5:
  62 0012 C254     		strb	r2, [r0, r3]
  63              	.LVL6:
  64 0014 002A     		cmp	r2, #0
  65 0016 7BD0     		beq	.L3
  66              	.LVL7:
  67              	.LBB3:
  68              		.loc 1 116 0 discriminator 4
  69 0018 A2F14204 		sub	r4, r2, #66
  70 001c 332C     		cmp	r4, #51
  71 001e 77D8     		bhi	.L3
  72 0020 0FF2040C 		adr	ip, .L5
  73 0024 5CF824F0 		ldr	pc, [ip, r4, lsl #2]
  74              		.p2align 2
  75              	.L5:
  76 0028 F9000000 		.word	.L4+1
  77 002c 11010000 		.word	.L3+1
  78 0030 11010000 		.word	.L3+1
  79 0034 11010000 		.word	.L3+1
  80 0038 09010000 		.word	.L6+1
  81 003c 11010000 		.word	.L3+1
  82 0040 11010000 		.word	.L3+1
  83 0044 11010000 		.word	.L3+1
  84 0048 11010000 		.word	.L3+1
  85 004c 11010000 		.word	.L3+1
  86 0050 11010000 		.word	.L3+1
  87 0054 11010000 		.word	.L3+1
  88 0058 11010000 		.word	.L3+1
  89 005c 11010000 		.word	.L3+1
  90 0060 11010000 		.word	.L3+1
  91 0064 11010000 		.word	.L3+1
  92 0068 11010000 		.word	.L3+1
  93 006c 11010000 		.word	.L3+1
  94 0070 11010000 		.word	.L3+1
  95 0074 11010000 		.word	.L3+1
  96 0078 11010000 		.word	.L3+1
  97 007c 11010000 		.word	.L3+1
  98 0080 11010000 		.word	.L3+1
  99 0084 11010000 		.word	.L3+1
 100 0088 11010000 		.word	.L3+1
 101 008c 11010000 		.word	.L3+1
 102 0090 11010000 		.word	.L3+1
 103 0094 11010000 		.word	.L3+1
 104 0098 11010000 		.word	.L3+1
 105 009c 11010000 		.word	.L3+1
 106 00a0 11010000 		.word	.L3+1
 107 00a4 11010000 		.word	.L3+1
 108 00a8 09000000 		.word	.L7+1
 109 00ac 11010000 		.word	.L3+1
 110 00b0 11010000 		.word	.L3+1
 111 00b4 11010000 		.word	.L3+1
 112 00b8 05010000 		.word	.L8+1
 113 00bc 11010000 		.word	.L3+1
ARM GAS  /tmp/ccI28C7B.s 			page 5


 114 00c0 11010000 		.word	.L3+1
 115 00c4 01010000 		.word	.L9+1
 116 00c8 11010000 		.word	.L3+1
 117 00cc 11010000 		.word	.L3+1
 118 00d0 11010000 		.word	.L3+1
 119 00d4 11010000 		.word	.L3+1
 120 00d8 11010000 		.word	.L3+1
 121 00dc 11010000 		.word	.L3+1
 122 00e0 11010000 		.word	.L3+1
 123 00e4 11010000 		.word	.L3+1
 124 00e8 11010000 		.word	.L3+1
 125 00ec 0D010000 		.word	.L10+1
 126 00f0 11010000 		.word	.L3+1
 127 00f4 FD000000 		.word	.L11+1
 128              		.p2align 1
 129              	.L4:
 130              		.loc 1 116 0 discriminator 6
 131 00f8 0235     		adds	r5, r5, #2
 132              	.LVL8:
 133 00fa 86E7     		b	.L12
 134              	.L11:
 135              		.loc 1 116 0 discriminator 12
 136 00fc 0435     		adds	r5, r5, #4
 137              	.LVL9:
 138 00fe 84E7     		b	.L12
 139              	.L9:
 140              		.loc 1 116 0 discriminator 10
 141 0100 0435     		adds	r5, r5, #4
 142              	.LVL10:
 143 0102 82E7     		b	.L12
 144              	.L8:
 145              		.loc 1 116 0 discriminator 9
 146 0104 0435     		adds	r5, r5, #4
 147              	.LVL11:
 148 0106 80E7     		b	.L12
 149              	.L6:
 150              		.loc 1 116 0 discriminator 7
 151 0108 0835     		adds	r5, r5, #8
 152              	.LVL12:
 153 010a 7EE7     		b	.L12
 154              	.L10:
 155              		.loc 1 116 0 discriminator 11
 156 010c 4035     		adds	r5, r5, #64
 157              	.LVL13:
 158 010e 7CE7     		b	.L12
 159              	.LVL14:
 160              	.L3:
 161              	.LBE3:
 117:Src/remote_call.c ****   
 118:Src/remote_call.c ****   if(c != '\0' || max_size > RC_MAX_DATA){
 162              		.loc 1 118 0 is_stmt 1
 163 0110 22B9     		cbnz	r2, .L13
 164              		.loc 1 118 0 is_stmt 0 discriminator 1
 165 0112 F92D     		cmp	r5, #249
 166 0114 02DC     		bgt	.L13
 119:Src/remote_call.c ****     err = RC_WRONG_FORMAT;
 120:Src/remote_call.c ****     return -1;
ARM GAS  /tmp/ccI28C7B.s 			page 6


 121:Src/remote_call.c ****   }
 122:Src/remote_call.c **** 
 123:Src/remote_call.c ****   return 0;
 167              		.loc 1 123 0 is_stmt 1
 168 0116 0020     		movs	r0, #0
 169              	.LVL15:
 170              	.L1:
 124:Src/remote_call.c **** }
 171              		.loc 1 124 0
 172 0118 30BC     		pop	{r4, r5}
 173              	.LCFI1:
 174              		.cfi_remember_state
 175              		.cfi_restore 5
 176              		.cfi_restore 4
 177              		.cfi_def_cfa_offset 0
 178              	.LVL16:
 179 011a 7047     		bx	lr
 180              	.LVL17:
 181              	.L13:
 182              	.LCFI2:
 183              		.cfi_restore_state
 119:Src/remote_call.c ****     err = RC_WRONG_FORMAT;
 184              		.loc 1 119 0
 185 011c 024B     		ldr	r3, .L17
 186              	.LVL18:
 187 011e 0122     		movs	r2, #1
 188              	.LVL19:
 189 0120 1A60     		str	r2, [r3]
 120:Src/remote_call.c ****   }
 190              		.loc 1 120 0
 191 0122 4FF0FF30 		mov	r0, #-1
 192              	.LVL20:
 193 0126 F7E7     		b	.L1
 194              	.L18:
 195              		.align	2
 196              	.L17:
 197 0128 00000000 		.word	.LANCHOR0
 198              		.cfi_endproc
 199              	.LFE0:
 201              		.global	__aeabi_d2f
 202              		.section	.text.RC_Pack_Vars,"ax",%progbits
 203              		.align	1
 204              		.syntax unified
 205              		.thumb
 206              		.thumb_func
 207              		.fpu fpv4-sp-d16
 209              	RC_Pack_Vars:
 210              	.LFB1:
 125:Src/remote_call.c **** 
 126:Src/remote_call.c **** static int RC_Pack_Vars(const char *fmt, uint8_t *out, int out_len,  va_list *args){
 211              		.loc 1 126 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 8
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              	.LVL21:
 216 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 217              	.LCFI3:
ARM GAS  /tmp/ccI28C7B.s 			page 7


 218              		.cfi_def_cfa_offset 24
 219              		.cfi_offset 4, -24
 220              		.cfi_offset 5, -20
 221              		.cfi_offset 6, -16
 222              		.cfi_offset 7, -12
 223              		.cfi_offset 8, -8
 224              		.cfi_offset 14, -4
 225 0004 82B0     		sub	sp, sp, #8
 226              	.LCFI4:
 227              		.cfi_def_cfa_offset 32
 228 0006 0D46     		mov	r5, r1
 229 0008 9046     		mov	r8, r2
 230 000a 1F46     		mov	r7, r3
 231              	.LVL22:
 127:Src/remote_call.c ****   int out_len_tmp = out_len;
 128:Src/remote_call.c **** 
 129:Src/remote_call.c ****   char c;
 130:Src/remote_call.c ****   int success = 1;
 131:Src/remote_call.c ****   while((c = *(fmt++)) != '\0' && success){
 232              		.loc 1 131 0
 233 000c 1446     		mov	r4, r2
 130:Src/remote_call.c ****   while((c = *(fmt++)) != '\0' && success){
 234              		.loc 1 130 0
 235 000e 0122     		movs	r2, #1
 236              	.LVL23:
 237              		.loc 1 131 0
 238 0010 0BE0     		b	.L20
 239              	.LVL24:
 240              	.L64:
 241              	.LBB4:
 132:Src/remote_call.c ****     if(c == RC_UINT8_T){
 133:Src/remote_call.c ****       RC_PACK_VAR(*args, uint8_t, int, out, out_len, success);
 242              		.loc 1 133 0
 243 0012 3B68     		ldr	r3, [r7]
 244              	.LVL25:
 245 0014 1A1D     		adds	r2, r3, #4
 246              	.LVL26:
 247 0016 3A60     		str	r2, [r7]
 248              	.LVL27:
 249 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 250 001a 8DF80030 		strb	r3, [sp]
 251              	.LVL28:
 252 001e 631E     		subs	r3, r4, #1
 253              	.LVL29:
 254 0020 DA43     		mvns	r2, r3
 255 0022 D20F     		lsrs	r2, r2, #31
 256              	.LVL30:
 257 0024 002B     		cmp	r3, #0
 258 0026 2FDA     		bge	.L63
 259              	.LVL31:
 260              	.L25:
 261              	.LBE4:
 262              	.LBB5:
 134:Src/remote_call.c ****     }
 135:Src/remote_call.c ****     else if(c == RC_UINT16_T){
 136:Src/remote_call.c ****       RC_PACK_VAR(*args, uint16_t, int, out, out_len, success);
 137:Src/remote_call.c ****     }
ARM GAS  /tmp/ccI28C7B.s 			page 8


 138:Src/remote_call.c ****     else if(c == RC_UINT32_T){
 139:Src/remote_call.c ****       RC_PACK_VAR(*args, uint32_t, int, out, out_len, success);      
 140:Src/remote_call.c ****     }
 141:Src/remote_call.c ****     else if(c == RC_INT){
 142:Src/remote_call.c ****       RC_PACK_VAR(*args, int, int, out, out_len, success);
 143:Src/remote_call.c ****     }
 144:Src/remote_call.c ****     else if(c == RC_FLOAT){
 145:Src/remote_call.c ****       RC_PACK_VAR(*args, float, double, out, out_len, success);
 146:Src/remote_call.c ****     }
 147:Src/remote_call.c ****     else if(c == RC_DOUBLE){
 148:Src/remote_call.c ****       RC_PACK_VAR(*args, double, double, out, out_len, success);      
 149:Src/remote_call.c ****     }
 150:Src/remote_call.c ****     else if(c == RC_STRING){
 151:Src/remote_call.c ****       RC_PACK_STRING(*args, out, out_len, success);
 263              		.loc 1 151 0
 264 0028 3046     		mov	r0, r6
 265              	.LVL32:
 266              	.L20:
 267              	.LBE5:
 131:Src/remote_call.c ****     if(c == RC_UINT8_T){
 268              		.loc 1 131 0
 269 002a 461C     		adds	r6, r0, #1
 270              	.LVL33:
 271 002c 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 272              	.LVL34:
 273 002e 002B     		cmp	r3, #0
 274 0030 00F0B180 		beq	.L51
 131:Src/remote_call.c ****     if(c == RC_UINT8_T){
 275              		.loc 1 131 0 is_stmt 0 discriminator 1
 276 0034 002A     		cmp	r2, #0
 277 0036 00F0AE80 		beq	.L51
 132:Src/remote_call.c ****     if(c == RC_UINT8_T){
 278              		.loc 1 132 0 is_stmt 1
 279 003a 622B     		cmp	r3, #98
 280 003c E9D0     		beq	.L64
 135:Src/remote_call.c ****       RC_PACK_VAR(*args, uint16_t, int, out, out_len, success);
 281              		.loc 1 135 0
 282 003e 422B     		cmp	r3, #66
 283 0040 24D0     		beq	.L65
 138:Src/remote_call.c ****       RC_PACK_VAR(*args, uint32_t, int, out, out_len, success);      
 284              		.loc 1 138 0
 285 0042 752B     		cmp	r3, #117
 286 0044 37D0     		beq	.L66
 141:Src/remote_call.c ****       RC_PACK_VAR(*args, int, int, out, out_len, success);
 287              		.loc 1 141 0
 288 0046 692B     		cmp	r3, #105
 289 0048 49D0     		beq	.L67
 144:Src/remote_call.c ****       RC_PACK_VAR(*args, float, double, out, out_len, success);
 290              		.loc 1 144 0
 291 004a 662B     		cmp	r3, #102
 292 004c 5BD0     		beq	.L68
 147:Src/remote_call.c ****       RC_PACK_VAR(*args, double, double, out, out_len, success);      
 293              		.loc 1 147 0
 294 004e 462B     		cmp	r3, #70
 295 0050 7DD1     		bne	.L42
 296              	.LBB6:
 148:Src/remote_call.c ****     }
ARM GAS  /tmp/ccI28C7B.s 			page 9


 297              		.loc 1 148 0
 298 0052 3B68     		ldr	r3, [r7]
 299              	.LVL35:
 300 0054 0733     		adds	r3, r3, #7
 301 0056 23F00703 		bic	r3, r3, #7
 302 005a 03F10802 		add	r2, r3, #8
 303              	.LVL36:
 304 005e 3A60     		str	r2, [r7]
 305              	.LVL37:
 306 0060 D3E90023 		ldrd	r2, [r3]
 307 0064 CDE90023 		strd	r2, [sp]
 308              	.LVL38:
 309 0068 A4F10800 		sub	r0, r4, #8
 310              	.LVL39:
 311 006c C243     		mvns	r2, r0
 312 006e D20F     		lsrs	r2, r2, #31
 313              	.LVL40:
 314 0070 0028     		cmp	r0, #0
 315 0072 D9DB     		blt	.L25
 316 0074 6B46     		mov	r3, sp
 317 0076 67E0     		b	.L43
 318              	.LVL41:
 319              	.L24:
 320              	.LBE6:
 321              	.LBB7:
 133:Src/remote_call.c ****     }
 322              		.loc 1 133 0 discriminator 2
 323 0078 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 324 007a 2870     		strb	r0, [r5]
 325 007c 013C     		subs	r4, r4, #1
 326              	.LVL42:
 327 007e 0131     		adds	r1, r1, #1
 328              	.LVL43:
 329 0080 0135     		adds	r5, r5, #1
 330              	.LVL44:
 331              	.L22:
 133:Src/remote_call.c ****     }
 332              		.loc 1 133 0 is_stmt 0 discriminator 1
 333 0082 9C42     		cmp	r4, r3
 334 0084 F8DC     		bgt	.L24
 335 0086 CFE7     		b	.L25
 336              	.LVL45:
 337              	.L63:
 133:Src/remote_call.c ****     }
 338              		.loc 1 133 0
 339 0088 6946     		mov	r1, sp
 340 008a FAE7     		b	.L22
 341              	.LVL46:
 342              	.L65:
 343              	.LBE7:
 344              	.LBB8:
 136:Src/remote_call.c ****     }
 345              		.loc 1 136 0 is_stmt 1
 346 008c 3B68     		ldr	r3, [r7]
 347              	.LVL47:
 348 008e 1A1D     		adds	r2, r3, #4
 349              	.LVL48:
ARM GAS  /tmp/ccI28C7B.s 			page 10


 350 0090 3A60     		str	r2, [r7]
 351              	.LVL49:
 352 0092 1B88     		ldrh	r3, [r3]
 353 0094 ADF80030 		strh	r3, [sp]	@ movhi
 354              	.LVL50:
 355 0098 A31E     		subs	r3, r4, #2
 356              	.LVL51:
 357 009a DA43     		mvns	r2, r3
 358 009c D20F     		lsrs	r2, r2, #31
 359              	.LVL52:
 360 009e 002B     		cmp	r3, #0
 361 00a0 C2DB     		blt	.L25
 362 00a2 6946     		mov	r1, sp
 363 00a4 04E0     		b	.L27
 364              	.LVL53:
 365              	.L29:
 136:Src/remote_call.c ****     }
 366              		.loc 1 136 0 is_stmt 0 discriminator 2
 367 00a6 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 368 00a8 2870     		strb	r0, [r5]
 369 00aa 013C     		subs	r4, r4, #1
 370              	.LVL54:
 371 00ac 0131     		adds	r1, r1, #1
 372              	.LVL55:
 373 00ae 0135     		adds	r5, r5, #1
 374              	.LVL56:
 375              	.L27:
 136:Src/remote_call.c ****     }
 376              		.loc 1 136 0 discriminator 1
 377 00b0 9C42     		cmp	r4, r3
 378 00b2 F8DC     		bgt	.L29
 379 00b4 B8E7     		b	.L25
 380              	.LVL57:
 381              	.L66:
 382              	.LBE8:
 383              	.LBB9:
 139:Src/remote_call.c ****     }
 384              		.loc 1 139 0 is_stmt 1
 385 00b6 3B68     		ldr	r3, [r7]
 386              	.LVL58:
 387 00b8 1A1D     		adds	r2, r3, #4
 388              	.LVL59:
 389 00ba 3A60     		str	r2, [r7]
 390              	.LVL60:
 391 00bc 1B68     		ldr	r3, [r3]
 392 00be 0093     		str	r3, [sp]
 393              	.LVL61:
 394 00c0 211F     		subs	r1, r4, #4
 395              	.LVL62:
 396 00c2 CA43     		mvns	r2, r1
 397 00c4 D20F     		lsrs	r2, r2, #31
 398              	.LVL63:
 399 00c6 0029     		cmp	r1, #0
 400 00c8 AEDB     		blt	.L25
 401 00ca 6B46     		mov	r3, sp
 402 00cc 04E0     		b	.L31
 403              	.LVL64:
ARM GAS  /tmp/ccI28C7B.s 			page 11


 404              	.L33:
 139:Src/remote_call.c ****     }
 405              		.loc 1 139 0 is_stmt 0 discriminator 2
 406 00ce 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 407 00d0 2870     		strb	r0, [r5]
 408 00d2 013C     		subs	r4, r4, #1
 409              	.LVL65:
 410 00d4 0133     		adds	r3, r3, #1
 411              	.LVL66:
 412 00d6 0135     		adds	r5, r5, #1
 413              	.LVL67:
 414              	.L31:
 139:Src/remote_call.c ****     }
 415              		.loc 1 139 0 discriminator 1
 416 00d8 8C42     		cmp	r4, r1
 417 00da F8DC     		bgt	.L33
 418 00dc A4E7     		b	.L25
 419              	.LVL68:
 420              	.L67:
 421              	.LBE9:
 422              	.LBB10:
 142:Src/remote_call.c ****     }
 423              		.loc 1 142 0 is_stmt 1
 424 00de 3B68     		ldr	r3, [r7]
 425              	.LVL69:
 426 00e0 1A1D     		adds	r2, r3, #4
 427              	.LVL70:
 428 00e2 3A60     		str	r2, [r7]
 429              	.LVL71:
 430 00e4 1B68     		ldr	r3, [r3]
 431 00e6 0093     		str	r3, [sp]
 432              	.LVL72:
 433 00e8 211F     		subs	r1, r4, #4
 434              	.LVL73:
 435 00ea CA43     		mvns	r2, r1
 436 00ec D20F     		lsrs	r2, r2, #31
 437              	.LVL74:
 438 00ee 0029     		cmp	r1, #0
 439 00f0 9ADB     		blt	.L25
 440 00f2 6B46     		mov	r3, sp
 441 00f4 04E0     		b	.L35
 442              	.LVL75:
 443              	.L37:
 142:Src/remote_call.c ****     }
 444              		.loc 1 142 0 is_stmt 0 discriminator 2
 445 00f6 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 446 00f8 2870     		strb	r0, [r5]
 447 00fa 013C     		subs	r4, r4, #1
 448              	.LVL76:
 449 00fc 0133     		adds	r3, r3, #1
 450              	.LVL77:
 451 00fe 0135     		adds	r5, r5, #1
 452              	.LVL78:
 453              	.L35:
 142:Src/remote_call.c ****     }
 454              		.loc 1 142 0 discriminator 1
 455 0100 8C42     		cmp	r4, r1
ARM GAS  /tmp/ccI28C7B.s 			page 12


 456 0102 F8DC     		bgt	.L37
 457 0104 90E7     		b	.L25
 458              	.LVL79:
 459              	.L68:
 460              	.LBE10:
 461              	.LBB11:
 145:Src/remote_call.c ****     }
 462              		.loc 1 145 0 is_stmt 1
 463 0106 3B68     		ldr	r3, [r7]
 464              	.LVL80:
 465 0108 0733     		adds	r3, r3, #7
 466 010a 23F00703 		bic	r3, r3, #7
 467 010e 03F10802 		add	r2, r3, #8
 468              	.LVL81:
 469 0112 3A60     		str	r2, [r7]
 470              	.LVL82:
 471 0114 D3E90001 		ldrd	r0, [r3]
 472 0118 FFF7FEFF 		bl	__aeabi_d2f
 473              	.LVL83:
 474 011c 0090     		str	r0, [sp]	@ float
 475              	.LVL84:
 476 011e 211F     		subs	r1, r4, #4
 477              	.LVL85:
 478 0120 CA43     		mvns	r2, r1
 479 0122 D20F     		lsrs	r2, r2, #31
 480              	.LVL86:
 481 0124 0029     		cmp	r1, #0
 482 0126 FFF67FAF 		blt	.L25
 483 012a 6B46     		mov	r3, sp
 484              	.LVL87:
 485              	.L39:
 145:Src/remote_call.c ****     }
 486              		.loc 1 145 0 is_stmt 0 discriminator 1
 487 012c 8C42     		cmp	r4, r1
 488 012e 7FF77BAF 		ble	.L25
 489              	.LVL88:
 145:Src/remote_call.c ****     }
 490              		.loc 1 145 0 discriminator 2
 491 0132 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 492 0134 2870     		strb	r0, [r5]
 493 0136 013C     		subs	r4, r4, #1
 494              	.LVL89:
 495 0138 0133     		adds	r3, r3, #1
 496              	.LVL90:
 497 013a 0135     		adds	r5, r5, #1
 498              	.LVL91:
 499 013c F6E7     		b	.L39
 500              	.LVL92:
 501              	.L45:
 502              	.LBE11:
 503              	.LBB12:
 148:Src/remote_call.c ****     }
 504              		.loc 1 148 0 is_stmt 1 discriminator 2
 505 013e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 506 0140 2970     		strb	r1, [r5]
 507 0142 013C     		subs	r4, r4, #1
 508              	.LVL93:
ARM GAS  /tmp/ccI28C7B.s 			page 13


 509 0144 0133     		adds	r3, r3, #1
 510              	.LVL94:
 511 0146 0135     		adds	r5, r5, #1
 512              	.LVL95:
 513              	.L43:
 148:Src/remote_call.c ****     }
 514              		.loc 1 148 0 is_stmt 0 discriminator 1
 515 0148 8442     		cmp	r4, r0
 516 014a F8DC     		bgt	.L45
 517 014c 6CE7     		b	.L25
 518              	.LVL96:
 519              	.L42:
 520              	.LBE12:
 150:Src/remote_call.c ****       RC_PACK_STRING(*args, out, out_len, success);
 521              		.loc 1 150 0 is_stmt 1
 522 014e 732B     		cmp	r3, #115
 523 0150 19D1     		bne	.L46
 524              	.LBB13:
 525              		.loc 1 151 0
 526 0152 3B68     		ldr	r3, [r7]
 527              	.LVL97:
 528 0154 1A1D     		adds	r2, r3, #4
 529              	.LVL98:
 530 0156 3A60     		str	r2, [r7]
 531              	.LVL99:
 532 0158 1968     		ldr	r1, [r3]
 533              	.LVL100:
 534 015a 2A46     		mov	r2, r5
 535 015c 4020     		movs	r0, #64
 536 015e 2A23     		movs	r3, #42
 537 0160 02E0     		b	.L47
 538              	.LVL101:
 539              	.L49:
 540              		.loc 1 151 0 is_stmt 0 discriminator 7
 541 0162 013C     		subs	r4, r4, #1
 542              	.LVL102:
 543 0164 6146     		mov	r1, ip
 544 0166 2A46     		mov	r2, r5
 545              	.LVL103:
 546              	.L47:
 547              		.loc 1 151 0 discriminator 1
 548 0168 44B1     		cbz	r4, .L59
 549              		.loc 1 151 0 discriminator 3
 550 016a 01F1010C 		add	ip, r1, #1
 551              	.LVL104:
 552 016e 551C     		adds	r5, r2, #1
 553              	.LVL105:
 554 0170 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 555              	.LVL106:
 556 0172 1370     		strb	r3, [r2]
 557              	.LVL107:
 558 0174 1BB1     		cbz	r3, .L48
 559              	.LVL108:
 560              		.loc 1 151 0 discriminator 5
 561 0176 0138     		subs	r0, r0, #1
 562              	.LVL109:
 563 0178 F3D1     		bne	.L49
ARM GAS  /tmp/ccI28C7B.s 			page 14


 564 017a 00E0     		b	.L48
 565              	.LVL110:
 566              	.L59:
 567 017c 1546     		mov	r5, r2
 568              	.LVL111:
 569              	.L48:
 570              		.loc 1 151 0 discriminator 8
 571 017e 43B9     		cbnz	r3, .L60
 572              		.loc 1 151 0 discriminator 9
 573 0180 013C     		subs	r4, r4, #1
 574              	.LVL112:
 575 0182 0122     		movs	r2, #1
 576 0184 50E7     		b	.L25
 577              	.LVL113:
 578              	.L46:
 579              	.LBE13:
 152:Src/remote_call.c ****     }else{
 153:Src/remote_call.c ****       //Should not happen because format is checked when the function
 154:Src/remote_call.c ****       //is initialized.
 155:Src/remote_call.c ****       err = RC_WRONG_FORMAT;
 580              		.loc 1 155 0 is_stmt 1
 581 0186 084B     		ldr	r3, .L69
 582              	.LVL114:
 583 0188 0122     		movs	r2, #1
 584              	.LVL115:
 585 018a 1A60     		str	r2, [r3]
 156:Src/remote_call.c ****       return -1;
 586              		.loc 1 156 0
 587 018c 4FF0FF30 		mov	r0, #-1
 588              	.LVL116:
 589 0190 04E0     		b	.L19
 590              	.LVL117:
 591              	.L60:
 592              	.LBB14:
 151:Src/remote_call.c ****     }else{
 593              		.loc 1 151 0
 594 0192 0022     		movs	r2, #0
 595 0194 48E7     		b	.L25
 596              	.LVL118:
 597              	.L51:
 598              	.LBE14:
 157:Src/remote_call.c ****     }
 158:Src/remote_call.c ****   }
 159:Src/remote_call.c ****   
 160:Src/remote_call.c ****   return (success)?(out_len_tmp - out_len):-1;
 599              		.loc 1 160 0
 600 0196 22B1     		cbz	r2, .L61
 601              		.loc 1 160 0 is_stmt 0 discriminator 1
 602 0198 A8EB0400 		sub	r0, r8, r4
 603              	.LVL119:
 604              	.L19:
 161:Src/remote_call.c **** }								
 605              		.loc 1 161 0 is_stmt 1
 606 019c 02B0     		add	sp, sp, #8
 607              	.LCFI5:
 608              		.cfi_remember_state
 609              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccI28C7B.s 			page 15


 610              		@ sp needed
 611 019e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 612              	.LVL120:
 613              	.L61:
 614              	.LCFI6:
 615              		.cfi_restore_state
 160:Src/remote_call.c **** }								
 616              		.loc 1 160 0
 617 01a2 4FF0FF30 		mov	r0, #-1
 618 01a6 F9E7     		b	.L19
 619              	.L70:
 620              		.align	2
 621              	.L69:
 622 01a8 00000000 		.word	.LANCHOR0
 623              		.cfi_endproc
 624              	.LFE1:
 626              		.section	.text.RC_Unpack_Vars,"ax",%progbits
 627              		.align	1
 628              		.syntax unified
 629              		.thumb
 630              		.thumb_func
 631              		.fpu fpv4-sp-d16
 633              	RC_Unpack_Vars:
 634              	.LFB2:
 162:Src/remote_call.c **** 
 163:Src/remote_call.c **** static int RC_Unpack_Vars(const char *fmt, uint8_t *in, int in_len,  va_list *args){
 635              		.loc 1 163 0
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 0
 638              		@ frame_needed = 0, uses_anonymous_args = 0
 639              		@ link register save eliminated.
 640              	.LVL121:
 641 0000 F0B4     		push	{r4, r5, r6, r7}
 642              	.LCFI7:
 643              		.cfi_def_cfa_offset 16
 644              		.cfi_offset 4, -16
 645              		.cfi_offset 5, -12
 646              		.cfi_offset 6, -8
 647              		.cfi_offset 7, -4
 648              	.LVL122:
 164:Src/remote_call.c ****   char c;
 165:Src/remote_call.c ****   int success = 1;
 649              		.loc 1 165 0
 650 0002 0124     		movs	r4, #1
 166:Src/remote_call.c ****   
 167:Src/remote_call.c ****   while((c = *(fmt++)) != '\0' && success){
 651              		.loc 1 167 0
 652 0004 09E0     		b	.L72
 653              	.LVL123:
 654              	.L103:
 655              	.LBB15:
 168:Src/remote_call.c ****     if(c == RC_UINT8_T){
 169:Src/remote_call.c ****       RC_UNPACK_VAR(*args, uint8_t, uint8_t*, in, in_len, success);
 656              		.loc 1 169 0
 657 0006 1868     		ldr	r0, [r3]
 658              	.LVL124:
 659 0008 041D     		adds	r4, r0, #4
ARM GAS  /tmp/ccI28C7B.s 			page 16


 660              	.LVL125:
 661 000a 1C60     		str	r4, [r3]
 662              	.LVL126:
 663 000c 0668     		ldr	r6, [r0]
 664 000e 501E     		subs	r0, r2, #1
 665              	.LVL127:
 666 0010 C443     		mvns	r4, r0
 667 0012 E40F     		lsrs	r4, r4, #31
 668              	.LVL128:
 669 0014 0028     		cmp	r0, #0
 670 0016 24DA     		bge	.L74
 671              	.LVL129:
 672              	.L75:
 673              	.LBE15:
 674              	.LBB16:
 170:Src/remote_call.c ****     }
 171:Src/remote_call.c ****     else if(c == RC_UINT16_T){
 172:Src/remote_call.c ****       RC_UNPACK_VAR(*args, uint16_t, uint16_t*, in, in_len, success);
 173:Src/remote_call.c ****     }
 174:Src/remote_call.c ****     else if(c == RC_UINT32_T){
 175:Src/remote_call.c ****       RC_UNPACK_VAR(*args, uint32_t, uint32_t*, in, in_len, success);
 176:Src/remote_call.c ****     }
 177:Src/remote_call.c ****     else if(c == RC_INT){
 178:Src/remote_call.c ****       RC_UNPACK_VAR(*args, int, int*, in, in_len, success);
 179:Src/remote_call.c ****     }
 180:Src/remote_call.c ****     else if(c == RC_FLOAT){
 181:Src/remote_call.c ****       RC_UNPACK_VAR(*args, float, float*, in, in_len, success);
 182:Src/remote_call.c ****     }
 183:Src/remote_call.c ****     else if(c == RC_DOUBLE){
 184:Src/remote_call.c ****       RC_UNPACK_VAR(*args, double, double*, in, in_len, success);
 185:Src/remote_call.c ****     }
 186:Src/remote_call.c ****     else if(c == RC_STRING){
 187:Src/remote_call.c ****       RC_UNPACK_STRING(*args, in, in_len, success);
 675              		.loc 1 187 0
 676 0018 2846     		mov	r0, r5
 677              	.LVL130:
 678              	.L72:
 679              	.LBE16:
 167:Src/remote_call.c ****     if(c == RC_UINT8_T){
 680              		.loc 1 167 0
 681 001a 451C     		adds	r5, r0, #1
 682              	.LVL131:
 683 001c 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 684              	.LVL132:
 685 001e 0028     		cmp	r0, #0
 686 0020 00F09580 		beq	.L97
 167:Src/remote_call.c ****     if(c == RC_UINT8_T){
 687              		.loc 1 167 0 is_stmt 0 discriminator 1
 688 0024 002C     		cmp	r4, #0
 689 0026 00F09280 		beq	.L97
 168:Src/remote_call.c ****     if(c == RC_UINT8_T){
 690              		.loc 1 168 0 is_stmt 1
 691 002a 6228     		cmp	r0, #98
 692 002c EBD0     		beq	.L103
 171:Src/remote_call.c ****       RC_UNPACK_VAR(*args, uint16_t, uint16_t*, in, in_len, success);
 693              		.loc 1 171 0
 694 002e 4228     		cmp	r0, #66
ARM GAS  /tmp/ccI28C7B.s 			page 17


 695 0030 1AD0     		beq	.L104
 174:Src/remote_call.c ****       RC_UNPACK_VAR(*args, uint32_t, uint32_t*, in, in_len, success);
 696              		.loc 1 174 0
 697 0032 7528     		cmp	r0, #117
 698 0034 2AD0     		beq	.L105
 177:Src/remote_call.c ****       RC_UNPACK_VAR(*args, int, int*, in, in_len, success);
 699              		.loc 1 177 0
 700 0036 6928     		cmp	r0, #105
 701 0038 3AD0     		beq	.L106
 180:Src/remote_call.c ****       RC_UNPACK_VAR(*args, float, float*, in, in_len, success);
 702              		.loc 1 180 0
 703 003a 6628     		cmp	r0, #102
 704 003c 4AD0     		beq	.L107
 183:Src/remote_call.c ****       RC_UNPACK_VAR(*args, double, double*, in, in_len, success);
 705              		.loc 1 183 0
 706 003e 4628     		cmp	r0, #70
 707 0040 61D1     		bne	.L89
 708              	.LBB17:
 184:Src/remote_call.c ****     }
 709              		.loc 1 184 0
 710 0042 1868     		ldr	r0, [r3]
 711              	.LVL133:
 712 0044 041D     		adds	r4, r0, #4
 713              	.LVL134:
 714 0046 1C60     		str	r4, [r3]
 715              	.LVL135:
 716 0048 0068     		ldr	r0, [r0]
 717 004a A2F10807 		sub	r7, r2, #8
 718              	.LVL136:
 719 004e FC43     		mvns	r4, r7
 720 0050 E40F     		lsrs	r4, r4, #31
 721              	.LVL137:
 722 0052 002F     		cmp	r7, #0
 723 0054 E0DB     		blt	.L75
 724 0056 53E0     		b	.L90
 725              	.LVL138:
 726              	.L76:
 727              	.LBE17:
 728              	.LBB18:
 169:Src/remote_call.c ****     }
 729              		.loc 1 169 0 discriminator 2
 730 0058 0F78     		ldrb	r7, [r1]	@ zero_extendqisi2
 731 005a 3770     		strb	r7, [r6]
 732 005c 013A     		subs	r2, r2, #1
 733              	.LVL139:
 734 005e 0136     		adds	r6, r6, #1
 735              	.LVL140:
 736 0060 0131     		adds	r1, r1, #1
 737              	.LVL141:
 738              	.L74:
 169:Src/remote_call.c ****     }
 739              		.loc 1 169 0 is_stmt 0 discriminator 1
 740 0062 8242     		cmp	r2, r0
 741 0064 F8DC     		bgt	.L76
 742 0066 D7E7     		b	.L75
 743              	.LVL142:
 744              	.L104:
ARM GAS  /tmp/ccI28C7B.s 			page 18


 745              	.LBE18:
 746              	.LBB19:
 172:Src/remote_call.c ****     }
 747              		.loc 1 172 0 is_stmt 1
 748 0068 1868     		ldr	r0, [r3]
 749              	.LVL143:
 750 006a 041D     		adds	r4, r0, #4
 751              	.LVL144:
 752 006c 1C60     		str	r4, [r3]
 753              	.LVL145:
 754 006e 0668     		ldr	r6, [r0]
 755 0070 901E     		subs	r0, r2, #2
 756              	.LVL146:
 757 0072 C443     		mvns	r4, r0
 758 0074 E40F     		lsrs	r4, r4, #31
 759              	.LVL147:
 760 0076 0028     		cmp	r0, #0
 761 0078 CEDB     		blt	.L75
 762 007a 04E0     		b	.L78
 763              	.LVL148:
 764              	.L79:
 172:Src/remote_call.c ****     }
 765              		.loc 1 172 0 is_stmt 0 discriminator 2
 766 007c 0F78     		ldrb	r7, [r1]	@ zero_extendqisi2
 767 007e 3770     		strb	r7, [r6]
 768 0080 013A     		subs	r2, r2, #1
 769              	.LVL149:
 770 0082 0136     		adds	r6, r6, #1
 771              	.LVL150:
 772 0084 0131     		adds	r1, r1, #1
 773              	.LVL151:
 774              	.L78:
 172:Src/remote_call.c ****     }
 775              		.loc 1 172 0 discriminator 1
 776 0086 8242     		cmp	r2, r0
 777 0088 F8DC     		bgt	.L79
 778 008a C5E7     		b	.L75
 779              	.LVL152:
 780              	.L105:
 781              	.LBE19:
 782              	.LBB20:
 175:Src/remote_call.c ****     }
 783              		.loc 1 175 0 is_stmt 1
 784 008c 1868     		ldr	r0, [r3]
 785              	.LVL153:
 786 008e 041D     		adds	r4, r0, #4
 787              	.LVL154:
 788 0090 1C60     		str	r4, [r3]
 789              	.LVL155:
 790 0092 0068     		ldr	r0, [r0]
 791 0094 161F     		subs	r6, r2, #4
 792              	.LVL156:
 793 0096 F443     		mvns	r4, r6
 794 0098 E40F     		lsrs	r4, r4, #31
 795              	.LVL157:
 796 009a 002E     		cmp	r6, #0
 797 009c BCDB     		blt	.L75
ARM GAS  /tmp/ccI28C7B.s 			page 19


 798 009e 04E0     		b	.L81
 799              	.LVL158:
 800              	.L82:
 175:Src/remote_call.c ****     }
 801              		.loc 1 175 0 is_stmt 0 discriminator 2
 802 00a0 0F78     		ldrb	r7, [r1]	@ zero_extendqisi2
 803 00a2 0770     		strb	r7, [r0]
 804 00a4 013A     		subs	r2, r2, #1
 805              	.LVL159:
 806 00a6 0130     		adds	r0, r0, #1
 807              	.LVL160:
 808 00a8 0131     		adds	r1, r1, #1
 809              	.LVL161:
 810              	.L81:
 175:Src/remote_call.c ****     }
 811              		.loc 1 175 0 discriminator 1
 812 00aa B242     		cmp	r2, r6
 813 00ac F8DC     		bgt	.L82
 814 00ae B3E7     		b	.L75
 815              	.LVL162:
 816              	.L106:
 817              	.LBE20:
 818              	.LBB21:
 178:Src/remote_call.c ****     }
 819              		.loc 1 178 0 is_stmt 1
 820 00b0 1868     		ldr	r0, [r3]
 821              	.LVL163:
 822 00b2 041D     		adds	r4, r0, #4
 823              	.LVL164:
 824 00b4 1C60     		str	r4, [r3]
 825              	.LVL165:
 826 00b6 0068     		ldr	r0, [r0]
 827 00b8 161F     		subs	r6, r2, #4
 828              	.LVL166:
 829 00ba F443     		mvns	r4, r6
 830 00bc E40F     		lsrs	r4, r4, #31
 831              	.LVL167:
 832 00be 002E     		cmp	r6, #0
 833 00c0 AADB     		blt	.L75
 834 00c2 04E0     		b	.L84
 835              	.LVL168:
 836              	.L85:
 178:Src/remote_call.c ****     }
 837              		.loc 1 178 0 is_stmt 0 discriminator 2
 838 00c4 0F78     		ldrb	r7, [r1]	@ zero_extendqisi2
 839 00c6 0770     		strb	r7, [r0]
 840 00c8 013A     		subs	r2, r2, #1
 841              	.LVL169:
 842 00ca 0130     		adds	r0, r0, #1
 843              	.LVL170:
 844 00cc 0131     		adds	r1, r1, #1
 845              	.LVL171:
 846              	.L84:
 178:Src/remote_call.c ****     }
 847              		.loc 1 178 0 discriminator 1
 848 00ce B242     		cmp	r2, r6
 849 00d0 F8DC     		bgt	.L85
ARM GAS  /tmp/ccI28C7B.s 			page 20


 850 00d2 A1E7     		b	.L75
 851              	.LVL172:
 852              	.L107:
 853              	.LBE21:
 854              	.LBB22:
 181:Src/remote_call.c ****     }
 855              		.loc 1 181 0 is_stmt 1
 856 00d4 1868     		ldr	r0, [r3]
 857              	.LVL173:
 858 00d6 041D     		adds	r4, r0, #4
 859              	.LVL174:
 860 00d8 1C60     		str	r4, [r3]
 861              	.LVL175:
 862 00da 0068     		ldr	r0, [r0]
 863 00dc 161F     		subs	r6, r2, #4
 864              	.LVL176:
 865 00de F443     		mvns	r4, r6
 866 00e0 E40F     		lsrs	r4, r4, #31
 867              	.LVL177:
 868 00e2 002E     		cmp	r6, #0
 869 00e4 98DB     		blt	.L75
 870              	.L87:
 871              	.LVL178:
 181:Src/remote_call.c ****     }
 872              		.loc 1 181 0 is_stmt 0 discriminator 1
 873 00e6 B242     		cmp	r2, r6
 874 00e8 96DD     		ble	.L75
 875              	.LVL179:
 181:Src/remote_call.c ****     }
 876              		.loc 1 181 0 discriminator 2
 877 00ea 0F78     		ldrb	r7, [r1]	@ zero_extendqisi2
 878 00ec 0770     		strb	r7, [r0]
 879 00ee 013A     		subs	r2, r2, #1
 880              	.LVL180:
 881 00f0 0130     		adds	r0, r0, #1
 882              	.LVL181:
 883 00f2 0131     		adds	r1, r1, #1
 884              	.LVL182:
 885 00f4 F7E7     		b	.L87
 886              	.LVL183:
 887              	.L91:
 888              	.LBE22:
 889              	.LBB23:
 184:Src/remote_call.c ****     }
 890              		.loc 1 184 0 is_stmt 1 discriminator 2
 891 00f6 0E78     		ldrb	r6, [r1]	@ zero_extendqisi2
 892 00f8 0670     		strb	r6, [r0]
 893 00fa 013A     		subs	r2, r2, #1
 894              	.LVL184:
 895 00fc 0130     		adds	r0, r0, #1
 896              	.LVL185:
 897 00fe 0131     		adds	r1, r1, #1
 898              	.LVL186:
 899              	.L90:
 184:Src/remote_call.c ****     }
 900              		.loc 1 184 0 is_stmt 0 discriminator 1
 901 0100 BA42     		cmp	r2, r7
ARM GAS  /tmp/ccI28C7B.s 			page 21


 902 0102 F8DC     		bgt	.L91
 903 0104 88E7     		b	.L75
 904              	.LVL187:
 905              	.L89:
 906              	.LBE23:
 186:Src/remote_call.c ****       RC_UNPACK_STRING(*args, in, in_len, success);
 907              		.loc 1 186 0 is_stmt 1
 908 0106 7328     		cmp	r0, #115
 909 0108 19D1     		bne	.L92
 910              	.LBB24:
 911              		.loc 1 187 0
 912 010a 1868     		ldr	r0, [r3]
 913              	.LVL188:
 914 010c 041D     		adds	r4, r0, #4
 915              	.LVL189:
 916 010e 1C60     		str	r4, [r3]
 917              	.LVL190:
 918 0110 0668     		ldr	r6, [r0]
 919              	.LVL191:
 920 0112 0C46     		mov	r4, r1
 921 0114 4027     		movs	r7, #64
 922 0116 2A20     		movs	r0, #42
 923 0118 02E0     		b	.L93
 924              	.LVL192:
 925              	.L95:
 926              		.loc 1 187 0 is_stmt 0 discriminator 7
 927 011a 013A     		subs	r2, r2, #1
 928              	.LVL193:
 929 011c 6646     		mov	r6, ip
 930 011e 0C46     		mov	r4, r1
 931              	.LVL194:
 932              	.L93:
 933              		.loc 1 187 0 discriminator 1
 934 0120 42B1     		cbz	r2, .L99
 935              		.loc 1 187 0 discriminator 3
 936 0122 611C     		adds	r1, r4, #1
 937              	.LVL195:
 938 0124 06F1010C 		add	ip, r6, #1
 939              	.LVL196:
 940 0128 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 941              	.LVL197:
 942 012a 3070     		strb	r0, [r6]
 943              	.LVL198:
 944 012c 18B1     		cbz	r0, .L94
 945              	.LVL199:
 946              		.loc 1 187 0 discriminator 5
 947 012e 013F     		subs	r7, r7, #1
 948              	.LVL200:
 949 0130 F3D1     		bne	.L95
 950 0132 00E0     		b	.L94
 951              	.LVL201:
 952              	.L99:
 953 0134 2146     		mov	r1, r4
 954              	.LVL202:
 955              	.L94:
 956              		.loc 1 187 0 discriminator 8
 957 0136 40B9     		cbnz	r0, .L100
ARM GAS  /tmp/ccI28C7B.s 			page 22


 958              		.loc 1 187 0 discriminator 9
 959 0138 013A     		subs	r2, r2, #1
 960              	.LVL203:
 961 013a 0124     		movs	r4, #1
 962 013c 6CE7     		b	.L75
 963              	.LVL204:
 964              	.L92:
 965              	.LBE24:
 188:Src/remote_call.c ****     }else{
 189:Src/remote_call.c ****       //Should not happen because format is checked when the function
 190:Src/remote_call.c ****       //is initialized.
 191:Src/remote_call.c ****       err = RC_WRONG_FORMAT;
 966              		.loc 1 191 0 is_stmt 1
 967 013e 094B     		ldr	r3, .L109
 968              	.LVL205:
 969 0140 0122     		movs	r2, #1
 970              	.LVL206:
 971 0142 1A60     		str	r2, [r3]
 192:Src/remote_call.c ****       return -1;
 972              		.loc 1 192 0
 973 0144 4FF0FF32 		mov	r2, #-1
 974 0148 03E0     		b	.L96
 975              	.LVL207:
 976              	.L100:
 977              	.LBB25:
 187:Src/remote_call.c ****     }else{
 978              		.loc 1 187 0
 979 014a 0024     		movs	r4, #0
 980 014c 64E7     		b	.L75
 981              	.LVL208:
 982              	.L97:
 983              	.LBE25:
 193:Src/remote_call.c ****     }
 194:Src/remote_call.c ****   }
 195:Src/remote_call.c ****   
 196:Src/remote_call.c ****   return (success && in_len == 0)?0:-1;
 984              		.loc 1 196 0
 985 014e 34B1     		cbz	r4, .L101
 986              		.loc 1 196 0 is_stmt 0 discriminator 1
 987 0150 12B9     		cbnz	r2, .L108
 988              	.LVL209:
 989              	.L96:
 197:Src/remote_call.c **** }
 990              		.loc 1 197 0 is_stmt 1
 991 0152 1046     		mov	r0, r2
 992              	.LVL210:
 993 0154 F0BC     		pop	{r4, r5, r6, r7}
 994              	.LCFI8:
 995              		.cfi_remember_state
 996              		.cfi_restore 7
 997              		.cfi_restore 6
 998              		.cfi_restore 5
 999              		.cfi_restore 4
 1000              		.cfi_def_cfa_offset 0
 1001              	.LVL211:
 1002 0156 7047     		bx	lr
 1003              	.LVL212:
ARM GAS  /tmp/ccI28C7B.s 			page 23


 1004              	.L108:
 1005              	.LCFI9:
 1006              		.cfi_restore_state
 196:Src/remote_call.c **** }
 1007              		.loc 1 196 0
 1008 0158 4FF0FF32 		mov	r2, #-1
 1009              	.LVL213:
 1010 015c F9E7     		b	.L96
 1011              	.LVL214:
 1012              	.L101:
 1013 015e 4FF0FF32 		mov	r2, #-1
 1014              	.LVL215:
 1015 0162 F6E7     		b	.L96
 1016              	.L110:
 1017              		.align	2
 1018              	.L109:
 1019 0164 00000000 		.word	.LANCHOR0
 1020              		.cfi_endproc
 1021              	.LFE2:
 1023              		.section	.text.RC_Get_Error,"ax",%progbits
 1024              		.align	1
 1025              		.global	RC_Get_Error
 1026              		.syntax unified
 1027              		.thumb
 1028              		.thumb_func
 1029              		.fpu fpv4-sp-d16
 1031              	RC_Get_Error:
 1032              	.LFB3:
 198:Src/remote_call.c **** 
 199:Src/remote_call.c **** //==================================================//
 200:Src/remote_call.c **** //               ERROR ACCESSOR                     //
 201:Src/remote_call.c **** //==================================================//
 202:Src/remote_call.c **** int RC_Get_Error(){
 1033              		.loc 1 202 0
 1034              		.cfi_startproc
 1035              		@ args = 0, pretend = 0, frame = 0
 1036              		@ frame_needed = 0, uses_anonymous_args = 0
 1037              		@ link register save eliminated.
 203:Src/remote_call.c ****   return err;
 204:Src/remote_call.c **** }
 1038              		.loc 1 204 0
 1039 0000 014B     		ldr	r3, .L112
 1040 0002 1868     		ldr	r0, [r3]
 1041 0004 7047     		bx	lr
 1042              	.L113:
 1043 0006 00BF     		.align	2
 1044              	.L112:
 1045 0008 00000000 		.word	.LANCHOR0
 1046              		.cfi_endproc
 1047              	.LFE3:
 1049              		.section	.text.RC_Server_Init,"ax",%progbits
 1050              		.align	1
 1051              		.global	RC_Server_Init
 1052              		.syntax unified
 1053              		.thumb
 1054              		.thumb_func
 1055              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccI28C7B.s 			page 24


 1057              	RC_Server_Init:
 1058              	.LFB4:
 205:Src/remote_call.c **** 
 206:Src/remote_call.c **** //==================================================//
 207:Src/remote_call.c **** //                  RC SERVER                       //
 208:Src/remote_call.c **** //==================================================//
 209:Src/remote_call.c **** 
 210:Src/remote_call.c **** void RC_Server_Init(RC_Server *server, RP_Interface *interface){
 1059              		.loc 1 210 0
 1060              		.cfi_startproc
 1061              		@ args = 0, pretend = 0, frame = 0
 1062              		@ frame_needed = 0, uses_anonymous_args = 0
 1063              		@ link register save eliminated.
 1064              	.LVL216:
 211:Src/remote_call.c ****   int i;
 212:Src/remote_call.c **** 
 213:Src/remote_call.c ****   server->interface = interface;
 1065              		.loc 1 213 0
 1066 0000 0160     		str	r1, [r0]
 1067              	.LVL217:
 214:Src/remote_call.c ****   for(i = 0; i < RC_NB_FUNCTIONS; i++){
 1068              		.loc 1 214 0
 1069 0002 0023     		movs	r3, #0
 1070 0004 06E0     		b	.L115
 1071              	.LVL218:
 1072              	.L116:
 215:Src/remote_call.c ****     server->functions[i].call = 0;
 1073              		.loc 1 215 0 discriminator 3
 1074 0006 03EB4301 		add	r1, r3, r3, lsl #1
 1075 000a CA00     		lsls	r2, r1, #3
 1076 000c 0244     		add	r2, r2, r0
 1077 000e 0021     		movs	r1, #0
 1078 0010 5160     		str	r1, [r2, #4]
 214:Src/remote_call.c ****   for(i = 0; i < RC_NB_FUNCTIONS; i++){
 1079              		.loc 1 214 0 discriminator 3
 1080 0012 0133     		adds	r3, r3, #1
 1081              	.LVL219:
 1082              	.L115:
 214:Src/remote_call.c ****   for(i = 0; i < RC_NB_FUNCTIONS; i++){
 1083              		.loc 1 214 0 is_stmt 0 discriminator 1
 1084 0014 1F2B     		cmp	r3, #31
 1085 0016 F6DD     		ble	.L116
 216:Src/remote_call.c ****   }  
 217:Src/remote_call.c **** }
 1086              		.loc 1 217 0 is_stmt 1
 1087 0018 7047     		bx	lr
 1088              		.cfi_endproc
 1089              	.LFE4:
 1091              		.section	.text.RC_Server_Add_Function,"ax",%progbits
 1092              		.align	1
 1093              		.global	RC_Server_Add_Function
 1094              		.syntax unified
 1095              		.thumb
 1096              		.thumb_func
 1097              		.fpu fpv4-sp-d16
 1099              	RC_Server_Add_Function:
 1100              	.LFB5:
ARM GAS  /tmp/ccI28C7B.s 			page 25


 218:Src/remote_call.c **** 
 219:Src/remote_call.c **** int RC_Server_Add_Function(RC_Server *server,
 220:Src/remote_call.c **** 			   int id,
 221:Src/remote_call.c **** 			   void (*function)(RC_Server *server),
 222:Src/remote_call.c **** 			   const char params_fmt[],
 223:Src/remote_call.c **** 			   const char return_fmt[],
 224:Src/remote_call.c **** 			   RC_Call_Type call_type){
 1101              		.loc 1 224 0
 1102              		.cfi_startproc
 1103              		@ args = 8, pretend = 0, frame = 0
 1104              		@ frame_needed = 0, uses_anonymous_args = 0
 1105              	.LVL220:
 225:Src/remote_call.c ****   //Check ID range
 226:Src/remote_call.c ****   if(!CHECK_ID(id)){
 1106              		.loc 1 226 0
 1107 0000 1F29     		cmp	r1, #31
 1108 0002 25D8     		bhi	.L123
 224:Src/remote_call.c ****   //Check ID range
 1109              		.loc 1 224 0
 1110 0004 70B5     		push	{r4, r5, r6, lr}
 1111              	.LCFI10:
 1112              		.cfi_def_cfa_offset 16
 1113              		.cfi_offset 4, -16
 1114              		.cfi_offset 5, -12
 1115              		.cfi_offset 6, -8
 1116              		.cfi_offset 14, -4
 1117 0006 1646     		mov	r6, r2
 1118 0008 0C46     		mov	r4, r1
 1119 000a 0546     		mov	r5, r0
 1120              	.LVL221:
 227:Src/remote_call.c ****     err = RC_BAD_ID;
 228:Src/remote_call.c ****     return -1;
 229:Src/remote_call.c ****   }
 230:Src/remote_call.c **** 
 231:Src/remote_call.c ****   //Get function struct by id
 232:Src/remote_call.c ****   RC_Server_Function *fun = &server->functions[id];
 233:Src/remote_call.c **** 
 234:Src/remote_call.c ****   //Params format
 235:Src/remote_call.c ****   if(RC_Copy_Format(fun->params_fmt, params_fmt) == -1){
 1121              		.loc 1 235 0
 1122 000c 01EB4102 		add	r2, r1, r1, lsl #1
 1123              	.LVL222:
 1124 0010 D000     		lsls	r0, r2, #3
 1125              	.LVL223:
 1126 0012 2844     		add	r0, r0, r5
 1127 0014 1946     		mov	r1, r3
 1128              	.LVL224:
 1129 0016 0830     		adds	r0, r0, #8
 1130 0018 FFF7FEFF 		bl	RC_Copy_Format
 1131              	.LVL225:
 1132 001c B0F1FF3F 		cmp	r0, #-1
 1133 0020 15D0     		beq	.L117
 236:Src/remote_call.c ****     return -1;
 237:Src/remote_call.c ****   }
 238:Src/remote_call.c **** 
 239:Src/remote_call.c ****   //Return format
 240:Src/remote_call.c ****   if(RC_Copy_Format(fun->return_fmt, return_fmt) == -1){
ARM GAS  /tmp/ccI28C7B.s 			page 26


 1134              		.loc 1 240 0
 1135 0022 04EB4403 		add	r3, r4, r4, lsl #1
 1136 0026 D800     		lsls	r0, r3, #3
 1137 0028 0830     		adds	r0, r0, #8
 1138 002a 2844     		add	r0, r0, r5
 1139 002c 0499     		ldr	r1, [sp, #16]
 1140 002e 0830     		adds	r0, r0, #8
 1141 0030 FFF7FEFF 		bl	RC_Copy_Format
 1142              	.LVL226:
 1143 0034 B0F1FF3F 		cmp	r0, #-1
 1144 0038 09D0     		beq	.L117
 241:Src/remote_call.c ****     return -1;
 242:Src/remote_call.c ****   }
 243:Src/remote_call.c **** 
 244:Src/remote_call.c ****   //Function pointer
 245:Src/remote_call.c ****   fun->call = function;
 1145              		.loc 1 245 0
 1146 003a 6100     		lsls	r1, r4, #1
 1147 003c 0A19     		adds	r2, r1, r4
 1148 003e D300     		lsls	r3, r2, #3
 1149 0040 2B44     		add	r3, r3, r5
 1150 0042 5E60     		str	r6, [r3, #4]
 246:Src/remote_call.c ****   
 247:Src/remote_call.c ****   //Call type
 248:Src/remote_call.c ****   fun->call_type = call_type;
 1151              		.loc 1 248 0
 1152 0044 1D46     		mov	r5, r3
 1153              	.LVL227:
 1154 0046 9DF81430 		ldrb	r3, [sp, #20]	@ zero_extendqisi2
 1155 004a 2B76     		strb	r3, [r5, #24]
 249:Src/remote_call.c **** 
 250:Src/remote_call.c ****   return 0;
 1156              		.loc 1 250 0
 1157 004c 0020     		movs	r0, #0
 1158              	.L117:
 251:Src/remote_call.c **** }
 1159              		.loc 1 251 0
 1160 004e 70BD     		pop	{r4, r5, r6, pc}
 1161              	.LVL228:
 1162              	.L123:
 1163              	.LCFI11:
 1164              		.cfi_def_cfa_offset 0
 1165              		.cfi_restore 4
 1166              		.cfi_restore 5
 1167              		.cfi_restore 6
 1168              		.cfi_restore 14
 227:Src/remote_call.c ****     return -1;
 1169              		.loc 1 227 0
 1170 0050 024B     		ldr	r3, .L124
 1171              	.LVL229:
 1172 0052 0022     		movs	r2, #0
 1173              	.LVL230:
 1174 0054 1A60     		str	r2, [r3]
 228:Src/remote_call.c ****   }
 1175              		.loc 1 228 0
 1176 0056 4FF0FF30 		mov	r0, #-1
 1177              	.LVL231:
ARM GAS  /tmp/ccI28C7B.s 			page 27


 1178              		.loc 1 251 0
 1179 005a 7047     		bx	lr
 1180              	.L125:
 1181              		.align	2
 1182              	.L124:
 1183 005c 00000000 		.word	.LANCHOR0
 1184              		.cfi_endproc
 1185              	.LFE5:
 1187              		.section	.text.RC_Server_Get_Request,"ax",%progbits
 1188              		.align	1
 1189              		.global	RC_Server_Get_Request
 1190              		.syntax unified
 1191              		.thumb
 1192              		.thumb_func
 1193              		.fpu fpv4-sp-d16
 1195              	RC_Server_Get_Request:
 1196              	.LFB6:
 252:Src/remote_call.c **** 
 253:Src/remote_call.c **** int RC_Server_Get_Request(RC_Server *server, RP_Packet *packet){
 1197              		.loc 1 253 0
 1198              		.cfi_startproc
 1199              		@ args = 0, pretend = 0, frame = 0
 1200              		@ frame_needed = 0, uses_anonymous_args = 0
 1201              	.LVL232:
 254:Src/remote_call.c ****   if(packet->len < 1){
 1202              		.loc 1 254 0
 1203 0000 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 1204 0002 F2B1     		cbz	r2, .L138
 253:Src/remote_call.c ****   if(packet->len < 1){
 1205              		.loc 1 253 0
 1206 0004 70B5     		push	{r4, r5, r6, lr}
 1207              	.LCFI12:
 1208              		.cfi_def_cfa_offset 16
 1209              		.cfi_offset 4, -16
 1210              		.cfi_offset 5, -12
 1211              		.cfi_offset 6, -8
 1212              		.cfi_offset 14, -4
 255:Src/remote_call.c ****     err = RC_LINK_ERROR;
 256:Src/remote_call.c ****     return -1;
 257:Src/remote_call.c ****   }
 258:Src/remote_call.c ****   
 259:Src/remote_call.c ****   //Extracting packet informations
 260:Src/remote_call.c ****   const int id_client = packet->id;
 1213              		.loc 1 260 0
 1214 0006 0E78     		ldrb	r6, [r1]	@ zero_extendqisi2
 1215              	.LVL233:
 261:Src/remote_call.c ****   const int id = packet->data[0];
 1216              		.loc 1 261 0
 1217 0008 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 1218              	.LVL234:
 262:Src/remote_call.c ****   const int len = packet->len - 1;
 1219              		.loc 1 262 0
 1220 000a 013A     		subs	r2, r2, #1
 1221              	.LVL235:
 263:Src/remote_call.c ****   uint8_t *const data = &packet->data[1];
 1222              		.loc 1 263 0
 1223 000c 0331     		adds	r1, r1, #3
ARM GAS  /tmp/ccI28C7B.s 			page 28


 1224              	.LVL236:
 264:Src/remote_call.c **** 
 265:Src/remote_call.c **** 
 266:Src/remote_call.c ****   //Checking basic informations
 267:Src/remote_call.c ****   if(!CHECK_ID(id)){
 1225              		.loc 1 267 0
 1226 000e 1F2B     		cmp	r3, #31
 1227 0010 1DD8     		bhi	.L139
 1228              	.LVL237:
 268:Src/remote_call.c ****     err = RC_BAD_ID;
 269:Src/remote_call.c ****     return -1;
 270:Src/remote_call.c ****   }
 271:Src/remote_call.c **** 
 272:Src/remote_call.c ****   RC_Server_Function *const fun = &server->functions[id];
 273:Src/remote_call.c ****   if(fun->call == 0){
 1229              		.loc 1 273 0
 1230 0012 03EB4305 		add	r5, r3, r3, lsl #1
 1231 0016 EC00     		lsls	r4, r5, #3
 1232 0018 0444     		add	r4, r4, r0
 1233 001a 6568     		ldr	r5, [r4, #4]
 1234 001c EDB1     		cbz	r5, .L140
 274:Src/remote_call.c ****     err = RC_UNDEFINED_FUNCTION;
 275:Src/remote_call.c ****     return -1;
 276:Src/remote_call.c ****   }
 277:Src/remote_call.c ****   
 278:Src/remote_call.c ****   //Filling request informations
 279:Src/remote_call.c ****   server->request.id_client = id_client;
 1235              		.loc 1 279 0
 1236 001e C0F80463 		str	r6, [r0, #772]
 280:Src/remote_call.c ****   server->request.id = id;
 1237              		.loc 1 280 0
 1238 0022 C0F80833 		str	r3, [r0, #776]
 281:Src/remote_call.c ****   server->request.data = data;
 1239              		.loc 1 281 0
 1240 0026 C0F80C13 		str	r1, [r0, #780]
 282:Src/remote_call.c ****   server->request.len = len;
 1241              		.loc 1 282 0
 1242 002a C0F81023 		str	r2, [r0, #784]
 283:Src/remote_call.c **** 
 284:Src/remote_call.c ****   switch(fun->call_type){
 1243              		.loc 1 284 0
 1244 002e 03EB4303 		add	r3, r3, r3, lsl #1
 1245              	.LVL238:
 1246 0032 DA00     		lsls	r2, r3, #3
 1247              	.LVL239:
 1248 0034 0244     		add	r2, r2, r0
 1249 0036 137E     		ldrb	r3, [r2, #24]	@ zero_extendqisi2
 1250 0038 ABB1     		cbz	r3, .L131
 1251 003a 012B     		cmp	r3, #1
 1252 003c 19D0     		beq	.L132
 285:Src/remote_call.c ****   case RC_IMMEDIATE:
 286:Src/remote_call.c ****     server->pending = 0;
 287:Src/remote_call.c ****     fun->call(server);
 288:Src/remote_call.c ****     break;
 289:Src/remote_call.c ****   case RC_DELAYED:
 290:Src/remote_call.c ****     server->pending = 1;
 291:Src/remote_call.c ****     break;
ARM GAS  /tmp/ccI28C7B.s 			page 29


 292:Src/remote_call.c ****   default:
 293:Src/remote_call.c ****     break;
 294:Src/remote_call.c ****   }
 295:Src/remote_call.c **** 
 296:Src/remote_call.c ****   return 0;
 1253              		.loc 1 296 0
 1254 003e 0020     		movs	r0, #0
 1255              	.LVL240:
 1256 0040 16E0     		b	.L126
 1257              	.LVL241:
 1258              	.L138:
 1259              	.LCFI13:
 1260              		.cfi_def_cfa_offset 0
 1261              		.cfi_restore 4
 1262              		.cfi_restore 5
 1263              		.cfi_restore 6
 1264              		.cfi_restore 14
 255:Src/remote_call.c ****     return -1;
 1265              		.loc 1 255 0
 1266 0042 0E4B     		ldr	r3, .L141
 1267 0044 0322     		movs	r2, #3
 1268 0046 1A60     		str	r2, [r3]
 256:Src/remote_call.c ****   }
 1269              		.loc 1 256 0
 1270 0048 4FF0FF30 		mov	r0, #-1
 1271              	.LVL242:
 297:Src/remote_call.c **** }
 1272              		.loc 1 297 0
 1273 004c 7047     		bx	lr
 1274              	.LVL243:
 1275              	.L139:
 1276              	.LCFI14:
 1277              		.cfi_def_cfa_offset 16
 1278              		.cfi_offset 4, -16
 1279              		.cfi_offset 5, -12
 1280              		.cfi_offset 6, -8
 1281              		.cfi_offset 14, -4
 268:Src/remote_call.c ****     return -1;
 1282              		.loc 1 268 0
 1283 004e 0B4B     		ldr	r3, .L141
 1284              	.LVL244:
 1285 0050 0022     		movs	r2, #0
 1286              	.LVL245:
 1287 0052 1A60     		str	r2, [r3]
 269:Src/remote_call.c ****   }
 1288              		.loc 1 269 0
 1289 0054 4FF0FF30 		mov	r0, #-1
 1290              	.LVL246:
 1291 0058 0AE0     		b	.L126
 1292              	.LVL247:
 1293              	.L140:
 274:Src/remote_call.c ****     return -1;
 1294              		.loc 1 274 0
 1295 005a 084B     		ldr	r3, .L141
 1296              	.LVL248:
 1297 005c 0222     		movs	r2, #2
 1298              	.LVL249:
ARM GAS  /tmp/ccI28C7B.s 			page 30


 1299 005e 1A60     		str	r2, [r3]
 275:Src/remote_call.c ****   }
 1300              		.loc 1 275 0
 1301 0060 4FF0FF30 		mov	r0, #-1
 1302              	.LVL250:
 1303 0064 04E0     		b	.L126
 1304              	.LVL251:
 1305              	.L131:
 286:Src/remote_call.c ****     fun->call(server);
 1306              		.loc 1 286 0
 1307 0066 0024     		movs	r4, #0
 1308 0068 80F81443 		strb	r4, [r0, #788]
 287:Src/remote_call.c ****     break;
 1309              		.loc 1 287 0
 1310 006c A847     		blx	r5
 1311              	.LVL252:
 296:Src/remote_call.c **** }
 1312              		.loc 1 296 0
 1313 006e 2046     		mov	r0, r4
 1314              	.L126:
 1315              		.loc 1 297 0
 1316 0070 70BD     		pop	{r4, r5, r6, pc}
 1317              	.LVL253:
 1318              	.L132:
 290:Src/remote_call.c ****     break;
 1319              		.loc 1 290 0
 1320 0072 0123     		movs	r3, #1
 1321 0074 80F81433 		strb	r3, [r0, #788]
 296:Src/remote_call.c **** }
 1322              		.loc 1 296 0
 1323 0078 0020     		movs	r0, #0
 1324              	.LVL254:
 291:Src/remote_call.c ****   default:
 1325              		.loc 1 291 0
 1326 007a F9E7     		b	.L126
 1327              	.L142:
 1328              		.align	2
 1329              	.L141:
 1330 007c 00000000 		.word	.LANCHOR0
 1331              		.cfi_endproc
 1332              	.LFE6:
 1334              		.section	.text.RC_Server_Poll,"ax",%progbits
 1335              		.align	1
 1336              		.global	RC_Server_Poll
 1337              		.syntax unified
 1338              		.thumb
 1339              		.thumb_func
 1340              		.fpu fpv4-sp-d16
 1342              	RC_Server_Poll:
 1343              	.LFB7:
 298:Src/remote_call.c **** 
 299:Src/remote_call.c **** int RC_Server_Poll(RC_Server *server){
 1344              		.loc 1 299 0
 1345              		.cfi_startproc
 1346              		@ args = 0, pretend = 0, frame = 0
 1347              		@ frame_needed = 0, uses_anonymous_args = 0
 1348              	.LVL255:
ARM GAS  /tmp/ccI28C7B.s 			page 31


 1349 0000 08B5     		push	{r3, lr}
 1350              	.LCFI15:
 1351              		.cfi_def_cfa_offset 8
 1352              		.cfi_offset 3, -8
 1353              		.cfi_offset 14, -4
 300:Src/remote_call.c ****   if(!server->pending){
 1354              		.loc 1 300 0
 1355 0002 90F81433 		ldrb	r3, [r0, #788]	@ zero_extendqisi2
 1356 0006 63B1     		cbz	r3, .L145
 301:Src/remote_call.c ****     return 0;
 302:Src/remote_call.c ****   }
 303:Src/remote_call.c **** 
 304:Src/remote_call.c ****   server->pending = 0;
 1357              		.loc 1 304 0
 1358 0008 0023     		movs	r3, #0
 1359 000a 80F81433 		strb	r3, [r0, #788]
 305:Src/remote_call.c ****   server->functions[server->request.id].call(server);
 1360              		.loc 1 305 0
 1361 000e D0F80833 		ldr	r3, [r0, #776]
 1362 0012 03EB4303 		add	r3, r3, r3, lsl #1
 1363 0016 DA00     		lsls	r2, r3, #3
 1364 0018 0244     		add	r2, r2, r0
 1365 001a 5368     		ldr	r3, [r2, #4]
 1366 001c 9847     		blx	r3
 1367              	.LVL256:
 306:Src/remote_call.c ****   
 307:Src/remote_call.c ****   return 1;
 1368              		.loc 1 307 0
 1369 001e 0120     		movs	r0, #1
 1370              	.L143:
 308:Src/remote_call.c **** }
 1371              		.loc 1 308 0
 1372 0020 08BD     		pop	{r3, pc}
 1373              	.LVL257:
 1374              	.L145:
 301:Src/remote_call.c ****   }
 1375              		.loc 1 301 0
 1376 0022 0020     		movs	r0, #0
 1377              	.LVL258:
 1378 0024 FCE7     		b	.L143
 1379              		.cfi_endproc
 1380              	.LFE7:
 1382              		.section	.text.RC_Server_Get_Args,"ax",%progbits
 1383              		.align	1
 1384              		.global	RC_Server_Get_Args
 1385              		.syntax unified
 1386              		.thumb
 1387              		.thumb_func
 1388              		.fpu fpv4-sp-d16
 1390              	RC_Server_Get_Args:
 1391              	.LFB8:
 309:Src/remote_call.c **** 
 310:Src/remote_call.c **** int RC_Server_Get_Args(RC_Server *server, ...){
 1392              		.loc 1 310 0
 1393              		.cfi_startproc
 1394              		@ args = 4, pretend = 16, frame = 8
 1395              		@ frame_needed = 0, uses_anonymous_args = 1
ARM GAS  /tmp/ccI28C7B.s 			page 32


 1396              	.LVL259:
 1397 0000 0FB4     		push	{r0, r1, r2, r3}
 1398              	.LCFI16:
 1399              		.cfi_def_cfa_offset 16
 1400              		.cfi_offset 0, -16
 1401              		.cfi_offset 1, -12
 1402              		.cfi_offset 2, -8
 1403              		.cfi_offset 3, -4
 1404 0002 00B5     		push	{lr}
 1405              	.LCFI17:
 1406              		.cfi_def_cfa_offset 20
 1407              		.cfi_offset 14, -20
 1408 0004 83B0     		sub	sp, sp, #12
 1409              	.LCFI18:
 1410              		.cfi_def_cfa_offset 32
 1411 0006 04AA     		add	r2, sp, #16
 1412 0008 52F8041B 		ldr	r1, [r2], #4
 311:Src/remote_call.c ****   va_list args;
 312:Src/remote_call.c ****   va_start(args, server);
 1413              		.loc 1 312 0
 1414 000c 02AB     		add	r3, sp, #8
 1415 000e 43F8042D 		str	r2, [r3, #-4]!
 313:Src/remote_call.c **** 
 314:Src/remote_call.c ****   RC_Server_Function *const fun = &server->functions[server->request.id];
 1416              		.loc 1 314 0
 1417 0012 D1F80823 		ldr	r2, [r1, #776]
 1418              	.LVL260:
 315:Src/remote_call.c ****   
 316:Src/remote_call.c ****   int r = RC_Unpack_Vars(fun->params_fmt, server->request.data, server->request.len, &args);
 1419              		.loc 1 316 0
 1420 0016 02EB4202 		add	r2, r2, r2, lsl #1
 1421              	.LVL261:
 1422 001a D000     		lsls	r0, r2, #3
 1423 001c 0844     		add	r0, r0, r1
 1424 001e D1F81023 		ldr	r2, [r1, #784]
 1425 0022 D1F80C13 		ldr	r1, [r1, #780]
 1426              	.LVL262:
 1427 0026 0830     		adds	r0, r0, #8
 1428 0028 FFF7FEFF 		bl	RC_Unpack_Vars
 1429              	.LVL263:
 317:Src/remote_call.c **** 
 318:Src/remote_call.c ****   va_end(args);
 319:Src/remote_call.c **** 
 320:Src/remote_call.c ****   return r;
 321:Src/remote_call.c **** }
 1430              		.loc 1 321 0
 1431 002c 03B0     		add	sp, sp, #12
 1432              	.LCFI19:
 1433              		.cfi_def_cfa_offset 20
 1434              		@ sp needed
 1435 002e 5DF804EB 		ldr	lr, [sp], #4
 1436              	.LCFI20:
 1437              		.cfi_restore 14
 1438              		.cfi_def_cfa_offset 16
 1439 0032 04B0     		add	sp, sp, #16
 1440              	.LCFI21:
 1441              		.cfi_restore 3
ARM GAS  /tmp/ccI28C7B.s 			page 33


 1442              		.cfi_restore 2
 1443              		.cfi_restore 1
 1444              		.cfi_restore 0
 1445              		.cfi_def_cfa_offset 0
 1446 0034 7047     		bx	lr
 1447              		.cfi_endproc
 1448              	.LFE8:
 1450              		.section	.text.RC_Server_Return,"ax",%progbits
 1451              		.align	1
 1452              		.global	RC_Server_Return
 1453              		.syntax unified
 1454              		.thumb
 1455              		.thumb_func
 1456              		.fpu fpv4-sp-d16
 1458              	RC_Server_Return:
 1459              	.LFB9:
 322:Src/remote_call.c **** 
 323:Src/remote_call.c **** 
 324:Src/remote_call.c **** int RC_Server_Return(RC_Server *server, ...){
 1460              		.loc 1 324 0
 1461              		.cfi_startproc
 1462              		@ args = 4, pretend = 16, frame = 8
 1463              		@ frame_needed = 0, uses_anonymous_args = 1
 1464              	.LVL264:
 1465 0000 0FB4     		push	{r0, r1, r2, r3}
 1466              	.LCFI22:
 1467              		.cfi_def_cfa_offset 16
 1468              		.cfi_offset 0, -16
 1469              		.cfi_offset 1, -12
 1470              		.cfi_offset 2, -8
 1471              		.cfi_offset 3, -4
 1472 0002 70B5     		push	{r4, r5, r6, lr}
 1473              	.LCFI23:
 1474              		.cfi_def_cfa_offset 32
 1475              		.cfi_offset 4, -32
 1476              		.cfi_offset 5, -28
 1477              		.cfi_offset 6, -24
 1478              		.cfi_offset 14, -20
 1479 0004 82B0     		sub	sp, sp, #8
 1480              	.LCFI24:
 1481              		.cfi_def_cfa_offset 40
 1482 0006 06AA     		add	r2, sp, #24
 1483 0008 52F8044B 		ldr	r4, [r2], #4
 325:Src/remote_call.c ****   va_list args;
 326:Src/remote_call.c ****   va_start(args, server);
 1484              		.loc 1 326 0
 1485 000c 02AB     		add	r3, sp, #8
 1486 000e 43F8042D 		str	r2, [r3, #-4]!
 327:Src/remote_call.c **** 
 328:Src/remote_call.c ****   RP_Packet *packet = &server->interface->s_packet;
 1487              		.loc 1 328 0
 1488 0012 2568     		ldr	r5, [r4]
 1489              	.LVL265:
 329:Src/remote_call.c **** 
 330:Src/remote_call.c ****   packet->data[0] = server->request.id;
 1490              		.loc 1 330 0
 1491 0014 D4F80823 		ldr	r2, [r4, #776]
ARM GAS  /tmp/ccI28C7B.s 			page 34


 1492 0018 85F80622 		strb	r2, [r5, #518]
 331:Src/remote_call.c ****   packet->id = server->request.id_client;
 1493              		.loc 1 331 0
 1494 001c D4F80423 		ldr	r2, [r4, #772]
 1495 0020 85F80422 		strb	r2, [r5, #516]
 332:Src/remote_call.c ****   packet->len = 1 + RC_Pack_Vars(server->functions[server->request.id].return_fmt,
 1496              		.loc 1 332 0
 1497 0024 D4F80823 		ldr	r2, [r4, #776]
 1498 0028 02EB4202 		add	r2, r2, r2, lsl #1
 1499 002c D000     		lsls	r0, r2, #3
 1500 002e 0830     		adds	r0, r0, #8
 1501 0030 2044     		add	r0, r0, r4
 1502 0032 F922     		movs	r2, #249
 1503 0034 05F20721 		addw	r1, r5, #519
 1504 0038 0830     		adds	r0, r0, #8
 1505 003a FFF7FEFF 		bl	RC_Pack_Vars
 1506              	.LVL266:
 1507 003e 0130     		adds	r0, r0, #1
 1508 0040 C0B2     		uxtb	r0, r0
 1509 0042 85F80502 		strb	r0, [r5, #517]
 333:Src/remote_call.c **** 			       &packet->data[1],
 334:Src/remote_call.c **** 			       RC_MAX_DATA,
 335:Src/remote_call.c **** 			       &args);
 336:Src/remote_call.c **** 
 337:Src/remote_call.c ****   if(packet->len == 0){
 1510              		.loc 1 337 0
 1511 0046 58B1     		cbz	r0, .L153
 1512 0048 05F50176 		add	r6, r5, #516
 1513              	.LVL267:
 338:Src/remote_call.c ****     err = RC_INVALID_RETURN;
 339:Src/remote_call.c ****     return -1;
 340:Src/remote_call.c ****   }
 341:Src/remote_call.c ****   
 342:Src/remote_call.c ****   va_end(args);
 343:Src/remote_call.c ****   return RP_Send(server->interface, packet, RC_TRANSFERT_TIMEOUT);
 1514              		.loc 1 343 0
 1515 004c 0122     		movs	r2, #1
 1516 004e 3146     		mov	r1, r6
 1517 0050 2068     		ldr	r0, [r4]
 1518 0052 FFF7FEFF 		bl	RP_Send
 1519              	.LVL268:
 1520              	.L149:
 344:Src/remote_call.c **** }
 1521              		.loc 1 344 0
 1522 0056 02B0     		add	sp, sp, #8
 1523              	.LCFI25:
 1524              		.cfi_remember_state
 1525              		.cfi_def_cfa_offset 32
 1526              		@ sp needed
 1527 0058 BDE87040 		pop	{r4, r5, r6, lr}
 1528              	.LCFI26:
 1529              		.cfi_restore 14
 1530              		.cfi_restore 6
 1531              		.cfi_restore 5
 1532              		.cfi_restore 4
 1533              		.cfi_def_cfa_offset 16
 1534              	.LVL269:
ARM GAS  /tmp/ccI28C7B.s 			page 35


 1535 005c 04B0     		add	sp, sp, #16
 1536              	.LCFI27:
 1537              		.cfi_restore 3
 1538              		.cfi_restore 2
 1539              		.cfi_restore 1
 1540              		.cfi_restore 0
 1541              		.cfi_def_cfa_offset 0
 1542 005e 7047     		bx	lr
 1543              	.LVL270:
 1544              	.L153:
 1545              	.LCFI28:
 1546              		.cfi_restore_state
 338:Src/remote_call.c ****     err = RC_INVALID_RETURN;
 1547              		.loc 1 338 0
 1548 0060 024B     		ldr	r3, .L154
 1549 0062 0522     		movs	r2, #5
 1550 0064 1A60     		str	r2, [r3]
 339:Src/remote_call.c ****   }
 1551              		.loc 1 339 0
 1552 0066 4FF0FF30 		mov	r0, #-1
 1553 006a F4E7     		b	.L149
 1554              	.L155:
 1555              		.align	2
 1556              	.L154:
 1557 006c 00000000 		.word	.LANCHOR0
 1558              		.cfi_endproc
 1559              	.LFE9:
 1561              		.section	.text.RC_Client_Init,"ax",%progbits
 1562              		.align	1
 1563              		.global	RC_Client_Init
 1564              		.syntax unified
 1565              		.thumb
 1566              		.thumb_func
 1567              		.fpu fpv4-sp-d16
 1569              	RC_Client_Init:
 1570              	.LFB10:
 345:Src/remote_call.c **** 
 346:Src/remote_call.c **** //==================================================//
 347:Src/remote_call.c **** //                  RC CLIENT                       //
 348:Src/remote_call.c **** //==================================================//
 349:Src/remote_call.c **** void RC_Client_Init(RC_Client *client, RP_Interface *interface, int id_server){
 1571              		.loc 1 349 0
 1572              		.cfi_startproc
 1573              		@ args = 0, pretend = 0, frame = 0
 1574              		@ frame_needed = 0, uses_anonymous_args = 0
 1575              		@ link register save eliminated.
 1576              	.LVL271:
 350:Src/remote_call.c ****   int i;
 351:Src/remote_call.c **** 
 352:Src/remote_call.c ****   client->interface = interface;
 1577              		.loc 1 352 0
 1578 0000 0160     		str	r1, [r0]
 353:Src/remote_call.c ****   client->id_server = id_server;
 1579              		.loc 1 353 0
 1580 0002 C0F82422 		str	r2, [r0, #548]
 1581              	.LVL272:
 354:Src/remote_call.c ****   for(i = 0; i < RC_NB_FUNCTIONS; i++){
ARM GAS  /tmp/ccI28C7B.s 			page 36


 1582              		.loc 1 354 0
 1583 0006 0023     		movs	r3, #0
 1584 0008 05E0     		b	.L157
 1585              	.LVL273:
 1586              	.L158:
 355:Src/remote_call.c ****     client->functions[i].used = false;
 1587              		.loc 1 355 0 discriminator 3
 1588 000a 03EB0312 		add	r2, r3, r3, lsl #4
 1589 000e 0244     		add	r2, r2, r0
 1590 0010 0021     		movs	r1, #0
 1591 0012 1171     		strb	r1, [r2, #4]
 354:Src/remote_call.c ****   for(i = 0; i < RC_NB_FUNCTIONS; i++){
 1592              		.loc 1 354 0 discriminator 3
 1593 0014 0133     		adds	r3, r3, #1
 1594              	.LVL274:
 1595              	.L157:
 354:Src/remote_call.c ****   for(i = 0; i < RC_NB_FUNCTIONS; i++){
 1596              		.loc 1 354 0 is_stmt 0 discriminator 1
 1597 0016 1F2B     		cmp	r3, #31
 1598 0018 F7DD     		ble	.L158
 356:Src/remote_call.c ****   }
 357:Src/remote_call.c **** }
 1599              		.loc 1 357 0 is_stmt 1
 1600 001a 7047     		bx	lr
 1601              		.cfi_endproc
 1602              	.LFE10:
 1604              		.section	.text.RC_Client_Add_Function,"ax",%progbits
 1605              		.align	1
 1606              		.global	RC_Client_Add_Function
 1607              		.syntax unified
 1608              		.thumb
 1609              		.thumb_func
 1610              		.fpu fpv4-sp-d16
 1612              	RC_Client_Add_Function:
 1613              	.LFB11:
 358:Src/remote_call.c **** 
 359:Src/remote_call.c **** int RC_Client_Add_Function(RC_Client *client,
 360:Src/remote_call.c **** 			   int id,
 361:Src/remote_call.c **** 			   const char params_fmt[],
 362:Src/remote_call.c **** 			   const char return_fmt[]){
 1614              		.loc 1 362 0
 1615              		.cfi_startproc
 1616              		@ args = 0, pretend = 0, frame = 0
 1617              		@ frame_needed = 0, uses_anonymous_args = 0
 1618              	.LVL275:
 363:Src/remote_call.c ****    //Check ID range
 364:Src/remote_call.c ****   if(!CHECK_ID(id)){
 1619              		.loc 1 364 0
 1620 0000 1F29     		cmp	r1, #31
 1621 0002 1FD8     		bhi	.L165
 362:Src/remote_call.c ****    //Check ID range
 1622              		.loc 1 362 0
 1623 0004 70B5     		push	{r4, r5, r6, lr}
 1624              	.LCFI29:
 1625              		.cfi_def_cfa_offset 16
 1626              		.cfi_offset 4, -16
 1627              		.cfi_offset 5, -12
ARM GAS  /tmp/ccI28C7B.s 			page 37


 1628              		.cfi_offset 6, -8
 1629              		.cfi_offset 14, -4
 1630 0006 1E46     		mov	r6, r3
 1631 0008 0C46     		mov	r4, r1
 1632 000a 0546     		mov	r5, r0
 1633              	.LVL276:
 365:Src/remote_call.c ****     err = RC_BAD_ID;
 366:Src/remote_call.c ****     return -1;
 367:Src/remote_call.c ****   }
 368:Src/remote_call.c **** 
 369:Src/remote_call.c ****   //Get function struct by id
 370:Src/remote_call.c ****   RC_Client_Function *fun = &client->functions[id];
 371:Src/remote_call.c **** 
 372:Src/remote_call.c ****   //Params format
 373:Src/remote_call.c ****   if(RC_Copy_Format(fun->params_fmt, params_fmt) == -1){
 1634              		.loc 1 373 0
 1635 000c 01EB0110 		add	r0, r1, r1, lsl #4
 1636              	.LVL277:
 1637 0010 2844     		add	r0, r0, r5
 1638 0012 1146     		mov	r1, r2
 1639              	.LVL278:
 1640 0014 0530     		adds	r0, r0, #5
 1641 0016 FFF7FEFF 		bl	RC_Copy_Format
 1642              	.LVL279:
 1643 001a B0F1FF3F 		cmp	r0, #-1
 1644 001e 10D0     		beq	.L159
 374:Src/remote_call.c ****     return -1;
 375:Src/remote_call.c ****   }
 376:Src/remote_call.c **** 
 377:Src/remote_call.c ****   //Return format
 378:Src/remote_call.c ****   if(RC_Copy_Format(fun->return_fmt, return_fmt) == -1){
 1645              		.loc 1 378 0
 1646 0020 04EB0410 		add	r0, r4, r4, lsl #4
 1647 0024 0830     		adds	r0, r0, #8
 1648 0026 2844     		add	r0, r0, r5
 1649 0028 3146     		mov	r1, r6
 1650 002a 0530     		adds	r0, r0, #5
 1651 002c FFF7FEFF 		bl	RC_Copy_Format
 1652              	.LVL280:
 1653 0030 B0F1FF3F 		cmp	r0, #-1
 1654 0034 05D0     		beq	.L159
 379:Src/remote_call.c ****     return -1;
 380:Src/remote_call.c ****   }
 381:Src/remote_call.c **** 
 382:Src/remote_call.c ****   //Used flag
 383:Src/remote_call.c ****   fun->used = true;
 1655              		.loc 1 383 0
 1656 0036 04EB0414 		add	r4, r4, r4, lsl #4
 1657              	.LVL281:
 1658 003a 2C44     		add	r4, r4, r5
 1659 003c 0123     		movs	r3, #1
 1660 003e 2371     		strb	r3, [r4, #4]
 384:Src/remote_call.c **** 
 385:Src/remote_call.c ****   return 0;
 1661              		.loc 1 385 0
 1662 0040 0020     		movs	r0, #0
 1663              	.L159:
ARM GAS  /tmp/ccI28C7B.s 			page 38


 386:Src/remote_call.c **** }
 1664              		.loc 1 386 0
 1665 0042 70BD     		pop	{r4, r5, r6, pc}
 1666              	.LVL282:
 1667              	.L165:
 1668              	.LCFI30:
 1669              		.cfi_def_cfa_offset 0
 1670              		.cfi_restore 4
 1671              		.cfi_restore 5
 1672              		.cfi_restore 6
 1673              		.cfi_restore 14
 365:Src/remote_call.c ****     return -1;
 1674              		.loc 1 365 0
 1675 0044 024B     		ldr	r3, .L166
 1676              	.LVL283:
 1677 0046 0022     		movs	r2, #0
 1678              	.LVL284:
 1679 0048 1A60     		str	r2, [r3]
 366:Src/remote_call.c ****   }
 1680              		.loc 1 366 0
 1681 004a 4FF0FF30 		mov	r0, #-1
 1682              	.LVL285:
 1683              		.loc 1 386 0
 1684 004e 7047     		bx	lr
 1685              	.L167:
 1686              		.align	2
 1687              	.L166:
 1688 0050 00000000 		.word	.LANCHOR0
 1689              		.cfi_endproc
 1690              	.LFE11:
 1692              		.section	.text.RC_Call,"ax",%progbits
 1693              		.align	1
 1694              		.global	RC_Call
 1695              		.syntax unified
 1696              		.thumb
 1697              		.thumb_func
 1698              		.fpu fpv4-sp-d16
 1700              	RC_Call:
 1701              	.LFB12:
 387:Src/remote_call.c **** 
 388:Src/remote_call.c **** int RC_Call(RC_Client *client, int id, ...){
 1702              		.loc 1 388 0
 1703              		.cfi_startproc
 1704              		@ args = 4, pretend = 12, frame = 8
 1705              		@ frame_needed = 0, uses_anonymous_args = 1
 1706              	.LVL286:
 1707 0000 0EB4     		push	{r1, r2, r3}
 1708              	.LCFI31:
 1709              		.cfi_def_cfa_offset 12
 1710              		.cfi_offset 1, -12
 1711              		.cfi_offset 2, -8
 1712              		.cfi_offset 3, -4
 1713 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 1714              	.LCFI32:
 1715              		.cfi_def_cfa_offset 32
 1716              		.cfi_offset 4, -32
 1717              		.cfi_offset 5, -28
ARM GAS  /tmp/ccI28C7B.s 			page 39


 1718              		.cfi_offset 6, -24
 1719              		.cfi_offset 7, -20
 1720              		.cfi_offset 14, -16
 1721 0004 82B0     		sub	sp, sp, #8
 1722              	.LCFI33:
 1723              		.cfi_def_cfa_offset 40
 1724 0006 07AB     		add	r3, sp, #28
 1725 0008 53F8044B 		ldr	r4, [r3], #4
 389:Src/remote_call.c ****   va_list args;
 390:Src/remote_call.c ****   va_start(args, id);
 1726              		.loc 1 390 0
 1727 000c 0193     		str	r3, [sp, #4]
 391:Src/remote_call.c **** 
 392:Src/remote_call.c ****   //Check ID
 393:Src/remote_call.c ****   if(!CHECK_ID(id)){
 1728              		.loc 1 393 0
 1729 000e 1F2C     		cmp	r4, #31
 1730 0010 4BD8     		bhi	.L178
 1731 0012 0546     		mov	r5, r0
 1732              	.LVL287:
 394:Src/remote_call.c ****     err = RC_BAD_ID;
 395:Src/remote_call.c ****     return -1;
 396:Src/remote_call.c ****   }
 397:Src/remote_call.c **** 
 398:Src/remote_call.c ****   RC_Client_Function *const fun = &client->functions[id];
 399:Src/remote_call.c **** 
 400:Src/remote_call.c ****   if(fun->used == false){
 1733              		.loc 1 400 0
 1734 0014 04EB0413 		add	r3, r4, r4, lsl #4
 1735 0018 0344     		add	r3, r3, r0
 1736 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1737 001c 002B     		cmp	r3, #0
 1738 001e 4AD0     		beq	.L179
 401:Src/remote_call.c ****     err = RC_UNDEFINED_FUNCTION;
 402:Src/remote_call.c ****     return -1;
 403:Src/remote_call.c ****   }
 404:Src/remote_call.c **** 
 405:Src/remote_call.c ****   //Build the packet
 406:Src/remote_call.c ****   RP_Packet *packet = &client->interface->s_packet;
 1739              		.loc 1 406 0
 1740 0020 0668     		ldr	r6, [r0]
 1741 0022 06F50177 		add	r7, r6, #516
 1742              	.LVL288:
 407:Src/remote_call.c ****   packet->data[0] = id;
 1743              		.loc 1 407 0
 1744 0026 86F80642 		strb	r4, [r6, #518]
 408:Src/remote_call.c ****   packet->id = client->id_server;
 1745              		.loc 1 408 0
 1746 002a D0F82432 		ldr	r3, [r0, #548]
 1747 002e 86F80432 		strb	r3, [r6, #516]
 409:Src/remote_call.c ****   packet->len = 1 + RC_Pack_Vars(client->functions[id].params_fmt,
 1748              		.loc 1 409 0
 1749 0032 04EB0410 		add	r0, r4, r4, lsl #4
 1750              	.LVL289:
 1751 0036 2844     		add	r0, r0, r5
 1752 0038 01AB     		add	r3, sp, #4
 1753 003a F922     		movs	r2, #249
ARM GAS  /tmp/ccI28C7B.s 			page 40


 1754 003c 06F20721 		addw	r1, r6, #519
 1755 0040 0530     		adds	r0, r0, #5
 1756 0042 FFF7FEFF 		bl	RC_Pack_Vars
 1757              	.LVL290:
 1758 0046 0130     		adds	r0, r0, #1
 1759 0048 C0B2     		uxtb	r0, r0
 1760 004a 86F80502 		strb	r0, [r6, #517]
 410:Src/remote_call.c **** 				 &packet->data[1],
 411:Src/remote_call.c **** 				 RC_MAX_DATA,
 412:Src/remote_call.c **** 				 &args);
 413:Src/remote_call.c ****   if(packet->len == 0){
 1761              		.loc 1 413 0
 1762 004e 0028     		cmp	r0, #0
 1763 0050 37D0     		beq	.L180
 414:Src/remote_call.c ****     err = RC_WRONG_FORMAT;
 415:Src/remote_call.c ****     return -1;
 416:Src/remote_call.c ****   }
 417:Src/remote_call.c **** 
 418:Src/remote_call.c ****   //Send the request
 419:Src/remote_call.c ****   if(RP_Send(client->interface, packet, RC_TRANSFERT_TIMEOUT)){
 1764              		.loc 1 419 0
 1765 0052 0122     		movs	r2, #1
 1766 0054 3946     		mov	r1, r7
 1767 0056 2868     		ldr	r0, [r5]
 1768 0058 FFF7FEFF 		bl	RP_Send
 1769              	.LVL291:
 1770 005c 0028     		cmp	r0, #0
 1771 005e 36D1     		bne	.L181
 420:Src/remote_call.c ****     err = RC_LINK_ERROR;
 421:Src/remote_call.c ****     return -1;
 422:Src/remote_call.c ****   }
 423:Src/remote_call.c **** 
 424:Src/remote_call.c ****   //Wait for return
 425:Src/remote_call.c ****   if(RP_Wait_Packet(client->interface, RC_CALL_TIMEOUT)){
 1772              		.loc 1 425 0
 1773 0060 0A21     		movs	r1, #10
 1774 0062 2868     		ldr	r0, [r5]
 1775 0064 FFF7FEFF 		bl	RP_Wait_Packet
 1776              	.LVL292:
 1777 0068 0028     		cmp	r0, #0
 1778 006a 36D1     		bne	.L182
 426:Src/remote_call.c ****     err = RC_ERR_CALL_TIMEOUT;
 427:Src/remote_call.c ****     return -1;
 428:Src/remote_call.c ****   }
 429:Src/remote_call.c **** 
 430:Src/remote_call.c ****   //Check return packet
 431:Src/remote_call.c ****   RP_Packet *const r_packet = &client->interface->r_packet;
 1779              		.loc 1 431 0
 1780 006c 2968     		ldr	r1, [r5]
 1781              	.LVL293:
 432:Src/remote_call.c ****   if(r_packet->len < 1 || r_packet->data[0] != id || r_packet->id != client->id_server){
 1782              		.loc 1 432 0
 1783 006e 91F80921 		ldrb	r2, [r1, #265]	@ zero_extendqisi2
 1784 0072 002A     		cmp	r2, #0
 1785 0074 37D0     		beq	.L175
 1786              		.loc 1 432 0 is_stmt 0 discriminator 1
 1787 0076 91F80A31 		ldrb	r3, [r1, #266]	@ zero_extendqisi2
ARM GAS  /tmp/ccI28C7B.s 			page 41


 1788 007a A342     		cmp	r3, r4
 1789 007c 33D1     		bne	.L175
 1790              		.loc 1 432 0 discriminator 2
 1791 007e 91F80801 		ldrb	r0, [r1, #264]	@ zero_extendqisi2
 1792 0082 D5F82432 		ldr	r3, [r5, #548]
 1793 0086 9842     		cmp	r0, r3
 1794 0088 2DD1     		bne	.L175
 433:Src/remote_call.c ****     err = RC_INVALID_RETURN;
 434:Src/remote_call.c ****     return -1;
 435:Src/remote_call.c ****   }
 436:Src/remote_call.c **** 
 437:Src/remote_call.c ****   //Extract return informations
 438:Src/remote_call.c ****   int r = RC_Unpack_Vars(client->functions[id].return_fmt,
 1795              		.loc 1 438 0 is_stmt 1
 1796 008a 04EB0414 		add	r4, r4, r4, lsl #4
 1797              	.LVL294:
 1798 008e 0834     		adds	r4, r4, #8
 1799 0090 2C44     		add	r4, r4, r5
 1800 0092 01AB     		add	r3, sp, #4
 1801 0094 013A     		subs	r2, r2, #1
 1802 0096 01F20B11 		addw	r1, r1, #267
 1803              	.LVL295:
 1804 009a 601D     		adds	r0, r4, #5
 1805 009c FFF7FEFF 		bl	RC_Unpack_Vars
 1806              	.LVL296:
 1807              	.L168:
 439:Src/remote_call.c **** 			 &r_packet->data[1],
 440:Src/remote_call.c **** 			 r_packet->len - 1,
 441:Src/remote_call.c **** 			 &args);
 442:Src/remote_call.c ****   va_end(args);
 443:Src/remote_call.c **** 
 444:Src/remote_call.c ****   return r;
 445:Src/remote_call.c **** }
 1808              		.loc 1 445 0
 1809 00a0 02B0     		add	sp, sp, #8
 1810              	.LCFI34:
 1811              		.cfi_remember_state
 1812              		.cfi_def_cfa_offset 32
 1813              		@ sp needed
 1814 00a2 BDE8F040 		pop	{r4, r5, r6, r7, lr}
 1815              	.LCFI35:
 1816              		.cfi_restore 14
 1817              		.cfi_restore 7
 1818              		.cfi_restore 6
 1819              		.cfi_restore 5
 1820              		.cfi_restore 4
 1821              		.cfi_def_cfa_offset 12
 1822 00a6 03B0     		add	sp, sp, #12
 1823              	.LCFI36:
 1824              		.cfi_restore 3
 1825              		.cfi_restore 2
 1826              		.cfi_restore 1
 1827              		.cfi_def_cfa_offset 0
 1828 00a8 7047     		bx	lr
 1829              	.LVL297:
 1830              	.L178:
 1831              	.LCFI37:
ARM GAS  /tmp/ccI28C7B.s 			page 42


 1832              		.cfi_restore_state
 394:Src/remote_call.c ****     return -1;
 1833              		.loc 1 394 0
 1834 00aa 124B     		ldr	r3, .L183
 1835 00ac 0022     		movs	r2, #0
 1836 00ae 1A60     		str	r2, [r3]
 395:Src/remote_call.c ****   }
 1837              		.loc 1 395 0
 1838 00b0 4FF0FF30 		mov	r0, #-1
 1839              	.LVL298:
 1840 00b4 F4E7     		b	.L168
 1841              	.LVL299:
 1842              	.L179:
 401:Src/remote_call.c ****     return -1;
 1843              		.loc 1 401 0
 1844 00b6 0F4B     		ldr	r3, .L183
 1845 00b8 0222     		movs	r2, #2
 1846 00ba 1A60     		str	r2, [r3]
 402:Src/remote_call.c ****   }
 1847              		.loc 1 402 0
 1848 00bc 4FF0FF30 		mov	r0, #-1
 1849              	.LVL300:
 1850 00c0 EEE7     		b	.L168
 1851              	.LVL301:
 1852              	.L180:
 414:Src/remote_call.c ****     return -1;
 1853              		.loc 1 414 0
 1854 00c2 0C4B     		ldr	r3, .L183
 1855 00c4 0122     		movs	r2, #1
 1856 00c6 1A60     		str	r2, [r3]
 415:Src/remote_call.c ****   }
 1857              		.loc 1 415 0
 1858 00c8 4FF0FF30 		mov	r0, #-1
 1859 00cc E8E7     		b	.L168
 1860              	.L181:
 420:Src/remote_call.c ****     return -1;
 1861              		.loc 1 420 0
 1862 00ce 094B     		ldr	r3, .L183
 1863 00d0 0322     		movs	r2, #3
 1864 00d2 1A60     		str	r2, [r3]
 421:Src/remote_call.c ****   }
 1865              		.loc 1 421 0
 1866 00d4 4FF0FF30 		mov	r0, #-1
 1867 00d8 E2E7     		b	.L168
 1868              	.L182:
 426:Src/remote_call.c ****     return -1;
 1869              		.loc 1 426 0
 1870 00da 064B     		ldr	r3, .L183
 1871 00dc 0422     		movs	r2, #4
 1872 00de 1A60     		str	r2, [r3]
 427:Src/remote_call.c ****   }
 1873              		.loc 1 427 0
 1874 00e0 4FF0FF30 		mov	r0, #-1
 1875 00e4 DCE7     		b	.L168
 1876              	.LVL302:
 1877              	.L175:
 433:Src/remote_call.c ****     return -1;
ARM GAS  /tmp/ccI28C7B.s 			page 43


 1878              		.loc 1 433 0
 1879 00e6 034B     		ldr	r3, .L183
 1880 00e8 0522     		movs	r2, #5
 1881 00ea 1A60     		str	r2, [r3]
 434:Src/remote_call.c ****   }
 1882              		.loc 1 434 0
 1883 00ec 4FF0FF30 		mov	r0, #-1
 1884 00f0 D6E7     		b	.L168
 1885              	.L184:
 1886 00f2 00BF     		.align	2
 1887              	.L183:
 1888 00f4 00000000 		.word	.LANCHOR0
 1889              		.cfi_endproc
 1890              	.LFE12:
 1892              		.section	.bss.err,"aw",%nobits
 1893              		.align	2
 1894              		.set	.LANCHOR0,. + 0
 1897              	err:
 1898 0000 00000000 		.space	4
 1899              		.text
 1900              	.Letext0:
 1901              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1902              		.file 3 "/usr/arm-none-eabi/include/sys/lock.h"
 1903              		.file 4 "/usr/arm-none-eabi/include/sys/_types.h"
 1904              		.file 5 "/usr/lib/gcc/arm-none-eabi/7.3.0/include/stddef.h"
 1905              		.file 6 "/usr/arm-none-eabi/include/sys/reent.h"
 1906              		.file 7 "/usr/arm-none-eabi/include/stdlib.h"
 1907              		.file 8 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1908              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.3.0/include/stdarg.h"
 1909              		.file 10 "<built-in>"
 1910              		.file 11 "Inc/crc_16.h"
 1911              		.file 12 "Inc/robotronik_protocol.h"
 1912              		.file 13 "Inc/remote_call.h"
ARM GAS  /tmp/ccI28C7B.s 			page 44


DEFINED SYMBOLS
                            *ABS*:0000000000000000 remote_call.c
     /tmp/ccI28C7B.s:18     .text.RC_Copy_Format:0000000000000000 $t
     /tmp/ccI28C7B.s:24     .text.RC_Copy_Format:0000000000000000 RC_Copy_Format
     /tmp/ccI28C7B.s:76     .text.RC_Copy_Format:0000000000000028 $d
     /tmp/ccI28C7B.s:128    .text.RC_Copy_Format:00000000000000f8 $t
     /tmp/ccI28C7B.s:197    .text.RC_Copy_Format:0000000000000128 $d
     /tmp/ccI28C7B.s:203    .text.RC_Pack_Vars:0000000000000000 $t
     /tmp/ccI28C7B.s:209    .text.RC_Pack_Vars:0000000000000000 RC_Pack_Vars
     /tmp/ccI28C7B.s:622    .text.RC_Pack_Vars:00000000000001a8 $d
     /tmp/ccI28C7B.s:627    .text.RC_Unpack_Vars:0000000000000000 $t
     /tmp/ccI28C7B.s:633    .text.RC_Unpack_Vars:0000000000000000 RC_Unpack_Vars
     /tmp/ccI28C7B.s:1019   .text.RC_Unpack_Vars:0000000000000164 $d
     /tmp/ccI28C7B.s:1024   .text.RC_Get_Error:0000000000000000 $t
     /tmp/ccI28C7B.s:1031   .text.RC_Get_Error:0000000000000000 RC_Get_Error
     /tmp/ccI28C7B.s:1045   .text.RC_Get_Error:0000000000000008 $d
     /tmp/ccI28C7B.s:1050   .text.RC_Server_Init:0000000000000000 $t
     /tmp/ccI28C7B.s:1057   .text.RC_Server_Init:0000000000000000 RC_Server_Init
     /tmp/ccI28C7B.s:1092   .text.RC_Server_Add_Function:0000000000000000 $t
     /tmp/ccI28C7B.s:1099   .text.RC_Server_Add_Function:0000000000000000 RC_Server_Add_Function
     /tmp/ccI28C7B.s:1183   .text.RC_Server_Add_Function:000000000000005c $d
     /tmp/ccI28C7B.s:1188   .text.RC_Server_Get_Request:0000000000000000 $t
     /tmp/ccI28C7B.s:1195   .text.RC_Server_Get_Request:0000000000000000 RC_Server_Get_Request
     /tmp/ccI28C7B.s:1330   .text.RC_Server_Get_Request:000000000000007c $d
     /tmp/ccI28C7B.s:1335   .text.RC_Server_Poll:0000000000000000 $t
     /tmp/ccI28C7B.s:1342   .text.RC_Server_Poll:0000000000000000 RC_Server_Poll
     /tmp/ccI28C7B.s:1383   .text.RC_Server_Get_Args:0000000000000000 $t
     /tmp/ccI28C7B.s:1390   .text.RC_Server_Get_Args:0000000000000000 RC_Server_Get_Args
     /tmp/ccI28C7B.s:1451   .text.RC_Server_Return:0000000000000000 $t
     /tmp/ccI28C7B.s:1458   .text.RC_Server_Return:0000000000000000 RC_Server_Return
     /tmp/ccI28C7B.s:1557   .text.RC_Server_Return:000000000000006c $d
     /tmp/ccI28C7B.s:1562   .text.RC_Client_Init:0000000000000000 $t
     /tmp/ccI28C7B.s:1569   .text.RC_Client_Init:0000000000000000 RC_Client_Init
     /tmp/ccI28C7B.s:1605   .text.RC_Client_Add_Function:0000000000000000 $t
     /tmp/ccI28C7B.s:1612   .text.RC_Client_Add_Function:0000000000000000 RC_Client_Add_Function
     /tmp/ccI28C7B.s:1688   .text.RC_Client_Add_Function:0000000000000050 $d
     /tmp/ccI28C7B.s:1693   .text.RC_Call:0000000000000000 $t
     /tmp/ccI28C7B.s:1700   .text.RC_Call:0000000000000000 RC_Call
     /tmp/ccI28C7B.s:1888   .text.RC_Call:00000000000000f4 $d
     /tmp/ccI28C7B.s:1893   .bss.err:0000000000000000 $d
     /tmp/ccI28C7B.s:1897   .bss.err:0000000000000000 err

UNDEFINED SYMBOLS
__aeabi_d2f
RP_Send
RP_Wait_Packet
