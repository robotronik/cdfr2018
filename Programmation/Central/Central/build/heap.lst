ARM GAS  /tmp/ccuPvuv2.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"heap.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.empty_heap,"ax",%progbits
  18              		.align	1
  19              		.global	empty_heap
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	empty_heap:
  26              	.LFB0:
  27              		.file 1 "Src/heap.c"
   1:Src/heap.c    **** #include "heap.h"
   2:Src/heap.c    **** #include "map.h"
   3:Src/heap.c    **** 
   4:Src/heap.c    **** #ifdef DEBUG
   5:Src/heap.c    **** #include <assert.h>
   6:Src/heap.c    **** #endif
   7:Src/heap.c    **** 
   8:Src/heap.c    **** #include <stdlib.h>
   9:Src/heap.c    **** 
  10:Src/heap.c    **** static int heap_size = 0;
  11:Src/heap.c    **** static Cell* heap[HEAP_SIZE];
  12:Src/heap.c    **** 
  13:Src/heap.c    **** #define HEAP_FULL (heap_size == HEAP_SIZE)
  14:Src/heap.c    **** #define HEAP_EMPTY (heap_size == 0)
  15:Src/heap.c    **** #define COMPARE_INDEX(i,j) (heap[i]->f < heap[j]->f)
  16:Src/heap.c    **** #define SWAP_INDEX(i,j) {Cell* tmp = heap[i]; heap[i] = heap[j]; heap[j] = tmp;}
  17:Src/heap.c    **** #ifdef DEBUG
  18:Src/heap.c    **** #define PARENT_INDEX(k) ({assert(k != 0); (k-1)/2;})
  19:Src/heap.c    **** #else
  20:Src/heap.c    **** #define PARENT_INDEX(k) ((k-1)/2)
  21:Src/heap.c    **** #endif
  22:Src/heap.c    **** #define LEFT_CHILD_INDEX(k) (2*k+1)
  23:Src/heap.c    **** #define RIGHT_CHILD_INDEX(k) (2*k+2)
  24:Src/heap.c    **** 
  25:Src/heap.c    **** static inline void percolate_up(int index);
  26:Src/heap.c    **** static inline void percolate_down(int index);
  27:Src/heap.c    **** static inline int index_max_child(int index);
  28:Src/heap.c    **** 
  29:Src/heap.c    **** void empty_heap(){
  28              		.loc 1 29 0
  29              		.cfi_startproc
ARM GAS  /tmp/ccuPvuv2.s 			page 2


  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  30:Src/heap.c    ****   heap_size = 0;
  33              		.loc 1 30 0
  34 0000 014B     		ldr	r3, .L2
  35 0002 0022     		movs	r2, #0
  36 0004 1A60     		str	r2, [r3]
  31:Src/heap.c    **** }
  37              		.loc 1 31 0
  38 0006 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 0008 00000000 		.word	.LANCHOR0
  43              		.cfi_endproc
  44              	.LFE0:
  46              		.section	.text.is_empty,"ax",%progbits
  47              		.align	1
  48              		.global	is_empty
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  52              		.fpu fpv4-sp-d16
  54              	is_empty:
  55              	.LFB1:
  32:Src/heap.c    **** 
  33:Src/heap.c    **** int is_empty(){
  56              		.loc 1 33 0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  34:Src/heap.c    ****   return heap_size == 0;
  61              		.loc 1 34 0
  62 0000 024B     		ldr	r3, .L5
  63 0002 1868     		ldr	r0, [r3]
  35:Src/heap.c    **** }
  64              		.loc 1 35 0
  65 0004 B0FA80F0 		clz	r0, r0
  66 0008 4009     		lsrs	r0, r0, #5
  67 000a 7047     		bx	lr
  68              	.L6:
  69              		.align	2
  70              	.L5:
  71 000c 00000000 		.word	.LANCHOR0
  72              		.cfi_endproc
  73              	.LFE1:
  75              		.section	.text.is_full,"ax",%progbits
  76              		.align	1
  77              		.global	is_full
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  81              		.fpu fpv4-sp-d16
  83              	is_full:
  84              	.LFB2:
ARM GAS  /tmp/ccuPvuv2.s 			page 3


  36:Src/heap.c    **** 
  37:Src/heap.c    **** int is_full(){
  85              		.loc 1 37 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              		@ link register save eliminated.
  38:Src/heap.c    ****   return heap_size == HEAP_SIZE;
  90              		.loc 1 38 0
  91 0000 044B     		ldr	r3, .L8
  92 0002 1868     		ldr	r0, [r3]
  39:Src/heap.c    **** }
  93              		.loc 1 39 0
  94 0004 40F6A663 		movw	r3, #3750
  95 0008 9842     		cmp	r0, r3
  96 000a 14BF     		ite	ne
  97 000c 0020     		movne	r0, #0
  98 000e 0120     		moveq	r0, #1
  99 0010 7047     		bx	lr
 100              	.L9:
 101 0012 00BF     		.align	2
 102              	.L8:
 103 0014 00000000 		.word	.LANCHOR0
 104              		.cfi_endproc
 105              	.LFE2:
 107              		.section	.text.insert,"ax",%progbits
 108              		.align	1
 109              		.global	insert
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 113              		.fpu fpv4-sp-d16
 115              	insert:
 116              	.LFB3:
  40:Src/heap.c    **** 
  41:Src/heap.c    **** int insert(Cell *cell){
 117              		.loc 1 41 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121              		@ link register save eliminated.
 122              	.LVL0:
 123 0000 70B4     		push	{r4, r5, r6}
 124              	.LCFI0:
 125              		.cfi_def_cfa_offset 12
 126              		.cfi_offset 4, -12
 127              		.cfi_offset 5, -8
 128              		.cfi_offset 6, -4
  42:Src/heap.c    ****   if(HEAP_FULL){
 129              		.loc 1 42 0
 130 0002 164B     		ldr	r3, .L17
 131 0004 1E68     		ldr	r6, [r3]
 132 0006 40F6A663 		movw	r3, #3750
 133 000a 9E42     		cmp	r6, r3
 134 000c 23D0     		beq	.L15
  43:Src/heap.c    ****     return -1;
  44:Src/heap.c    ****   }
ARM GAS  /tmp/ccuPvuv2.s 			page 4


  45:Src/heap.c    **** 
  46:Src/heap.c    ****   //Insert the element at the end of the heap.
  47:Src/heap.c    ****   heap[heap_size] = cell;
 135              		.loc 1 47 0
 136 000e 144B     		ldr	r3, .L17+4
 137 0010 43F82600 		str	r0, [r3, r6, lsl #2]
 138              	.LVL1:
 139              	.LBB10:
 140              	.LBB11:
  48:Src/heap.c    **** 
  49:Src/heap.c    ****   //Percolate up
  50:Src/heap.c    ****   percolate_up(heap_size);
  51:Src/heap.c    **** 
  52:Src/heap.c    ****   //Update heap size
  53:Src/heap.c    ****   heap_size++;
  54:Src/heap.c    ****   
  55:Src/heap.c    ****   return 0;
  56:Src/heap.c    **** }
  57:Src/heap.c    **** 
  58:Src/heap.c    **** Cell* pop(){
  59:Src/heap.c    ****   if(HEAP_EMPTY){
  60:Src/heap.c    ****     return NULL;
  61:Src/heap.c    ****   }
  62:Src/heap.c    **** 
  63:Src/heap.c    ****   //Get the highest priority element
  64:Src/heap.c    ****   Cell *cell = heap[0];
  65:Src/heap.c    **** 
  66:Src/heap.c    ****   //Update heap size
  67:Src/heap.c    ****   heap_size--;
  68:Src/heap.c    **** 
  69:Src/heap.c    ****   if(!HEAP_EMPTY){
  70:Src/heap.c    ****     //Move the last element to the first
  71:Src/heap.c    ****     heap[0] = heap[heap_size];
  72:Src/heap.c    ****     
  73:Src/heap.c    ****     //Percolate down
  74:Src/heap.c    ****     percolate_down(0);
  75:Src/heap.c    ****   }
  76:Src/heap.c    ****   
  77:Src/heap.c    ****   return cell;
  78:Src/heap.c    **** }
  79:Src/heap.c    **** 
  80:Src/heap.c    **** Cell* peek(){
  81:Src/heap.c    ****   if(HEAP_EMPTY)
  82:Src/heap.c    ****     return NULL;
  83:Src/heap.c    ****   else
  84:Src/heap.c    ****     return heap[0];
  85:Src/heap.c    **** }
  86:Src/heap.c    **** 
  87:Src/heap.c    **** static inline void percolate_up(int index){
  88:Src/heap.c    ****   int k = index;
  89:Src/heap.c    ****   int p_index = PARENT_INDEX(k);
 141              		.loc 1 89 0
 142 0014 731E     		subs	r3, r6, #1
 143 0016 03EBD373 		add	r3, r3, r3, lsr #31
 144 001a 5B10     		asrs	r3, r3, #1
 145              	.LVL2:
  88:Src/heap.c    ****   int p_index = PARENT_INDEX(k);
ARM GAS  /tmp/ccuPvuv2.s 			page 5


 146              		.loc 1 88 0
 147 001c 3146     		mov	r1, r6
 148 001e 09E0     		b	.L12
 149              	.LVL3:
 150              	.L14:
 151              	.LBB12:
  90:Src/heap.c    ****   
  91:Src/heap.c    ****   while((k > 0) && COMPARE_INDEX(k, p_index)){
  92:Src/heap.c    ****     SWAP_INDEX(k, p_index);
 152              		.loc 1 92 0
 153 0020 0F4C     		ldr	r4, .L17+4
 154 0022 44F82120 		str	r2, [r4, r1, lsl #2]
 155 0026 44F82300 		str	r0, [r4, r3, lsl #2]
 156              	.LVL4:
 157              	.LBE12:
  93:Src/heap.c    ****     k = p_index;
  94:Src/heap.c    ****     p_index = PARENT_INDEX(k);
 158              		.loc 1 94 0
 159 002a 5A1E     		subs	r2, r3, #1
 160 002c 02EBD272 		add	r2, r2, r2, lsr #31
 161              	.LVL5:
  93:Src/heap.c    ****     k = p_index;
 162              		.loc 1 93 0
 163 0030 1946     		mov	r1, r3
 164              		.loc 1 94 0
 165 0032 5310     		asrs	r3, r2, #1
 166              	.LVL6:
 167              	.L12:
  91:Src/heap.c    ****     SWAP_INDEX(k, p_index);
 168              		.loc 1 91 0
 169 0034 0029     		cmp	r1, #0
 170 0036 08DD     		ble	.L13
 171 0038 094A     		ldr	r2, .L17+4
 172 003a 52F82100 		ldr	r0, [r2, r1, lsl #2]
 173 003e 8589     		ldrh	r5, [r0, #12]
 174 0040 52F82320 		ldr	r2, [r2, r3, lsl #2]
 175 0044 9489     		ldrh	r4, [r2, #12]
 176 0046 A542     		cmp	r5, r4
 177 0048 EAD3     		bcc	.L14
 178              	.L13:
 179              	.LVL7:
 180              	.LBE11:
 181              	.LBE10:
  53:Src/heap.c    ****   
 182              		.loc 1 53 0
 183 004a 0136     		adds	r6, r6, #1
 184 004c 034B     		ldr	r3, .L17
 185 004e 1E60     		str	r6, [r3]
  55:Src/heap.c    **** }
 186              		.loc 1 55 0
 187 0050 0020     		movs	r0, #0
 188              	.L10:
  56:Src/heap.c    **** 
 189              		.loc 1 56 0
 190 0052 70BC     		pop	{r4, r5, r6}
 191              	.LCFI1:
 192              		.cfi_remember_state
ARM GAS  /tmp/ccuPvuv2.s 			page 6


 193              		.cfi_restore 6
 194              		.cfi_restore 5
 195              		.cfi_restore 4
 196              		.cfi_def_cfa_offset 0
 197 0054 7047     		bx	lr
 198              	.LVL8:
 199              	.L15:
 200              	.LCFI2:
 201              		.cfi_restore_state
  43:Src/heap.c    ****   }
 202              		.loc 1 43 0
 203 0056 4FF0FF30 		mov	r0, #-1
 204              	.LVL9:
 205 005a FAE7     		b	.L10
 206              	.L18:
 207              		.align	2
 208              	.L17:
 209 005c 00000000 		.word	.LANCHOR0
 210 0060 00000000 		.word	heap
 211              		.cfi_endproc
 212              	.LFE3:
 214              		.section	.text.pop,"ax",%progbits
 215              		.align	1
 216              		.global	pop
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 220              		.fpu fpv4-sp-d16
 222              	pop:
 223              	.LFB4:
  58:Src/heap.c    ****   if(HEAP_EMPTY){
 224              		.loc 1 58 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
  59:Src/heap.c    ****     return NULL;
 229              		.loc 1 59 0
 230 0000 284B     		ldr	r3, .L36
 231 0002 1B68     		ldr	r3, [r3]
 232 0004 002B     		cmp	r3, #0
 233 0006 48D0     		beq	.L25
  64:Src/heap.c    **** 
 234              		.loc 1 64 0
 235 0008 274A     		ldr	r2, .L36+4
 236 000a 1068     		ldr	r0, [r2]
 237              	.LVL10:
  67:Src/heap.c    **** 
 238              		.loc 1 67 0
 239 000c 013B     		subs	r3, r3, #1
 240 000e 254A     		ldr	r2, .L36
 241 0010 1360     		str	r3, [r2]
  69:Src/heap.c    ****     //Move the last element to the first
 242              		.loc 1 69 0
 243 0012 03B9     		cbnz	r3, .L35
  78:Src/heap.c    **** 
 244              		.loc 1 78 0
ARM GAS  /tmp/ccuPvuv2.s 			page 7


 245 0014 7047     		bx	lr
 246              	.L35:
  58:Src/heap.c    ****   if(HEAP_EMPTY){
 247              		.loc 1 58 0
 248 0016 F0B4     		push	{r4, r5, r6, r7}
 249              	.LCFI3:
 250              		.cfi_def_cfa_offset 16
 251              		.cfi_offset 4, -16
 252              		.cfi_offset 5, -12
 253              		.cfi_offset 6, -8
 254              		.cfi_offset 7, -4
  71:Src/heap.c    ****     
 255              		.loc 1 71 0
 256 0018 234A     		ldr	r2, .L36+4
 257 001a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 258 001e 1360     		str	r3, [r2]
 259              	.LVL11:
 260              	.LBB20:
 261              	.LBB21:
 262              	.LBB22:
 263              	.LBB23:
  95:Src/heap.c    ****   }
  96:Src/heap.c    **** }
  97:Src/heap.c    **** 
  98:Src/heap.c    **** static inline void percolate_down(int index){
  99:Src/heap.c    ****   int i_max = index_max_child(index);
 100:Src/heap.c    **** 
 101:Src/heap.c    ****   while((i_max != index) && COMPARE_INDEX(i_max, index)){
 102:Src/heap.c    ****     SWAP_INDEX(index, i_max);
 103:Src/heap.c    ****     index = i_max;
 104:Src/heap.c    ****     i_max = index_max_child(index);
 105:Src/heap.c    ****   }
 106:Src/heap.c    **** }
 107:Src/heap.c    **** 
 108:Src/heap.c    **** static inline int index_max_child(int index){
 109:Src/heap.c    ****   const int lci = LEFT_CHILD_INDEX(index);
 110:Src/heap.c    ****   const int rci = RIGHT_CHILD_INDEX(index);
 111:Src/heap.c    **** 
 112:Src/heap.c    ****   if(lci > heap_size - 1)
 264              		.loc 1 112 0
 265 0020 204B     		ldr	r3, .L36
 266 0022 1E68     		ldr	r6, [r3]
 267 0024 013E     		subs	r6, r6, #1
 268 0026 002E     		cmp	r6, #0
 269 0028 0ADD     		ble	.L26
 113:Src/heap.c    ****     return index;
 114:Src/heap.c    **** 
 115:Src/heap.c    ****   if(rci > heap_size - 1)
 270              		.loc 1 115 0
 271 002a 012E     		cmp	r6, #1
 272 002c 0BDD     		ble	.L27
 116:Src/heap.c    ****     return lci;
 117:Src/heap.c    ****   
 118:Src/heap.c    ****   return COMPARE_INDEX(lci, rci)?lci:rci;
 273              		.loc 1 118 0
 274 002e 1346     		mov	r3, r2
 275 0030 5268     		ldr	r2, [r2, #4]
ARM GAS  /tmp/ccuPvuv2.s 			page 8


 276 0032 9289     		ldrh	r2, [r2, #12]
 277 0034 9B68     		ldr	r3, [r3, #8]
 278 0036 9B89     		ldrh	r3, [r3, #12]
 279 0038 9A42     		cmp	r2, r3
 280 003a 06D2     		bcs	.L28
 281 003c 0123     		movs	r3, #1
 282 003e 00E0     		b	.L21
 283              	.L26:
 113:Src/heap.c    ****     return index;
 284              		.loc 1 113 0
 285 0040 0023     		movs	r3, #0
 286              	.L21:
 287              	.LBE23:
 288              	.LBE22:
 289              	.LBB25:
 290              	.LBB26:
 291              		.loc 1 118 0
 292 0042 0021     		movs	r1, #0
 293 0044 06E0     		b	.L22
 294              	.L27:
 295              	.LBE26:
 296              	.LBE25:
 297              	.LBB29:
 298              	.LBB24:
 116:Src/heap.c    ****     return lci;
 299              		.loc 1 116 0
 300 0046 0123     		movs	r3, #1
 301 0048 FBE7     		b	.L21
 302              	.L28:
 303              		.loc 1 118 0
 304 004a 0223     		movs	r3, #2
 305 004c F9E7     		b	.L21
 306              	.LVL12:
 307              	.L29:
 308              	.LBE24:
 309              	.LBE29:
 310              	.LBB30:
 311              	.LBB27:
 113:Src/heap.c    ****     return index;
 312              		.loc 1 113 0
 313 004e 1A46     		mov	r2, r3
 314              	.LVL13:
 315              	.L23:
 316              		.loc 1 118 0
 317 0050 1946     		mov	r1, r3
 318              	.LVL14:
 319 0052 1346     		mov	r3, r2
 320              	.LVL15:
 321              	.L22:
 322              	.LBE27:
 323              	.LBE30:
 101:Src/heap.c    ****     SWAP_INDEX(index, i_max);
 324              		.loc 1 101 0
 325 0054 9942     		cmp	r1, r3
 326 0056 22D0     		beq	.L19
 327 0058 134A     		ldr	r2, .L36+4
 328 005a 52F82340 		ldr	r4, [r2, r3, lsl #2]
ARM GAS  /tmp/ccuPvuv2.s 			page 9


 329 005e A789     		ldrh	r7, [r4, #12]
 330 0060 52F82120 		ldr	r2, [r2, r1, lsl #2]
 331 0064 9589     		ldrh	r5, [r2, #12]
 332 0066 AF42     		cmp	r7, r5
 333 0068 19D2     		bcs	.L19
 334              	.LVL16:
 335              	.LBB31:
 102:Src/heap.c    ****     index = i_max;
 336              		.loc 1 102 0
 337 006a 0F4D     		ldr	r5, .L36+4
 338 006c 45F82140 		str	r4, [r5, r1, lsl #2]
 339 0070 45F82320 		str	r2, [r5, r3, lsl #2]
 340              	.LVL17:
 341              	.LBE31:
 342              	.LBB32:
 343              	.LBB28:
 109:Src/heap.c    ****   const int rci = RIGHT_CHILD_INDEX(index);
 344              		.loc 1 109 0
 345 0074 5A00     		lsls	r2, r3, #1
 346              	.LVL18:
 347 0076 0132     		adds	r2, r2, #1
 348              	.LVL19:
 110:Src/heap.c    **** 
 349              		.loc 1 110 0
 350 0078 591C     		adds	r1, r3, #1
 351 007a 4900     		lsls	r1, r1, #1
 352              	.LVL20:
 112:Src/heap.c    ****     return index;
 353              		.loc 1 112 0
 354 007c 9642     		cmp	r6, r2
 355 007e E6DB     		blt	.L29
 115:Src/heap.c    ****     return lci;
 356              		.loc 1 115 0
 357 0080 8E42     		cmp	r6, r1
 358 0082 E5DB     		blt	.L23
 359              		.loc 1 118 0
 360 0084 2C46     		mov	r4, r5
 361 0086 55F82250 		ldr	r5, [r5, r2, lsl #2]
 362              	.LVL21:
 363 008a AD89     		ldrh	r5, [r5, #12]
 364 008c 54F82140 		ldr	r4, [r4, r1, lsl #2]
 365              	.LVL22:
 366 0090 A489     		ldrh	r4, [r4, #12]
 367 0092 A542     		cmp	r5, r4
 368 0094 DCD3     		bcc	.L23
 369 0096 0A46     		mov	r2, r1
 370              	.LVL23:
 371 0098 DAE7     		b	.L23
 372              	.LVL24:
 373              	.L25:
 374              	.LCFI4:
 375              		.cfi_def_cfa_offset 0
 376              		.cfi_restore 4
 377              		.cfi_restore 5
 378              		.cfi_restore 6
 379              		.cfi_restore 7
 380              	.LBE28:
ARM GAS  /tmp/ccuPvuv2.s 			page 10


 381              	.LBE32:
 382              	.LBE21:
 383              	.LBE20:
  60:Src/heap.c    ****   }
 384              		.loc 1 60 0
 385 009a 0020     		movs	r0, #0
 386 009c 7047     		bx	lr
 387              	.LVL25:
 388              	.L19:
 389              	.LCFI5:
 390              		.cfi_def_cfa_offset 16
 391              		.cfi_offset 4, -16
 392              		.cfi_offset 5, -12
 393              		.cfi_offset 6, -8
 394              		.cfi_offset 7, -4
  78:Src/heap.c    **** 
 395              		.loc 1 78 0
 396 009e F0BC     		pop	{r4, r5, r6, r7}
 397              	.LCFI6:
 398              		.cfi_restore 7
 399              		.cfi_restore 6
 400              		.cfi_restore 5
 401              		.cfi_restore 4
 402              		.cfi_def_cfa_offset 0
 403 00a0 7047     		bx	lr
 404              	.L37:
 405 00a2 00BF     		.align	2
 406              	.L36:
 407 00a4 00000000 		.word	.LANCHOR0
 408 00a8 00000000 		.word	heap
 409              		.cfi_endproc
 410              	.LFE4:
 412              		.section	.text.peek,"ax",%progbits
 413              		.align	1
 414              		.global	peek
 415              		.syntax unified
 416              		.thumb
 417              		.thumb_func
 418              		.fpu fpv4-sp-d16
 420              	peek:
 421              	.LFB5:
  80:Src/heap.c    ****   if(HEAP_EMPTY)
 422              		.loc 1 80 0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 0
 425              		@ frame_needed = 0, uses_anonymous_args = 0
 426              		@ link register save eliminated.
  81:Src/heap.c    ****     return NULL;
 427              		.loc 1 81 0
 428 0000 034B     		ldr	r3, .L41
 429 0002 1B68     		ldr	r3, [r3]
 430 0004 13B1     		cbz	r3, .L40
  84:Src/heap.c    **** }
 431              		.loc 1 84 0
 432 0006 034B     		ldr	r3, .L41+4
 433 0008 1868     		ldr	r0, [r3]
 434 000a 7047     		bx	lr
ARM GAS  /tmp/ccuPvuv2.s 			page 11


 435              	.L40:
  82:Src/heap.c    ****   else
 436              		.loc 1 82 0
 437 000c 0020     		movs	r0, #0
  85:Src/heap.c    **** 
 438              		.loc 1 85 0
 439 000e 7047     		bx	lr
 440              	.L42:
 441              		.align	2
 442              	.L41:
 443 0010 00000000 		.word	.LANCHOR0
 444 0014 00000000 		.word	heap
 445              		.cfi_endproc
 446              	.LFE5:
 448              		.section	.bss.heap,"aw",%nobits
 449              		.align	2
 452              	heap:
 453 0000 00000000 		.space	15000
 453      00000000 
 453      00000000 
 453      00000000 
 453      00000000 
 454              		.section	.bss.heap_size,"aw",%nobits
 455              		.align	2
 456              		.set	.LANCHOR0,. + 0
 459              	heap_size:
 460 0000 00000000 		.space	4
 461              		.text
 462              	.Letext0:
 463              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 464              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 465              		.file 4 "Inc/map.h"
 466              		.file 5 "/usr/arm-none-eabi/include/sys/lock.h"
 467              		.file 6 "/usr/arm-none-eabi/include/sys/_types.h"
 468              		.file 7 "/usr/lib/gcc/arm-none-eabi/7.3.0/include/stddef.h"
 469              		.file 8 "/usr/arm-none-eabi/include/sys/reent.h"
 470              		.file 9 "/usr/arm-none-eabi/include/stdlib.h"
ARM GAS  /tmp/ccuPvuv2.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 heap.c
     /tmp/ccuPvuv2.s:18     .text.empty_heap:0000000000000000 $t
     /tmp/ccuPvuv2.s:25     .text.empty_heap:0000000000000000 empty_heap
     /tmp/ccuPvuv2.s:42     .text.empty_heap:0000000000000008 $d
     /tmp/ccuPvuv2.s:47     .text.is_empty:0000000000000000 $t
     /tmp/ccuPvuv2.s:54     .text.is_empty:0000000000000000 is_empty
     /tmp/ccuPvuv2.s:71     .text.is_empty:000000000000000c $d
     /tmp/ccuPvuv2.s:76     .text.is_full:0000000000000000 $t
     /tmp/ccuPvuv2.s:83     .text.is_full:0000000000000000 is_full
     /tmp/ccuPvuv2.s:103    .text.is_full:0000000000000014 $d
     /tmp/ccuPvuv2.s:108    .text.insert:0000000000000000 $t
     /tmp/ccuPvuv2.s:115    .text.insert:0000000000000000 insert
     /tmp/ccuPvuv2.s:209    .text.insert:000000000000005c $d
     /tmp/ccuPvuv2.s:452    .bss.heap:0000000000000000 heap
     /tmp/ccuPvuv2.s:215    .text.pop:0000000000000000 $t
     /tmp/ccuPvuv2.s:222    .text.pop:0000000000000000 pop
     /tmp/ccuPvuv2.s:407    .text.pop:00000000000000a4 $d
     /tmp/ccuPvuv2.s:413    .text.peek:0000000000000000 $t
     /tmp/ccuPvuv2.s:420    .text.peek:0000000000000000 peek
     /tmp/ccuPvuv2.s:443    .text.peek:0000000000000010 $d
     /tmp/ccuPvuv2.s:449    .bss.heap:0000000000000000 $d
     /tmp/ccuPvuv2.s:455    .bss.heap_size:0000000000000000 $d
     /tmp/ccuPvuv2.s:459    .bss.heap_size:0000000000000000 heap_size

NO UNDEFINED SYMBOLS
